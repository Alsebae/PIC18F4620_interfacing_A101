

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec 20 19:18:59 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 23/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   0015B2                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _LAT_REG_ADD_arr
    65   0015B2  89                 	db	137
    66   0015B3  0F                 	db	15
    67   0015B4  8A                 	db	138
    68   0015B5  0F                 	db	15
    69   0015B6  8B                 	db	139
    70   0015B7  0F                 	db	15
    71   0015B8  8C                 	db	140
    72   0015B9  0F                 	db	15
    73   0015BA  8D                 	db	141
    74   0015BB  0F                 	db	15
    75                           
    76                           ;initializer for _PORT_REG_ADD_arr
    77   0015BC  80                 	db	128
    78   0015BD  0F                 	db	15
    79   0015BE  81                 	db	129
    80   0015BF  0F                 	db	15
    81   0015C0  82                 	db	130
    82   0015C1  0F                 	db	15
    83   0015C2  83                 	db	131
    84   0015C3  0F                 	db	15
    85   0015C4  84                 	db	132
    86   0015C5  0F                 	db	15
    87                           
    88                           ;initializer for _TRIS_REG_ADD_arr
    89   0015C6  92                 	db	146
    90   0015C7  0F                 	db	15
    91   0015C8  93                 	db	147
    92   0015C9  0F                 	db	15
    93   0015CA  94                 	db	148
    94   0015CB  0F                 	db	15
    95   0015CC  95                 	db	149
    96   0015CD  0F                 	db	15
    97   0015CE  96                 	db	150
    98   0015CF  0F                 	db	15
    99                           
   100                           ;initializer for _pinpin
   101   0015D0  00                 	db	0
   102   0015D1  01                 	db	1
   103   0015D2  00                 	db	0
   104   0015D3  01                 	db	1
   105   0015D4  01                 	db	1
   106                           
   107                           ;initializer for _DCmotor_2
   108   0015D5  02                 	db	2
   109   0015D6  02                 	db	2
   110   0015D7  00                 	db	0
   111   0015D8  00                 	db	0
   112   0015D9  00                 	db	0
   113   0015DA  02                 	db	2
   114   0015DB  03                 	db	3
   115   0015DC  00                 	db	0
   116   0015DD  00                 	db	0
   117   0015DE  00                 	db	0
   118                           
   119                           ;initializer for _DCmotor_1
   120   0015DF  02                 	db	2
   121   0015E0  00                 	db	0
   122   0015E1  00                 	db	0
   123   0015E2  00                 	db	0
   124   0015E3  00                 	db	0
   125   0015E4  02                 	db	2
   126   0015E5  01                 	db	1
   127   0015E6  00                 	db	0
   128   0015E7  00                 	db	0
   129   0015E8  00                 	db	0
   130   000000                     _LATA	set	3977
   131   000000                     _PORTE	set	3972
   132   000000                     _PORTD	set	3971
   133   000000                     _PORTC	set	3970
   134   000000                     _PORTB	set	3969
   135   000000                     _PORTA	set	3968
   136   000000                     _TRISA	set	3986
   137   000000                     _TRISE	set	3990
   138   000000                     _TRISD	set	3989
   139   000000                     _TRISC	set	3988
   140   000000                     _TRISB	set	3987
   141   000000                     _LATE	set	3981
   142   000000                     _LATD	set	3980
   143   000000                     _LATC	set	3979
   144   000000                     _LATB	set	3978
   145                           
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   0015EA                     __pcinit:
   150                           	callstack 0
   151   0015EA                     start_initialization:
   152                           	callstack 0
   153   0015EA                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (55 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158   0015EA  0EB2               	movlw	low __pidataCOMRAM
   159   0015EC  6EF6               	movwf	tblptrl,c
   160   0015EE  0E15               	movlw	high __pidataCOMRAM
   161   0015F0  6EF7               	movwf	tblptrh,c
   162   0015F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163   0015F4  6EF8               	movwf	tblptru,c
   164   0015F6  EE00  F001         	lfsr	0,__pdataCOMRAM
   165   0015FA  EE10 F037          	lfsr	1,55
   166   0015FE                     copy_data0:
   167   0015FE  0009               	tblrd		*+
   168   001600  CFF5 FFEE          	movff	tablat,postinc0
   169   001604  50E5               	movf	postdec1,w,c
   170   001606  50E1               	movf	fsr1l,w,c
   171   001608  E1FA               	bnz	copy_data0
   172                           
   173                           ; Clear objects allocated to COMRAM (20 bytes)
   174   00160A  EE00  F038         	lfsr	0,__pbssCOMRAM
   175   00160E  0E14               	movlw	20
   176   001610                     clear_0:
   177   001610  6AEE               	clrf	postinc0,c
   178   001612  06E8               	decf	wreg,f,c
   179   001614  E1FD               	bnz	clear_0
   180   001616                     end_of_initialization:
   181                           	callstack 0
   182   001616                     __end_of__initialization:
   183                           	callstack 0
   184   001616  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185   001618  6EF8               	movwf	tblptru,c
   186   00161A  0100               	movlb	0
   187   00161C  EF31  F00B         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190   000038                     __pbssCOMRAM:
   191                           	callstack 0
   192   000038                     led_toggle@F2942:
   193                           	callstack 0
   194   000038                     	ds	5
   195   00003D                     led_on_off@F2938:
   196                           	callstack 0
   197   00003D                     	ds	5
   198   000042                     led_init@F2933:
   199                           	callstack 0
   200   000042                     	ds	5
   201   000047                     _program_step_counter:
   202                           	callstack 0
   203   000047                     	ds	4
   204   00004B                     _program_counter:
   205                           	callstack 0
   206   00004B                     	ds	1
   207                           
   208                           	psect	dataCOMRAM
   209   000001                     __pdataCOMRAM:
   210                           	callstack 0
   211   000001                     _LAT_REG_ADD_arr:
   212                           	callstack 0
   213   000001                     	ds	10
   214   00000B                     _PORT_REG_ADD_arr:
   215                           	callstack 0
   216   00000B                     	ds	10
   217   000015                     _TRIS_REG_ADD_arr:
   218                           	callstack 0
   219   000015                     	ds	10
   220   00001F                     _pinpin:
   221                           	callstack 0
   222   00001F                     	ds	5
   223   000024                     _DCmotor_2:
   224                           	callstack 0
   225   000024                     	ds	10
   226   00002E                     _DCmotor_1:
   227                           	callstack 0
   228   00002E                     	ds	10
   229                           
   230                           	psect	cstackCOMRAM
   231   00004C                     __pcstackCOMRAM:
   232                           	callstack 0
   233   00004C                     set_bit_uint8@p_reg:
   234                           	callstack 0
   235   00004C                     clear_bit_uint8@p_reg:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239   00004C                     	ds	2
   240   00004E                     set_bit_uint8@d_IDX_BIT_X:
   241                           	callstack 0
   242   00004E                     clear_bit_uint8@d_IDX_BIT_X:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x2
   246   00004E                     	ds	1
   247   00004F                     ??_set_bit_uint8:
   248   00004F                     ??_clear_bit_uint8:
   249                           
   250                           ; 1 bytes @ 0x3
   251   00004F                     	ds	2
   252   000051                     gpio_pin_direction_initialize@p_pin_config:
   253                           	callstack 0
   254   000051                     gpio_pin_write_logic@p_pin_config:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x5
   258   000051                     	ds	1
   259   000052                     ??_gpio_pin_direction_initialize:
   260   000052                     gpio_pin_write_logic@d_logic_desired:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x6
   264   000052                     	ds	1
   265   000053                     ??_gpio_pin_write_logic:
   266                           
   267                           ; 1 bytes @ 0x7
   268   000053                     	ds	2
   269   000055                     DCmotor_init@p_DCmotor:
   270                           	callstack 0
   271   000055                     DCmotor_rotate_CW_CCW@p_DCmotor:
   272                           	callstack 0
   273   000055                     DCmotor_brake@p_DCmotor:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x9
   277   000055                     	ds	1
   278   000056                     DCmotor_rotate_CW_CCW@d_DCmotor_dir:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0xA
   282   000056                     	ds	1
   283   000057                     ??_two_DCmotor_sequence:
   284                           
   285                           ; 1 bytes @ 0xB
   286   000057                     	ds	2
   287   000059                     
   288                           ; 1 bytes @ 0xD
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 34 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  2  488[None  ] int 
   301 ;; Registers used:
   302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels required when called: 4
   314 ;; This function calls:
   315 ;;		_app_init
   316 ;;		_two_DCmotor_sequence
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323   001662                     __ptext0:
   324                           	callstack 0
   325   001662                     _main:
   326                           	callstack 27
   327   001662                     
   328                           ;main.c: 36:     app_init();
   329   001662  EC28  F00B         	call	_app_init	;wreg free
   330   001666                     l489:
   331                           
   332                           ;main.c: 38:     {;main.c: 42:         two_DCmotor_sequence();
   333   001666  EC01  F008         	call	_two_DCmotor_sequence	;wreg free
   334                           
   335                           ;main.c: 43:     }
   336   00166A  EF33  F00B         	goto	l489
   337   00166E  EF00  F000         	goto	start
   338   001672                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _two_DCmotor_sequence *****************
   342 ;; Defined at:
   343 ;;		line 201 in file "_APP/application.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 3
   364 ;; This function calls:
   365 ;;		_DCmotor_brake
   366 ;;		_DCmotor_rotate_CW_CCW
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373   001002                     __ptext1:
   374                           	callstack 0
   375   001002                     _two_DCmotor_sequence:
   376                           	callstack 27
   377   001002                     
   378                           ;_APP/application.c: 203:     DCmotor_rotate_CW_CCW(&DCmotor_1, CLOCKWISE);
   379   001002  0E2E               	movlw	low _DCmotor_1
   380   001004  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   381   001006  0E00               	movlw	0
   382   001008  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   383   00100A  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   384                           
   385                           ;_APP/application.c: 204:     DCmotor_rotate_CW_CCW(&DCmotor_2, CLOCKWISE);
   386   00100E  0E24               	movlw	low _DCmotor_2
   387   001010  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   388   001012  0E00               	movlw	0
   389   001014  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   390   001016  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   391   00101A                     
   392                           ;_APP/application.c: 205:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   393   00101A  0E0B               	movlw	11
   394   00101C  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   395   00101E  0E26               	movlw	38
   396   001020  6E57               	movwf	??_two_DCmotor_sequence^0,c
   397   001022  0E5E               	movlw	94
   398   001024                     u707:
   399   001024  2EE8               	decfsz	wreg,f,c
   400   001026  D7FE               	bra	u707
   401   001028  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   402   00102A  D7FC               	bra	u707
   403   00102C  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   404   00102E  D7FA               	bra	u707
   405   001030                     
   406                           ;_APP/application.c: 206:     DCmotor_brake(&DCmotor_1);
   407   001030  0E2E               	movlw	low _DCmotor_1
   408   001032  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   409   001034  EC10  F00B         	call	_DCmotor_brake	;wreg free
   410   001038                     
   411                           ;_APP/application.c: 207:     DCmotor_brake(&DCmotor_2);
   412   001038  0E24               	movlw	low _DCmotor_2
   413   00103A  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   414   00103C  EC10  F00B         	call	_DCmotor_brake	;wreg free
   415   001040                     
   416                           ;_APP/application.c: 208:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   417   001040  0E0B               	movlw	11
   418   001042  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   419   001044  0E26               	movlw	38
   420   001046  6E57               	movwf	??_two_DCmotor_sequence^0,c
   421   001048  0E5E               	movlw	94
   422   00104A                     u717:
   423   00104A  2EE8               	decfsz	wreg,f,c
   424   00104C  D7FE               	bra	u717
   425   00104E  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   426   001050  D7FC               	bra	u717
   427   001052  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   428   001054  D7FA               	bra	u717
   429                           
   430                           ;_APP/application.c: 209:     DCmotor_rotate_CW_CCW(&DCmotor_1, COUNTER_CLOCKWISE);
   431   001056  0E2E               	movlw	low _DCmotor_1
   432   001058  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   433   00105A  0E01               	movlw	1
   434   00105C  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   435   00105E  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   436                           
   437                           ;_APP/application.c: 210:     DCmotor_rotate_CW_CCW(&DCmotor_2, COUNTER_CLOCKWISE);
   438   001062  0E24               	movlw	low _DCmotor_2
   439   001064  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   440   001066  0E01               	movlw	1
   441   001068  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   442   00106A  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   443   00106E                     
   444                           ;_APP/application.c: 211:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   445   00106E  0E0B               	movlw	11
   446   001070  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   447   001072  0E26               	movlw	38
   448   001074  6E57               	movwf	??_two_DCmotor_sequence^0,c
   449   001076  0E5E               	movlw	94
   450   001078                     u727:
   451   001078  2EE8               	decfsz	wreg,f,c
   452   00107A  D7FE               	bra	u727
   453   00107C  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   454   00107E  D7FC               	bra	u727
   455   001080  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   456   001082  D7FA               	bra	u727
   457   001084                     
   458                           ;_APP/application.c: 212:     DCmotor_brake(&DCmotor_1);
   459   001084  0E2E               	movlw	low _DCmotor_1
   460   001086  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   461   001088  EC10  F00B         	call	_DCmotor_brake	;wreg free
   462   00108C                     
   463                           ;_APP/application.c: 213:     DCmotor_brake(&DCmotor_2);
   464   00108C  0E24               	movlw	low _DCmotor_2
   465   00108E  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   466   001090  EC10  F00B         	call	_DCmotor_brake	;wreg free
   467   001094                     
   468                           ;_APP/application.c: 214:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   469   001094  0E0B               	movlw	11
   470   001096  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   471   001098  0E26               	movlw	38
   472   00109A  6E57               	movwf	??_two_DCmotor_sequence^0,c
   473   00109C  0E5E               	movlw	94
   474   00109E                     u737:
   475   00109E  2EE8               	decfsz	wreg,f,c
   476   0010A0  D7FE               	bra	u737
   477   0010A2  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   478   0010A4  D7FC               	bra	u737
   479   0010A6  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   480   0010A8  D7FA               	bra	u737
   481                           
   482                           ;_APP/application.c: 215:     DCmotor_rotate_CW_CCW(&DCmotor_1, CLOCKWISE);
   483   0010AA  0E2E               	movlw	low _DCmotor_1
   484   0010AC  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   485   0010AE  0E00               	movlw	0
   486   0010B0  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   487   0010B2  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   488                           
   489                           ;_APP/application.c: 216:     DCmotor_rotate_CW_CCW(&DCmotor_2, COUNTER_CLOCKWISE);
   490   0010B6  0E24               	movlw	low _DCmotor_2
   491   0010B8  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   492   0010BA  0E01               	movlw	1
   493   0010BC  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   494   0010BE  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   495   0010C2                     
   496                           ;_APP/application.c: 217:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   497   0010C2  0E0B               	movlw	11
   498   0010C4  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   499   0010C6  0E26               	movlw	38
   500   0010C8  6E57               	movwf	??_two_DCmotor_sequence^0,c
   501   0010CA  0E5E               	movlw	94
   502   0010CC                     u747:
   503   0010CC  2EE8               	decfsz	wreg,f,c
   504   0010CE  D7FE               	bra	u747
   505   0010D0  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   506   0010D2  D7FC               	bra	u747
   507   0010D4  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   508   0010D6  D7FA               	bra	u747
   509   0010D8                     
   510                           ;_APP/application.c: 218:     DCmotor_brake(&DCmotor_1);
   511   0010D8  0E2E               	movlw	low _DCmotor_1
   512   0010DA  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   513   0010DC  EC10  F00B         	call	_DCmotor_brake	;wreg free
   514   0010E0                     
   515                           ;_APP/application.c: 219:     DCmotor_brake(&DCmotor_2);
   516   0010E0  0E24               	movlw	low _DCmotor_2
   517   0010E2  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   518   0010E4  EC10  F00B         	call	_DCmotor_brake	;wreg free
   519   0010E8                     
   520                           ;_APP/application.c: 220:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   521   0010E8  0E0B               	movlw	11
   522   0010EA  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   523   0010EC  0E26               	movlw	38
   524   0010EE  6E57               	movwf	??_two_DCmotor_sequence^0,c
   525   0010F0  0E5E               	movlw	94
   526   0010F2                     u757:
   527   0010F2  2EE8               	decfsz	wreg,f,c
   528   0010F4  D7FE               	bra	u757
   529   0010F6  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   530   0010F8  D7FC               	bra	u757
   531   0010FA  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   532   0010FC  D7FA               	bra	u757
   533                           
   534                           ;_APP/application.c: 221:     DCmotor_rotate_CW_CCW(&DCmotor_1, COUNTER_CLOCKWISE);
   535   0010FE  0E2E               	movlw	low _DCmotor_1
   536   001100  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   537   001102  0E01               	movlw	1
   538   001104  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   539   001106  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   540                           
   541                           ;_APP/application.c: 222:     DCmotor_rotate_CW_CCW(&DCmotor_2, CLOCKWISE);
   542   00110A  0E24               	movlw	low _DCmotor_2
   543   00110C  6E55               	movwf	DCmotor_rotate_CW_CCW@p_DCmotor^0,c
   544   00110E  0E00               	movlw	0
   545   001110  6E56               	movwf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,c
   546   001112  EC75  F00A         	call	_DCmotor_rotate_CW_CCW	;wreg free
   547   001116                     
   548                           ;_APP/application.c: 223:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   549   001116  0E0B               	movlw	11
   550   001118  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   551   00111A  0E26               	movlw	38
   552   00111C  6E57               	movwf	??_two_DCmotor_sequence^0,c
   553   00111E  0E5E               	movlw	94
   554   001120                     u767:
   555   001120  2EE8               	decfsz	wreg,f,c
   556   001122  D7FE               	bra	u767
   557   001124  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   558   001126  D7FC               	bra	u767
   559   001128  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   560   00112A  D7FA               	bra	u767
   561   00112C                     
   562                           ;_APP/application.c: 224:     DCmotor_brake(&DCmotor_1);
   563   00112C  0E2E               	movlw	low _DCmotor_1
   564   00112E  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   565   001130  EC10  F00B         	call	_DCmotor_brake	;wreg free
   566   001134                     
   567                           ;_APP/application.c: 225:     DCmotor_brake(&DCmotor_2);
   568   001134  0E24               	movlw	low _DCmotor_2
   569   001136  6E55               	movwf	DCmotor_brake@p_DCmotor^0,c
   570   001138  EC10  F00B         	call	_DCmotor_brake	;wreg free
   571   00113C                     
   572                           ;_APP/application.c: 226:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   573   00113C  0E0B               	movlw	11
   574   00113E  6E58               	movwf	(??_two_DCmotor_sequence+1)^0,c
   575   001140  0E26               	movlw	38
   576   001142  6E57               	movwf	??_two_DCmotor_sequence^0,c
   577   001144  0E5E               	movlw	94
   578   001146                     u777:
   579   001146  2EE8               	decfsz	wreg,f,c
   580   001148  D7FE               	bra	u777
   581   00114A  2E57               	decfsz	??_two_DCmotor_sequence^0,f,c
   582   00114C  D7FC               	bra	u777
   583   00114E  2E58               	decfsz	(??_two_DCmotor_sequence+1)^0,f,c
   584   001150  D7FA               	bra	u777
   585   001152  0012               	return		;funcret
   586   001154                     __end_of_two_DCmotor_sequence:
   587                           	callstack 0
   588                           
   589 ;; *************** function _DCmotor_rotate_CW_CCW *****************
   590 ;; Defined at:
   591 ;;		line 20 in file "_HAL/Drivers/DCmotor/DCmotor.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  p_DCmotor       1    9[COMRAM] PTR struct .
   594 ;;		 -> DCmotor_2(10), DCmotor_1(10), 
   595 ;;  d_DCmotor_di    1   10[COMRAM] enum E2914
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      enum E2804
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 2
   614 ;; This function calls:
   615 ;;		_gpio_pin_write_logic
   616 ;; This function is called by:
   617 ;;		_two_DCmotor_sequence
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text2
   622   0014EA                     __ptext2:
   623                           	callstack 0
   624   0014EA                     _DCmotor_rotate_CW_CCW:
   625                           	callstack 27
   626   0014EA                     
   627                           ;_HAL/Drivers/DCmotor/DCmotor.c: 20: std_return DCmotor_rotate_CW_CCW(DCmotor_t * p_DCmo
      +                          tor,DCmotor_dir_t d_DCmotor_dir);_HAL/Drivers/DCmotor/DCmotor.c: 21: {;_HAL/Drivers/DCmo
      +                          tor/DCmotor.c: 22:     if (((void*)0) == p_DCmotor)
   628   0014EA  5055               	movf	DCmotor_rotate_CW_CCW@p_DCmotor^0,w,c
   629   0014EC  A4D8               	btfss	status,2,c
   630   0014EE  EF7B  F00A         	goto	u551
   631   0014F2  EF7D  F00A         	goto	u550
   632   0014F6                     u551:
   633   0014F6  EF81  F00A         	goto	l1896
   634   0014FA                     u550:
   635   0014FA  EFAD  F00A         	goto	l544
   636   0014FE                     l1892:
   637                           
   638                           ;_HAL/Drivers/DCmotor/DCmotor.c: 23:     {;_HAL/Drivers/DCmotor/DCmotor.c: 24:         r
      +                          eturn EXCUTION_NOT_OK;;	Return value of _DCmotor_rotate_CW_CCW is never used
   639   0014FE  EFAD  F00A         	goto	l544
   640   001502                     l1896:
   641                           
   642                           ;_HAL/Drivers/DCmotor/DCmotor.c: 27:     {;_HAL/Drivers/DCmotor/DCmotor.c: 28:         i
      +                          f (CLOCKWISE == d_DCmotor_dir)
   643   001502  5056               	movf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,w,c
   644   001504  A4D8               	btfss	status,2,c
   645   001506  EF87  F00A         	goto	u561
   646   00150A  EF89  F00A         	goto	u560
   647   00150E                     u561:
   648   00150E  EF98  F00A         	goto	l1900
   649   001512                     u560:
   650   001512                     
   651                           ;_HAL/Drivers/DCmotor/DCmotor.c: 29:         {;_HAL/Drivers/DCmotor/DCmotor.c: 30:      
      +                             gpio_pin_write_logic(&p_DCmotor->forward_pin , LOGIC_ON);
   652   001512  C055  F051         	movff	DCmotor_rotate_CW_CCW@p_DCmotor,gpio_pin_write_logic@p_pin_config
   653   001516  0E01               	movlw	1
   654   001518  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   655   00151A  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   656                           
   657                           ;_HAL/Drivers/DCmotor/DCmotor.c: 31:         gpio_pin_write_logic(&p_DCmotor->backward_p
      +                          in, LOGIC_OFF);
   658   00151E  5055               	movf	DCmotor_rotate_CW_CCW@p_DCmotor^0,w,c
   659   001520  0F05               	addlw	5
   660   001522  6E51               	movwf	gpio_pin_write_logic@p_pin_config^0,c
   661   001524  0E00               	movlw	0
   662   001526  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   663   001528  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   664                           
   665                           ;_HAL/Drivers/DCmotor/DCmotor.c: 32:         }
   666   00152C  EFAD  F00A         	goto	l544
   667   001530                     l1900:
   668   001530  0456               	decf	DCmotor_rotate_CW_CCW@d_DCmotor_dir^0,w,c
   669   001532  A4D8               	btfss	status,2,c
   670   001534  EF9E  F00A         	goto	u571
   671   001538  EFA0  F00A         	goto	u570
   672   00153C                     u571:
   673   00153C  EF7F  F00A         	goto	l1892
   674   001540                     u570:
   675   001540                     
   676                           ;_HAL/Drivers/DCmotor/DCmotor.c: 34:         {;_HAL/Drivers/DCmotor/DCmotor.c: 35:      
      +                             gpio_pin_write_logic(&p_DCmotor->forward_pin , LOGIC_OFF);
   677   001540  C055  F051         	movff	DCmotor_rotate_CW_CCW@p_DCmotor,gpio_pin_write_logic@p_pin_config
   678   001544  0E00               	movlw	0
   679   001546  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   680   001548  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   681                           
   682                           ;_HAL/Drivers/DCmotor/DCmotor.c: 36:         gpio_pin_write_logic(&p_DCmotor->backward_p
      +                          in, LOGIC_ON);
   683   00154C  5055               	movf	DCmotor_rotate_CW_CCW@p_DCmotor^0,w,c
   684   00154E  0F05               	addlw	5
   685   001550  6E51               	movwf	gpio_pin_write_logic@p_pin_config^0,c
   686   001552  0E01               	movlw	1
   687   001554  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   688   001556  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   689   00155A                     l544:
   690   00155A  0012               	return		;funcret
   691   00155C                     __end_of_DCmotor_rotate_CW_CCW:
   692                           	callstack 0
   693                           
   694 ;; *************** function _DCmotor_brake *****************
   695 ;; Defined at:
   696 ;;		line 48 in file "_HAL/Drivers/DCmotor/DCmotor.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  p_DCmotor       1    9[COMRAM] PTR struct .
   699 ;;		 -> DCmotor_2(10), DCmotor_1(10), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      enum E2804
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        1 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 2
   718 ;; This function calls:
   719 ;;		_gpio_pin_write_logic
   720 ;; This function is called by:
   721 ;;		_two_DCmotor_sequence
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text3
   726   001620                     __ptext3:
   727                           	callstack 0
   728   001620                     _DCmotor_brake:
   729                           	callstack 27
   730   001620                     
   731                           ;_HAL/Drivers/DCmotor/DCmotor.c: 48: std_return DCmotor_brake(DCmotor_t * p_DCmotor);_HA
      +                          L/Drivers/DCmotor/DCmotor.c: 49: {;_HAL/Drivers/DCmotor/DCmotor.c: 50:     if (((void*)0
      +                          ) == p_DCmotor)
   732   001620  5055               	movf	DCmotor_brake@p_DCmotor^0,w,c
   733   001622  A4D8               	btfss	status,2,c
   734   001624  EF16  F00B         	goto	u581
   735   001628  EF18  F00B         	goto	u580
   736   00162C                     u581:
   737   00162C  EF1A  F00B         	goto	l1910
   738   001630                     u580:
   739   001630  EF27  F00B         	goto	l553
   740   001634                     l1910:
   741                           
   742                           ;_HAL/Drivers/DCmotor/DCmotor.c: 55:     {;_HAL/Drivers/DCmotor/DCmotor.c: 56:      gpio
      +                          _pin_write_logic(&p_DCmotor->forward_pin , LOGIC_OFF);
   743   001634  C055  F051         	movff	DCmotor_brake@p_DCmotor,gpio_pin_write_logic@p_pin_config
   744   001638  0E00               	movlw	0
   745   00163A  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   746   00163C  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   747                           
   748                           ;_HAL/Drivers/DCmotor/DCmotor.c: 57:      gpio_pin_write_logic(&p_DCmotor->backward_pin,
      +                           LOGIC_OFF);
   749   001640  5055               	movf	DCmotor_brake@p_DCmotor^0,w,c
   750   001642  0F05               	addlw	5
   751   001644  6E51               	movwf	gpio_pin_write_logic@p_pin_config^0,c
   752   001646  0E00               	movlw	0
   753   001648  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   754   00164A  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   755   00164E                     l553:
   756   00164E  0012               	return		;funcret
   757   001650                     __end_of_DCmotor_brake:
   758                           	callstack 0
   759                           
   760 ;; *************** function _app_init *****************
   761 ;; Defined at:
   762 ;;		line 40 in file "_APP/application.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 3
   783 ;; This function calls:
   784 ;;		_DCmotor_init
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text4
   791   001650                     __ptext4:
   792                           	callstack 0
   793   001650                     _app_init:
   794                           	callstack 27
   795   001650                     
   796                           ;_APP/application.c: 46:     DCmotor_init(&DCmotor_1);
   797   001650  0E2E               	movlw	low _DCmotor_1
   798   001652  6E55               	movwf	DCmotor_init@p_DCmotor^0,c
   799   001654  ECAE  F00A         	call	_DCmotor_init	;wreg free
   800                           
   801                           ;_APP/application.c: 47:     DCmotor_init(&DCmotor_2);
   802   001658  0E24               	movlw	low _DCmotor_2
   803   00165A  6E55               	movwf	DCmotor_init@p_DCmotor^0,c
   804   00165C  ECAE  F00A         	call	_DCmotor_init	;wreg free
   805   001660  0012               	return		;funcret
   806   001662                     __end_of_app_init:
   807                           	callstack 0
   808                           
   809 ;; *************** function _DCmotor_init *****************
   810 ;; Defined at:
   811 ;;		line 3 in file "_HAL/Drivers/DCmotor/DCmotor.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  p_DCmotor       1    9[COMRAM] PTR struct .
   814 ;;		 -> DCmotor_2(10), DCmotor_1(10), 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      enum E2804
   819 ;; Registers used:
   820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        1 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 2
   833 ;; This function calls:
   834 ;;		_gpio_pin_direction_initialize
   835 ;;		_gpio_pin_write_logic
   836 ;; This function is called by:
   837 ;;		_app_init
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text5
   842   00155C                     __ptext5:
   843                           	callstack 0
   844   00155C                     _DCmotor_init:
   845                           	callstack 27
   846   00155C                     
   847                           ;_HAL/Drivers/DCmotor/DCmotor.c: 3: std_return DCmotor_init(DCmotor_t * p_DCmotor);_HAL/
      +                          Drivers/DCmotor/DCmotor.c: 4: {;_HAL/Drivers/DCmotor/DCmotor.c: 5:     if (((void*)0) ==
      +                           p_DCmotor)
   848   00155C  5055               	movf	DCmotor_init@p_DCmotor^0,w,c
   849   00155E  A4D8               	btfss	status,2,c
   850   001560  EFB4  F00A         	goto	u541
   851   001564  EFB6  F00A         	goto	u540
   852   001568                     u541:
   853   001568  EFB8  F00A         	goto	l1886
   854   00156C                     u540:
   855   00156C  EFD8  F00A         	goto	l539
   856   001570                     l1886:
   857                           
   858                           ;_HAL/Drivers/DCmotor/DCmotor.c: 10:     {;_HAL/Drivers/DCmotor/DCmotor.c: 11:         g
      +                          pio_pin_direction_initialize(&p_DCmotor->forward_pin);
   859   001570  C055  F051         	movff	DCmotor_init@p_DCmotor,gpio_pin_direction_initialize@p_pin_config
   860   001574  EC15  F00A         	call	_gpio_pin_direction_initialize	;wreg free
   861                           
   862                           ;_HAL/Drivers/DCmotor/DCmotor.c: 12:         gpio_pin_write_logic(&p_DCmotor->forward_pi
      +                          n,p_DCmotor->forward_pin.logic);
   863   001578  C055  F051         	movff	DCmotor_init@p_DCmotor,gpio_pin_write_logic@p_pin_config
   864   00157C  5055               	movf	DCmotor_init@p_DCmotor^0,w,c
   865   00157E  6ED9               	movwf	fsr2l,c
   866   001580  6ADA               	clrf	fsr2h,c
   867   001582  0E03               	movlw	3
   868   001584  26D9               	addwf	fsr2l,f,c
   869   001586  50DF               	movf	indf2,w,c
   870   001588  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   871   00158A  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   872                           
   873                           ;_HAL/Drivers/DCmotor/DCmotor.c: 14:         gpio_pin_direction_initialize(&p_DCmotor->b
      +                          ackward_pin);
   874   00158E  5055               	movf	DCmotor_init@p_DCmotor^0,w,c
   875   001590  0F05               	addlw	5
   876   001592  6E51               	movwf	gpio_pin_direction_initialize@p_pin_config^0,c
   877   001594  EC15  F00A         	call	_gpio_pin_direction_initialize	;wreg free
   878                           
   879                           ;_HAL/Drivers/DCmotor/DCmotor.c: 15:         gpio_pin_write_logic(&p_DCmotor->backward_p
      +                          in,p_DCmotor->backward_pin.logic);
   880   001598  5055               	movf	DCmotor_init@p_DCmotor^0,w,c
   881   00159A  0F05               	addlw	5
   882   00159C  6E51               	movwf	gpio_pin_write_logic@p_pin_config^0,c
   883   00159E  5055               	movf	DCmotor_init@p_DCmotor^0,w,c
   884   0015A0  6ED9               	movwf	fsr2l,c
   885   0015A2  6ADA               	clrf	fsr2h,c
   886   0015A4  0E08               	movlw	8
   887   0015A6  26D9               	addwf	fsr2l,f,c
   888   0015A8  50DF               	movf	indf2,w,c
   889   0015AA  6E52               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   890   0015AC  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   891   0015B0                     l539:
   892   0015B0  0012               	return		;funcret
   893   0015B2                     __end_of_DCmotor_init:
   894                           	callstack 0
   895                           
   896 ;; *************** function _gpio_pin_write_logic *****************
   897 ;; Defined at:
   898 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  p_pin_config    1    5[COMRAM] PTR struct .
   901 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), DCmotor_2(10), DCmotor_1(10), 
   902 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      enum E2804
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:        4 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 1
   921 ;; This function calls:
   922 ;;		_clear_bit_uint8
   923 ;;		_set_bit_uint8
   924 ;; This function is called by:
   925 ;;		_DCmotor_init
   926 ;;		_DCmotor_rotate_CW_CCW
   927 ;;		_DCmotor_brake
   928 ;;		_led_on_off
   929 ;;		_relay_init
   930 ;;		_relay_on_off
   931 ;;		_gpio_pin_initialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text6
   936   001154                     __ptext6:
   937                           	callstack 0
   938   001154                     _gpio_pin_write_logic:
   939                           	callstack 27
   940   001154                     
   941                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
   942   001154  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   943   001156  B4D8               	btfsc	status,2,c
   944   001158  EFB0  F008         	goto	u501
   945   00115C  EFB2  F008         	goto	u500
   946   001160                     u501:
   947   001160  EF22  F009         	goto	l347
   948   001164                     u500:
   949   001164  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   950   001166  6ED9               	movwf	fsr2l,c
   951   001168  6ADA               	clrf	fsr2h,c
   952   00116A  0E05               	movlw	5
   953   00116C  60DF               	cpfslt	indf2,c
   954   00116E  EFBB  F008         	goto	u511
   955   001172  EFBD  F008         	goto	u510
   956   001176                     u511:
   957   001176  EF22  F009         	goto	l347
   958   00117A                     u510:
   959   00117A  0452               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
   960   00117C  B4D8               	btfsc	status,2,c
   961   00117E  EFC3  F008         	goto	u521
   962   001182  EFC5  F008         	goto	u520
   963   001186                     u521:
   964   001186  EF0D  F009         	goto	l1874
   965   00118A                     u520:
   966   00118A  5052               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
   967   00118C  B4D8               	btfsc	status,2,c
   968   00118E  EFCB  F008         	goto	u531
   969   001192  EFCD  F008         	goto	u530
   970   001196                     u531:
   971   001196  EF0D  F009         	goto	l1874
   972   00119A                     u530:
   973   00119A  EF22  F009         	goto	l347
   974   00119E                     l1862:
   975                           
   976                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
   977   00119E  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   978   0011A0  6ED9               	movwf	fsr2l,c
   979   0011A2  6ADA               	clrf	fsr2h,c
   980   0011A4  0E03               	movlw	3
   981   0011A6  26D9               	addwf	fsr2l,f,c
   982   0011A8  C052  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
   983   0011AC                     
   984                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
   985   0011AC  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   986   0011AE  6ED9               	movwf	fsr2l,c
   987   0011B0  6ADA               	clrf	fsr2h,c
   988   0011B2  50DF               	movf	indf2,w,c
   989   0011B4  0D02               	mullw	2
   990   0011B6  50F3               	movf	243,w,c
   991   0011B8  0F01               	addlw	low _LAT_REG_ADD_arr
   992   0011BA  6ED9               	movwf	fsr2l,c
   993   0011BC  6ADA               	clrf	fsr2h,c
   994   0011BE  CFDE F04C          	movff	postinc2,set_bit_uint8@p_reg
   995   0011C2  CFDD F04D          	movff	postdec2,set_bit_uint8@p_reg+1
   996   0011C6  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   997   0011C8  6ED9               	movwf	fsr2l,c
   998   0011CA  6ADA               	clrf	fsr2h,c
   999   0011CC  0E01               	movlw	1
  1000   0011CE  26D9               	addwf	fsr2l,f,c
  1001   0011D0  50DF               	movf	indf2,w,c
  1002   0011D2  6E4E               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1003   0011D4  EC23  F009         	call	_set_bit_uint8	;wreg free
  1004                           
  1005                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  1006   0011D8  EF22  F009         	goto	l347
  1007   0011DC                     l1866:
  1008                           
  1009                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  1010   0011DC  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1011   0011DE  6ED9               	movwf	fsr2l,c
  1012   0011E0  6ADA               	clrf	fsr2h,c
  1013   0011E2  0E03               	movlw	3
  1014   0011E4  26D9               	addwf	fsr2l,f,c
  1015   0011E6  C052  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1016   0011EA                     
  1017                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1018   0011EA  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1019   0011EC  6ED9               	movwf	fsr2l,c
  1020   0011EE  6ADA               	clrf	fsr2h,c
  1021   0011F0  50DF               	movf	indf2,w,c
  1022   0011F2  0D02               	mullw	2
  1023   0011F4  50F3               	movf	243,w,c
  1024   0011F6  0F01               	addlw	low _LAT_REG_ADD_arr
  1025   0011F8  6ED9               	movwf	fsr2l,c
  1026   0011FA  6ADA               	clrf	fsr2h,c
  1027   0011FC  CFDE F04C          	movff	postinc2,clear_bit_uint8@p_reg
  1028   001200  CFDD F04D          	movff	postdec2,clear_bit_uint8@p_reg+1
  1029   001204  5051               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1030   001206  6ED9               	movwf	fsr2l,c
  1031   001208  6ADA               	clrf	fsr2h,c
  1032   00120A  0E01               	movlw	1
  1033   00120C  26D9               	addwf	fsr2l,f,c
  1034   00120E  50DF               	movf	indf2,w,c
  1035   001210  6E4E               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1036   001212  EC9C  F009         	call	_clear_bit_uint8	;wreg free
  1037                           
  1038                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  1039   001216  EF22  F009         	goto	l347
  1040   00121A                     l1874:
  1041   00121A  5052               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1042   00121C  6E53               	movwf	??_gpio_pin_write_logic^0,c
  1043   00121E  6A54               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1044                           
  1045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1046                           ; Switch size 1, requested type "simple"
  1047                           ; Number of cases is 1, Range of values is 0 to 0
  1048                           ; switch strategies available:
  1049                           ; Name         Instructions Cycles
  1050                           ; simple_byte            4     3 (average)
  1051                           ;	Chosen strategy is simple_byte
  1052   001220  5054               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1053   001222  0A00               	xorlw	0	; case 0
  1054   001224  B4D8               	btfsc	status,2,c
  1055   001226  EF17  F009         	goto	l2076
  1056   00122A  EF22  F009         	goto	l347
  1057   00122E                     l2076:
  1058                           
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 2, Range of values is 0 to 1
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte            7     4 (average)
  1064                           ;	Chosen strategy is simple_byte
  1065   00122E  5053               	movf	??_gpio_pin_write_logic^0,w,c
  1066   001230  0A00               	xorlw	0	; case 0
  1067   001232  B4D8               	btfsc	status,2,c
  1068   001234  EFEE  F008         	goto	l1866
  1069   001238  0A01               	xorlw	1	; case 1
  1070   00123A  B4D8               	btfsc	status,2,c
  1071   00123C  EFCF  F008         	goto	l1862
  1072   001240  EF22  F009         	goto	l347
  1073   001244                     l347:
  1074   001244  0012               	return		;funcret
  1075   001246                     __end_of_gpio_pin_write_logic:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _gpio_pin_direction_initialize *****************
  1079 ;; Defined at:
  1080 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1083 ;;		 -> led_init@led_pin(5), DCmotor_2$backward_pin(5), DCmotor_2$forward_pin(5), DCmotor_2(10), 
  1084 ;;		 -> DCmotor_1$backward_pin(5), DCmotor_1$forward_pin(5), DCmotor_1(10), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      enum E2804
  1089 ;; Registers used:
  1090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:        3 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 1
  1103 ;; This function calls:
  1104 ;;		_clear_bit_uint8
  1105 ;;		_set_bit_uint8
  1106 ;; This function is called by:
  1107 ;;		_DCmotor_init
  1108 ;;		_push_button_init
  1109 ;;		_relay_init
  1110 ;;		_gpio_pin_initialize
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text7
  1115   00142A                     __ptext7:
  1116                           	callstack 0
  1117   00142A                     _gpio_pin_direction_initialize:
  1118                           	callstack 27
  1119   00142A                     
  1120                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  1121   00142A  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1122   00142C  B4D8               	btfsc	status,2,c
  1123   00142E  EF1B  F00A         	goto	u481
  1124   001432  EF1D  F00A         	goto	u480
  1125   001436                     u481:
  1126   001436  EF74  F00A         	goto	l335
  1127   00143A                     u480:
  1128   00143A  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1129   00143C  6ED9               	movwf	fsr2l,c
  1130   00143E  6ADA               	clrf	fsr2h,c
  1131   001440  0E04               	movlw	4
  1132   001442  64DF               	cpfsgt	indf2,c
  1133   001444  EF26  F00A         	goto	u491
  1134   001448  EF28  F00A         	goto	u490
  1135   00144C                     u491:
  1136   00144C  EF5A  F00A         	goto	l1846
  1137   001450                     u490:
  1138   001450  EF74  F00A         	goto	l335
  1139   001454                     l1838:
  1140                           
  1141                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1142   001454  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1143   001456  6ED9               	movwf	fsr2l,c
  1144   001458  6ADA               	clrf	fsr2h,c
  1145   00145A  50DF               	movf	indf2,w,c
  1146   00145C  0D02               	mullw	2
  1147   00145E  50F3               	movf	243,w,c
  1148   001460  0F15               	addlw	low _TRIS_REG_ADD_arr
  1149   001462  6ED9               	movwf	fsr2l,c
  1150   001464  6ADA               	clrf	fsr2h,c
  1151   001466  CFDE F04C          	movff	postinc2,clear_bit_uint8@p_reg
  1152   00146A  CFDD F04D          	movff	postdec2,clear_bit_uint8@p_reg+1
  1153   00146E  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1154   001470  6ED9               	movwf	fsr2l,c
  1155   001472  6ADA               	clrf	fsr2h,c
  1156   001474  0E01               	movlw	1
  1157   001476  26D9               	addwf	fsr2l,f,c
  1158   001478  50DF               	movf	indf2,w,c
  1159   00147A  6E4E               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1160   00147C  EC9C  F009         	call	_clear_bit_uint8	;wreg free
  1161                           
  1162                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  1163   001480  EF74  F00A         	goto	l335
  1164   001484                     l1840:
  1165                           
  1166                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1167   001484  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1168   001486  6ED9               	movwf	fsr2l,c
  1169   001488  6ADA               	clrf	fsr2h,c
  1170   00148A  50DF               	movf	indf2,w,c
  1171   00148C  0D02               	mullw	2
  1172   00148E  50F3               	movf	243,w,c
  1173   001490  0F15               	addlw	low _TRIS_REG_ADD_arr
  1174   001492  6ED9               	movwf	fsr2l,c
  1175   001494  6ADA               	clrf	fsr2h,c
  1176   001496  CFDE F04C          	movff	postinc2,set_bit_uint8@p_reg
  1177   00149A  CFDD F04D          	movff	postdec2,set_bit_uint8@p_reg+1
  1178   00149E  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1179   0014A0  6ED9               	movwf	fsr2l,c
  1180   0014A2  6ADA               	clrf	fsr2h,c
  1181   0014A4  0E01               	movlw	1
  1182   0014A6  26D9               	addwf	fsr2l,f,c
  1183   0014A8  50DF               	movf	indf2,w,c
  1184   0014AA  6E4E               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1185   0014AC  EC23  F009         	call	_set_bit_uint8	;wreg free
  1186                           
  1187                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  1188   0014B0  EF74  F00A         	goto	l335
  1189   0014B4                     l1846:
  1190   0014B4  5051               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1191   0014B6  6ED9               	movwf	fsr2l,c
  1192   0014B8  6ADA               	clrf	fsr2h,c
  1193   0014BA  0E02               	movlw	2
  1194   0014BC  26D9               	addwf	fsr2l,f,c
  1195   0014BE  50DF               	movf	indf2,w,c
  1196   0014C0  6E52               	movwf	??_gpio_pin_direction_initialize^0,c
  1197   0014C2  6A53               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1198                           
  1199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1200                           ; Switch size 1, requested type "simple"
  1201                           ; Number of cases is 1, Range of values is 0 to 0
  1202                           ; switch strategies available:
  1203                           ; Name         Instructions Cycles
  1204                           ; simple_byte            4     3 (average)
  1205                           ;	Chosen strategy is simple_byte
  1206   0014C4  5053               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1207   0014C6  0A00               	xorlw	0	; case 0
  1208   0014C8  B4D8               	btfsc	status,2,c
  1209   0014CA  EF69  F00A         	goto	l2078
  1210   0014CE  EF74  F00A         	goto	l335
  1211   0014D2                     l2078:
  1212                           
  1213                           ; Switch size 1, requested type "simple"
  1214                           ; Number of cases is 2, Range of values is 0 to 1
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte            7     4 (average)
  1218                           ;	Chosen strategy is simple_byte
  1219   0014D2  5052               	movf	??_gpio_pin_direction_initialize^0,w,c
  1220   0014D4  0A00               	xorlw	0	; case 0
  1221   0014D6  B4D8               	btfsc	status,2,c
  1222   0014D8  EF2A  F00A         	goto	l1838
  1223   0014DC  0A01               	xorlw	1	; case 1
  1224   0014DE  B4D8               	btfsc	status,2,c
  1225   0014E0  EF42  F00A         	goto	l1840
  1226   0014E4  EF74  F00A         	goto	l335
  1227   0014E8                     l335:
  1228   0014E8  0012               	return		;funcret
  1229   0014EA                     __end_of_gpio_pin_direction_initialize:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _set_bit_uint8 *****************
  1233 ;; Defined at:
  1234 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1237 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1238 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1239 ;;		 -> TRISB(1), TRISA(1), 
  1240 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      enum E2804
  1245 ;; Registers used:
  1246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1252 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;Total ram usage:        5 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_gpio_pin_direction_initialize
  1262 ;;		_gpio_pin_write_logic
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text8
  1267   001246                     __ptext8:
  1268                           	callstack 0
  1269   001246                     _set_bit_uint8:
  1270                           	callstack 27
  1271   001246                     
  1272                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1273   001246  504C               	movf	set_bit_uint8@p_reg^0,w,c
  1274   001248  104D               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1275   00124A  A4D8               	btfss	status,2,c
  1276   00124C  EF2A  F009         	goto	u461
  1277   001250  EF2C  F009         	goto	u460
  1278   001254                     u461:
  1279   001254  EF6E  F009         	goto	l1794
  1280   001258                     u460:
  1281   001258  EF9B  F009         	goto	l285
  1282   00125C                     l1774:
  1283                           
  1284                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1285   00125C  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1286   001260  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1287   001264  0E00               	movlw	0
  1288   001266  80DB               	bsf	plusw2,0,c
  1289                           
  1290                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1291   001268  EF9B  F009         	goto	l285
  1292   00126C                     l1776:
  1293                           
  1294                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1295   00126C  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1296   001270  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1297   001274  0E00               	movlw	0
  1298   001276  82DB               	bsf	plusw2,1,c
  1299                           
  1300                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1301   001278  EF9B  F009         	goto	l285
  1302   00127C                     l1778:
  1303                           
  1304                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1305   00127C  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1306   001280  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1307   001284  0E00               	movlw	0
  1308   001286  84DB               	bsf	plusw2,2,c
  1309                           
  1310                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1311   001288  EF9B  F009         	goto	l285
  1312   00128C                     l1780:
  1313                           
  1314                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1315   00128C  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1316   001290  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1317   001294  0E00               	movlw	0
  1318   001296  86DB               	bsf	plusw2,3,c
  1319                           
  1320                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1321   001298  EF9B  F009         	goto	l285
  1322   00129C                     l1782:
  1323                           
  1324                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1325   00129C  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1326   0012A0  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1327   0012A4  0E00               	movlw	0
  1328   0012A6  88DB               	bsf	plusw2,4,c
  1329                           
  1330                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1331   0012A8  EF9B  F009         	goto	l285
  1332   0012AC                     l1784:
  1333                           
  1334                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1335   0012AC  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1336   0012B0  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1337   0012B4  0E00               	movlw	0
  1338   0012B6  8ADB               	bsf	plusw2,5,c
  1339                           
  1340                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1341   0012B8  EF9B  F009         	goto	l285
  1342   0012BC                     l1786:
  1343                           
  1344                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1345   0012BC  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1346   0012C0  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1347   0012C4  0E00               	movlw	0
  1348   0012C6  8CDB               	bsf	plusw2,6,c
  1349                           
  1350                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1351   0012C8  EF9B  F009         	goto	l285
  1352   0012CC                     l1788:
  1353                           
  1354                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1355   0012CC  C04C  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1356   0012D0  C04D  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1357   0012D4  0E00               	movlw	0
  1358   0012D6  8EDB               	bsf	plusw2,7,c
  1359                           
  1360                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1361   0012D8  EF9B  F009         	goto	l285
  1362   0012DC                     l1794:
  1363   0012DC  504E               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1364   0012DE  6E4F               	movwf	??_set_bit_uint8^0,c
  1365   0012E0  6A50               	clrf	(??_set_bit_uint8+1)^0,c
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ;	Chosen strategy is simple_byte
  1374   0012E2  5050               	movf	(??_set_bit_uint8+1)^0,w,c
  1375   0012E4  0A00               	xorlw	0	; case 0
  1376   0012E6  B4D8               	btfsc	status,2,c
  1377   0012E8  EF78  F009         	goto	l2080
  1378   0012EC  EF9B  F009         	goto	l285
  1379   0012F0                     l2080:
  1380                           
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 8, Range of values is 0 to 7
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte           25    13 (average)
  1386                           ;	Chosen strategy is simple_byte
  1387   0012F0  504F               	movf	??_set_bit_uint8^0,w,c
  1388   0012F2  0A00               	xorlw	0	; case 0
  1389   0012F4  B4D8               	btfsc	status,2,c
  1390   0012F6  EF2E  F009         	goto	l1774
  1391   0012FA  0A01               	xorlw	1	; case 1
  1392   0012FC  B4D8               	btfsc	status,2,c
  1393   0012FE  EF36  F009         	goto	l1776
  1394   001302  0A03               	xorlw	3	; case 2
  1395   001304  B4D8               	btfsc	status,2,c
  1396   001306  EF3E  F009         	goto	l1778
  1397   00130A  0A01               	xorlw	1	; case 3
  1398   00130C  B4D8               	btfsc	status,2,c
  1399   00130E  EF46  F009         	goto	l1780
  1400   001312  0A07               	xorlw	7	; case 4
  1401   001314  B4D8               	btfsc	status,2,c
  1402   001316  EF4E  F009         	goto	l1782
  1403   00131A  0A01               	xorlw	1	; case 5
  1404   00131C  B4D8               	btfsc	status,2,c
  1405   00131E  EF56  F009         	goto	l1784
  1406   001322  0A03               	xorlw	3	; case 6
  1407   001324  B4D8               	btfsc	status,2,c
  1408   001326  EF5E  F009         	goto	l1786
  1409   00132A  0A01               	xorlw	1	; case 7
  1410   00132C  B4D8               	btfsc	status,2,c
  1411   00132E  EF66  F009         	goto	l1788
  1412   001332  EF9B  F009         	goto	l285
  1413   001336                     l285:
  1414   001336  0012               	return		;funcret
  1415   001338                     __end_of_set_bit_uint8:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _clear_bit_uint8 *****************
  1419 ;; Defined at:
  1420 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1423 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1424 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1425 ;;		 -> TRISB(1), TRISA(1), 
  1426 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      enum E2804
  1431 ;; Registers used:
  1432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;Total ram usage:        5 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_gpio_pin_direction_initialize
  1448 ;;		_gpio_pin_write_logic
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text9
  1453   001338                     __ptext9:
  1454                           	callstack 0
  1455   001338                     _clear_bit_uint8:
  1456                           	callstack 27
  1457   001338                     
  1458                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1459   001338  504C               	movf	clear_bit_uint8@p_reg^0,w,c
  1460   00133A  104D               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1461   00133C  A4D8               	btfss	status,2,c
  1462   00133E  EFA3  F009         	goto	u471
  1463   001342  EFA5  F009         	goto	u470
  1464   001346                     u471:
  1465   001346  EFE7  F009         	goto	l1826
  1466   00134A                     u470:
  1467   00134A  EF14  F00A         	goto	l301
  1468   00134E                     l1806:
  1469                           
  1470                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  1471   00134E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1472   001352  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1473   001356  0EFE               	movlw	254
  1474   001358  16DF               	andwf	indf2,f,c
  1475                           
  1476                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1477   00135A  EF14  F00A         	goto	l301
  1478   00135E                     l1808:
  1479                           
  1480                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  1481   00135E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1482   001362  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1483   001366  0EFD               	movlw	253
  1484   001368  16DF               	andwf	indf2,f,c
  1485                           
  1486                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  1487   00136A  EF14  F00A         	goto	l301
  1488   00136E                     l1810:
  1489                           
  1490                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  1491   00136E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1492   001372  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1493   001376  0EFB               	movlw	251
  1494   001378  16DF               	andwf	indf2,f,c
  1495                           
  1496                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  1497   00137A  EF14  F00A         	goto	l301
  1498   00137E                     l1812:
  1499                           
  1500                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  1501   00137E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1502   001382  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1503   001386  0EF7               	movlw	247
  1504   001388  16DF               	andwf	indf2,f,c
  1505                           
  1506                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  1507   00138A  EF14  F00A         	goto	l301
  1508   00138E                     l1814:
  1509                           
  1510                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  1511   00138E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1512   001392  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1513   001396  0EEF               	movlw	239
  1514   001398  16DF               	andwf	indf2,f,c
  1515                           
  1516                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  1517   00139A  EF14  F00A         	goto	l301
  1518   00139E                     l1816:
  1519                           
  1520                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  1521   00139E  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1522   0013A2  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1523   0013A6  0EDF               	movlw	223
  1524   0013A8  16DF               	andwf	indf2,f,c
  1525                           
  1526                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  1527   0013AA  EF14  F00A         	goto	l301
  1528   0013AE                     l1818:
  1529                           
  1530                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  1531   0013AE  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1532   0013B2  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1533   0013B6  0EBF               	movlw	191
  1534   0013B8  16DF               	andwf	indf2,f,c
  1535                           
  1536                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  1537   0013BA  EF14  F00A         	goto	l301
  1538   0013BE                     l1820:
  1539                           
  1540                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  1541   0013BE  C04C  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1542   0013C2  C04D  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1543   0013C6  0E7F               	movlw	127
  1544   0013C8  16DF               	andwf	indf2,f,c
  1545                           
  1546                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  1547   0013CA  EF14  F00A         	goto	l301
  1548   0013CE                     l1826:
  1549   0013CE  504E               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1550   0013D0  6E4F               	movwf	??_clear_bit_uint8^0,c
  1551   0013D2  6A50               	clrf	(??_clear_bit_uint8+1)^0,c
  1552                           
  1553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 1, Range of values is 0 to 0
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte            4     3 (average)
  1559                           ;	Chosen strategy is simple_byte
  1560   0013D4  5050               	movf	(??_clear_bit_uint8+1)^0,w,c
  1561   0013D6  0A00               	xorlw	0	; case 0
  1562   0013D8  B4D8               	btfsc	status,2,c
  1563   0013DA  EFF1  F009         	goto	l2082
  1564   0013DE  EF14  F00A         	goto	l301
  1565   0013E2                     l2082:
  1566                           
  1567                           ; Switch size 1, requested type "simple"
  1568                           ; Number of cases is 8, Range of values is 0 to 7
  1569                           ; switch strategies available:
  1570                           ; Name         Instructions Cycles
  1571                           ; simple_byte           25    13 (average)
  1572                           ;	Chosen strategy is simple_byte
  1573   0013E2  504F               	movf	??_clear_bit_uint8^0,w,c
  1574   0013E4  0A00               	xorlw	0	; case 0
  1575   0013E6  B4D8               	btfsc	status,2,c
  1576   0013E8  EFA7  F009         	goto	l1806
  1577   0013EC  0A01               	xorlw	1	; case 1
  1578   0013EE  B4D8               	btfsc	status,2,c
  1579   0013F0  EFAF  F009         	goto	l1808
  1580   0013F4  0A03               	xorlw	3	; case 2
  1581   0013F6  B4D8               	btfsc	status,2,c
  1582   0013F8  EFB7  F009         	goto	l1810
  1583   0013FC  0A01               	xorlw	1	; case 3
  1584   0013FE  B4D8               	btfsc	status,2,c
  1585   001400  EFBF  F009         	goto	l1812
  1586   001404  0A07               	xorlw	7	; case 4
  1587   001406  B4D8               	btfsc	status,2,c
  1588   001408  EFC7  F009         	goto	l1814
  1589   00140C  0A01               	xorlw	1	; case 5
  1590   00140E  B4D8               	btfsc	status,2,c
  1591   001410  EFCF  F009         	goto	l1816
  1592   001414  0A03               	xorlw	3	; case 6
  1593   001416  B4D8               	btfsc	status,2,c
  1594   001418  EFD7  F009         	goto	l1818
  1595   00141C  0A01               	xorlw	1	; case 7
  1596   00141E  B4D8               	btfsc	status,2,c
  1597   001420  EFDF  F009         	goto	l1820
  1598   001424  EF14  F00A         	goto	l301
  1599   001428                     l301:
  1600   001428  0012               	return		;funcret
  1601   00142A                     __end_of_clear_bit_uint8:
  1602                           	callstack 0
  1603                           
  1604                           	psect	smallconst
  1605   001000                     __psmallconst:
  1606                           	callstack 0
  1607   001000  00                 	db	0
  1608   001001  00                 	db	0	; dummy byte at the end
  1609   000000                     
  1610                           	psect	rparam
  1611   000000                     
  1612                           	psect	config
  1613                           
  1614                           ; Padding undefined space
  1615   300000                     	org	3145728
  1616   300000  FF                 	db	255
  1617                           
  1618                           ;Config register CONFIG1H @ 0x300001
  1619                           ;	Oscillator Selection bits
  1620                           ;	OSC = HS, HS oscillator
  1621                           ;	Fail-Safe Clock Monitor Enable bit
  1622                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1623                           ;	Internal/External Oscillator Switchover bit
  1624                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1625   300001                     	org	3145729
  1626   300001  02                 	db	2
  1627                           
  1628                           ;Config register CONFIG2L @ 0x300002
  1629                           ;	Power-up Timer Enable bit
  1630                           ;	PWRT = OFF, PWRT disabled
  1631                           ;	Brown-out Reset Enable bits
  1632                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1633                           ;	Brown Out Reset Voltage bits
  1634                           ;	BORV = 1, 
  1635   300002                     	org	3145730
  1636   300002  09                 	db	9
  1637                           
  1638                           ;Config register CONFIG2H @ 0x300003
  1639                           ;	Watchdog Timer Enable bit
  1640                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1641                           ;	Watchdog Timer Postscale Select bits
  1642                           ;	WDTPS = 32768, 1:32768
  1643   300003                     	org	3145731
  1644   300003  1E                 	db	30
  1645                           
  1646                           ; Padding undefined space
  1647   300004                     	org	3145732
  1648   300004  FF                 	db	255
  1649                           
  1650                           ;Config register CONFIG3H @ 0x300005
  1651                           ;	CCP2 MUX bit
  1652                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1653                           ;	PORTB A/D Enable bit
  1654                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1655                           ;	Low-Power Timer1 Oscillator Enable bit
  1656                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1657                           ;	MCLR Pin Enable bit
  1658                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1659   300005                     	org	3145733
  1660   300005  81                 	db	129
  1661                           
  1662                           ;Config register CONFIG4L @ 0x300006
  1663                           ;	Stack Full/Underflow Reset Enable bit
  1664                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1665                           ;	Single-Supply ICSP Enable bit
  1666                           ;	LVP = OFF, Single-Supply ICSP disabled
  1667                           ;	Extended Instruction Set Enable bit
  1668                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1669                           ;	Background Debugger Enable bit
  1670                           ;	DEBUG = 0x1, unprogrammed default
  1671   300006                     	org	3145734
  1672   300006  81                 	db	129
  1673                           
  1674                           ; Padding undefined space
  1675   300007                     	org	3145735
  1676   300007  FF                 	db	255
  1677                           
  1678                           ;Config register CONFIG5L @ 0x300008
  1679                           ;	Code Protection bit
  1680                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1681                           ;	Code Protection bit
  1682                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1683                           ;	Code Protection bit
  1684                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1685                           ;	Code Protection bit
  1686                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1687   300008                     	org	3145736
  1688   300008  0F                 	db	15
  1689                           
  1690                           ;Config register CONFIG5H @ 0x300009
  1691                           ;	Boot Block Code Protection bit
  1692                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1693                           ;	Data EEPROM Code Protection bit
  1694                           ;	CPD = OFF, Data EEPROM not code-protected
  1695   300009                     	org	3145737
  1696   300009  C0                 	db	192
  1697                           
  1698                           ;Config register CONFIG6L @ 0x30000A
  1699                           ;	Write Protection bit
  1700                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1701                           ;	Write Protection bit
  1702                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1703                           ;	Write Protection bit
  1704                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1705                           ;	Write Protection bit
  1706                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1707   30000A                     	org	3145738
  1708   30000A  0F                 	db	15
  1709                           
  1710                           ;Config register CONFIG6H @ 0x30000B
  1711                           ;	Configuration Register Write Protection bit
  1712                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1713                           ;	Boot Block Write Protection bit
  1714                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1715                           ;	Data EEPROM Write Protection bit
  1716                           ;	WRTD = OFF, Data EEPROM not write-protected
  1717   30000B                     	org	3145739
  1718   30000B  E0                 	db	224
  1719                           
  1720                           ;Config register CONFIG7L @ 0x30000C
  1721                           ;	Table Read Protection bit
  1722                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1723                           ;	Table Read Protection bit
  1724                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1725                           ;	Table Read Protection bit
  1726                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1727                           ;	Table Read Protection bit
  1728                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1729   30000C                     	org	3145740
  1730   30000C  0F                 	db	15
  1731                           
  1732                           ;Config register CONFIG7H @ 0x30000D
  1733                           ;	Boot Block Table Read Protection bit
  1734                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1735   30000D                     	org	3145741
  1736   30000D  40                 	db	64
  1737                           tosu	equ	0xFFF
  1738                           tosh	equ	0xFFE
  1739                           tosl	equ	0xFFD
  1740                           stkptr	equ	0xFFC
  1741                           pclatu	equ	0xFFB
  1742                           pclath	equ	0xFFA
  1743                           pcl	equ	0xFF9
  1744                           tblptru	equ	0xFF8
  1745                           tblptrh	equ	0xFF7
  1746                           tblptrl	equ	0xFF6
  1747                           tablat	equ	0xFF5
  1748                           prodh	equ	0xFF4
  1749                           prodl	equ	0xFF3
  1750                           indf0	equ	0xFEF
  1751                           postinc0	equ	0xFEE
  1752                           postdec0	equ	0xFED
  1753                           preinc0	equ	0xFEC
  1754                           plusw0	equ	0xFEB
  1755                           fsr0h	equ	0xFEA
  1756                           fsr0l	equ	0xFE9
  1757                           wreg	equ	0xFE8
  1758                           indf1	equ	0xFE7
  1759                           postinc1	equ	0xFE6
  1760                           postdec1	equ	0xFE5
  1761                           preinc1	equ	0xFE4
  1762                           plusw1	equ	0xFE3
  1763                           fsr1h	equ	0xFE2
  1764                           fsr1l	equ	0xFE1
  1765                           bsr	equ	0xFE0
  1766                           indf2	equ	0xFDF
  1767                           postinc2	equ	0xFDE
  1768                           postdec2	equ	0xFDD
  1769                           preinc2	equ	0xFDC
  1770                           plusw2	equ	0xFDB
  1771                           fsr2h	equ	0xFDA
  1772                           fsr2l	equ	0xFD9
  1773                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        55
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      88
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    DCmotor_brake@p_DCmotor	PTR struct . size(1) Largest target is 10
		 -> DCmotor_1(COMRAM[10]), DCmotor_2(COMRAM[10]), 

    DCmotor_init@p_DCmotor	PTR struct . size(1) Largest target is 10
		 -> DCmotor_1(COMRAM[10]), DCmotor_2(COMRAM[10]), 

    DCmotor_rotate_CW_CCW@p_DCmotor	PTR struct . size(1) Largest target is 10
		 -> DCmotor_1(COMRAM[10]), DCmotor_2(COMRAM[10]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 10
		 -> DCmotor_1(COMRAM[10]), DCmotor_1$backward_pin(COMRAM[5]), DCmotor_1$forward_pin(COMRAM[5]), DCmotor_2(COMRAM[10]), 
		 -> DCmotor_2$backward_pin(COMRAM[5]), DCmotor_2$forward_pin(COMRAM[5]), led_init@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 10
		 -> DCmotor_1(COMRAM[10]), DCmotor_2(COMRAM[10]), led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_two_DCmotor_sequence
    _two_DCmotor_sequence->_DCmotor_rotate_CW_CCW
    _DCmotor_rotate_CW_CCW->_gpio_pin_write_logic
    _DCmotor_brake->_gpio_pin_write_logic
    _app_init->_DCmotor_init
    _DCmotor_init->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13938
                           _app_init
               _two_DCmotor_sequence
 ---------------------------------------------------------------------------------
 (1) _two_DCmotor_sequence                                 2     2      0    8664
                                             11 COMRAM     2     2      0
                      _DCmotor_brake
              _DCmotor_rotate_CW_CCW
 ---------------------------------------------------------------------------------
 (2) _DCmotor_rotate_CW_CCW                                2     0      2    4680
                                              9 COMRAM     2     0      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _DCmotor_brake                                        1     0      1    3984
                                              9 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    5274
                       _DCmotor_init
 ---------------------------------------------------------------------------------
 (2) _DCmotor_init                                         1     0      1    5274
                                              9 COMRAM     1     0      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 4     2      2    3310
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1658
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _DCmotor_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
   _two_DCmotor_sequence
     _DCmotor_brake
       _gpio_pin_write_logic
     _DCmotor_rotate_CW_CCW
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      58       1       69.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      39        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec 20 19:18:59 2023

                    __end_of_DCmotor_brake 1650                                         l65 1152  
                                       l59 1660              __end_of_DCmotor_rotate_CW_CCW 155C  
      gpio_pin_write_logic@d_logic_desired 0052                                        l301 1428  
                                      l335 14E8                                        l347 1244  
                                      l285 1336                                        l544 155A  
                                      l553 164E                                        l539 15B0  
                                      l489 1666                                        u500 1164  
                                      u501 1160                                        u510 117A  
                                      u511 1176                                        u520 118A  
                                      u521 1186                                        u530 119A  
                                      u531 1196                                        u460 1258  
                                      u540 156C                                        u461 1254  
                                      u541 1568                                        u470 134A  
                                      u550 14FA                                        u471 1346  
                                      u551 14F6                                        u480 143A  
                                      u560 1512                                        u481 1436  
                                      u561 150E                                        u490 1450  
                                      u570 1540                                        u491 144C  
                                      u571 153C                                        u707 1024  
                                      u580 1630                                        u581 162C  
                                      u717 104A                                        u727 1078  
                                      u737 109E                                        u747 10CC  
                                      u757 10F2                                        u767 1120  
                                      u777 1146                                        wreg 0FE8  
                                     l2080 12F0                                       l2082 13E2  
                                     l2058 1662                                       l2076 122E  
                                     l2078 14D2                                       l1800 1338  
                                     l1810 136E                                       l1820 13BE  
                                     l1812 137E                                       l1900 1530  
                                     l1814 138E                                       l1806 134E  
                                     l1910 1634                                       l1902 1540  
                                     l1816 139E                                       l1808 135E  
                                     l1840 1484                                       l1832 142A  
                                     l1904 1620                                       l1920 1030  
                                     l1818 13AE                                       l1826 13CE  
                                     l1834 143A                                       l1914 1650  
                                     l1930 108C                                       l1922 1038  
                                     l1780 128C                                       l1852 1154  
                                     l1940 10E8                                       l1932 1094  
                                     l1924 1040                                       l1916 1002  
                                     l1782 129C                                       l1774 125C  
                                     l1838 1454                                       l1846 14B4  
                                     l1862 119E                                       l1854 1164  
                                     l1942 1116                                       l1934 10C2  
                                     l1926 106E                                       l1918 101A  
                                     l1784 12AC                                       l1776 126C  
                                     l1768 1246                                       l1864 11AC  
                                     l1856 117A                                       l1880 155C  
                                     l1944 112C                                       l1936 10D8  
                                     l1928 1084                                       l1786 12BC  
                                     l1778 127C                                       l1794 12DC  
                                     l1866 11DC                                       l1858 118A  
                                     l1874 121A                                       l1890 14EA  
                                     l1946 1134                                       l1938 10E0  
                                     l1788 12CC                                       l1868 11EA  
                                     l1892 14FE                                       l1948 113C  
                                     l1886 1570                                       l1896 1502  
                                     l1898 1512                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _main 1662                                       fsr2h 0FDA  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                     _gpio_pin_write_logic 1154                       _two_DCmotor_sequence 1002  
                                    ?_main 004C                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                                      tablat 0FF5  
                          led_on_off@F2938 003D                                      plusw2 0FDB  
                                    status 0FD8                      DCmotor_init@p_DCmotor 0055  
           ?_gpio_pin_direction_initialize 0051                            __initialization 15EA  
                             __end_of_main 1672                      ?_gpio_pin_write_logic 0051  
                    ?_two_DCmotor_sequence 004C                                     ??_main 0059  
                            __activetblptr 0002             DCmotor_rotate_CW_CCW@p_DCmotor 0055  
                         __end_of_app_init 1662                                     clear_0 1610  
                                   _pinpin 001F                                     isa$std 0001  
                            led_init@F2933 0042                               __pdataCOMRAM 0001  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                    __end_of_set_bit_uint8 1338         DCmotor_rotate_CW_CCW@d_DCmotor_dir 0056  
                               __accesstop 0080                    __end_of__initialization 1616  
                            ___rparam_used 0001                     ??_gpio_pin_write_logic 0053  
                           __pcstackCOMRAM 004C                              ?_DCmotor_init 0055  
                   ??_two_DCmotor_sequence 0057                           _PORT_REG_ADD_arr 000B  
         gpio_pin_write_logic@p_pin_config 0051                             ??_DCmotor_init 0056  
                     _program_step_counter 0047                            led_toggle@F2942 0038  
                    _DCmotor_rotate_CW_CCW 14EA                     DCmotor_brake@p_DCmotor 0055  
                                ?_app_init 004C                            _LAT_REG_ADD_arr 0001  
                        ??_clear_bit_uint8 004F                                    __Hparam 0000  
                                  __Lparam 0000                               __psmallconst 1000  
                                  __pcinit 15EA                                    __ramtop 1000  
                                  __ptext0 1662                                    __ptext1 1002  
                                  __ptext2 14EA                                    __ptext3 1620  
                                  __ptext4 1650                                    __ptext5 155C  
                                  __ptext6 1154                                    __ptext7 142A  
                                  __ptext8 1246                                    __ptext9 1338  
          ??_gpio_pin_direction_initialize 0052                 clear_bit_uint8@d_IDX_BIT_X 004E  
                               ??_app_init 0056                       end_of_initialization 1616  
                            __Lmediumconst 0000                       clear_bit_uint8@p_reg 004C  
                                _DCmotor_1 002E                                  _DCmotor_2 0024  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc2 0FDE  
                            _DCmotor_brake 1620                     ?_DCmotor_rotate_CW_CCW 0055  
                     __end_of_DCmotor_init 15B2                             ?_DCmotor_brake 0055  
                            __pidataCOMRAM 15B2                        start_initialization 15EA  
    __end_of_gpio_pin_direction_initialize 14EA              _gpio_pin_direction_initialize 142A  
                          _clear_bit_uint8 1338                                __pbssCOMRAM 0038  
                          ??_DCmotor_brake 0056                                __smallconst 1000  
                            _set_bit_uint8 1246                    ??_DCmotor_rotate_CW_CCW 0057  
                             _DCmotor_init 155C                    __end_of_clear_bit_uint8 142A  
                           ?_set_bit_uint8 004C                                  copy_data0 15FE  
                                 __Hrparam 0000                                   __Lrparam 0000  
                 set_bit_uint8@d_IDX_BIT_X 004E                                   _app_init 1650  
                                 isa$xinst 0000                            _program_counter 004B  
                         ?_clear_bit_uint8 004C                         set_bit_uint8@p_reg 004C  
                          ??_set_bit_uint8 004F               __end_of_gpio_pin_write_logic 1246  
             __end_of_two_DCmotor_sequence 1154  gpio_pin_direction_initialize@p_pin_config 0051  
                         _TRIS_REG_ADD_arr 0015  
