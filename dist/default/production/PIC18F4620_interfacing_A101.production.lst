

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 19:26:18 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 23/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   0015F8                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _LAT_REG_ADD_arr
    66   0015F8  89                 	db	137
    67   0015F9  0F                 	db	15
    68   0015FA  8A                 	db	138
    69   0015FB  0F                 	db	15
    70   0015FC  8B                 	db	139
    71   0015FD  0F                 	db	15
    72   0015FE  8C                 	db	140
    73   0015FF  0F                 	db	15
    74   001600  8D                 	db	141
    75   001601  0F                 	db	15
    76                           
    77                           ;initializer for _PORT_REG_ADD_arr
    78   001602  80                 	db	128
    79   001603  0F                 	db	15
    80   001604  81                 	db	129
    81   001605  0F                 	db	15
    82   001606  82                 	db	130
    83   001607  0F                 	db	15
    84   001608  83                 	db	131
    85   001609  0F                 	db	15
    86   00160A  84                 	db	132
    87   00160B  0F                 	db	15
    88                           
    89                           ;initializer for _TRIS_REG_ADD_arr
    90   00160C  92                 	db	146
    91   00160D  0F                 	db	15
    92   00160E  93                 	db	147
    93   00160F  0F                 	db	15
    94   001610  94                 	db	148
    95   001611  0F                 	db	15
    96   001612  95                 	db	149
    97   001613  0F                 	db	15
    98   001614  96                 	db	150
    99   001615  0F                 	db	15
   100                           
   101                           ;initializer for _pinpin
   102   001616  00                 	db	0
   103   001617  01                 	db	1
   104   001618  00                 	db	0
   105   001619  01                 	db	1
   106   00161A  01                 	db	1
   107                           
   108                           ;initializer for _button_2_state
   109   00161B  01                 	db	1
   110                           
   111                           ;initializer for _button_1_state
   112   00161C  01                 	db	1
   113                           
   114                           ;initializer for _relay_2
   115   00161D  02                 	db	2
   116   00161E  01                 	db	1
   117   00161F  00                 	db	0
   118   001620  00                 	db	0
   119   001621  00                 	db	0
   120   001622  01                 	db	1
   121                           
   122                           ;initializer for _relay_1
   123   001623  02                 	db	2
   124   001624  00                 	db	0
   125   001625  00                 	db	0
   126   001626  00                 	db	0
   127   001627  00                 	db	0
   128   001628  01                 	db	1
   129   000000                     _LATA	set	3977
   130   000000                     _PORTE	set	3972
   131   000000                     _PORTD	set	3971
   132   000000                     _PORTC	set	3970
   133   000000                     _PORTB	set	3969
   134   000000                     _PORTA	set	3968
   135   000000                     _TRISA	set	3986
   136   000000                     _TRISE	set	3990
   137   000000                     _TRISD	set	3989
   138   000000                     _TRISC	set	3988
   139   000000                     _TRISB	set	3987
   140   000000                     _LATE	set	3981
   141   000000                     _LATD	set	3980
   142   000000                     _LATC	set	3979
   143   000000                     _LATB	set	3978
   144                           
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148   00158E                     __pcinit:
   149                           	callstack 0
   150   00158E                     start_initialization:
   151                           	callstack 0
   152   00158E                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (49 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157   00158E  0EF8               	movlw	low __pidataCOMRAM
   158   001590  6EF6               	movwf	tblptrl,c
   159   001592  0E15               	movlw	high __pidataCOMRAM
   160   001594  6EF7               	movwf	tblptrh,c
   161   001596  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162   001598  6EF8               	movwf	tblptru,c
   163   00159A  EE00  F001         	lfsr	0,__pdataCOMRAM
   164   00159E  EE10 F031          	lfsr	1,49
   165   0015A2                     copy_data0:
   166   0015A2  0009               	tblrd		*+
   167   0015A4  CFF5 FFEE          	movff	tablat,postinc0
   168   0015A8  50E5               	movf	postdec1,w,c
   169   0015AA  50E1               	movf	fsr1l,w,c
   170   0015AC  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (27 bytes)
   173   0015AE  EE00  F032         	lfsr	0,__pbssCOMRAM
   174   0015B2  0E1B               	movlw	27
   175   0015B4                     clear_0:
   176   0015B4  6AEE               	clrf	postinc0,c
   177   0015B6  06E8               	decf	wreg,f,c
   178   0015B8  E1FD               	bnz	clear_0
   179   0015BA                     end_of_initialization:
   180                           	callstack 0
   181   0015BA                     __end_of__initialization:
   182                           	callstack 0
   183   0015BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184   0015BC  6EF8               	movwf	tblptru,c
   185   0015BE  0100               	movlb	0
   186   0015C0  EF24  F00B         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   000032                     __pbssCOMRAM:
   190                           	callstack 0
   191   000032                     led_toggle@F2942:
   192                           	callstack 0
   193   000032                     	ds	5
   194   000037                     led_on_off@F2938:
   195                           	callstack 0
   196   000037                     	ds	5
   197   00003C                     led_init@F2933:
   198                           	callstack 0
   199   00003C                     	ds	5
   200   000041                     _btn_counter:
   201                           	callstack 0
   202   000041                     	ds	4
   203   000045                     _program_step_counter:
   204                           	callstack 0
   205   000045                     	ds	4
   206   000049                     _rise_edge:
   207                           	callstack 0
   208   000049                     	ds	1
   209   00004A                     _btn_1_high_valid_state_previous:
   210                           	callstack 0
   211   00004A                     	ds	1
   212   00004B                     _btn_1_high_valid_state:
   213                           	callstack 0
   214   00004B                     	ds	1
   215   00004C                     _program_counter:
   216                           	callstack 0
   217   00004C                     	ds	1
   218                           
   219                           	psect	dataCOMRAM
   220   000001                     __pdataCOMRAM:
   221                           	callstack 0
   222   000001                     _LAT_REG_ADD_arr:
   223                           	callstack 0
   224   000001                     	ds	10
   225   00000B                     _PORT_REG_ADD_arr:
   226                           	callstack 0
   227   00000B                     	ds	10
   228   000015                     _TRIS_REG_ADD_arr:
   229                           	callstack 0
   230   000015                     	ds	10
   231   00001F                     _pinpin:
   232                           	callstack 0
   233   00001F                     	ds	5
   234   000024                     _button_2_state:
   235                           	callstack 0
   236   000024                     	ds	1
   237   000025                     _button_1_state:
   238                           	callstack 0
   239   000025                     	ds	1
   240   000026                     _relay_2:
   241                           	callstack 0
   242   000026                     	ds	6
   243   00002C                     _relay_1:
   244                           	callstack 0
   245   00002C                     	ds	6
   246                           
   247                           	psect	cstackCOMRAM
   248   00004D                     __pcstackCOMRAM:
   249                           	callstack 0
   250   00004D                     gpio_pin_toggle_logic@p_pin_config:
   251                           	callstack 0
   252   00004D                     set_bit_uint8@p_reg:
   253                           	callstack 0
   254   00004D                     clear_bit_uint8@p_reg:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x0
   258   00004D                     	ds	1
   259   00004E                     ??_gpio_pin_toggle_logic:
   260                           
   261                           ; 1 bytes @ 0x1
   262   00004E                     	ds	1
   263   00004F                     set_bit_uint8@d_IDX_BIT_X:
   264                           	callstack 0
   265   00004F                     clear_bit_uint8@d_IDX_BIT_X:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x2
   269   00004F                     	ds	1
   270   000050                     ??_set_bit_uint8:
   271   000050                     ??_clear_bit_uint8:
   272   000050                     gpio_pin_toggle_logic@bit_mask:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x3
   276   000050                     	ds	1
   277   000051                     relay_toggle@p_relay:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x4
   281   000051                     	ds	1
   282   000052                     ??_two_reverse_relay_5s:
   283   000052                     gpio_pin_direction_initialize@p_pin_config:
   284                           	callstack 0
   285   000052                     gpio_pin_write_logic@p_pin_config:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x5
   289   000052                     	ds	1
   290   000053                     ??_gpio_pin_direction_initialize:
   291   000053                     gpio_pin_write_logic@d_logic_desired:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x6
   295   000053                     	ds	1
   296   000054                     ??_gpio_pin_write_logic:
   297                           
   298                           ; 1 bytes @ 0x7
   299   000054                     	ds	2
   300   000056                     relay_init@p_relay:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x9
   304   000056                     	ds	1
   305   000057                     
   306                           ; 1 bytes @ 0xA
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 34 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  2  509[None  ] int 
   319 ;; Registers used:
   320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels required when called: 4
   332 ;; This function calls:
   333 ;;		_app_init
   334 ;;		_calculate_step_counter
   335 ;;		_two_reverse_relay_5s
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text0
   342   001648                     __ptext0:
   343                           	callstack 0
   344   001648                     _main:
   345                           	callstack 27
   346   001648                     
   347                           ;main.c: 36:     app_init();
   348   001648  EC2E  F00B         	call	_app_init	;wreg free
   349   00164C                     l1978:
   350                           
   351                           ;main.c: 38:     {;main.c: 39:         calculate_step_counter() ;
   352   00164C  ECA9  F00A         	call	_calculate_step_counter	;wreg free
   353   001650                     
   354                           ;main.c: 41:         two_reverse_relay_5s() ;
   355   001650  EC82  F00A         	call	_two_reverse_relay_5s	;wreg free
   356                           
   357                           ;main.c: 42:     }
   358   001654  EF26  F00B         	goto	l1978
   359   001658  EF00  F000         	goto	start
   360   00165C                     __end_of_main:
   361                           	callstack 0
   362                           
   363 ;; *************** function _two_reverse_relay_5s *****************
   364 ;; Defined at:
   365 ;;		line 174 in file "_APP/application.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;Total ram usage:        2 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; Hardware stack levels required when called: 2
   386 ;; This function calls:
   387 ;;		_relay_toggle
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text1
   394   001504                     __ptext1:
   395                           	callstack 0
   396   001504                     _two_reverse_relay_5s:
   397                           	callstack 28
   398   001504                     
   399                           ;_APP/application.c: 191:     relay_toggle(&relay_1);
   400   001504  0E2C               	movlw	low _relay_1
   401   001506  6E51               	movwf	relay_toggle@p_relay^0,c
   402   001508  EC15  F00B         	call	_relay_toggle	;wreg free
   403   00150C                     
   404                           ;_APP/application.c: 192:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   405   00150C  0E0B               	movlw	11
   406   00150E  6E53               	movwf	(??_two_reverse_relay_5s+1)^0,c
   407   001510  0E26               	movlw	38
   408   001512  6E52               	movwf	??_two_reverse_relay_5s^0,c
   409   001514  0E5E               	movlw	94
   410   001516                     u667:
   411   001516  2EE8               	decfsz	wreg,f,c
   412   001518  D7FE               	bra	u667
   413   00151A  2E52               	decfsz	??_two_reverse_relay_5s^0,f,c
   414   00151C  D7FC               	bra	u667
   415   00151E  2E53               	decfsz	(??_two_reverse_relay_5s+1)^0,f,c
   416   001520  D7FA               	bra	u667
   417   001522                     
   418                           ;_APP/application.c: 193:     relay_toggle(&relay_1);
   419   001522  0E2C               	movlw	low _relay_1
   420   001524  6E51               	movwf	relay_toggle@p_relay^0,c
   421   001526  EC15  F00B         	call	_relay_toggle	;wreg free
   422   00152A                     
   423                           ;_APP/application.c: 194:     relay_toggle(&relay_2);
   424   00152A  0E26               	movlw	low _relay_2
   425   00152C  6E51               	movwf	relay_toggle@p_relay^0,c
   426   00152E  EC15  F00B         	call	_relay_toggle	;wreg free
   427   001532                     
   428                           ;_APP/application.c: 195:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   429   001532  0E0B               	movlw	11
   430   001534  6E53               	movwf	(??_two_reverse_relay_5s+1)^0,c
   431   001536  0E26               	movlw	38
   432   001538  6E52               	movwf	??_two_reverse_relay_5s^0,c
   433   00153A  0E5E               	movlw	94
   434   00153C                     u677:
   435   00153C  2EE8               	decfsz	wreg,f,c
   436   00153E  D7FE               	bra	u677
   437   001540  2E52               	decfsz	??_two_reverse_relay_5s^0,f,c
   438   001542  D7FC               	bra	u677
   439   001544  2E53               	decfsz	(??_two_reverse_relay_5s+1)^0,f,c
   440   001546  D7FA               	bra	u677
   441                           
   442                           ;_APP/application.c: 196:     relay_toggle(&relay_2);
   443   001548  0E26               	movlw	low _relay_2
   444   00154A  6E51               	movwf	relay_toggle@p_relay^0,c
   445   00154C  EC15  F00B         	call	_relay_toggle	;wreg free
   446   001550  0012               	return		;funcret
   447   001552                     __end_of_two_reverse_relay_5s:
   448                           	callstack 0
   449                           
   450 ;; *************** function _relay_toggle *****************
   451 ;; Defined at:
   452 ;;		line 59 in file "_HAL/Drivers/relay/relay.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;  p_relay         1    4[COMRAM] PTR struct .
   455 ;;		 -> relay_2(6), relay_1(6), 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      enum E2804
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        1 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 1
   474 ;; This function calls:
   475 ;;		_gpio_pin_toggle_logic
   476 ;; This function is called by:
   477 ;;		_two_reverse_relay_5s
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text2
   482   00162A                     __ptext2:
   483                           	callstack 0
   484   00162A                     _relay_toggle:
   485                           	callstack 28
   486   00162A                     
   487                           ;_HAL/Drivers/relay/relay.c: 59: std_return relay_toggle(relay_t * p_relay);_HAL/Drivers
      +                          /relay/relay.c: 60: {;_HAL/Drivers/relay/relay.c: 61:     if(((void*)0) == p_relay)
   488   00162A  5051               	movf	relay_toggle@p_relay^0,w,c
   489   00162C  A4D8               	btfss	status,2,c
   490   00162E  EF1B  F00B         	goto	u531
   491   001632  EF1D  F00B         	goto	u530
   492   001636                     u531:
   493   001636  EF1F  F00B         	goto	l1844
   494   00163A                     u530:
   495   00163A  EF23  F00B         	goto	l251
   496   00163E                     l1844:
   497                           
   498                           ;_HAL/Drivers/relay/relay.c: 66:     {;_HAL/Drivers/relay/relay.c: 74:         gpio_pin_
      +                          toggle_logic(&p_relay->relay_pin);
   499   00163E  C051  F04D         	movff	relay_toggle@p_relay,gpio_pin_toggle_logic@p_pin_config
   500   001642  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
   501   001646                     l251:
   502   001646  0012               	return		;funcret
   503   001648                     __end_of_relay_toggle:
   504                           	callstack 0
   505                           
   506 ;; *************** function _gpio_pin_toggle_logic *****************
   507 ;; Defined at:
   508 ;;		line 380 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  p_pin_config    1    0[COMRAM] PTR struct .
   511 ;;		 -> led_toggle@led_pin(5), relay_2(6), relay_1(6), 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  bit_mask        1    3[COMRAM] enum E2825
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      enum E2804
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;Total ram usage:        4 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_relay_toggle
   533 ;;		_led_toggle
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text3
   538   001002                     __ptext3:
   539                           	callstack 0
   540   001002                     _gpio_pin_toggle_logic:
   541                           	callstack 28
   542   001002                     
   543                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 384:     if(((void*)0) == p_pin_config)
   544   001002  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   545   001004  A4D8               	btfss	status,2,c
   546   001006  EF07  F008         	goto	u491
   547   00100A  EF09  F008         	goto	u490
   548   00100E                     u491:
   549   00100E  EF2B  F008         	goto	l1814
   550   001012                     u490:
   551   001012  EFB6  F008         	goto	l406
   552   001016                     l1794:
   553                           
   554                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 394:                 bit_mask = MASK_BIT_0;
   555   001016  0E01               	movlw	1
   556   001018  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   557                           
   558                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 395:                 break;
   559   00101A  EF5D  F008         	goto	l1816
   560   00101E                     l1796:
   561                           
   562                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 397:                 bit_mask = MASK_BIT_1;
   563   00101E  0E02               	movlw	2
   564   001020  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   565                           
   566                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 398:                 break;
   567   001022  EF5D  F008         	goto	l1816
   568   001026                     l1798:
   569                           
   570                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 400:                 bit_mask = MASK_BIT_2;
   571   001026  0E04               	movlw	4
   572   001028  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   573                           
   574                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 401:                 break;
   575   00102A  EF5D  F008         	goto	l1816
   576   00102E                     l1800:
   577                           
   578                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 403:                 bit_mask = MASK_BIT_3;
   579   00102E  0E08               	movlw	8
   580   001030  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   581                           
   582                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 404:                 break;
   583   001032  EF5D  F008         	goto	l1816
   584   001036                     l1802:
   585                           
   586                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 406:                 bit_mask = MASK_BIT_4;
   587   001036  0E10               	movlw	16
   588   001038  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   589                           
   590                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 407:                 break;
   591   00103A  EF5D  F008         	goto	l1816
   592   00103E                     l1804:
   593                           
   594                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 409:                 bit_mask = MASK_BIT_5;
   595   00103E  0E20               	movlw	32
   596   001040  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   597                           
   598                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 410:                 break;
   599   001042  EF5D  F008         	goto	l1816
   600   001046                     l1806:
   601                           
   602                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 412:                 bit_mask = MASK_BIT_6;
   603   001046  0E40               	movlw	64
   604   001048  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   605                           
   606                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 413:                 break;
   607   00104A  EF5D  F008         	goto	l1816
   608   00104E                     l1808:
   609                           
   610                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 bit_mask = MASK_BIT_7;
   611   00104E  0E80               	movlw	128
   612   001050  6E50               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   613                           
   614                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 416:                 break;
   615   001052  EF5D  F008         	goto	l1816
   616   001056                     l1814:
   617   001056  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   618   001058  6ED9               	movwf	fsr2l,c
   619   00105A  6ADA               	clrf	fsr2h,c
   620   00105C  0E01               	movlw	1
   621   00105E  26D9               	addwf	fsr2l,f,c
   622   001060  50DF               	movf	indf2,w,c
   623   001062  6E4E               	movwf	??_gpio_pin_toggle_logic^0,c
   624   001064  6A4F               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
   625                           
   626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   627                           ; Switch size 1, requested type "simple"
   628                           ; Number of cases is 1, Range of values is 0 to 0
   629                           ; switch strategies available:
   630                           ; Name         Instructions Cycles
   631                           ; simple_byte            4     3 (average)
   632                           ;	Chosen strategy is simple_byte
   633   001066  504F               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
   634   001068  0A00               	xorlw	0	; case 0
   635   00106A  B4D8               	btfsc	status,2,c
   636   00106C  EF3A  F008         	goto	l2002
   637   001070  EFB6  F008         	goto	l406
   638   001074                     l2002:
   639                           
   640                           ; Switch size 1, requested type "simple"
   641                           ; Number of cases is 8, Range of values is 0 to 7
   642                           ; switch strategies available:
   643                           ; Name         Instructions Cycles
   644                           ; simple_byte           25    13 (average)
   645                           ;	Chosen strategy is simple_byte
   646   001074  504E               	movf	??_gpio_pin_toggle_logic^0,w,c
   647   001076  0A00               	xorlw	0	; case 0
   648   001078  B4D8               	btfsc	status,2,c
   649   00107A  EF0B  F008         	goto	l1794
   650   00107E  0A01               	xorlw	1	; case 1
   651   001080  B4D8               	btfsc	status,2,c
   652   001082  EF0F  F008         	goto	l1796
   653   001086  0A03               	xorlw	3	; case 2
   654   001088  B4D8               	btfsc	status,2,c
   655   00108A  EF13  F008         	goto	l1798
   656   00108E  0A01               	xorlw	1	; case 3
   657   001090  B4D8               	btfsc	status,2,c
   658   001092  EF17  F008         	goto	l1800
   659   001096  0A07               	xorlw	7	; case 4
   660   001098  B4D8               	btfsc	status,2,c
   661   00109A  EF1B  F008         	goto	l1802
   662   00109E  0A01               	xorlw	1	; case 5
   663   0010A0  B4D8               	btfsc	status,2,c
   664   0010A2  EF1F  F008         	goto	l1804
   665   0010A6  0A03               	xorlw	3	; case 6
   666   0010A8  B4D8               	btfsc	status,2,c
   667   0010AA  EF23  F008         	goto	l1806
   668   0010AE  0A01               	xorlw	1	; case 7
   669   0010B0  B4D8               	btfsc	status,2,c
   670   0010B2  EF27  F008         	goto	l1808
   671   0010B6  EFB6  F008         	goto	l406
   672   0010BA                     l1816:
   673                           
   674                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
   675   0010BA  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   676   0010BC  6ED9               	movwf	fsr2l,c
   677   0010BE  6ADA               	clrf	fsr2h,c
   678   0010C0  50DF               	movf	indf2,w,c
   679   0010C2  0D02               	mullw	2
   680   0010C4  50F3               	movf	243,w,c
   681   0010C6  0F01               	addlw	low _LAT_REG_ADD_arr
   682   0010C8  6ED9               	movwf	fsr2l,c
   683   0010CA  6ADA               	clrf	fsr2h,c
   684   0010CC  CFDE F04E          	movff	postinc2,??_gpio_pin_toggle_logic
   685   0010D0  CFDD F04F          	movff	postdec2,??_gpio_pin_toggle_logic+1
   686   0010D4  C04E  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   687   0010D8  C04F  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   688   0010DC  5050               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
   689   0010DE  1ADF               	xorwf	indf2,f,c
   690                           
   691                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
   692   0010E0  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   693   0010E2  6ED9               	movwf	fsr2l,c
   694   0010E4  6ADA               	clrf	fsr2h,c
   695   0010E6  50DF               	movf	indf2,w,c
   696   0010E8  0D02               	mullw	2
   697   0010EA  50F3               	movf	243,w,c
   698   0010EC  0F01               	addlw	low _LAT_REG_ADD_arr
   699   0010EE  6ED9               	movwf	fsr2l,c
   700   0010F0  6ADA               	clrf	fsr2h,c
   701   0010F2  CFDE F04E          	movff	postinc2,??_gpio_pin_toggle_logic
   702   0010F6  CFDD F04F          	movff	postdec2,??_gpio_pin_toggle_logic+1
   703   0010FA  C04E  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   704   0010FE  C04F  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   705   001102  50DF               	movf	indf2,w,c
   706   001104  1450               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   707   001106  1850               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
   708   001108  A4D8               	btfss	status,2,c
   709   00110A  EF89  F008         	goto	u501
   710   00110E  EF8B  F008         	goto	u500
   711   001112                     u501:
   712   001112  EF94  F008         	goto	l1820
   713   001116                     u500:
   714   001116                     
   715                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 424:             p_pin_config->logic = LOGIC_ON;
   716   001116  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   717   001118  6ED9               	movwf	fsr2l,c
   718   00111A  6ADA               	clrf	fsr2h,c
   719   00111C  0E03               	movlw	3
   720   00111E  26D9               	addwf	fsr2l,f,c
   721   001120  0E01               	movlw	1
   722   001122  6EDF               	movwf	indf2,c
   723   001124  EFB6  F008         	goto	l406
   724   001128                     l1820:
   725   001128  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   726   00112A  6ED9               	movwf	fsr2l,c
   727   00112C  6ADA               	clrf	fsr2h,c
   728   00112E  50DF               	movf	indf2,w,c
   729   001130  0D02               	mullw	2
   730   001132  50F3               	movf	243,w,c
   731   001134  0F01               	addlw	low _LAT_REG_ADD_arr
   732   001136  6ED9               	movwf	fsr2l,c
   733   001138  6ADA               	clrf	fsr2h,c
   734   00113A  CFDE F04E          	movff	postinc2,??_gpio_pin_toggle_logic
   735   00113E  CFDD F04F          	movff	postdec2,??_gpio_pin_toggle_logic+1
   736   001142  C04E  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   737   001146  C04F  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   738   00114A  50DF               	movf	indf2,w,c
   739   00114C  1450               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   740   00114E  0900               	iorlw	0
   741   001150  A4D8               	btfss	status,2,c
   742   001152  EFAD  F008         	goto	u511
   743   001156  EFAF  F008         	goto	u510
   744   00115A                     u511:
   745   00115A  EFB6  F008         	goto	l406
   746   00115E                     u510:
   747   00115E                     
   748                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 426:             p_pin_config->logic = LOGIC_ON;
   749   00115E  504D               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   750   001160  6ED9               	movwf	fsr2l,c
   751   001162  6ADA               	clrf	fsr2h,c
   752   001164  0E03               	movlw	3
   753   001166  26D9               	addwf	fsr2l,f,c
   754   001168  0E01               	movlw	1
   755   00116A  6EDF               	movwf	indf2,c
   756   00116C                     l406:
   757   00116C  0012               	return		;funcret
   758   00116E                     __end_of_gpio_pin_toggle_logic:
   759                           	callstack 0
   760                           
   761 ;; *************** function _calculate_step_counter *****************
   762 ;; Defined at:
   763 ;;		line 29 in file "_APP/application.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text4
   791   001552                     __ptext4:
   792                           	callstack 0
   793   001552                     _calculate_step_counter:
   794                           	callstack 30
   795   001552                     
   796                           ;_APP/application.c: 31:     program_step_counter++;
   797   001552  0E01               	movlw	1
   798   001554  2645               	addwf	_program_step_counter^0,f,c
   799   001556  0E00               	movlw	0
   800   001558  2246               	addwfc	(_program_step_counter+1)^0,f,c
   801   00155A  2247               	addwfc	(_program_step_counter+2)^0,f,c
   802   00155C  2248               	addwfc	(_program_step_counter+3)^0,f,c
   803                           
   804                           ;_APP/application.c: 32:     if (0xFFFFFFFE == program_step_counter)
   805   00155E  0EFE               	movlw	254
   806   001560  1845               	xorwf	_program_step_counter^0,w,c
   807   001562  E10A               	bnz	u541
   808   001564  2846               	incf	(_program_step_counter+1)^0,w,c
   809   001566  E108               	bnz	u541
   810   001568  2847               	incf	(_program_step_counter+2)^0,w,c
   811   00156A  E106               	bnz	u541
   812   00156C  2848               	incf	(_program_step_counter+3)^0,w,c
   813   00156E  A4D8               	btfss	status,2,c
   814   001570  EFBC  F00A         	goto	u541
   815   001574  EFBE  F00A         	goto	u540
   816   001578                     u541:
   817   001578  EFC6  F00A         	goto	l66
   818   00157C                     u540:
   819   00157C                     
   820                           ;_APP/application.c: 33:     {;_APP/application.c: 34:         program_step_counter = 0;
   821   00157C  0E00               	movlw	0
   822   00157E  6E45               	movwf	_program_step_counter^0,c
   823   001580  0E00               	movlw	0
   824   001582  6E46               	movwf	(_program_step_counter+1)^0,c
   825   001584  0E00               	movlw	0
   826   001586  6E47               	movwf	(_program_step_counter+2)^0,c
   827   001588  0E00               	movlw	0
   828   00158A  6E48               	movwf	(_program_step_counter+3)^0,c
   829   00158C                     l66:
   830   00158C  0012               	return		;funcret
   831   00158E                     __end_of_calculate_step_counter:
   832                           	callstack 0
   833                           
   834 ;; *************** function _app_init *****************
   835 ;; Defined at:
   836 ;;		line 40 in file "_APP/application.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 3
   857 ;; This function calls:
   858 ;;		_relay_init
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text5
   865   00165C                     __ptext5:
   866                           	callstack 0
   867   00165C                     _app_init:
   868                           	callstack 27
   869   00165C                     
   870                           ;_APP/application.c: 44:     relay_init(&relay_1);
   871   00165C  0E2C               	movlw	low _relay_1
   872   00165E  6E56               	movwf	relay_init@p_relay^0,c
   873   001660  ECE2  F00A         	call	_relay_init	;wreg free
   874                           
   875                           ;_APP/application.c: 45:     relay_init(&relay_2);
   876   001664  0E26               	movlw	low _relay_2
   877   001666  6E56               	movwf	relay_init@p_relay^0,c
   878   001668  ECE2  F00A         	call	_relay_init	;wreg free
   879   00166C  0012               	return		;funcret
   880   00166E                     __end_of_app_init:
   881                           	callstack 0
   882                           
   883 ;; *************** function _relay_init *****************
   884 ;; Defined at:
   885 ;;		line 5 in file "_HAL/Drivers/relay/relay.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  p_relay         1    9[COMRAM] PTR struct .
   888 ;;		 -> relay_2(6), relay_1(6), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      enum E2804
   893 ;; Registers used:
   894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 2
   907 ;; This function calls:
   908 ;;		_gpio_pin_direction_initialize
   909 ;;		_gpio_pin_write_logic
   910 ;; This function is called by:
   911 ;;		_app_init
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text6
   916   0015C4                     __ptext6:
   917                           	callstack 0
   918   0015C4                     _relay_init:
   919                           	callstack 27
   920   0015C4                     
   921                           ;_HAL/Drivers/relay/relay.c: 5: std_return relay_init(relay_t * p_relay);_HAL/Drivers/re
      +                          lay/relay.c: 6: {;_HAL/Drivers/relay/relay.c: 7:     if(((void*)0) == p_relay)
   922   0015C4  5056               	movf	relay_init@p_relay^0,w,c
   923   0015C6  A4D8               	btfss	status,2,c
   924   0015C8  EFE8  F00A         	goto	u521
   925   0015CC  EFEA  F00A         	goto	u520
   926   0015D0                     u521:
   927   0015D0  EFEC  F00A         	goto	l1834
   928   0015D4                     u520:
   929   0015D4  EFFB  F00A         	goto	l237
   930   0015D8                     l1834:
   931                           
   932                           ;_HAL/Drivers/relay/relay.c: 12:     {;_HAL/Drivers/relay/relay.c: 20:         gpio_pin_
      +                          direction_initialize(&p_relay->relay_pin);
   933   0015D8  C056  F052         	movff	relay_init@p_relay,gpio_pin_direction_initialize@p_pin_config
   934   0015DC  EC22  F00A         	call	_gpio_pin_direction_initialize	;wreg free
   935                           
   936                           ;_HAL/Drivers/relay/relay.c: 21:         gpio_pin_write_logic(&p_relay->relay_pin,p_rela
      +                          y->relay_pin.logic);
   937   0015E0  C056  F052         	movff	relay_init@p_relay,gpio_pin_write_logic@p_pin_config
   938   0015E4  5056               	movf	relay_init@p_relay^0,w,c
   939   0015E6  6ED9               	movwf	fsr2l,c
   940   0015E8  6ADA               	clrf	fsr2h,c
   941   0015EA  0E03               	movlw	3
   942   0015EC  26D9               	addwf	fsr2l,f,c
   943   0015EE  50DF               	movf	indf2,w,c
   944   0015F0  6E53               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   945   0015F2  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
   946   0015F6                     l237:
   947   0015F6  0012               	return		;funcret
   948   0015F8                     __end_of_relay_init:
   949                           	callstack 0
   950                           
   951 ;; *************** function _gpio_pin_write_logic *****************
   952 ;; Defined at:
   953 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  p_pin_config    1    5[COMRAM] PTR struct .
   956 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), relay_2(6), relay_1(6), 
   957 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      enum E2804
   962 ;; Registers used:
   963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        4 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 1
   976 ;; This function calls:
   977 ;;		_clear_bit_uint8
   978 ;;		_set_bit_uint8
   979 ;; This function is called by:
   980 ;;		_relay_init
   981 ;;		_led_on_off
   982 ;;		_relay_on_off
   983 ;;		_gpio_pin_initialize
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text7
   988   00116E                     __ptext7:
   989                           	callstack 0
   990   00116E                     _gpio_pin_write_logic:
   991                           	callstack 27
   992   00116E                     
   993                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
   994   00116E  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   995   001170  B4D8               	btfsc	status,2,c
   996   001172  EFBD  F008         	goto	u451
   997   001176  EFBF  F008         	goto	u450
   998   00117A                     u451:
   999   00117A  EF2F  F009         	goto	l354
  1000   00117E                     u450:
  1001   00117E  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1002   001180  6ED9               	movwf	fsr2l,c
  1003   001182  6ADA               	clrf	fsr2h,c
  1004   001184  0E05               	movlw	5
  1005   001186  60DF               	cpfslt	indf2,c
  1006   001188  EFC8  F008         	goto	u461
  1007   00118C  EFCA  F008         	goto	u460
  1008   001190                     u461:
  1009   001190  EF2F  F009         	goto	l354
  1010   001194                     u460:
  1011   001194  0453               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1012   001196  B4D8               	btfsc	status,2,c
  1013   001198  EFD0  F008         	goto	u471
  1014   00119C  EFD2  F008         	goto	u470
  1015   0011A0                     u471:
  1016   0011A0  EF1A  F009         	goto	l1782
  1017   0011A4                     u470:
  1018   0011A4  5053               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1019   0011A6  B4D8               	btfsc	status,2,c
  1020   0011A8  EFD8  F008         	goto	u481
  1021   0011AC  EFDA  F008         	goto	u480
  1022   0011B0                     u481:
  1023   0011B0  EF1A  F009         	goto	l1782
  1024   0011B4                     u480:
  1025   0011B4  EF2F  F009         	goto	l354
  1026   0011B8                     l1770:
  1027                           
  1028                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
  1029   0011B8  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1030   0011BA  6ED9               	movwf	fsr2l,c
  1031   0011BC  6ADA               	clrf	fsr2h,c
  1032   0011BE  0E03               	movlw	3
  1033   0011C0  26D9               	addwf	fsr2l,f,c
  1034   0011C2  C053  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1035   0011C6                     
  1036                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1037   0011C6  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1038   0011C8  6ED9               	movwf	fsr2l,c
  1039   0011CA  6ADA               	clrf	fsr2h,c
  1040   0011CC  50DF               	movf	indf2,w,c
  1041   0011CE  0D02               	mullw	2
  1042   0011D0  50F3               	movf	243,w,c
  1043   0011D2  0F01               	addlw	low _LAT_REG_ADD_arr
  1044   0011D4  6ED9               	movwf	fsr2l,c
  1045   0011D6  6ADA               	clrf	fsr2h,c
  1046   0011D8  CFDE F04D          	movff	postinc2,set_bit_uint8@p_reg
  1047   0011DC  CFDD F04E          	movff	postdec2,set_bit_uint8@p_reg+1
  1048   0011E0  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1049   0011E2  6ED9               	movwf	fsr2l,c
  1050   0011E4  6ADA               	clrf	fsr2h,c
  1051   0011E6  0E01               	movlw	1
  1052   0011E8  26D9               	addwf	fsr2l,f,c
  1053   0011EA  50DF               	movf	indf2,w,c
  1054   0011EC  6E4F               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1055   0011EE  EC30  F009         	call	_set_bit_uint8	;wreg free
  1056                           
  1057                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  1058   0011F2  EF2F  F009         	goto	l354
  1059   0011F6                     l1774:
  1060                           
  1061                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  1062   0011F6  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1063   0011F8  6ED9               	movwf	fsr2l,c
  1064   0011FA  6ADA               	clrf	fsr2h,c
  1065   0011FC  0E03               	movlw	3
  1066   0011FE  26D9               	addwf	fsr2l,f,c
  1067   001200  C053  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1068   001204                     
  1069                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1070   001204  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1071   001206  6ED9               	movwf	fsr2l,c
  1072   001208  6ADA               	clrf	fsr2h,c
  1073   00120A  50DF               	movf	indf2,w,c
  1074   00120C  0D02               	mullw	2
  1075   00120E  50F3               	movf	243,w,c
  1076   001210  0F01               	addlw	low _LAT_REG_ADD_arr
  1077   001212  6ED9               	movwf	fsr2l,c
  1078   001214  6ADA               	clrf	fsr2h,c
  1079   001216  CFDE F04D          	movff	postinc2,clear_bit_uint8@p_reg
  1080   00121A  CFDD F04E          	movff	postdec2,clear_bit_uint8@p_reg+1
  1081   00121E  5052               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1082   001220  6ED9               	movwf	fsr2l,c
  1083   001222  6ADA               	clrf	fsr2h,c
  1084   001224  0E01               	movlw	1
  1085   001226  26D9               	addwf	fsr2l,f,c
  1086   001228  50DF               	movf	indf2,w,c
  1087   00122A  6E4F               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1088   00122C  ECA9  F009         	call	_clear_bit_uint8	;wreg free
  1089                           
  1090                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  1091   001230  EF2F  F009         	goto	l354
  1092   001234                     l1782:
  1093   001234  5053               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1094   001236  6E54               	movwf	??_gpio_pin_write_logic^0,c
  1095   001238  6A55               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104   00123A  5055               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1105   00123C  0A00               	xorlw	0	; case 0
  1106   00123E  B4D8               	btfsc	status,2,c
  1107   001240  EF24  F009         	goto	l2004
  1108   001244  EF2F  F009         	goto	l354
  1109   001248                     l2004:
  1110                           
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 2, Range of values is 0 to 1
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte            7     4 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117   001248  5054               	movf	??_gpio_pin_write_logic^0,w,c
  1118   00124A  0A00               	xorlw	0	; case 0
  1119   00124C  B4D8               	btfsc	status,2,c
  1120   00124E  EFFB  F008         	goto	l1774
  1121   001252  0A01               	xorlw	1	; case 1
  1122   001254  B4D8               	btfsc	status,2,c
  1123   001256  EFDC  F008         	goto	l1770
  1124   00125A  EF2F  F009         	goto	l354
  1125   00125E                     l354:
  1126   00125E  0012               	return		;funcret
  1127   001260                     __end_of_gpio_pin_write_logic:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _gpio_pin_direction_initialize *****************
  1131 ;; Defined at:
  1132 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1135 ;;		 -> led_init@led_pin(5), relay_2$relay_pin(5), relay_2(6), relay_1$relay_pin(5), 
  1136 ;;		 -> relay_1(6), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      enum E2804
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1148 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 1
  1155 ;; This function calls:
  1156 ;;		_clear_bit_uint8
  1157 ;;		_set_bit_uint8
  1158 ;; This function is called by:
  1159 ;;		_relay_init
  1160 ;;		_push_button_init
  1161 ;;		_gpio_pin_initialize
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text8
  1166   001444                     __ptext8:
  1167                           	callstack 0
  1168   001444                     _gpio_pin_direction_initialize:
  1169                           	callstack 27
  1170   001444                     
  1171                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  1172   001444  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1173   001446  B4D8               	btfsc	status,2,c
  1174   001448  EF28  F00A         	goto	u431
  1175   00144C  EF2A  F00A         	goto	u430
  1176   001450                     u431:
  1177   001450  EF81  F00A         	goto	l342
  1178   001454                     u430:
  1179   001454  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1180   001456  6ED9               	movwf	fsr2l,c
  1181   001458  6ADA               	clrf	fsr2h,c
  1182   00145A  0E04               	movlw	4
  1183   00145C  64DF               	cpfsgt	indf2,c
  1184   00145E  EF33  F00A         	goto	u441
  1185   001462  EF35  F00A         	goto	u440
  1186   001466                     u441:
  1187   001466  EF67  F00A         	goto	l1754
  1188   00146A                     u440:
  1189   00146A  EF81  F00A         	goto	l342
  1190   00146E                     l1746:
  1191                           
  1192                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1193   00146E  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1194   001470  6ED9               	movwf	fsr2l,c
  1195   001472  6ADA               	clrf	fsr2h,c
  1196   001474  50DF               	movf	indf2,w,c
  1197   001476  0D02               	mullw	2
  1198   001478  50F3               	movf	243,w,c
  1199   00147A  0F15               	addlw	low _TRIS_REG_ADD_arr
  1200   00147C  6ED9               	movwf	fsr2l,c
  1201   00147E  6ADA               	clrf	fsr2h,c
  1202   001480  CFDE F04D          	movff	postinc2,clear_bit_uint8@p_reg
  1203   001484  CFDD F04E          	movff	postdec2,clear_bit_uint8@p_reg+1
  1204   001488  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1205   00148A  6ED9               	movwf	fsr2l,c
  1206   00148C  6ADA               	clrf	fsr2h,c
  1207   00148E  0E01               	movlw	1
  1208   001490  26D9               	addwf	fsr2l,f,c
  1209   001492  50DF               	movf	indf2,w,c
  1210   001494  6E4F               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1211   001496  ECA9  F009         	call	_clear_bit_uint8	;wreg free
  1212                           
  1213                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  1214   00149A  EF81  F00A         	goto	l342
  1215   00149E                     l1748:
  1216                           
  1217                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1218   00149E  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1219   0014A0  6ED9               	movwf	fsr2l,c
  1220   0014A2  6ADA               	clrf	fsr2h,c
  1221   0014A4  50DF               	movf	indf2,w,c
  1222   0014A6  0D02               	mullw	2
  1223   0014A8  50F3               	movf	243,w,c
  1224   0014AA  0F15               	addlw	low _TRIS_REG_ADD_arr
  1225   0014AC  6ED9               	movwf	fsr2l,c
  1226   0014AE  6ADA               	clrf	fsr2h,c
  1227   0014B0  CFDE F04D          	movff	postinc2,set_bit_uint8@p_reg
  1228   0014B4  CFDD F04E          	movff	postdec2,set_bit_uint8@p_reg+1
  1229   0014B8  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1230   0014BA  6ED9               	movwf	fsr2l,c
  1231   0014BC  6ADA               	clrf	fsr2h,c
  1232   0014BE  0E01               	movlw	1
  1233   0014C0  26D9               	addwf	fsr2l,f,c
  1234   0014C2  50DF               	movf	indf2,w,c
  1235   0014C4  6E4F               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1236   0014C6  EC30  F009         	call	_set_bit_uint8	;wreg free
  1237                           
  1238                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  1239   0014CA  EF81  F00A         	goto	l342
  1240   0014CE                     l1754:
  1241   0014CE  5052               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1242   0014D0  6ED9               	movwf	fsr2l,c
  1243   0014D2  6ADA               	clrf	fsr2h,c
  1244   0014D4  0E02               	movlw	2
  1245   0014D6  26D9               	addwf	fsr2l,f,c
  1246   0014D8  50DF               	movf	indf2,w,c
  1247   0014DA  6E53               	movwf	??_gpio_pin_direction_initialize^0,c
  1248   0014DC  6A54               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1249                           
  1250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 1, Range of values is 0 to 0
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte            4     3 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257   0014DE  5054               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1258   0014E0  0A00               	xorlw	0	; case 0
  1259   0014E2  B4D8               	btfsc	status,2,c
  1260   0014E4  EF76  F00A         	goto	l2006
  1261   0014E8  EF81  F00A         	goto	l342
  1262   0014EC                     l2006:
  1263                           
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 2, Range of values is 0 to 1
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte            7     4 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270   0014EC  5053               	movf	??_gpio_pin_direction_initialize^0,w,c
  1271   0014EE  0A00               	xorlw	0	; case 0
  1272   0014F0  B4D8               	btfsc	status,2,c
  1273   0014F2  EF37  F00A         	goto	l1746
  1274   0014F6  0A01               	xorlw	1	; case 1
  1275   0014F8  B4D8               	btfsc	status,2,c
  1276   0014FA  EF4F  F00A         	goto	l1748
  1277   0014FE  EF81  F00A         	goto	l342
  1278   001502                     l342:
  1279   001502  0012               	return		;funcret
  1280   001504                     __end_of_gpio_pin_direction_initialize:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _set_bit_uint8 *****************
  1284 ;; Defined at:
  1285 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1288 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1289 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1290 ;;		 -> TRISB(1), TRISA(1), 
  1291 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      enum E2804
  1296 ;; Registers used:
  1297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;Total ram usage:        5 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_gpio_pin_direction_initialize
  1313 ;;		_gpio_pin_write_logic
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text9
  1318   001260                     __ptext9:
  1319                           	callstack 0
  1320   001260                     _set_bit_uint8:
  1321                           	callstack 27
  1322   001260                     
  1323                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1324   001260  504D               	movf	set_bit_uint8@p_reg^0,w,c
  1325   001262  104E               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1326   001264  A4D8               	btfss	status,2,c
  1327   001266  EF37  F009         	goto	u411
  1328   00126A  EF39  F009         	goto	u410
  1329   00126E                     u411:
  1330   00126E  EF7B  F009         	goto	l1702
  1331   001272                     u410:
  1332   001272  EFA8  F009         	goto	l292
  1333   001276                     l1682:
  1334                           
  1335                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1336   001276  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1337   00127A  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1338   00127E  0E00               	movlw	0
  1339   001280  80DB               	bsf	plusw2,0,c
  1340                           
  1341                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1342   001282  EFA8  F009         	goto	l292
  1343   001286                     l1684:
  1344                           
  1345                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1346   001286  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1347   00128A  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1348   00128E  0E00               	movlw	0
  1349   001290  82DB               	bsf	plusw2,1,c
  1350                           
  1351                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1352   001292  EFA8  F009         	goto	l292
  1353   001296                     l1686:
  1354                           
  1355                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1356   001296  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1357   00129A  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1358   00129E  0E00               	movlw	0
  1359   0012A0  84DB               	bsf	plusw2,2,c
  1360                           
  1361                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1362   0012A2  EFA8  F009         	goto	l292
  1363   0012A6                     l1688:
  1364                           
  1365                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1366   0012A6  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1367   0012AA  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1368   0012AE  0E00               	movlw	0
  1369   0012B0  86DB               	bsf	plusw2,3,c
  1370                           
  1371                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1372   0012B2  EFA8  F009         	goto	l292
  1373   0012B6                     l1690:
  1374                           
  1375                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1376   0012B6  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1377   0012BA  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1378   0012BE  0E00               	movlw	0
  1379   0012C0  88DB               	bsf	plusw2,4,c
  1380                           
  1381                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1382   0012C2  EFA8  F009         	goto	l292
  1383   0012C6                     l1692:
  1384                           
  1385                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1386   0012C6  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1387   0012CA  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1388   0012CE  0E00               	movlw	0
  1389   0012D0  8ADB               	bsf	plusw2,5,c
  1390                           
  1391                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1392   0012D2  EFA8  F009         	goto	l292
  1393   0012D6                     l1694:
  1394                           
  1395                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1396   0012D6  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1397   0012DA  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1398   0012DE  0E00               	movlw	0
  1399   0012E0  8CDB               	bsf	plusw2,6,c
  1400                           
  1401                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1402   0012E2  EFA8  F009         	goto	l292
  1403   0012E6                     l1696:
  1404                           
  1405                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1406   0012E6  C04D  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1407   0012EA  C04E  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1408   0012EE  0E00               	movlw	0
  1409   0012F0  8EDB               	bsf	plusw2,7,c
  1410                           
  1411                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1412   0012F2  EFA8  F009         	goto	l292
  1413   0012F6                     l1702:
  1414   0012F6  504F               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1415   0012F8  6E50               	movwf	??_set_bit_uint8^0,c
  1416   0012FA  6A51               	clrf	(??_set_bit_uint8+1)^0,c
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "simple"
  1420                           ; Number of cases is 1, Range of values is 0 to 0
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte            4     3 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425   0012FC  5051               	movf	(??_set_bit_uint8+1)^0,w,c
  1426   0012FE  0A00               	xorlw	0	; case 0
  1427   001300  B4D8               	btfsc	status,2,c
  1428   001302  EF85  F009         	goto	l2008
  1429   001306  EFA8  F009         	goto	l292
  1430   00130A                     l2008:
  1431                           
  1432                           ; Switch size 1, requested type "simple"
  1433                           ; Number of cases is 8, Range of values is 0 to 7
  1434                           ; switch strategies available:
  1435                           ; Name         Instructions Cycles
  1436                           ; simple_byte           25    13 (average)
  1437                           ;	Chosen strategy is simple_byte
  1438   00130A  5050               	movf	??_set_bit_uint8^0,w,c
  1439   00130C  0A00               	xorlw	0	; case 0
  1440   00130E  B4D8               	btfsc	status,2,c
  1441   001310  EF3B  F009         	goto	l1682
  1442   001314  0A01               	xorlw	1	; case 1
  1443   001316  B4D8               	btfsc	status,2,c
  1444   001318  EF43  F009         	goto	l1684
  1445   00131C  0A03               	xorlw	3	; case 2
  1446   00131E  B4D8               	btfsc	status,2,c
  1447   001320  EF4B  F009         	goto	l1686
  1448   001324  0A01               	xorlw	1	; case 3
  1449   001326  B4D8               	btfsc	status,2,c
  1450   001328  EF53  F009         	goto	l1688
  1451   00132C  0A07               	xorlw	7	; case 4
  1452   00132E  B4D8               	btfsc	status,2,c
  1453   001330  EF5B  F009         	goto	l1690
  1454   001334  0A01               	xorlw	1	; case 5
  1455   001336  B4D8               	btfsc	status,2,c
  1456   001338  EF63  F009         	goto	l1692
  1457   00133C  0A03               	xorlw	3	; case 6
  1458   00133E  B4D8               	btfsc	status,2,c
  1459   001340  EF6B  F009         	goto	l1694
  1460   001344  0A01               	xorlw	1	; case 7
  1461   001346  B4D8               	btfsc	status,2,c
  1462   001348  EF73  F009         	goto	l1696
  1463   00134C  EFA8  F009         	goto	l292
  1464   001350                     l292:
  1465   001350  0012               	return		;funcret
  1466   001352                     __end_of_set_bit_uint8:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _clear_bit_uint8 *****************
  1470 ;; Defined at:
  1471 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1474 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1475 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1476 ;;		 -> TRISB(1), TRISA(1), 
  1477 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      enum E2804
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        5 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_gpio_pin_direction_initialize
  1499 ;;		_gpio_pin_write_logic
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text10
  1504   001352                     __ptext10:
  1505                           	callstack 0
  1506   001352                     _clear_bit_uint8:
  1507                           	callstack 27
  1508   001352                     
  1509                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1510   001352  504D               	movf	clear_bit_uint8@p_reg^0,w,c
  1511   001354  104E               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1512   001356  A4D8               	btfss	status,2,c
  1513   001358  EFB0  F009         	goto	u421
  1514   00135C  EFB2  F009         	goto	u420
  1515   001360                     u421:
  1516   001360  EFF4  F009         	goto	l1734
  1517   001364                     u420:
  1518   001364  EF21  F00A         	goto	l308
  1519   001368                     l1714:
  1520                           
  1521                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  1522   001368  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1523   00136C  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1524   001370  0EFE               	movlw	254
  1525   001372  16DF               	andwf	indf2,f,c
  1526                           
  1527                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1528   001374  EF21  F00A         	goto	l308
  1529   001378                     l1716:
  1530                           
  1531                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  1532   001378  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1533   00137C  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1534   001380  0EFD               	movlw	253
  1535   001382  16DF               	andwf	indf2,f,c
  1536                           
  1537                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  1538   001384  EF21  F00A         	goto	l308
  1539   001388                     l1718:
  1540                           
  1541                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  1542   001388  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1543   00138C  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1544   001390  0EFB               	movlw	251
  1545   001392  16DF               	andwf	indf2,f,c
  1546                           
  1547                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  1548   001394  EF21  F00A         	goto	l308
  1549   001398                     l1720:
  1550                           
  1551                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  1552   001398  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1553   00139C  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1554   0013A0  0EF7               	movlw	247
  1555   0013A2  16DF               	andwf	indf2,f,c
  1556                           
  1557                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  1558   0013A4  EF21  F00A         	goto	l308
  1559   0013A8                     l1722:
  1560                           
  1561                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  1562   0013A8  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1563   0013AC  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1564   0013B0  0EEF               	movlw	239
  1565   0013B2  16DF               	andwf	indf2,f,c
  1566                           
  1567                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  1568   0013B4  EF21  F00A         	goto	l308
  1569   0013B8                     l1724:
  1570                           
  1571                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  1572   0013B8  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1573   0013BC  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1574   0013C0  0EDF               	movlw	223
  1575   0013C2  16DF               	andwf	indf2,f,c
  1576                           
  1577                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  1578   0013C4  EF21  F00A         	goto	l308
  1579   0013C8                     l1726:
  1580                           
  1581                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  1582   0013C8  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1583   0013CC  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1584   0013D0  0EBF               	movlw	191
  1585   0013D2  16DF               	andwf	indf2,f,c
  1586                           
  1587                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  1588   0013D4  EF21  F00A         	goto	l308
  1589   0013D8                     l1728:
  1590                           
  1591                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  1592   0013D8  C04D  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1593   0013DC  C04E  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1594   0013E0  0E7F               	movlw	127
  1595   0013E2  16DF               	andwf	indf2,f,c
  1596                           
  1597                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  1598   0013E4  EF21  F00A         	goto	l308
  1599   0013E8                     l1734:
  1600   0013E8  504F               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1601   0013EA  6E50               	movwf	??_clear_bit_uint8^0,c
  1602   0013EC  6A51               	clrf	(??_clear_bit_uint8+1)^0,c
  1603                           
  1604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 1, Range of values is 0 to 0
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte            4     3 (average)
  1610                           ;	Chosen strategy is simple_byte
  1611   0013EE  5051               	movf	(??_clear_bit_uint8+1)^0,w,c
  1612   0013F0  0A00               	xorlw	0	; case 0
  1613   0013F2  B4D8               	btfsc	status,2,c
  1614   0013F4  EFFE  F009         	goto	l2010
  1615   0013F8  EF21  F00A         	goto	l308
  1616   0013FC                     l2010:
  1617                           
  1618                           ; Switch size 1, requested type "simple"
  1619                           ; Number of cases is 8, Range of values is 0 to 7
  1620                           ; switch strategies available:
  1621                           ; Name         Instructions Cycles
  1622                           ; simple_byte           25    13 (average)
  1623                           ;	Chosen strategy is simple_byte
  1624   0013FC  5050               	movf	??_clear_bit_uint8^0,w,c
  1625   0013FE  0A00               	xorlw	0	; case 0
  1626   001400  B4D8               	btfsc	status,2,c
  1627   001402  EFB4  F009         	goto	l1714
  1628   001406  0A01               	xorlw	1	; case 1
  1629   001408  B4D8               	btfsc	status,2,c
  1630   00140A  EFBC  F009         	goto	l1716
  1631   00140E  0A03               	xorlw	3	; case 2
  1632   001410  B4D8               	btfsc	status,2,c
  1633   001412  EFC4  F009         	goto	l1718
  1634   001416  0A01               	xorlw	1	; case 3
  1635   001418  B4D8               	btfsc	status,2,c
  1636   00141A  EFCC  F009         	goto	l1720
  1637   00141E  0A07               	xorlw	7	; case 4
  1638   001420  B4D8               	btfsc	status,2,c
  1639   001422  EFD4  F009         	goto	l1722
  1640   001426  0A01               	xorlw	1	; case 5
  1641   001428  B4D8               	btfsc	status,2,c
  1642   00142A  EFDC  F009         	goto	l1724
  1643   00142E  0A03               	xorlw	3	; case 6
  1644   001430  B4D8               	btfsc	status,2,c
  1645   001432  EFE4  F009         	goto	l1726
  1646   001436  0A01               	xorlw	1	; case 7
  1647   001438  B4D8               	btfsc	status,2,c
  1648   00143A  EFEC  F009         	goto	l1728
  1649   00143E  EF21  F00A         	goto	l308
  1650   001442                     l308:
  1651   001442  0012               	return		;funcret
  1652   001444                     __end_of_clear_bit_uint8:
  1653                           	callstack 0
  1654                           
  1655                           	psect	smallconst
  1656   001000                     __psmallconst:
  1657                           	callstack 0
  1658   001000  00                 	db	0
  1659   001001  00                 	db	0	; dummy byte at the end
  1660   000000                     
  1661                           	psect	rparam
  1662   000000                     
  1663                           	psect	config
  1664                           
  1665                           ; Padding undefined space
  1666   300000                     	org	3145728
  1667   300000  FF                 	db	255
  1668                           
  1669                           ;Config register CONFIG1H @ 0x300001
  1670                           ;	Oscillator Selection bits
  1671                           ;	OSC = HS, HS oscillator
  1672                           ;	Fail-Safe Clock Monitor Enable bit
  1673                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1674                           ;	Internal/External Oscillator Switchover bit
  1675                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1676   300001                     	org	3145729
  1677   300001  02                 	db	2
  1678                           
  1679                           ;Config register CONFIG2L @ 0x300002
  1680                           ;	Power-up Timer Enable bit
  1681                           ;	PWRT = OFF, PWRT disabled
  1682                           ;	Brown-out Reset Enable bits
  1683                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1684                           ;	Brown Out Reset Voltage bits
  1685                           ;	BORV = 1, 
  1686   300002                     	org	3145730
  1687   300002  09                 	db	9
  1688                           
  1689                           ;Config register CONFIG2H @ 0x300003
  1690                           ;	Watchdog Timer Enable bit
  1691                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1692                           ;	Watchdog Timer Postscale Select bits
  1693                           ;	WDTPS = 32768, 1:32768
  1694   300003                     	org	3145731
  1695   300003  1E                 	db	30
  1696                           
  1697                           ; Padding undefined space
  1698   300004                     	org	3145732
  1699   300004  FF                 	db	255
  1700                           
  1701                           ;Config register CONFIG3H @ 0x300005
  1702                           ;	CCP2 MUX bit
  1703                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1704                           ;	PORTB A/D Enable bit
  1705                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1706                           ;	Low-Power Timer1 Oscillator Enable bit
  1707                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1708                           ;	MCLR Pin Enable bit
  1709                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1710   300005                     	org	3145733
  1711   300005  81                 	db	129
  1712                           
  1713                           ;Config register CONFIG4L @ 0x300006
  1714                           ;	Stack Full/Underflow Reset Enable bit
  1715                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1716                           ;	Single-Supply ICSP Enable bit
  1717                           ;	LVP = OFF, Single-Supply ICSP disabled
  1718                           ;	Extended Instruction Set Enable bit
  1719                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1720                           ;	Background Debugger Enable bit
  1721                           ;	DEBUG = 0x1, unprogrammed default
  1722   300006                     	org	3145734
  1723   300006  81                 	db	129
  1724                           
  1725                           ; Padding undefined space
  1726   300007                     	org	3145735
  1727   300007  FF                 	db	255
  1728                           
  1729                           ;Config register CONFIG5L @ 0x300008
  1730                           ;	Code Protection bit
  1731                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1732                           ;	Code Protection bit
  1733                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1734                           ;	Code Protection bit
  1735                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1736                           ;	Code Protection bit
  1737                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1738   300008                     	org	3145736
  1739   300008  0F                 	db	15
  1740                           
  1741                           ;Config register CONFIG5H @ 0x300009
  1742                           ;	Boot Block Code Protection bit
  1743                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1744                           ;	Data EEPROM Code Protection bit
  1745                           ;	CPD = OFF, Data EEPROM not code-protected
  1746   300009                     	org	3145737
  1747   300009  C0                 	db	192
  1748                           
  1749                           ;Config register CONFIG6L @ 0x30000A
  1750                           ;	Write Protection bit
  1751                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1752                           ;	Write Protection bit
  1753                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1754                           ;	Write Protection bit
  1755                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1756                           ;	Write Protection bit
  1757                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1758   30000A                     	org	3145738
  1759   30000A  0F                 	db	15
  1760                           
  1761                           ;Config register CONFIG6H @ 0x30000B
  1762                           ;	Configuration Register Write Protection bit
  1763                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1764                           ;	Boot Block Write Protection bit
  1765                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1766                           ;	Data EEPROM Write Protection bit
  1767                           ;	WRTD = OFF, Data EEPROM not write-protected
  1768   30000B                     	org	3145739
  1769   30000B  E0                 	db	224
  1770                           
  1771                           ;Config register CONFIG7L @ 0x30000C
  1772                           ;	Table Read Protection bit
  1773                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1774                           ;	Table Read Protection bit
  1775                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1776                           ;	Table Read Protection bit
  1777                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1778                           ;	Table Read Protection bit
  1779                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1780   30000C                     	org	3145740
  1781   30000C  0F                 	db	15
  1782                           
  1783                           ;Config register CONFIG7H @ 0x30000D
  1784                           ;	Boot Block Table Read Protection bit
  1785                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1786   30000D                     	org	3145741
  1787   30000D  40                 	db	64
  1788                           tosu	equ	0xFFF
  1789                           tosh	equ	0xFFE
  1790                           tosl	equ	0xFFD
  1791                           stkptr	equ	0xFFC
  1792                           pclatu	equ	0xFFB
  1793                           pclath	equ	0xFFA
  1794                           pcl	equ	0xFF9
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           indf0	equ	0xFEF
  1802                           postinc0	equ	0xFEE
  1803                           postdec0	equ	0xFED
  1804                           preinc0	equ	0xFEC
  1805                           plusw0	equ	0xFEB
  1806                           fsr0h	equ	0xFEA
  1807                           fsr0l	equ	0xFE9
  1808                           wreg	equ	0xFE8
  1809                           indf1	equ	0xFE7
  1810                           postinc1	equ	0xFE6
  1811                           postdec1	equ	0xFE5
  1812                           preinc1	equ	0xFE4
  1813                           plusw1	equ	0xFE3
  1814                           fsr1h	equ	0xFE2
  1815                           fsr1l	equ	0xFE1
  1816                           bsr	equ	0xFE0
  1817                           indf2	equ	0xFDF
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           preinc2	equ	0xFDC
  1821                           plusw2	equ	0xFDB
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        49
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10      86
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 6
		 -> led_init@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_1$relay_pin(COMRAM[5]), relay_2(COMRAM[6]), 
		 -> relay_2$relay_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 6
		 -> led_toggle@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 6
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    relay_init@p_relay	PTR struct . size(1) Largest target is 6
		 -> relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    relay_toggle@p_relay	PTR struct . size(1) Largest target is 6
		 -> relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _two_reverse_relay_5s->_relay_toggle
    _relay_toggle->_gpio_pin_toggle_logic
    _app_init->_relay_init
    _relay_init->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4591
                           _app_init
             _calculate_step_counter
               _two_reverse_relay_5s
 ---------------------------------------------------------------------------------
 (1) _two_reverse_relay_5s                                 2     2      0     751
                                              5 COMRAM     2     2      0
                       _relay_toggle
 ---------------------------------------------------------------------------------
 (2) _relay_toggle                                         1     0      1     751
                                              4 COMRAM     1     0      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_toggle_logic                                4     3      1     403
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _calculate_step_counter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    3840
                         _relay_init
 ---------------------------------------------------------------------------------
 (2) _relay_init                                           1     0      1    3840
                                              9 COMRAM     1     0      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 4     2      2    2094
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1506
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _relay_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
   _calculate_step_counter
   _two_reverse_relay_5s
     _relay_toggle
       _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A      56       1       67.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      39        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 19:26:18 2023

                                       l72 1550                                         l66 158C  
                                       l69 166C        gpio_pin_write_logic@d_logic_desired 0053  
                                      l251 1646                                        l308 1442  
                                      l237 15F6                                        l342 1502  
                                      l406 116C                                        l354 125E  
                                      l292 1350                                        u410 1272  
                                      u411 126E                                        u420 1364  
                                      u500 1116                                        u421 1360  
                                      u501 1112                                        u430 1454  
                                      u510 115E                                        u431 1450  
                                      u511 115A                                        u440 146A  
                                      u520 15D4                                        u441 1466  
                                      u521 15D0                                        u450 117E  
                                      u530 163A                                        u451 117A  
                                      u531 1636                                        u460 1194  
                                      u540 157C                                        u461 1190  
                                      u541 1578                                        u470 11A4  
                                      u471 11A0                                        u480 11B4  
                                      u481 11B0                                        u490 1012  
                                      u491 100E                                        u667 1516  
                                      u677 153C                                        wreg 0FE8  
                                     l2010 13FC                                       l2002 1074  
                                     l2004 1248                                       l2006 14EC  
                                     l2008 130A                                       l1702 12F6  
                                     l1720 1398                                       l1800 102E  
                                     l1722 13A8                                       l1714 1368  
                                     l1802 1036                                       l1724 13B8  
                                     l1716 1378                                       l1708 1352  
                                     l1740 1444                                       l1820 1128  
                                     l1804 103E                                       l1726 13C8  
                                     l1718 1388                                       l1734 13E8  
                                     l1742 1454                                       l1822 115E  
                                     l1806 1046                                       l1814 1056  
                                     l1728 13D8                                       l1760 116E  
                                     l1808 104E                                       l1816 10BA  
                                     l1690 12B6                                       l1682 1276  
                                     l1746 146E                                       l1754 14CE  
                                     l1770 11B8                                       l1762 117E  
                                     l1834 15D8                                       l1850 157C  
                                     l1818 1116                                       l1692 12C6  
                                     l1684 1286                                       l1676 1260  
                                     l1748 149E                                       l1772 11C6  
                                     l1764 1194                                       l1828 15C4  
                                     l1852 165C                                       l1844 163E  
                                     l1860 152A                                       l1694 12D6  
                                     l1686 1296                                       l1774 11F6  
                                     l1766 11A4                                       l1782 1234  
                                     l1838 162A                                       l1862 1532  
                                     l1854 1504                                       l1696 12E6  
                                     l1688 12A6                                       l1776 1204  
                                     l1848 1552                                       l1856 150C  
                                     l1794 1016                                       l1858 1522  
                                     l1796 101E                                       l1788 1002  
                                     l1980 1650                                       l1798 1026  
                                     l1976 1648                                       l1978 164C  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _LATD 0F8C  
                                     _LATE 0F8D                                       _main 1648  
                                     fsr2h 0FDA                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     prodl 0FF3                                       start 0000  
                             ___param_bank 0000                     ?_gpio_pin_toggle_logic 004D  
                     _gpio_pin_write_logic 116E                                      ?_main 004D  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                                      _PORTD 0F83  
                                    _PORTE 0F84                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                                    tablat 0FF5                            led_on_off@F2938 0037  
                                    plusw2 0FDB                                      status 0FD8  
           ?_gpio_pin_direction_initialize 0052                            __initialization 158E  
                             __end_of_main 165C                      ?_gpio_pin_write_logic 0052  
                                   ??_main 0057                              __activetblptr 0002  
                        relay_init@p_relay 0056                           __end_of_app_init 166E  
                                   clear_0 15B4                                     _pinpin 001F  
                                   isa$std 0001                              led_init@F2933 003C  
                             __pdataCOMRAM 0001                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                        relay_toggle@p_relay 0051  
                    __end_of_set_bit_uint8 1352                                 __accesstop 0080  
                  __end_of__initialization 15BA                              ___rparam_used 0001  
                   ??_gpio_pin_write_logic 0054                             __pcstackCOMRAM 004D  
                         _PORT_REG_ADD_arr 000B           gpio_pin_write_logic@p_pin_config 0052  
        gpio_pin_toggle_logic@p_pin_config 004D                    ??_gpio_pin_toggle_logic 004E  
                            ?_relay_toggle 0051                   ??_calculate_step_counter 004D  
                     _program_step_counter 0045                            led_toggle@F2942 0032  
                                ?_app_init 004D                            _LAT_REG_ADD_arr 0001  
                        ??_clear_bit_uint8 0050                             ??_relay_toggle 0052  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 1000                                    __pcinit 158E  
                                  __ramtop 1000                                    __ptext0 1648  
                                  __ptext1 1504                                    __ptext2 162A  
                                  __ptext3 1002                                    __ptext4 1552  
                                  __ptext5 165C                                    __ptext6 15C4  
                                  __ptext7 116E                                    __ptext8 1444  
                                  __ptext9 1260            ??_gpio_pin_direction_initialize 0053  
               clear_bit_uint8@d_IDX_BIT_X 004F                                    _relay_1 002C  
                                  _relay_2 0026                                 ??_app_init 0057  
                     end_of_initialization 15BA                                 _relay_init 15C4  
                            __Lmediumconst 0000                       clear_bit_uint8@p_reg 004D  
             __end_of_two_reverse_relay_5s 1552                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc2 0FDE                              __pidataCOMRAM 15F8  
            gpio_pin_toggle_logic@bit_mask 0050                        start_initialization 158E  
                     __end_of_relay_toggle 1648      __end_of_gpio_pin_direction_initialize 1504  
            _gpio_pin_direction_initialize 1444                     _calculate_step_counter 1552  
                           _button_1_state 0025                                ?_relay_init 0056  
                           _button_2_state 0024              __end_of_gpio_pin_toggle_logic 116E  
                          _clear_bit_uint8 1352                                __pbssCOMRAM 0032  
                     _two_reverse_relay_5s 1504                                __smallconst 1000  
                    ?_two_reverse_relay_5s 004D                              _set_bit_uint8 1260  
                                _rise_edge 0049                    __end_of_clear_bit_uint8 1444  
                              _btn_counter 0041            _btn_1_high_valid_state_previous 004A  
                           ?_set_bit_uint8 004D                                  copy_data0 15A2  
                                 __Hrparam 0000                                   __Lrparam 0000  
                             _relay_toggle 162A                     ??_two_reverse_relay_5s 0052  
                 set_bit_uint8@d_IDX_BIT_X 004F                    ?_calculate_step_counter 004D  
                                 __ptext10 1352                                   _app_init 165C  
                   _btn_1_high_valid_state 004B                               ??_relay_init 0057  
                                 isa$xinst 0000                            _program_counter 004C  
                         ?_clear_bit_uint8 004D                         set_bit_uint8@p_reg 004D  
           __end_of_calculate_step_counter 158E                         __end_of_relay_init 15F8  
                          ??_set_bit_uint8 0050               __end_of_gpio_pin_write_logic 1260  
gpio_pin_direction_initialize@p_pin_config 0052                      _gpio_pin_toggle_logic 1002  
                         _TRIS_REG_ADD_arr 0015  
