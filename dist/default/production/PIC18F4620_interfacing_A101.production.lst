

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 02:23:52 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 23/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4620 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   00214C                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _LAT_REG_ADD_arr
    86   00214C  89                 	db	137
    87   00214D  0F                 	db	15
    88   00214E  8A                 	db	138
    89   00214F  0F                 	db	15
    90   002150  8B                 	db	139
    91   002151  0F                 	db	15
    92   002152  8C                 	db	140
    93   002153  0F                 	db	15
    94   002154  8D                 	db	141
    95   002155  0F                 	db	15
    96                           
    97                           ;initializer for _PORT_REG_ADD_arr
    98   002156  80                 	db	128
    99   002157  0F                 	db	15
   100   002158  81                 	db	129
   101   002159  0F                 	db	15
   102   00215A  82                 	db	130
   103   00215B  0F                 	db	15
   104   00215C  83                 	db	131
   105   00215D  0F                 	db	15
   106   00215E  84                 	db	132
   107   00215F  0F                 	db	15
   108                           
   109                           ;initializer for _TRIS_REG_ADD_arr
   110   002160  92                 	db	146
   111   002161  0F                 	db	15
   112   002162  93                 	db	147
   113   002163  0F                 	db	15
   114   002164  94                 	db	148
   115   002165  0F                 	db	15
   116   002166  95                 	db	149
   117   002167  0F                 	db	15
   118   002168  96                 	db	150
   119   002169  0F                 	db	15
   120                           
   121                           ;initializer for __car_char_arr
   122   00216A  00                 	db	0
   123   00216B  0A                 	db	10
   124   00216C  0A                 	db	10
   125   00216D  0A                 	db	10
   126   00216E  00                 	db	0
   127   00216F  1F                 	db	31
   128   002170  11                 	db	17
   129   002171  0E                 	db	14
   130                           
   131                           	psect	idataBANK0
   132   001DEE                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for init_msg_lcd@F3293
   136   001DEE  20                 	db	32
   137   001DEF  20                 	db	32
   138   001DF0  20                 	db	32
   139   001DF1  20                 	db	32
   140   001DF2  20                 	db	32
   141   001DF3  20                 	db	32
   142   001DF4  20                 	db	32
   143   001DF5  20                 	db	32
   144   001DF6  20                 	db	32
   145   001DF7  20                 	db	32
   146   001DF8  20                 	db	32
   147   001DF9  20                 	db	32
   148   001DFA  20                 	db	32
   149   001DFB  20                 	db	32
   150   001DFC  20                 	db	32
   151   001DFD  20                 	db	32
   152   001DFE  00                 	db	0
   153                           
   154                           ;initializer for init_msg_lcd@F3289
   155   001DFF  20                 	db	32
   156   001E00  20                 	db	32
   157   001E01  20                 	db	32
   158   001E02  20                 	db	32
   159   001E03  20                 	db	32
   160   001E04  20                 	db	32
   161   001E05  20                 	db	32
   162   001E06  20                 	db	32
   163   001E07  20                 	db	32
   164   001E08  20                 	db	32
   165   001E09  20                 	db	32
   166   001E0A  20                 	db	32
   167   001E0B  20                 	db	32
   168   001E0C  20                 	db	32
   169   001E0D  20                 	db	32
   170   001E0E  20                 	db	32
   171   001E0F  00                 	db	0
   172                           
   173                           ;initializer for init_msg_lcd@F3285
   174   001E10  20                 	db	32
   175   001E11  20                 	db	32
   176   001E12  20                 	db	32
   177   001E13  20                 	db	32
   178   001E14  20                 	db	32
   179   001E15  20                 	db	32
   180   001E16  20                 	db	32
   181   001E17  20                 	db	32
   182   001E18  20                 	db	32
   183   001E19  20                 	db	32
   184   001E1A  20                 	db	32
   185   001E1B  20                 	db	32
   186   001E1C  20                 	db	32
   187   001E1D  20                 	db	32
   188   001E1E  20                 	db	32
   189   001E1F  20                 	db	32
   190   001E20  00                 	db	0
   191                           
   192                           ;initializer for _keypad_key_values_arr
   193   001E21  31                 	db	49
   194   001E22  32                 	db	50
   195   001E23  33                 	db	51
   196   001E24  41                 	db	65
   197   001E25  34                 	db	52
   198   001E26  35                 	db	53
   199   001E27  36                 	db	54
   200   001E28  42                 	db	66
   201   001E29  37                 	db	55
   202   001E2A  38                 	db	56
   203   001E2B  39                 	db	57
   204   001E2C  43                 	db	67
   205   001E2D  2A                 	db	42
   206   001E2E  30                 	db	48
   207   001E2F  23                 	db	35
   208   001E30  44                 	db	68
   209                           
   210                           ;initializer for _lcd_2_8bit
   211   001E31  02                 	db	2
   212   001E32  06                 	db	6
   213   001E33  00                 	db	0
   214   001E34  00                 	db	0
   215   001E35  00                 	db	0
   216   001E36  02                 	db	2
   217   001E37  07                 	db	7
   218   001E38  00                 	db	0
   219   001E39  00                 	db	0
   220   001E3A  00                 	db	0
   221   001E3B  03                 	db	3
   222   001E3C  00                 	db	0
   223   001E3D  00                 	db	0
   224   001E3E  00                 	db	0
   225   001E3F  00                 	db	0
   226   001E40  03                 	db	3
   227   001E41  01                 	db	1
   228   001E42  00                 	db	0
   229   001E43  00                 	db	0
   230   001E44  00                 	db	0
   231   001E45  03                 	db	3
   232   001E46  02                 	db	2
   233   001E47  00                 	db	0
   234   001E48  00                 	db	0
   235   001E49  00                 	db	0
   236   001E4A  03                 	db	3
   237   001E4B  03                 	db	3
   238   001E4C  00                 	db	0
   239   001E4D  00                 	db	0
   240   001E4E  00                 	db	0
   241   001E4F  03                 	db	3
   242   001E50  04                 	db	4
   243   001E51  00                 	db	0
   244   001E52  00                 	db	0
   245   001E53  00                 	db	0
   246   001E54  03                 	db	3
   247   001E55  05                 	db	5
   248   001E56  00                 	db	0
   249   001E57  00                 	db	0
   250   001E58  00                 	db	0
   251   001E59  03                 	db	3
   252   001E5A  06                 	db	6
   253   001E5B  00                 	db	0
   254   001E5C  00                 	db	0
   255   001E5D  00                 	db	0
   256   001E5E  03                 	db	3
   257   001E5F  07                 	db	7
   258   001E60  00                 	db	0
   259   001E61  00                 	db	0
   260   001E62  00                 	db	0
   261                           
   262                           	psect	idataBANK1
   263   0017D8                     __pidataBANK1:
   264                           	callstack 0
   265                           
   266                           ;initializer for init_msg_lcd@F3303
   267   0017D8  6C                 	db	108
   268   0017D9  6F                 	db	111
   269   0017DA  61                 	db	97
   270   0017DB  64                 	db	100
   271   0017DC  69                 	db	105
   272   0017DD  6E                 	db	110
   273   0017DE  67                 	db	103
   274   0017DF  2E                 	db	46
   275   0017E0  2E                 	db	46
   276   0017E1  2E                 	db	46
   277   0017E2  2E                 	db	46
   278   0017E3  2E                 	db	46
   279   0017E4  2E                 	db	46
   280   0017E5  2E                 	db	46
   281   0017E6  2E                 	db	46
   282   0017E7  2E                 	db	46
   283   0017E8  2E                 	db	46
   284   0017E9  00                 	db	0
   285                           
   286                           ;initializer for init_msg_lcd@F3299
   287   0017EA  6C                 	db	108
   288   0017EB  6F                 	db	111
   289   0017EC  61                 	db	97
   290   0017ED  64                 	db	100
   291   0017EE  69                 	db	105
   292   0017EF  6E                 	db	110
   293   0017F0  67                 	db	103
   294   0017F1  2E                 	db	46
   295   0017F2  2E                 	db	46
   296   0017F3  2E                 	db	46
   297   0017F4  2E                 	db	46
   298   0017F5  2E                 	db	46
   299   0017F6  2E                 	db	46
   300   0017F7  2E                 	db	46
   301   0017F8  2E                 	db	46
   302   0017F9  20                 	db	32
   303   0017FA  20                 	db	32
   304   0017FB  00                 	db	0
   305                           
   306                           ;initializer for init_msg_lcd@F3295
   307   0017FC  6C                 	db	108
   308   0017FD  6F                 	db	111
   309   0017FE  61                 	db	97
   310   0017FF  64                 	db	100
   311   001800  69                 	db	105
   312   001801  6E                 	db	110
   313   001802  67                 	db	103
   314   001803  2E                 	db	46
   315   001804  2E                 	db	46
   316   001805  2E                 	db	46
   317   001806  2E                 	db	46
   318   001807  2E                 	db	46
   319   001808  2E                 	db	46
   320   001809  20                 	db	32
   321   00180A  20                 	db	32
   322   00180B  20                 	db	32
   323   00180C  20                 	db	32
   324   00180D  00                 	db	0
   325                           
   326                           ;initializer for init_msg_lcd@F3291
   327   00180E  6C                 	db	108
   328   00180F  6F                 	db	111
   329   001810  61                 	db	97
   330   001811  64                 	db	100
   331   001812  69                 	db	105
   332   001813  6E                 	db	110
   333   001814  67                 	db	103
   334   001815  2E                 	db	46
   335   001816  2E                 	db	46
   336   001817  2E                 	db	46
   337   001818  2E                 	db	46
   338   001819  20                 	db	32
   339   00181A  20                 	db	32
   340   00181B  20                 	db	32
   341   00181C  20                 	db	32
   342   00181D  20                 	db	32
   343   00181E  20                 	db	32
   344   00181F  00                 	db	0
   345                           
   346                           ;initializer for init_msg_lcd@F3287
   347   001820  6C                 	db	108
   348   001821  6F                 	db	111
   349   001822  61                 	db	97
   350   001823  64                 	db	100
   351   001824  69                 	db	105
   352   001825  6E                 	db	110
   353   001826  67                 	db	103
   354   001827  2E                 	db	46
   355   001828  2E                 	db	46
   356   001829  20                 	db	32
   357   00182A  20                 	db	32
   358   00182B  20                 	db	32
   359   00182C  20                 	db	32
   360   00182D  20                 	db	32
   361   00182E  20                 	db	32
   362   00182F  20                 	db	32
   363   001830  20                 	db	32
   364   001831  00                 	db	0
   365                           
   366                           ;initializer for init_msg_lcd@F3283
   367   001832  6C                 	db	108
   368   001833  6F                 	db	111
   369   001834  61                 	db	97
   370   001835  64                 	db	100
   371   001836  69                 	db	105
   372   001837  6E                 	db	110
   373   001838  67                 	db	103
   374   001839  20                 	db	32
   375   00183A  20                 	db	32
   376   00183B  20                 	db	32
   377   00183C  20                 	db	32
   378   00183D  20                 	db	32
   379   00183E  20                 	db	32
   380   00183F  20                 	db	32
   381   001840  20                 	db	32
   382   001841  20                 	db	32
   383   001842  20                 	db	32
   384   001843  00                 	db	0
   385                           
   386                           ;initializer for init_msg_lcd@F3281
   387   001844  20                 	db	32
   388   001845  50                 	db	80
   389   001846  4C                 	db	76
   390   001847  45                 	db	69
   391   001848  41                 	db	65
   392   001849  53                 	db	83
   393   00184A  45                 	db	69
   394   00184B  20                 	db	32
   395   00184C  57                 	db	87
   396   00184D  41                 	db	65
   397   00184E  49                 	db	73
   398   00184F  54                 	db	84
   399   001850  20                 	db	32
   400   001851  3D                 	db	61
   401   001852  29                 	db	41
   402   001853  20                 	db	32
   403   001854  20                 	db	32
   404   001855  00                 	db	0
   405                           
   406                           ;initializer for init_msg_lcd@F3307
   407   001856  20                 	db	32
   408   001857  20                 	db	32
   409   001858  20                 	db	32
   410   001859  20                 	db	32
   411   00185A  20                 	db	32
   412   00185B  20                 	db	32
   413   00185C  20                 	db	32
   414   00185D  20                 	db	32
   415   00185E  20                 	db	32
   416   00185F  20                 	db	32
   417   001860  20                 	db	32
   418   001861  20                 	db	32
   419   001862  20                 	db	32
   420   001863  20                 	db	32
   421   001864  20                 	db	32
   422   001865  20                 	db	32
   423   001866  00                 	db	0
   424                           
   425                           ;initializer for init_msg_lcd@F3305
   426   001867  20                 	db	32
   427   001868  20                 	db	32
   428   001869  20                 	db	32
   429   00186A  20                 	db	32
   430   00186B  20                 	db	32
   431   00186C  20                 	db	32
   432   00186D  20                 	db	32
   433   00186E  20                 	db	32
   434   00186F  20                 	db	32
   435   001870  20                 	db	32
   436   001871  20                 	db	32
   437   001872  20                 	db	32
   438   001873  20                 	db	32
   439   001874  20                 	db	32
   440   001875  20                 	db	32
   441   001876  20                 	db	32
   442   001877  00                 	db	0
   443                           
   444                           ;initializer for init_msg_lcd@F3301
   445   001878  20                 	db	32
   446   001879  20                 	db	32
   447   00187A  20                 	db	32
   448   00187B  20                 	db	32
   449   00187C  20                 	db	32
   450   00187D  20                 	db	32
   451   00187E  20                 	db	32
   452   00187F  20                 	db	32
   453   001880  20                 	db	32
   454   001881  20                 	db	32
   455   001882  20                 	db	32
   456   001883  20                 	db	32
   457   001884  20                 	db	32
   458   001885  20                 	db	32
   459   001886  20                 	db	32
   460   001887  20                 	db	32
   461   001888  00                 	db	0
   462                           
   463                           ;initializer for init_msg_lcd@F3297
   464   001889  20                 	db	32
   465   00188A  20                 	db	32
   466   00188B  20                 	db	32
   467   00188C  20                 	db	32
   468   00188D  20                 	db	32
   469   00188E  20                 	db	32
   470   00188F  20                 	db	32
   471   001890  20                 	db	32
   472   001891  20                 	db	32
   473   001892  20                 	db	32
   474   001893  20                 	db	32
   475   001894  20                 	db	32
   476   001895  20                 	db	32
   477   001896  20                 	db	32
   478   001897  20                 	db	32
   479   001898  20                 	db	32
   480   001899  00                 	db	0
   481   000000                     _LATA	set	3977
   482   000000                     _PORTE	set	3972
   483   000000                     _PORTD	set	3971
   484   000000                     _PORTC	set	3970
   485   000000                     _PORTB	set	3969
   486   000000                     _PORTA	set	3968
   487   000000                     _TRISA	set	3986
   488   000000                     _TRISE	set	3990
   489   000000                     _TRISD	set	3989
   490   000000                     _TRISC	set	3988
   491   000000                     _TRISB	set	3987
   492   000000                     _LATE	set	3981
   493   000000                     _LATD	set	3980
   494   000000                     _LATC	set	3979
   495   000000                     _LATB	set	3978
   496                           
   497                           	psect	smallconst
   498   001000                     __psmallconst:
   499                           	callstack 0
   500   001000  00                 	db	0
   501   001001                     STR_10:
   502   001001  20                 	db	32
   503   001002  20                 	db	32
   504   001003  20                 	db	32
   505   001004  20                 	db	32
   506   001005  20                 	db	32
   507   001006  20                 	db	32
   508   001007  20                 	db	32
   509   001008  20                 	db	32
   510   001009  20                 	db	32
   511   00100A  20                 	db	32
   512   00100B  20                 	db	32
   513   00100C  20                 	db	32
   514   00100D  20                 	db	32
   515   00100E  20                 	db	32
   516   00100F  20                 	db	32
   517   001010  20                 	db	32
   518   001011  00                 	db	0
   519   001012  5F                 	db	95	;'_'
   520   001013  49                 	db	73	;'I'
   521   001014  4E                 	db	78	;'N'
   522   001015  49                 	db	73	;'I'
   523   001016  54                 	db	84	;'T'
   524   001017  49                 	db	73	;'I'
   525   001018  41                 	db	65	;'A'
   526   001019  4C                 	db	76	;'L'
   527   00101A  49                 	db	73	;'I'
   528   00101B  5A                 	db	90	;'Z'
   529   00101C  41                 	db	65	;'A'
   530   00101D  54                 	db	84	;'T'
   531   00101E  49                 	db	73	;'I'
   532   00101F  4F                 	db	79	;'O'
   533   001020  4E                 	db	78	;'N'
   534   001021  5F                 	db	95	;'_'
   535   001022  00                 	db	0
   536   001023                     STR_2:
   537   001023  5F                 	db	95	;'_'
   538   001024  57                 	db	87	;'W'
   539   001025  4F                 	db	79	;'O'
   540   001026  52                 	db	82	;'R'
   541   001027  4C                 	db	76	;'L'
   542   001028  44                 	db	68	;'D'
   543   001029  5F                 	db	95	;'_'
   544   00102A  00                 	db	0
   545   00102B                     STR_1:
   546   00102B  5F                 	db	95	;'_'
   547   00102C  48                 	db	72	;'H'
   548   00102D  45                 	db	69	;'E'
   549   00102E  4C                 	db	76	;'L'
   550   00102F  4C                 	db	76	;'L'
   551   001030  4F                 	db	79	;'O'
   552   001031  5F                 	db	95	;'_'
   553   001032  00                 	db	0
   554   001033                     STR_11:
   555   001033  25                 	db	37
   556   001034  69                 	db	105	;'i'
   557   001035  00                 	db	0
   558   001036                     STR_12:
   559   001036  25                 	db	37
   560   001037  75                 	db	117	;'u'
   561   001038  00                 	db	0
   562   001039  00                 	db	0	; dummy byte at the end
   563   000000                     
   564                           ; #config settings
   565                           
   566                           	psect	cinit
   567   001D6C                     __pcinit:
   568                           	callstack 0
   569   001D6C                     start_initialization:
   570                           	callstack 0
   571   001D6C                     __initialization:
   572                           	callstack 0
   573                           
   574                           ; Initialize objects allocated to BANK1 (194 bytes)
   575                           ; load TBLPTR registers with __pidataBANK1
   576   001D6C  0ED8               	movlw	low __pidataBANK1
   577   001D6E  6EF6               	movwf	tblptrl,c
   578   001D70  0E17               	movlw	high __pidataBANK1
   579   001D72  6EF7               	movwf	tblptrh,c
   580   001D74  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   581   001D76  6EF8               	movwf	tblptru,c
   582   001D78  EE01  F000         	lfsr	0,__pdataBANK1
   583   001D7C  EE10 F0C2          	lfsr	1,194
   584   001D80                     copy_data0:
   585   001D80  0009               	tblrd		*+
   586   001D82  CFF5 FFEE          	movff	tablat,postinc0
   587   001D86  50E5               	movf	postdec1,w,c
   588   001D88  50E1               	movf	fsr1l,w,c
   589   001D8A  E1FA               	bnz	copy_data0
   590                           
   591                           ; Initialize objects allocated to BANK0 (117 bytes)
   592                           ; load TBLPTR registers with __pidataBANK0
   593   001D8C  0EEE               	movlw	low __pidataBANK0
   594   001D8E  6EF6               	movwf	tblptrl,c
   595   001D90  0E1D               	movlw	high __pidataBANK0
   596   001D92  6EF7               	movwf	tblptrh,c
   597   001D94  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   598   001D96  6EF8               	movwf	tblptru,c
   599   001D98  EE00  F080         	lfsr	0,__pdataBANK0
   600   001D9C  EE10 F075          	lfsr	1,117
   601   001DA0                     copy_data1:
   602   001DA0  0009               	tblrd		*+
   603   001DA2  CFF5 FFEE          	movff	tablat,postinc0
   604   001DA6  50E5               	movf	postdec1,w,c
   605   001DA8  50E1               	movf	fsr1l,w,c
   606   001DAA  E1FA               	bnz	copy_data1
   607                           
   608                           ; Initialize objects allocated to COMRAM (38 bytes)
   609                           ; load TBLPTR registers with __pidataCOMRAM
   610   001DAC  0E4C               	movlw	low __pidataCOMRAM
   611   001DAE  6EF6               	movwf	tblptrl,c
   612   001DB0  0E21               	movlw	high __pidataCOMRAM
   613   001DB2  6EF7               	movwf	tblptrh,c
   614   001DB4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   615   001DB6  6EF8               	movwf	tblptru,c
   616   001DB8  EE00  F036         	lfsr	0,__pdataCOMRAM
   617   001DBC  EE10 F026          	lfsr	1,38
   618   001DC0                     copy_data2:
   619   001DC0  0009               	tblrd		*+
   620   001DC2  CFF5 FFEE          	movff	tablat,postinc0
   621   001DC6  50E5               	movf	postdec1,w,c
   622   001DC8  50E1               	movf	fsr1l,w,c
   623   001DCA  E1FA               	bnz	copy_data2
   624                           
   625                           ; Clear objects allocated to BANK1 (32 bytes)
   626   001DCC  EE01  F0C2         	lfsr	0,__pbssBANK1
   627   001DD0  0E20               	movlw	32
   628   001DD2                     clear_0:
   629   001DD2  6AEE               	clrf	postinc0,c
   630   001DD4  06E8               	decf	wreg,f,c
   631   001DD6  E1FD               	bnz	clear_0
   632                           
   633                           ; Clear objects allocated to COMRAM (24 bytes)
   634   001DD8  EE00  F05C         	lfsr	0,__pbssCOMRAM
   635   001DDC  0E18               	movlw	24
   636   001DDE                     clear_1:
   637   001DDE  6AEE               	clrf	postinc0,c
   638   001DE0  06E8               	decf	wreg,f,c
   639   001DE2  E1FD               	bnz	clear_1
   640   001DE4                     end_of_initialization:
   641                           	callstack 0
   642   001DE4                     __end_of__initialization:
   643                           	callstack 0
   644   001DE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645   001DE6  6EF8               	movwf	tblptru,c
   646   001DE8  0100               	movlb	0
   647   001DEA  EF6B  F00D         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssCOMRAM
   650   00005C                     __pbssCOMRAM:
   651                           	callstack 0
   652   00005C                     led_toggle@F3113:
   653                           	callstack 0
   654   00005C                     	ds	5
   655   000061                     led_on_off@F3109:
   656                           	callstack 0
   657   000061                     	ds	5
   658   000066                     led_init@F3104:
   659                           	callstack 0
   660   000066                     	ds	5
   661   00006B                     _program_step_counter:
   662                           	callstack 0
   663   00006B                     	ds	4
   664   00006F                     _width:
   665                           	callstack 0
   666   00006F                     	ds	2
   667   000071                     _prec:
   668                           	callstack 0
   669   000071                     	ds	2
   670   000073                     _flags:
   671                           	callstack 0
   672   000073                     	ds	1
   673                           
   674                           	psect	dataCOMRAM
   675   000036                     __pdataCOMRAM:
   676                           	callstack 0
   677   000036                     _LAT_REG_ADD_arr:
   678                           	callstack 0
   679   000036                     	ds	10
   680   000040                     _PORT_REG_ADD_arr:
   681                           	callstack 0
   682   000040                     	ds	10
   683   00004A                     _TRIS_REG_ADD_arr:
   684                           	callstack 0
   685   00004A                     	ds	10
   686   000054                     __car_char_arr:
   687                           	callstack 0
   688   000054                     	ds	8
   689                           
   690                           	psect	dataBANK0
   691   000080                     __pdataBANK0:
   692                           	callstack 0
   693   000080                     init_msg_lcd@F3293:
   694                           	callstack 0
   695   000080                     	ds	17
   696   000091                     init_msg_lcd@F3289:
   697                           	callstack 0
   698   000091                     	ds	17
   699   0000A2                     init_msg_lcd@F3285:
   700                           	callstack 0
   701   0000A2                     	ds	17
   702   0000B3                     _keypad_key_values_arr:
   703                           	callstack 0
   704   0000B3                     	ds	16
   705   0000C3                     _lcd_2_8bit:
   706                           	callstack 0
   707   0000C3                     	ds	50
   708                           
   709                           	psect	bssBANK1
   710   0001C2                     __pbssBANK1:
   711                           	callstack 0
   712   0001C2                     _dbuf:
   713                           	callstack 0
   714   0001C2                     	ds	32
   715                           
   716                           	psect	dataBANK1
   717   000100                     __pdataBANK1:
   718                           	callstack 0
   719   000100                     init_msg_lcd@F3303:
   720                           	callstack 0
   721   000100                     	ds	18
   722   000112                     init_msg_lcd@F3299:
   723                           	callstack 0
   724   000112                     	ds	18
   725   000124                     init_msg_lcd@F3295:
   726                           	callstack 0
   727   000124                     	ds	18
   728   000136                     init_msg_lcd@F3291:
   729                           	callstack 0
   730   000136                     	ds	18
   731   000148                     init_msg_lcd@F3287:
   732                           	callstack 0
   733   000148                     	ds	18
   734   00015A                     init_msg_lcd@F3283:
   735                           	callstack 0
   736   00015A                     	ds	18
   737   00016C                     init_msg_lcd@F3281:
   738                           	callstack 0
   739   00016C                     	ds	18
   740   00017E                     init_msg_lcd@F3307:
   741                           	callstack 0
   742   00017E                     	ds	17
   743   00018F                     init_msg_lcd@F3305:
   744                           	callstack 0
   745   00018F                     	ds	17
   746   0001A0                     init_msg_lcd@F3301:
   747                           	callstack 0
   748   0001A0                     	ds	17
   749   0001B1                     init_msg_lcd@F3297:
   750                           	callstack 0
   751   0001B1                     	ds	17
   752                           
   753                           	psect	cstackCOMRAM
   754   000001                     __pcstackCOMRAM:
   755                           	callstack 0
   756   000001                     ?___awdiv:
   757                           	callstack 0
   758   000001                     ?___awmod:
   759                           	callstack 0
   760   000001                     ?___lwdiv:
   761                           	callstack 0
   762   000001                     ?___lwmod:
   763                           	callstack 0
   764   000001                     memset@dest:
   765                           	callstack 0
   766   000001                     set_bit_uint8@p_reg:
   767                           	callstack 0
   768   000001                     clear_bit_uint8@p_reg:
   769                           	callstack 0
   770   000001                     ___awdiv@dividend:
   771                           	callstack 0
   772   000001                     ___awmod@dividend:
   773                           	callstack 0
   774   000001                     ___lwdiv@dividend:
   775                           	callstack 0
   776   000001                     ___lwmod@dividend:
   777                           	callstack 0
   778   000001                     fputc@c:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x0
   782   000001                     	ds	1
   783   000002                     memset@c:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1
   787   000002                     	ds	1
   788   000003                     set_bit_uint8@d_IDX_BIT_X:
   789                           	callstack 0
   790   000003                     clear_bit_uint8@d_IDX_BIT_X:
   791                           	callstack 0
   792   000003                     fputc@fp:
   793                           	callstack 0
   794   000003                     ___awdiv@divisor:
   795                           	callstack 0
   796   000003                     ___awmod@divisor:
   797                           	callstack 0
   798   000003                     ___lwdiv@divisor:
   799                           	callstack 0
   800   000003                     ___lwmod@divisor:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x2
   804   000003                     	ds	1
   805   000004                     ??_fputc:
   806   000004                     ??_set_bit_uint8:
   807   000004                     ??_clear_bit_uint8:
   808   000004                     memset@n:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x3
   812   000004                     	ds	1
   813   000005                     ___awdiv@counter:
   814                           	callstack 0
   815   000005                     ___awmod@counter:
   816                           	callstack 0
   817   000005                     ___lwmod@counter:
   818                           	callstack 0
   819   000005                     ___lwdiv@quotient:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x4
   823   000005                     	ds	1
   824   000006                     gpio_pin_direction_initialize@p_pin_config:
   825                           	callstack 0
   826   000006                     gpio_pin_write_logic@p_pin_config:
   827                           	callstack 0
   828   000006                     ___awdiv@sign:
   829                           	callstack 0
   830   000006                     ___awmod@sign:
   831                           	callstack 0
   832   000006                     memset@p:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x5
   836   000006                     	ds	1
   837   000007                     ??_gpio_pin_direction_initialize:
   838   000007                     ?_abs:
   839                           	callstack 0
   840   000007                     gpio_pin_write_logic@d_logic_desired:
   841                           	callstack 0
   842   000007                     ___lwdiv@counter:
   843                           	callstack 0
   844   000007                     ___awdiv@quotient:
   845                           	callstack 0
   846   000007                     abs@a:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x6
   850   000007                     	ds	1
   851   000008                     ??_gpio_pin_write_logic:
   852                           
   853                           ; 1 bytes @ 0x7
   854   000008                     	ds	1
   855   000009                     ??_abs:
   856                           
   857                           ; 1 bytes @ 0x8
   858   000009                     	ds	1
   859   00000A                     lcd_8bit_send_enable@p_lcd:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x9
   863   00000A                     	ds	1
   864   00000B                     lcd_8bit_send_cmd@p_lcd:
   865                           	callstack 0
   866   00000B                     lcd_8bit_send_char@p_lcd:
   867                           	callstack 0
   868   00000B                     vfpfcnvrt@fp:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0xA
   872   00000B                     	ds	1
   873   00000C                     lcd_8bit_send_cmd@d_cmd:
   874                           	callstack 0
   875   00000C                     lcd_8bit_send_char@d_data:
   876                           	callstack 0
   877   00000C                     vfpfcnvrt@fmt:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0xB
   881   00000C                     	ds	1
   882   00000D                     lcd_8bit_init@p_lcd:
   883                           	callstack 0
   884   00000D                     lcd_8bit_set_cursor@p_lcd:
   885                           	callstack 0
   886   00000D                     vfpfcnvrt@ap:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0xC
   890   00000D                     	ds	1
   891   00000E                     ??_lcd_8bit_init:
   892   00000E                     ??_vfpfcnvrt:
   893   00000E                     lcd_8bit_set_cursor@d_row:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0xD
   897   00000E                     	ds	1
   898   00000F                     lcd_8bit_init@idx:
   899                           	callstack 0
   900   00000F                     lcd_8bit_set_cursor@d_column:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0xE
   904   00000F                     	ds	1
   905   000010                     ??_lcd_8bit_set_cursor:
   906   000010                     vfpfcnvrt@done:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0xF
   910   000010                     	ds	1
   911   000011                     vfpfcnvrt@cp:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x10
   915   000011                     	ds	1
   916   000012                     lcd_8bit_send_char_pos@p_lcd:
   917                           	callstack 0
   918   000012                     lcd_8bit_send_strng_pos@p_lcd:
   919                           	callstack 0
   920   000012                     vfpfcnvrt@convarg:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x11
   924   000012                     	ds	1
   925   000013                     lcd_8bit_send_char_pos@d_row:
   926                           	callstack 0
   927   000013                     lcd_8bit_send_strng_pos@d_row:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x12
   931   000013                     	ds	1
   932   000014                     lcd_8bit_send_char_pos@d_column:
   933                           	callstack 0
   934   000014                     lcd_8bit_send_strng_pos@d_column:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x13
   938   000014                     	ds	1
   939   000015                     lcd_8bit_send_char_pos@d_data:
   940                           	callstack 0
   941   000015                     lcd_8bit_send_strng_pos@p_strng:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x14
   945   000015                     	ds	1
   946   000016                     lcd_8bit_send_custom_char_pos@p_lcd:
   947                           	callstack 0
   948   000016                     vfpfcnvrt@c:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x15
   952   000016                     	ds	1
   953   000017                     ?_vfprintf:
   954                           	callstack 0
   955   000017                     lcd_8bit_send_custom_char_pos@d_row:
   956                           	callstack 0
   957   000017                     vfprintf@fp:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x16
   961   000017                     	ds	1
   962   000018                     lcd_8bit_send_custom_char_pos@d_column:
   963                           	callstack 0
   964   000018                     vfprintf@fmt:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x17
   968   000018                     	ds	1
   969   000019                     lcd_8bit_send_custom_char_pos@_char:
   970                           	callstack 0
   971   000019                     vfprintf@ap:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x18
   975   000019                     	ds	1
   976   00001A                     lcd_8bit_send_custom_char_pos@mem_pos:
   977                           	callstack 0
   978   00001A                     vfprintf@cfmt:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x19
   982   00001A                     	ds	1
   983   00001B                     ?_sprintf:
   984                           	callstack 0
   985   00001B                     lcd_8bit_send_custom_char_pos@idx:
   986                           	callstack 0
   987   00001B                     sprintf@s:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x1A
   991   00001B                     	ds	1
   992   00001C                     sprintf@fmt:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x1B
   996   00001C                     	ds	5
   997   000021                     sprintf@ap:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x20
  1001   000021                     	ds	1
  1002   000022                     sprintf@f:
  1003                           	callstack 0
  1004                           
  1005                           ; 12 bytes @ 0x21
  1006   000022                     	ds	12
  1007   00002E                     convert_uint8_to_strng@d_strng:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x2D
  1011   00002E                     	ds	1
  1012   00002F                     convert_uint8_to_strng@d_input:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x2E
  1016   00002F                     	ds	1
  1017   000030                     ??_main:
  1018                           
  1019                           ; 1 bytes @ 0x2F
  1020   000030                     	ds	1
  1021   000031                     main@msg_X:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x30
  1025   000031                     	ds	4
  1026   000035                     main@X:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x34
  1030   000035                     	ds	1
  1031                           
  1032 ;;
  1033 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1034 ;;
  1035 ;; *************** function _main *****************
  1036 ;; Defined at:
  1037 ;;		line 31 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  msg_X           4   48[COMRAM] unsigned char [4]
  1042 ;;  X               1   52[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  835[None  ] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        6 bytes
  1057 ;; Hardware stack levels required when called: 7
  1058 ;; This function calls:
  1059 ;;		_app_init
  1060 ;;		_convert_uint8_to_strng
  1061 ;;		_lcd_8bit_send_custom_char_pos
  1062 ;;		_lcd_8bit_send_strng_pos
  1063 ;;		_memset
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text0
  1070   001AD6                     __ptext0:
  1071                           	callstack 0
  1072   001AD6                     _main:
  1073                           	callstack 24
  1074   001AD6                     
  1075                           ;main.c: 33:     app_init();
  1076   001AD6  ECCC  F010         	call	_app_init	;wreg free
  1077   001ADA                     l4513:
  1078                           
  1079                           ;main.c: 36:     uint8_t msg_X[4];;main.c: 37:     uint8_t X = 0;
  1080   001ADA  0E00               	movlw	0
  1081   001ADC  6E35               	movwf	main@X^0,c
  1082   001ADE                     l4515:
  1083                           
  1084                           ;main.c: 39:     {;main.c: 41:         convert_uint8_to_strng(X,msg_X);
  1085   001ADE  0E31               	movlw	low main@msg_X
  1086   001AE0  6E2E               	movwf	convert_uint8_to_strng@d_strng^0,c
  1087   001AE2  5035               	movf	main@X^0,w,c
  1088   001AE4  EC01  F010         	call	_convert_uint8_to_strng
  1089   001AE8                     
  1090                           ;main.c: 42:         lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg_X);
  1091   001AE8  0EC3               	movlw	low _lcd_2_8bit
  1092   001AEA  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1093   001AEC  0E01               	movlw	1
  1094   001AEE  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1095   001AF0  0E01               	movlw	1
  1096   001AF2  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1097   001AF4  0E31               	movlw	low main@msg_X
  1098   001AF6  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1099   001AF8  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1100   001AFA  EC70  F00E         	call	_lcd_8bit_send_strng_pos	;wreg free
  1101   001AFE                     
  1102                           ;main.c: 43:         lcd_8bit_send_custom_char_pos( &lcd_2_8bit, 2, 1, _car_char_arr, 0)
      +                          ;
  1103   001AFE  0EC3               	movlw	low _lcd_2_8bit
  1104   001B00  6E16               	movwf	lcd_8bit_send_custom_char_pos@p_lcd^0,c
  1105   001B02  0E02               	movlw	2
  1106   001B04  6E17               	movwf	lcd_8bit_send_custom_char_pos@d_row^0,c
  1107   001B06  0E01               	movlw	1
  1108   001B08  6E18               	movwf	lcd_8bit_send_custom_char_pos@d_column^0,c
  1109   001B0A  0E54               	movlw	low __car_char_arr
  1110   001B0C  6E19               	movwf	lcd_8bit_send_custom_char_pos@_char^0,c
  1111   001B0E  0E00               	movlw	0
  1112   001B10  6E1A               	movwf	lcd_8bit_send_custom_char_pos@mem_pos^0,c
  1113   001B12  EC6C  F00F         	call	_lcd_8bit_send_custom_char_pos	;wreg free
  1114   001B16                     
  1115                           ;main.c: 44:         X++;
  1116   001B16  2A35               	incf	main@X^0,f,c
  1117   001B18                     
  1118                           ;main.c: 45:         _delay((unsigned long)((50)*((8000000UL)/4000.0)));
  1119   001B18  0E82               	movlw	130
  1120   001B1A  6E30               	movwf	??_main^0,c
  1121   001B1C  0EDE               	movlw	222
  1122   001B1E                     u3007:
  1123   001B1E  2EE8               	decfsz	wreg,f,c
  1124   001B20  D7FE               	bra	u3007
  1125   001B22  2E30               	decfsz	??_main^0,f,c
  1126   001B24  D7FC               	bra	u3007
  1127   001B26                     
  1128                           ;main.c: 46:         memset(msg_X, '\0', 4);
  1129   001B26  0E31               	movlw	low main@msg_X
  1130   001B28  6E01               	movwf	memset@dest^0,c
  1131   001B2A  0E00               	movlw	0
  1132   001B2C  6E03               	movwf	(memset@c+1)^0,c
  1133   001B2E  0E00               	movlw	0
  1134   001B30  6E02               	movwf	memset@c^0,c
  1135   001B32  0E00               	movlw	0
  1136   001B34  6E05               	movwf	(memset@n+1)^0,c
  1137   001B36  0E04               	movlw	4
  1138   001B38  6E04               	movwf	memset@n^0,c
  1139   001B3A  EC8E  F010         	call	_memset	;wreg free
  1140   001B3E                     
  1141                           ;main.c: 47:         memset(msg_X, ' ', 3);
  1142   001B3E  0E31               	movlw	low main@msg_X
  1143   001B40  6E01               	movwf	memset@dest^0,c
  1144   001B42  0E00               	movlw	0
  1145   001B44  6E03               	movwf	(memset@c+1)^0,c
  1146   001B46  0E20               	movlw	32
  1147   001B48  6E02               	movwf	memset@c^0,c
  1148   001B4A  0E00               	movlw	0
  1149   001B4C  6E05               	movwf	(memset@n+1)^0,c
  1150   001B4E  0E03               	movlw	3
  1151   001B50  6E04               	movwf	memset@n^0,c
  1152   001B52  EC8E  F010         	call	_memset	;wreg free
  1153   001B56                     
  1154                           ;main.c: 48:         lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg_X);
  1155   001B56  0EC3               	movlw	low _lcd_2_8bit
  1156   001B58  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1157   001B5A  0E01               	movlw	1
  1158   001B5C  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1159   001B5E  0E01               	movlw	1
  1160   001B60  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1161   001B62  0E31               	movlw	low main@msg_X
  1162   001B64  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1163   001B66  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1164   001B68  EC70  F00E         	call	_lcd_8bit_send_strng_pos	;wreg free
  1165   001B6C                     
  1166                           ;main.c: 49:         if(245==X)
  1167   001B6C  0EF5               	movlw	245
  1168   001B6E  1835               	xorwf	main@X^0,w,c
  1169   001B70  A4D8               	btfss	status,2,c
  1170   001B72  EFBD  F00D         	goto	u2991
  1171   001B76  EFBF  F00D         	goto	u2990
  1172   001B7A                     u2991:
  1173   001B7A  EF6F  F00D         	goto	l4515
  1174   001B7E                     u2990:
  1175   001B7E  EF6D  F00D         	goto	l4513
  1176   001B82  EF00  F000         	goto	start
  1177   001B86                     __end_of_main:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _lcd_8bit_send_strng_pos *****************
  1181 ;; Defined at:
  1182 ;;		line 356 in file "_HAL/Drivers/LCD/LCD.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  p_lcd           1   17[COMRAM] PTR struct .
  1185 ;;		 -> lcd_2_8bit(50), 
  1186 ;;  d_row           1   18[COMRAM] const unsigned char 
  1187 ;;  d_column        1   19[COMRAM] const unsigned char 
  1188 ;;  p_strng         2   20[COMRAM] PTR const unsigned char 
  1189 ;;		 -> main@msg_X(4), init_msg_lcd@msg14(17), init_msg_lcd@msg13(17), init_msg_lcd@msg12(18), 
  1190 ;;		 -> init_msg_lcd@msg11(17), init_msg_lcd@msg10(18), init_msg_lcd@msg9(17), init_msg_lcd@msg8(18), 
  1191 ;;		 -> init_msg_lcd@msg7(17), init_msg_lcd@msg6(18), init_msg_lcd@msg5(17), init_msg_lcd@msg4(18), 
  1192 ;;		 -> init_msg_lcd@msg3(17), init_msg_lcd@msg2(18), init_msg_lcd@msg1(18), STR_10(17), 
  1193 ;;		 -> STR_9(17), STR_8(11), STR_7(11), STR_6(8), 
  1194 ;;		 -> STR_5(8), STR_4(11), STR_3(11), STR_2(8), 
  1195 ;;		 -> STR_1(8), 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      enum E2975
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1207 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;Total ram usage:        5 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 5
  1214 ;; This function calls:
  1215 ;;		_lcd_8bit_send_char
  1216 ;;		_lcd_8bit_set_cursor
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;;		_hello_world_lcd
  1220 ;;		_init_msg_lcd
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text1
  1225   001CE0                     __ptext1:
  1226                           	callstack 0
  1227   001CE0                     _lcd_8bit_send_strng_pos:
  1228                           	callstack 25
  1229   001CE0                     
  1230                           ;_HAL/Drivers/LCD/LCD.c: 356: std_return lcd_8bit_send_strng_pos( lcd_8bit_t * p_lcd, co
      +                          nst uint8_t d_row, const uint8_t d_column, const uint8_t * p_strng);_HAL/Drivers/LCD/LCD
      +                          .c: 357: {;_HAL/Drivers/LCD/LCD.c: 358:     if (((void*)0) == p_lcd)
  1231   001CE0  5012               	movf	lcd_8bit_send_strng_pos@p_lcd^0,w,c
  1232   001CE2  A4D8               	btfss	status,2,c
  1233   001CE4  EF76  F00E         	goto	u2511
  1234   001CE8  EF78  F00E         	goto	u2510
  1235   001CEC                     u2511:
  1236   001CEC  EF7A  F00E         	goto	l4077
  1237   001CF0                     u2510:
  1238   001CF0  EFB5  F00E         	goto	l405
  1239   001CF4                     l4077:
  1240                           
  1241                           ;_HAL/Drivers/LCD/LCD.c: 363:     {;_HAL/Drivers/LCD/LCD.c: 364:         lcd_8bit_set_cu
      +                          rsor(p_lcd, d_row, d_column);
  1242   001CF4  C012  F00D         	movff	lcd_8bit_send_strng_pos@p_lcd,lcd_8bit_set_cursor@p_lcd
  1243   001CF8  C013  F00E         	movff	lcd_8bit_send_strng_pos@d_row,lcd_8bit_set_cursor@d_row
  1244   001CFC  C014  F00F         	movff	lcd_8bit_send_strng_pos@d_column,lcd_8bit_set_cursor@d_column
  1245   001D00  ECD1  F00F         	call	_lcd_8bit_set_cursor	;wreg free
  1246                           
  1247                           ;_HAL/Drivers/LCD/LCD.c: 365:         while( '\0' != *p_strng)
  1248   001D04  EF9C  F00E         	goto	l4083
  1249   001D08                     l4079:
  1250                           
  1251                           ;_HAL/Drivers/LCD/LCD.c: 366:         {;_HAL/Drivers/LCD/LCD.c: 367:         lcd_8bit_se
      +                          nd_char(p_lcd, *p_strng);
  1252   001D08  C012  F00B         	movff	lcd_8bit_send_strng_pos@p_lcd,lcd_8bit_send_char@p_lcd
  1253   001D0C  C015  FFF6         	movff	lcd_8bit_send_strng_pos@p_strng,tblptrl
  1254   001D10  C016  FFF7         	movff	lcd_8bit_send_strng_pos@p_strng+1,tblptrh
  1255   001D14  0E00               	movlw	low (__smallconst shr (0+16))
  1256   001D16  6EF8               	movwf	tblptru,c
  1257   001D18  0E0F               	movlw	(high __ramtop+-1)
  1258   001D1A  64F7               	cpfsgt	tblptrh,c
  1259   001D1C  D003               	bra	u2527
  1260   001D1E  0008               	tblrd		*
  1261   001D20  50F5               	movf	tablat,w,c
  1262   001D22  D005               	bra	u2520
  1263   001D24                     u2527:
  1264   001D24  CFF6 FFE9          	movff	tblptrl,fsr0l
  1265   001D28  CFF7 FFEA          	movff	tblptrh,fsr0h
  1266   001D2C  50EF               	movf	indf0,w,c
  1267   001D2E                     u2520:
  1268   001D2E  6E0C               	movwf	lcd_8bit_send_char@d_data^0,c
  1269   001D30  ECAD  F00C         	call	_lcd_8bit_send_char	;wreg free
  1270   001D34                     
  1271                           ;_HAL/Drivers/LCD/LCD.c: 368:         p_strng++;
  1272   001D34  4A15               	infsnz	lcd_8bit_send_strng_pos@p_strng^0,f,c
  1273   001D36  2A16               	incf	(lcd_8bit_send_strng_pos@p_strng+1)^0,f,c
  1274   001D38                     l4083:
  1275                           
  1276                           ;_HAL/Drivers/LCD/LCD.c: 365:         while( '\0' != *p_strng)
  1277   001D38  C015  FFF6         	movff	lcd_8bit_send_strng_pos@p_strng,tblptrl
  1278   001D3C  C016  FFF7         	movff	lcd_8bit_send_strng_pos@p_strng+1,tblptrh
  1279   001D40  0E00               	movlw	low (__smallconst shr (0+16))
  1280   001D42  6EF8               	movwf	tblptru,c
  1281   001D44  0E0F               	movlw	(high __ramtop+-1)
  1282   001D46  64F7               	cpfsgt	tblptrh,c
  1283   001D48  D003               	bra	u2537
  1284   001D4A  0008               	tblrd		*
  1285   001D4C  50F5               	movf	tablat,w,c
  1286   001D4E  D005               	bra	u2530
  1287   001D50                     u2537:
  1288   001D50  CFF6 FFE9          	movff	tblptrl,fsr0l
  1289   001D54  CFF7 FFEA          	movff	tblptrh,fsr0h
  1290   001D58  50EF               	movf	indf0,w,c
  1291   001D5A                     u2530:
  1292   001D5A  0900               	iorlw	0
  1293   001D5C  A4D8               	btfss	status,2,c
  1294   001D5E  EFB3  F00E         	goto	u2541
  1295   001D62  EFB5  F00E         	goto	u2540
  1296   001D66                     u2541:
  1297   001D66  EF84  F00E         	goto	l4079
  1298   001D6A                     u2540:
  1299   001D6A                     l405:
  1300   001D6A  0012               	return		;funcret
  1301   001D6C                     __end_of_lcd_8bit_send_strng_pos:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _lcd_8bit_send_custom_char_pos *****************
  1305 ;; Defined at:
  1306 ;;		line 375 in file "_HAL/Drivers/LCD/LCD.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  p_lcd           1   21[COMRAM] PTR struct .
  1309 ;;		 -> lcd_2_8bit(50), 
  1310 ;;  d_row           1   22[COMRAM] const unsigned char 
  1311 ;;  d_column        1   23[COMRAM] const unsigned char 
  1312 ;;  _char           1   24[COMRAM] PTR const unsigned char 
  1313 ;;		 -> _car_char_arr(8), 
  1314 ;;  mem_pos         1   25[COMRAM] unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  idx             1   26[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      enum E2975
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:        6 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 6
  1333 ;; This function calls:
  1334 ;;		_lcd_8bit_send_char
  1335 ;;		_lcd_8bit_send_char_pos
  1336 ;;		_lcd_8bit_send_cmd
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text2
  1343   001ED8                     __ptext2:
  1344                           	callstack 0
  1345   001ED8                     _lcd_8bit_send_custom_char_pos:
  1346                           	callstack 24
  1347   001ED8                     
  1348                           ;_HAL/Drivers/LCD/LCD.c: 375: std_return lcd_8bit_send_custom_char_pos( lcd_8bit_t * p_l
      +                          cd, const uint8_t d_row, const uint8_t d_column, const uint8_t *_char, uint8_t mem_pos);
      +                          _HAL/Drivers/LCD/LCD.c: 376: {;_HAL/Drivers/LCD/LCD.c: 377:     if (((void*)0) == p_lcd)
  1349   001ED8  5016               	movf	lcd_8bit_send_custom_char_pos@p_lcd^0,w,c
  1350   001EDA  A4D8               	btfss	status,2,c
  1351   001EDC  EF72  F00F         	goto	u2571
  1352   001EE0  EF74  F00F         	goto	u2570
  1353   001EE4                     u2571:
  1354   001EE4  EF76  F00F         	goto	l4111
  1355   001EE8                     u2570:
  1356   001EE8  EF9E  F00F         	goto	l413
  1357   001EEC                     l4111:
  1358                           
  1359                           ;_HAL/Drivers/LCD/LCD.c: 382:     {;_HAL/Drivers/LCD/LCD.c: 383:         lcd_8bit_send_c
      +                          md( p_lcd, (0x40 + mem_pos*8) );
  1360   001EEC  C016  F00B         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_cmd@p_lcd
  1361   001EF0  501A               	movf	lcd_8bit_send_custom_char_pos@mem_pos^0,w,c
  1362   001EF2  0D08               	mullw	8
  1363   001EF4  50F3               	movf	243,w,c
  1364   001EF6  0F40               	addlw	64
  1365   001EF8  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  1366   001EFA  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  1367   001EFE                     
  1368                           ;_HAL/Drivers/LCD/LCD.c: 385:         for(idx=0; idx<8; idx++)
  1369   001EFE  0E00               	movlw	0
  1370   001F00  6E1B               	movwf	lcd_8bit_send_custom_char_pos@idx^0,c
  1371   001F02                     l4121:
  1372                           
  1373                           ;_HAL/Drivers/LCD/LCD.c: 386:         {;_HAL/Drivers/LCD/LCD.c: 387:             lcd_8bi
      +                          t_send_char( p_lcd, _char[idx]);
  1374   001F02  C016  F00B         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_char@p_lcd
  1375   001F06  5019               	movf	lcd_8bit_send_custom_char_pos@_char^0,w,c
  1376   001F08  241B               	addwf	lcd_8bit_send_custom_char_pos@idx^0,w,c
  1377   001F0A  6ED9               	movwf	fsr2l,c
  1378   001F0C  6ADA               	clrf	fsr2h,c
  1379   001F0E  50DF               	movf	indf2,w,c
  1380   001F10  6E0C               	movwf	lcd_8bit_send_char@d_data^0,c
  1381   001F12  ECAD  F00C         	call	_lcd_8bit_send_char	;wreg free
  1382   001F16                     
  1383                           ;_HAL/Drivers/LCD/LCD.c: 388:         }
  1384   001F16  2A1B               	incf	lcd_8bit_send_custom_char_pos@idx^0,f,c
  1385   001F18  0E07               	movlw	7
  1386   001F1A  641B               	cpfsgt	lcd_8bit_send_custom_char_pos@idx^0,c
  1387   001F1C  EF92  F00F         	goto	u2581
  1388   001F20  EF94  F00F         	goto	u2580
  1389   001F24                     u2581:
  1390   001F24  EF81  F00F         	goto	l4121
  1391   001F28                     u2580:
  1392   001F28                     
  1393                           ;_HAL/Drivers/LCD/LCD.c: 389:         lcd_8bit_send_char_pos( p_lcd, d_row, d_column, me
      +                          m_pos );
  1394   001F28  C016  F012         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_char_pos@p_lcd
  1395   001F2C  C017  F013         	movff	lcd_8bit_send_custom_char_pos@d_row,lcd_8bit_send_char_pos@d_row
  1396   001F30  C018  F014         	movff	lcd_8bit_send_custom_char_pos@d_column,lcd_8bit_send_char_pos@d_column
  1397   001F34  C01A  F015         	movff	lcd_8bit_send_custom_char_pos@mem_pos,lcd_8bit_send_char_pos@d_data
  1398   001F38  EC75  F010         	call	_lcd_8bit_send_char_pos	;wreg free
  1399   001F3C                     l413:
  1400   001F3C  0012               	return		;funcret
  1401   001F3E                     __end_of_lcd_8bit_send_custom_char_pos:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _lcd_8bit_send_char_pos *****************
  1405 ;; Defined at:
  1406 ;;		line 323 in file "_HAL/Drivers/LCD/LCD.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  p_lcd           1   17[COMRAM] PTR struct .
  1409 ;;		 -> lcd_2_8bit(50), 
  1410 ;;  d_row           1   18[COMRAM] const unsigned char 
  1411 ;;  d_column        1   19[COMRAM] const unsigned char 
  1412 ;;  d_data          1   20[COMRAM] const unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      enum E2975
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        4 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 5
  1431 ;; This function calls:
  1432 ;;		_lcd_8bit_send_char
  1433 ;;		_lcd_8bit_set_cursor
  1434 ;; This function is called by:
  1435 ;;		_lcd_8bit_send_custom_char_pos
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text3
  1440   0020EA                     __ptext3:
  1441                           	callstack 0
  1442   0020EA                     _lcd_8bit_send_char_pos:
  1443                           	callstack 24
  1444   0020EA                     
  1445                           ;_HAL/Drivers/LCD/LCD.c: 323: std_return lcd_8bit_send_char_pos( lcd_8bit_t * p_lcd, con
      +                          st uint8_t d_row, const uint8_t d_column,const uint8_t d_data);_HAL/Drivers/LCD/LCD.c: 3
      +                          24: {;_HAL/Drivers/LCD/LCD.c: 325:     if (((void*)0) == p_lcd)
  1446   0020EA  5012               	movf	lcd_8bit_send_char_pos@p_lcd^0,w,c
  1447   0020EC  A4D8               	btfss	status,2,c
  1448   0020EE  EF7B  F010         	goto	u2501
  1449   0020F2  EF7D  F010         	goto	u2500
  1450   0020F6                     u2501:
  1451   0020F6  EF7F  F010         	goto	l4065
  1452   0020FA                     u2500:
  1453   0020FA  EF8D  F010         	goto	l392
  1454   0020FE                     l4065:
  1455                           
  1456                           ;_HAL/Drivers/LCD/LCD.c: 330:     {;_HAL/Drivers/LCD/LCD.c: 331:         lcd_8bit_set_cu
      +                          rsor(p_lcd, d_row, d_column);
  1457   0020FE  C012  F00D         	movff	lcd_8bit_send_char_pos@p_lcd,lcd_8bit_set_cursor@p_lcd
  1458   002102  C013  F00E         	movff	lcd_8bit_send_char_pos@d_row,lcd_8bit_set_cursor@d_row
  1459   002106  C014  F00F         	movff	lcd_8bit_send_char_pos@d_column,lcd_8bit_set_cursor@d_column
  1460   00210A  ECD1  F00F         	call	_lcd_8bit_set_cursor	;wreg free
  1461                           
  1462                           ;_HAL/Drivers/LCD/LCD.c: 332:         lcd_8bit_send_char(p_lcd, d_data);
  1463   00210E  C012  F00B         	movff	lcd_8bit_send_char_pos@p_lcd,lcd_8bit_send_char@p_lcd
  1464   002112  C015  F00C         	movff	lcd_8bit_send_char_pos@d_data,lcd_8bit_send_char@d_data
  1465   002116  ECAD  F00C         	call	_lcd_8bit_send_char	;wreg free
  1466   00211A                     l392:
  1467   00211A  0012               	return		;funcret
  1468   00211C                     __end_of_lcd_8bit_send_char_pos:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _lcd_8bit_set_cursor *****************
  1472 ;; Defined at:
  1473 ;;		line 452 in file "_HAL/Drivers/LCD/LCD.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  p_lcd           1   12[COMRAM] PTR struct .
  1476 ;;		 -> lcd_2_8bit(50), 
  1477 ;;  d_row           1   13[COMRAM] const unsigned char 
  1478 ;;  d_column        1   14[COMRAM] const unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      enum E2975
  1483 ;; Registers used:
  1484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:        5 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 4
  1497 ;; This function calls:
  1498 ;;		_lcd_8bit_send_cmd
  1499 ;; This function is called by:
  1500 ;;		_lcd_8bit_send_char_pos
  1501 ;;		_lcd_8bit_send_strng_pos
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text4
  1506   001FA2                     __ptext4:
  1507                           	callstack 0
  1508   001FA2                     _lcd_8bit_set_cursor:
  1509                           	callstack 25
  1510   001FA2                     
  1511                           ;_HAL/Drivers/LCD/LCD.c: 452: std_return lcd_8bit_set_cursor( lcd_8bit_t * p_lcd, const 
      +                          uint8_t d_row, const uint8_t d_column);_HAL/Drivers/LCD/LCD.c: 453: {;_HAL/Drivers/LCD/L
      +                          CD.c: 454:     lcd_8bit_send_cmd(p_lcd, 0x80);
  1512   001FA2  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  1513   001FA6  0E80               	movlw	128
  1514   001FA8  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  1515   001FAA  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  1516                           
  1517                           ;_HAL/Drivers/LCD/LCD.c: 456:     switch (d_row)
  1518   001FAE  EFEB  F00F         	goto	l4003
  1519   001FB2                     l3997:
  1520   001FB2  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  1521   001FB6  500F               	movf	lcd_8bit_set_cursor@d_column^0,w,c
  1522   001FB8  0F7F               	addlw	127
  1523   001FBA  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  1524   001FBC  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  1525   001FC0  EF00  F010         	goto	l447
  1526   001FC4                     l3999:
  1527   001FC4  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  1528   001FC8  500F               	movf	lcd_8bit_set_cursor@d_column^0,w,c
  1529   001FCA  0FBF               	addlw	191
  1530   001FCC  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  1531   001FCE  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  1532   001FD2  EF00  F010         	goto	l447
  1533   001FD6                     l4003:
  1534   001FD6  500E               	movf	lcd_8bit_set_cursor@d_row^0,w,c
  1535   001FD8  6E10               	movwf	??_lcd_8bit_set_cursor^0,c
  1536   001FDA  6A11               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1537                           
  1538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 1, Range of values is 0 to 0
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte            4     3 (average)
  1544                           ;	Chosen strategy is simple_byte
  1545   001FDC  5011               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1546   001FDE  0A00               	xorlw	0	; case 0
  1547   001FE0  B4D8               	btfsc	status,2,c
  1548   001FE2  EFF5  F00F         	goto	l4559
  1549   001FE6  EF00  F010         	goto	l447
  1550   001FEA                     l4559:
  1551                           
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 2, Range of values is 1 to 2
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte            7     4 (average)
  1557                           ;	Chosen strategy is simple_byte
  1558   001FEA  5010               	movf	??_lcd_8bit_set_cursor^0,w,c
  1559   001FEC  0A01               	xorlw	1	; case 1
  1560   001FEE  B4D8               	btfsc	status,2,c
  1561   001FF0  EFD9  F00F         	goto	l3997
  1562   001FF4  0A03               	xorlw	3	; case 2
  1563   001FF6  B4D8               	btfsc	status,2,c
  1564   001FF8  EFE2  F00F         	goto	l3999
  1565   001FFC  EF00  F010         	goto	l447
  1566   002000                     l447:
  1567   002000  0012               	return		;funcret
  1568   002002                     __end_of_lcd_8bit_set_cursor:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _lcd_8bit_send_char *****************
  1572 ;; Defined at:
  1573 ;;		line 299 in file "_HAL/Drivers/LCD/LCD.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  p_lcd           1   10[COMRAM] PTR struct .
  1576 ;;		 -> lcd_2_8bit(50), 
  1577 ;;  d_data          1   11[COMRAM] const unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      enum E2975
  1582 ;; Registers used:
  1583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 3
  1596 ;; This function calls:
  1597 ;;		_gpio_pin_write_logic
  1598 ;;		_lcd_8bit_send_enable
  1599 ;; This function is called by:
  1600 ;;		_lcd_8bit_send_char_pos
  1601 ;;		_lcd_8bit_send_strng_pos
  1602 ;;		_lcd_8bit_send_custom_char_pos
  1603 ;;		_lcd_8bit_send_strng
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text5
  1608   00195A                     __ptext5:
  1609                           	callstack 0
  1610   00195A                     _lcd_8bit_send_char:
  1611                           	callstack 26
  1612   00195A                     
  1613                           ;_HAL/Drivers/LCD/LCD.c: 299: std_return lcd_8bit_send_char( lcd_8bit_t * p_lcd, const u
      +                          int8_t d_data);_HAL/Drivers/LCD/LCD.c: 300: {;_HAL/Drivers/LCD/LCD.c: 301:     if (((voi
      +                          d*)0) == p_lcd)
  1614   00195A  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1615   00195C  A4D8               	btfss	status,2,c
  1616   00195E  EFB3  F00C         	goto	u2471
  1617   001962  EFB5  F00C         	goto	u2470
  1618   001966                     u2471:
  1619   001966  EFB7  F00C         	goto	l3991
  1620   00196A                     u2470:
  1621   00196A  EF0B  F00D         	goto	l387
  1622   00196E                     l3991:
  1623                           
  1624                           ;_HAL/Drivers/LCD/LCD.c: 306:     {;_HAL/Drivers/LCD/LCD.c: 307:         gpio_pin_write_
      +                          logic(&(p_lcd->lcd_reg_select_pin),LOGIC_ON);
  1625   00196E  C00B  F006         	movff	lcd_8bit_send_char@p_lcd,gpio_pin_write_logic@p_pin_config
  1626   001972  0E01               	movlw	1
  1627   001974  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1628   001976  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1629                           
  1630                           ;_HAL/Drivers/LCD/LCD.c: 309:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[0]), ((
      +                          d_data >> 0) & 0x01) );
  1631   00197A  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1632   00197C  0F0A               	addlw	10
  1633   00197E  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1634   001980  500C               	movf	lcd_8bit_send_char@d_data^0,w,c
  1635   001982  0B01               	andlw	1
  1636   001984  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1637   001986  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1638                           
  1639                           ;_HAL/Drivers/LCD/LCD.c: 310:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[1]), ((
      +                          d_data >> 1) & 0x01) );
  1640   00198A  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1641   00198C  0F0F               	addlw	15
  1642   00198E  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1643   001990  90D8               	bcf	status,0,c
  1644   001992  300C               	rrcf	lcd_8bit_send_char@d_data^0,w,c
  1645   001994  0B01               	andlw	1
  1646   001996  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1647   001998  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1648                           
  1649                           ;_HAL/Drivers/LCD/LCD.c: 311:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[2]), ((
      +                          d_data >> 2) & 0x01) );
  1650   00199C  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1651   00199E  0F14               	addlw	20
  1652   0019A0  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1653   0019A2  400C               	rrncf	lcd_8bit_send_char@d_data^0,w,c
  1654   0019A4  42E8               	rrncf	wreg,f,c
  1655   0019A6  0B3F               	andlw	63
  1656   0019A8  0B01               	andlw	1
  1657   0019AA  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1658   0019AC  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1659                           
  1660                           ;_HAL/Drivers/LCD/LCD.c: 312:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[3]), ((
      +                          d_data >> 3) & 0x01) );
  1661   0019B0  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1662   0019B2  0F19               	addlw	25
  1663   0019B4  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1664   0019B6  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  1665   0019B8  46E8               	rlncf	wreg,f,c
  1666   0019BA  0B1F               	andlw	31
  1667   0019BC  0B01               	andlw	1
  1668   0019BE  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1669   0019C0  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1670                           
  1671                           ;_HAL/Drivers/LCD/LCD.c: 313:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[4]), ((
      +                          d_data >> 4) & 0x01) );
  1672   0019C4  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1673   0019C6  0F1E               	addlw	30
  1674   0019C8  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1675   0019CA  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  1676   0019CC  0B0F               	andlw	15
  1677   0019CE  0B01               	andlw	1
  1678   0019D0  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1679   0019D2  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1680                           
  1681                           ;_HAL/Drivers/LCD/LCD.c: 314:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[5]), ((
      +                          d_data >> 5) & 0x01) );
  1682   0019D6  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1683   0019D8  0F23               	addlw	35
  1684   0019DA  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1685   0019DC  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  1686   0019DE  42E8               	rrncf	wreg,f,c
  1687   0019E0  0B07               	andlw	7
  1688   0019E2  0B01               	andlw	1
  1689   0019E4  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1690   0019E6  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1691                           
  1692                           ;_HAL/Drivers/LCD/LCD.c: 315:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[6]), ((
      +                          d_data >> 6) & 0x01) );
  1693   0019EA  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1694   0019EC  0F28               	addlw	40
  1695   0019EE  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1696   0019F0  440C               	rlncf	lcd_8bit_send_char@d_data^0,w,c
  1697   0019F2  46E8               	rlncf	wreg,f,c
  1698   0019F4  0B03               	andlw	3
  1699   0019F6  0B01               	andlw	1
  1700   0019F8  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1701   0019FA  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1702                           
  1703                           ;_HAL/Drivers/LCD/LCD.c: 316:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[7]), ((
      +                          d_data >> 7) & 0x01) );
  1704   0019FE  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  1705   001A00  0F2D               	addlw	45
  1706   001A02  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1707   001A04  440C               	rlncf	lcd_8bit_send_char@d_data^0,w,c
  1708   001A06  0B01               	andlw	1
  1709   001A08  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1710   001A0A  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  1711                           
  1712                           ;_HAL/Drivers/LCD/LCD.c: 317:         lcd_8bit_send_enable(p_lcd);
  1713   001A0E  C00B  F00A         	movff	lcd_8bit_send_char@p_lcd,lcd_8bit_send_enable@p_lcd
  1714   001A12  ECB9  F010         	call	_lcd_8bit_send_enable	;wreg free
  1715   001A16                     l387:
  1716   001A16  0012               	return		;funcret
  1717   001A18                     __end_of_lcd_8bit_send_char:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _convert_uint8_to_strng *****************
  1721 ;; Defined at:
  1722 ;;		line 397 in file "_HAL/Drivers/LCD/LCD.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  d_input         1    wreg     unsigned char 
  1725 ;;  d_strng         1   45[COMRAM] PTR unsigned char 
  1726 ;;		 -> main@msg_X(4), 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  d_input         1   46[COMRAM] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      enum E2975
  1731 ;; Registers used:
  1732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        2 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 5
  1745 ;; This function calls:
  1746 ;;		_memset
  1747 ;;		_sprintf
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text6
  1754   002002                     __ptext6:
  1755                           	callstack 0
  1756   002002                     _convert_uint8_to_strng:
  1757                           	callstack 25
  1758                           
  1759                           ;incstack = 0
  1760                           ;convert_uint8_to_strng@d_input stored from wreg
  1761   002002  6E2F               	movwf	convert_uint8_to_strng@d_input^0,c
  1762   002004                     
  1763                           ;_HAL/Drivers/LCD/LCD.c: 397: std_return convert_uint8_to_strng(uint8_t d_input, uint8_t
      +                           * d_strng);_HAL/Drivers/LCD/LCD.c: 398: {;_HAL/Drivers/LCD/LCD.c: 399:     if (((void*)
      +                          0) == d_strng)
  1764   002004  502E               	movf	convert_uint8_to_strng@d_strng^0,w,c
  1765   002006  A4D8               	btfss	status,2,c
  1766   002008  EF08  F010         	goto	u1861
  1767   00200C  EF0A  F010         	goto	u1860
  1768   002010                     u1861:
  1769   002010  EF0C  F010         	goto	l3395
  1770   002014                     u1860:
  1771   002014  EF21  F010         	goto	l420
  1772   002018                     l3395:
  1773                           
  1774                           ;_HAL/Drivers/LCD/LCD.c: 404:     {;_HAL/Drivers/LCD/LCD.c: 405:         memset(d_strng,
      +                           '\0', 4);
  1775   002018  C02E  F001         	movff	convert_uint8_to_strng@d_strng,memset@dest
  1776   00201C  0E00               	movlw	0
  1777   00201E  6E03               	movwf	(memset@c+1)^0,c
  1778   002020  0E00               	movlw	0
  1779   002022  6E02               	movwf	memset@c^0,c
  1780   002024  0E00               	movlw	0
  1781   002026  6E05               	movwf	(memset@n+1)^0,c
  1782   002028  0E04               	movlw	4
  1783   00202A  6E04               	movwf	memset@n^0,c
  1784   00202C  EC8E  F010         	call	_memset	;wreg free
  1785   002030                     
  1786                           ;_HAL/Drivers/LCD/LCD.c: 406:         sprintf(d_strng, "%i", d_input);
  1787   002030  C02E  F01B         	movff	convert_uint8_to_strng@d_strng,sprintf@s
  1788   002034  0E33               	movlw	low STR_11
  1789   002036  6E1C               	movwf	sprintf@fmt^0,c
  1790   002038  C02F  F01D         	movff	convert_uint8_to_strng@d_input,?_sprintf+2
  1791   00203C  6A1E               	clrf	(?_sprintf+3)^0,c
  1792   00203E  EC41  F010         	call	_sprintf	;wreg free
  1793   002042                     l420:
  1794   002042  0012               	return		;funcret
  1795   002044                     __end_of_convert_uint8_to_strng:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _sprintf *****************
  1799 ;; Defined at:
  1800 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  s               1   26[COMRAM] PTR unsigned char 
  1803 ;;		 -> main@msg_X(4), 
  1804 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  1805 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  f              12   33[COMRAM] struct _IO_FILE
  1808 ;;  ret             2    0        int 
  1809 ;;  ap              1   32[COMRAM] PTR void [1]
  1810 ;;		 -> ?_sprintf(2), 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2   26[COMRAM] int 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:       19 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 4
  1827 ;; This function calls:
  1828 ;;		_vfprintf
  1829 ;; This function is called by:
  1830 ;;		_convert_uint8_to_strng
  1831 ;;		_convert_uint16_to_strng
  1832 ;;		_convert_uint32_to_strng
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text7
  1837   002082                     __ptext7:
  1838                           	callstack 0
  1839   002082                     _sprintf:
  1840                           	callstack 25
  1841   002082  0E1D               	movlw	low (?_sprintf+2)
  1842   002084  6E21               	movwf	sprintf@ap^0,c
  1843   002086  C01B  F022         	movff	sprintf@s,sprintf@f
  1844   00208A  0E00               	movlw	0
  1845   00208C  6E26               	movwf	(sprintf@f+4)^0,c
  1846   00208E  0E00               	movlw	0
  1847   002090  6E25               	movwf	(sprintf@f+3)^0,c
  1848   002092  0E00               	movlw	0
  1849   002094  6E2D               	movwf	(sprintf@f+11)^0,c
  1850   002096  0E00               	movlw	0
  1851   002098  6E2C               	movwf	(sprintf@f+10)^0,c
  1852   00209A  0E22               	movlw	low sprintf@f
  1853   00209C  6E17               	movwf	vfprintf@fp^0,c
  1854   00209E  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
  1855   0020A2  0E21               	movlw	low sprintf@ap
  1856   0020A4  6E19               	movwf	vfprintf@ap^0,c
  1857   0020A6  EC22  F010         	call	_vfprintf	;wreg free
  1858   0020AA  501B               	movf	sprintf@s^0,w,c
  1859   0020AC  2425               	addwf	(sprintf@f+3)^0,w,c
  1860   0020AE  6ED9               	movwf	fsr2l,c
  1861   0020B0  6ADA               	clrf	fsr2h,c
  1862   0020B2  6ADF               	clrf	indf2,c
  1863   0020B4  0012               	return		;funcret
  1864   0020B6                     __end_of_sprintf:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _vfprintf *****************
  1868 ;; Defined at:
  1869 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1872 ;;		 -> sprintf@f(12), 
  1873 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  1874 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  1875 ;;  ap              1   24[COMRAM] PTR PTR void 
  1876 ;;		 -> sprintf@ap(1), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  1879 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2   22[COMRAM] int 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        4 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 3
  1896 ;; This function calls:
  1897 ;;		_vfpfcnvrt
  1898 ;; This function is called by:
  1899 ;;		_sprintf
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text8
  1904   002044                     __ptext8:
  1905                           	callstack 0
  1906   002044                     _vfprintf:
  1907                           	callstack 25
  1908   002044                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1910   002044  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1913   002048  EF2E  F010         	goto	l3241
  1914   00204C                     l3239:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1917   00204C  C017  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1918   002050  0E1A               	movlw	low vfprintf@cfmt
  1919   002052  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1920   002054  C019  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1921   002058  EC1D  F008         	call	_vfpfcnvrt	;wreg free
  1922   00205C                     l3241:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1925   00205C  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1926   002060                     	if	1	;There is more than 1 active tblptr byte
  1927   002060  0E10               	movlw	high __smallconst
  1928   002062  6EF7               	movwf	tblptrh,c
  1929   002064                     	endif
  1930   002064                     	if	0	;tblptru may be non-zero
  1931   002064                     	endif
  1932   002064                     	if	0	;tblptru may be non-zero
  1933   002064                     	endif
  1934   002064  0008               	tblrd		*
  1935   002066  50F5               	movf	tablat,w,c
  1936   002068  0900               	iorlw	0
  1937   00206A  A4D8               	btfss	status,2,c
  1938   00206C  EF3A  F010         	goto	u1731
  1939   002070  EF3C  F010         	goto	u1730
  1940   002074                     u1731:
  1941   002074  EF26  F010         	goto	l3239
  1942   002078                     u1730:
  1943   002078                     
  1944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1945   002078  0E00               	movlw	0
  1946   00207A  6E18               	movwf	(?_vfprintf+1)^0,c
  1947   00207C  0E00               	movlw	0
  1948   00207E  6E17               	movwf	?_vfprintf^0,c
  1949   002080  0012               	return		;funcret
  1950   002082                     __end_of_vfprintf:
  1951                           	callstack 0
  1952                           
  1953 ;; *************** function _vfpfcnvrt *****************
  1954 ;; Defined at:
  1955 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1958 ;;		 -> sprintf@f(12), 
  1959 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1960 ;;		 -> vfprintf@cfmt(1), 
  1961 ;;  ap              1   12[COMRAM] PTR PTR void 
  1962 ;;		 -> sprintf@ap(1), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  convarg         4   17[COMRAM] struct .
  1965 ;;  c               1   21[COMRAM] unsigned char 
  1966 ;;  cp              1   16[COMRAM] PTR unsigned char 
  1967 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  1968 ;;  done            1   15[COMRAM] _Bool 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:       12 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		___awdiv
  1987 ;;		___awmod
  1988 ;;		___lwdiv
  1989 ;;		___lwmod
  1990 ;;		_abs
  1991 ;;		_fputc
  1992 ;; This function is called by:
  1993 ;;		_vfprintf
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text9
  1998   00103A                     __ptext9:
  1999                           	callstack 0
  2000   00103A                     _vfpfcnvrt:
  2001                           	callstack 25
  2002   00103A                     
  2003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2004   00103A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2005   00103C  6ED9               	movwf	fsr2l,c
  2006   00103E  6ADA               	clrf	fsr2h,c
  2007   001040  CFDF FFF6          	movff	indf2,tblptrl
  2008   001044                     	if	1	;There is more than 1 active tblptr byte
  2009   001044  0E10               	movlw	high __smallconst
  2010   001046  6EF7               	movwf	tblptrh,c
  2011   001048                     	endif
  2012   001048                     	if	0	;tblptru may be non-zero
  2013   001048                     	endif
  2014   001048                     	if	0	;tblptru may be non-zero
  2015   001048                     	endif
  2016   001048  0008               	tblrd		*
  2017   00104A  50F5               	movf	tablat,w,c
  2018   00104C  0A25               	xorlw	37
  2019   00104E  A4D8               	btfss	status,2,c
  2020   001050  EF2C  F008         	goto	u1561
  2021   001054  EF2E  F008         	goto	u1560
  2022   001058                     u1561:
  2023   001058  EF76  F009         	goto	l3183
  2024   00105C                     u1560:
  2025   00105C                     
  2026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2027   00105C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2028   00105E  6ED9               	movwf	fsr2l,c
  2029   001060  6ADA               	clrf	fsr2h,c
  2030   001062  2ADF               	incf	indf2,f,c
  2031   001064                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2033   001064  0E00               	movlw	0
  2034   001066  6E70               	movwf	(_width+1)^0,c
  2035   001068  0E00               	movlw	0
  2036   00106A  6E6F               	movwf	_width^0,c
  2037   00106C  C06F  F073         	movff	_width,_flags
  2038   001070                     
  2039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2040   001070  6871               	setf	_prec^0,c
  2041   001072  6872               	setf	(_prec+1)^0,c
  2042   001074                     
  2043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2044   001074  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2045   001076  6ED9               	movwf	fsr2l,c
  2046   001078  6ADA               	clrf	fsr2h,c
  2047   00107A  50DF               	movf	indf2,w,c
  2048   00107C  6E11               	movwf	vfpfcnvrt@cp^0,c
  2049   00107E                     
  2050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2051   00107E  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2052   001082                     	if	1	;There is more than 1 active tblptr byte
  2053   001082  0E10               	movlw	high __smallconst
  2054   001084  6EF7               	movwf	tblptrh,c
  2055   001086                     	endif
  2056   001086                     	if	0	;tblptru may be non-zero
  2057   001086                     	endif
  2058   001086                     	if	0	;tblptru may be non-zero
  2059   001086                     	endif
  2060   001086  0008               	tblrd		*
  2061   001088  50F5               	movf	tablat,w,c
  2062   00108A  0A64               	xorlw	100
  2063   00108C  B4D8               	btfsc	status,2,c
  2064   00108E  EF4B  F008         	goto	u1571
  2065   001092  EF4D  F008         	goto	u1570
  2066   001096                     u1571:
  2067   001096  EF5B  F008         	goto	l3127
  2068   00109A                     u1570:
  2069   00109A  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2070   00109E                     	if	1	;There is more than 1 active tblptr byte
  2071   00109E  0E10               	movlw	high __smallconst
  2072   0010A0  6EF7               	movwf	tblptrh,c
  2073   0010A2                     	endif
  2074   0010A2                     	if	0	;tblptru may be non-zero
  2075   0010A2                     	endif
  2076   0010A2                     	if	0	;tblptru may be non-zero
  2077   0010A2                     	endif
  2078   0010A2  0008               	tblrd		*
  2079   0010A4  50F5               	movf	tablat,w,c
  2080   0010A6  0A69               	xorlw	105
  2081   0010A8  A4D8               	btfss	status,2,c
  2082   0010AA  EF59  F008         	goto	u1581
  2083   0010AE  EF5B  F008         	goto	u1580
  2084   0010B2                     u1581:
  2085   0010B2  EFE7  F008         	goto	l3153
  2086   0010B6                     u1580:
  2087   0010B6                     l3127:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2090   0010B6  500D               	movf	vfpfcnvrt@ap^0,w,c
  2091   0010B8  6ED9               	movwf	fsr2l,c
  2092   0010BA  6ADA               	clrf	fsr2h,c
  2093   0010BC  0E02               	movlw	2
  2094   0010BE  26DF               	addwf	indf2,f,c
  2095   0010C0  5CDF               	subwf	indf2,w,c
  2096   0010C2  6ED9               	movwf	fsr2l,c
  2097   0010C4  6ADA               	clrf	fsr2h,c
  2098   0010C6  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  2099   0010CA  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  2100   0010CE                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2102   0010CE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2103   0010D0  6ED9               	movwf	fsr2l,c
  2104   0010D2  6ADA               	clrf	fsr2h,c
  2105   0010D4  2811               	incf	vfpfcnvrt@cp^0,w,c
  2106   0010D6  6EDF               	movwf	indf2,c
  2107   0010D8                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2109   0010D8  0E20               	movlw	32
  2110   0010DA  6E16               	movwf	vfpfcnvrt@c^0,c
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2113   0010DC  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2114   0010DE  EF73  F008         	goto	u1591
  2115   0010E2  EF76  F008         	goto	u1590
  2116   0010E6                     u1591:
  2117   0010E6  0E01               	movlw	1
  2118   0010E8  EF77  F008         	goto	u1600
  2119   0010EC                     u1590:
  2120   0010EC  0E00               	movlw	0
  2121   0010EE                     u1600:
  2122   0010EE  6E10               	movwf	vfpfcnvrt@done^0,c
  2123   0010F0                     l3133:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2126   0010F0  0616               	decf	vfpfcnvrt@c^0,f,c
  2127   0010F2  0EC2               	movlw	low _dbuf
  2128   0010F4  2416               	addwf	vfpfcnvrt@c^0,w,c
  2129   0010F6  6ED9               	movwf	fsr2l,c
  2130   0010F8  6ADA               	clrf	fsr2h,c
  2131   0010FA  0E01               	movlw	high _dbuf
  2132   0010FC  22DA               	addwfc	fsr2h,f,c
  2133   0010FE  C012  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2134   001102  C013  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2135   001106  0E00               	movlw	0
  2136   001108  6E04               	movwf	(___awmod@divisor+1)^0,c
  2137   00110A  0E0A               	movlw	10
  2138   00110C  6E03               	movwf	___awmod@divisor^0,c
  2139   00110E  ECC3  F00D         	call	___awmod	;wreg free
  2140   001112  C001  F007         	movff	?___awmod,abs@a
  2141   001116  C002  F008         	movff	?___awmod+1,abs@a+1
  2142   00111A  EC5B  F010         	call	_abs	;wreg free
  2143   00111E  5007               	movf	?_abs^0,w,c
  2144   001120  0F30               	addlw	48
  2145   001122  6EDF               	movwf	indf2,c
  2146   001124                     
  2147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2148   001124  C012  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2149   001128  C013  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2150   00112C  0E00               	movlw	0
  2151   00112E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2152   001130  0E0A               	movlw	10
  2153   001132  6E03               	movwf	___awdiv@divisor^0,c
  2154   001134  EC8A  F00B         	call	___awdiv	;wreg free
  2155   001138  C001  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  2156   00113C  C002  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2157   001140                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2159   001140  5012               	movf	vfpfcnvrt@convarg^0,w,c
  2160   001142  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2161   001144  B4D8               	btfsc	status,2,c
  2162   001146  EFA7  F008         	goto	u1611
  2163   00114A  EFA9  F008         	goto	u1610
  2164   00114E                     u1611:
  2165   00114E  EFB1  F008         	goto	l3141
  2166   001152                     u1610:
  2167   001152  5016               	movf	vfpfcnvrt@c^0,w,c
  2168   001154  A4D8               	btfss	status,2,c
  2169   001156  EFAF  F008         	goto	u1621
  2170   00115A  EFB1  F008         	goto	u1620
  2171   00115E                     u1621:
  2172   00115E  EF78  F008         	goto	l3133
  2173   001162                     u1620:
  2174   001162                     l3141:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2177   001162  5016               	movf	vfpfcnvrt@c^0,w,c
  2178   001164  B4D8               	btfsc	status,2,c
  2179   001166  EFB7  F008         	goto	u1631
  2180   00116A  EFB9  F008         	goto	u1630
  2181   00116E                     u1631:
  2182   00116E  EFDC  F008         	goto	l3151
  2183   001172                     u1630:
  2184   001172  5010               	movf	vfpfcnvrt@done^0,w,c
  2185   001174  B4D8               	btfsc	status,2,c
  2186   001176  EFBF  F008         	goto	u1641
  2187   00117A  EFC1  F008         	goto	u1640
  2188   00117E                     u1641:
  2189   00117E  EFDC  F008         	goto	l3151
  2190   001182                     u1640:
  2191   001182                     
  2192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2193   001182  0616               	decf	vfpfcnvrt@c^0,f,c
  2194   001184  0EC2               	movlw	low _dbuf
  2195   001186  2416               	addwf	vfpfcnvrt@c^0,w,c
  2196   001188  6ED9               	movwf	fsr2l,c
  2197   00118A  6ADA               	clrf	fsr2h,c
  2198   00118C  0E01               	movlw	high _dbuf
  2199   00118E  22DA               	addwfc	fsr2h,f,c
  2200   001190  0E2D               	movlw	45
  2201   001192  6EDF               	movwf	indf2,c
  2202   001194  EFDC  F008         	goto	l3151
  2203   001198                     l3147:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2206   001198  0EC2               	movlw	low _dbuf
  2207   00119A  2416               	addwf	vfpfcnvrt@c^0,w,c
  2208   00119C  6ED9               	movwf	fsr2l,c
  2209   00119E  6ADA               	clrf	fsr2h,c
  2210   0011A0  0E01               	movlw	high _dbuf
  2211   0011A2  22DA               	addwfc	fsr2h,f,c
  2212   0011A4  50DF               	movf	indf2,w,c
  2213   0011A6  6E0E               	movwf	??_vfpfcnvrt^0,c
  2214   0011A8  500E               	movf	??_vfpfcnvrt^0,w,c
  2215   0011AA  6E01               	movwf	fputc@c^0,c
  2216   0011AC  6A02               	clrf	(fputc@c+1)^0,c
  2217   0011AE  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2218   0011B2  EC1B  F00E         	call	_fputc	;wreg free
  2219   0011B6  2A16               	incf	vfpfcnvrt@c^0,f,c
  2220   0011B8                     l3151:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2223   0011B8  0E20               	movlw	32
  2224   0011BA  1816               	xorwf	vfpfcnvrt@c^0,w,c
  2225   0011BC  A4D8               	btfss	status,2,c
  2226   0011BE  EFE3  F008         	goto	u1651
  2227   0011C2  EFE5  F008         	goto	u1650
  2228   0011C6                     u1651:
  2229   0011C6  EFCC  F008         	goto	l3147
  2230   0011CA                     u1650:
  2231   0011CA  EF87  F009         	goto	l1564
  2232   0011CE                     l3153:
  2233   0011CE  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2234   0011D2                     	if	1	;There is more than 1 active tblptr byte
  2235   0011D2  0E10               	movlw	high __smallconst
  2236   0011D4  6EF7               	movwf	tblptrh,c
  2237   0011D6                     	endif
  2238   0011D6                     	if	0	;tblptru may be non-zero
  2239   0011D6                     	endif
  2240   0011D6                     	if	0	;tblptru may be non-zero
  2241   0011D6                     	endif
  2242   0011D6  0008               	tblrd		*
  2243   0011D8  50F5               	movf	tablat,w,c
  2244   0011DA  0A75               	xorlw	117
  2245   0011DC  A4D8               	btfss	status,2,c
  2246   0011DE  EFF3  F008         	goto	u1661
  2247   0011E2  EFF5  F008         	goto	u1660
  2248   0011E6                     u1661:
  2249   0011E6  EF70  F009         	goto	l3179
  2250   0011EA                     u1660:
  2251   0011EA                     
  2252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2253   0011EA  500D               	movf	vfpfcnvrt@ap^0,w,c
  2254   0011EC  6ED9               	movwf	fsr2l,c
  2255   0011EE  6ADA               	clrf	fsr2h,c
  2256   0011F0  0E02               	movlw	2
  2257   0011F2  26DF               	addwf	indf2,f,c
  2258   0011F4  5CDF               	subwf	indf2,w,c
  2259   0011F6  6ED9               	movwf	fsr2l,c
  2260   0011F8  6ADA               	clrf	fsr2h,c
  2261   0011FA  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  2262   0011FE  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  2263   001202                     
  2264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2265   001202  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2266   001204  6ED9               	movwf	fsr2l,c
  2267   001206  6ADA               	clrf	fsr2h,c
  2268   001208  2811               	incf	vfpfcnvrt@cp^0,w,c
  2269   00120A  6EDF               	movwf	indf2,c
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2272   00120C  EF5A  F009         	goto	l3177
  2273   001210                     l3159:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2276   001210  0E20               	movlw	32
  2277   001212  6E16               	movwf	vfpfcnvrt@c^0,c
  2278   001214                     l3161:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2281   001214  0616               	decf	vfpfcnvrt@c^0,f,c
  2282   001216  0EC2               	movlw	low _dbuf
  2283   001218  2416               	addwf	vfpfcnvrt@c^0,w,c
  2284   00121A  6ED9               	movwf	fsr2l,c
  2285   00121C  6ADA               	clrf	fsr2h,c
  2286   00121E  0E01               	movlw	high _dbuf
  2287   001220  22DA               	addwfc	fsr2h,f,c
  2288   001222  C012  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2289   001226  C013  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2290   00122A  0E00               	movlw	0
  2291   00122C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2292   00122E  0E0A               	movlw	10
  2293   001230  6E03               	movwf	___lwmod@divisor^0,c
  2294   001232  EC9F  F00F         	call	___lwmod	;wreg free
  2295   001236  5001               	movf	?___lwmod^0,w,c
  2296   001238  0F30               	addlw	48
  2297   00123A  6EDF               	movwf	indf2,c
  2298   00123C                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2300   00123C  C012  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2301   001240  C013  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2302   001244  0E00               	movlw	0
  2303   001246  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2304   001248  0E0A               	movlw	10
  2305   00124A  6E03               	movwf	___lwdiv@divisor^0,c
  2306   00124C  EC32  F00F         	call	___lwdiv	;wreg free
  2307   001250  C001  F012         	movff	?___lwdiv,vfpfcnvrt@convarg
  2308   001254  C002  F013         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2309   001258                     
  2310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2311   001258  5012               	movf	vfpfcnvrt@convarg^0,w,c
  2312   00125A  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2313   00125C  B4D8               	btfsc	status,2,c
  2314   00125E  EF33  F009         	goto	u1671
  2315   001262  EF35  F009         	goto	u1670
  2316   001266                     u1671:
  2317   001266  EF4F  F009         	goto	l3173
  2318   00126A                     u1670:
  2319   00126A  5016               	movf	vfpfcnvrt@c^0,w,c
  2320   00126C  A4D8               	btfss	status,2,c
  2321   00126E  EF3B  F009         	goto	u1681
  2322   001272  EF3D  F009         	goto	u1680
  2323   001276                     u1681:
  2324   001276  EF0A  F009         	goto	l3161
  2325   00127A                     u1680:
  2326   00127A  EF4F  F009         	goto	l3173
  2327   00127E                     l3169:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2330   00127E  0EC2               	movlw	low _dbuf
  2331   001280  2416               	addwf	vfpfcnvrt@c^0,w,c
  2332   001282  6ED9               	movwf	fsr2l,c
  2333   001284  6ADA               	clrf	fsr2h,c
  2334   001286  0E01               	movlw	high _dbuf
  2335   001288  22DA               	addwfc	fsr2h,f,c
  2336   00128A  50DF               	movf	indf2,w,c
  2337   00128C  6E0E               	movwf	??_vfpfcnvrt^0,c
  2338   00128E  500E               	movf	??_vfpfcnvrt^0,w,c
  2339   001290  6E01               	movwf	fputc@c^0,c
  2340   001292  6A02               	clrf	(fputc@c+1)^0,c
  2341   001294  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2342   001298  EC1B  F00E         	call	_fputc	;wreg free
  2343   00129C  2A16               	incf	vfpfcnvrt@c^0,f,c
  2344   00129E                     l3173:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2347   00129E  0E20               	movlw	32
  2348   0012A0  1816               	xorwf	vfpfcnvrt@c^0,w,c
  2349   0012A2  A4D8               	btfss	status,2,c
  2350   0012A4  EF56  F009         	goto	u1691
  2351   0012A8  EF58  F009         	goto	u1690
  2352   0012AC                     u1691:
  2353   0012AC  EF3F  F009         	goto	l3169
  2354   0012B0                     u1690:
  2355   0012B0  EF87  F009         	goto	l1564
  2356   0012B4                     l3177:
  2357   0012B4  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2358   0012B8                     	if	1	;There is more than 1 active tblptr byte
  2359   0012B8  0E10               	movlw	high __smallconst
  2360   0012BA  6EF7               	movwf	tblptrh,c
  2361   0012BC                     	endif
  2362   0012BC                     	if	0	;tblptru may be non-zero
  2363   0012BC                     	endif
  2364   0012BC                     	if	0	;tblptru may be non-zero
  2365   0012BC                     	endif
  2366   0012BC  0008               	tblrd		*
  2367   0012BE  50F5               	movf	tablat,w,c
  2368   0012C0  6E0E               	movwf	??_vfpfcnvrt^0,c
  2369   0012C2  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  2370                           
  2371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   0012C4  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2379   0012C6  0A00               	xorlw	0	; case 0
  2380   0012C8  B4D8               	btfsc	status,2,c
  2381   0012CA  EF69  F009         	goto	l4561
  2382   0012CE  EF70  F009         	goto	l3179
  2383   0012D2                     l4561:
  2384                           
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 1, Range of values is 117 to 117
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte            4     3 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391   0012D2  500E               	movf	??_vfpfcnvrt^0,w,c
  2392   0012D4  0A75               	xorlw	117	; case 117
  2393   0012D6  B4D8               	btfsc	status,2,c
  2394   0012D8  EF08  F009         	goto	l3159
  2395   0012DC  EF70  F009         	goto	l3179
  2396   0012E0                     l3179:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2399   0012E0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2400   0012E2  6ED9               	movwf	fsr2l,c
  2401   0012E4  6ADA               	clrf	fsr2h,c
  2402   0012E6  2ADF               	incf	indf2,f,c
  2403   0012E8  EF87  F009         	goto	l1564
  2404   0012EC                     l3183:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2407   0012EC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2408   0012EE  6ED9               	movwf	fsr2l,c
  2409   0012F0  6ADA               	clrf	fsr2h,c
  2410   0012F2  CFDF FFF6          	movff	indf2,tblptrl
  2411   0012F6                     	if	1	;There is more than 1 active tblptr byte
  2412   0012F6  0E10               	movlw	high __smallconst
  2413   0012F8  6EF7               	movwf	tblptrh,c
  2414   0012FA                     	endif
  2415   0012FA                     	if	0	;tblptru may be non-zero
  2416   0012FA                     	endif
  2417   0012FA                     	if	0	;tblptru may be non-zero
  2418   0012FA                     	endif
  2419   0012FA  0008               	tblrd		*
  2420   0012FC  50F5               	movf	tablat,w,c
  2421   0012FE  6E01               	movwf	fputc@c^0,c
  2422   001300  6A02               	clrf	(fputc@c+1)^0,c
  2423   001302  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2424   001306  EC1B  F00E         	call	_fputc	;wreg free
  2425   00130A  EF70  F009         	goto	l3179
  2426   00130E                     l1564:
  2427   00130E  0012               	return		;funcret
  2428   001310                     __end_of_vfpfcnvrt:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _fputc *****************
  2432 ;; Defined at:
  2433 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  c               2    0[COMRAM] int 
  2436 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2437 ;;		 -> sprintf@f(12), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    0[COMRAM] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2449 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;Total ram usage:        8 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		_putch
  2458 ;; This function is called by:
  2459 ;;		_vfpfcnvrt
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text10
  2464   001C36                     __ptext10:
  2465                           	callstack 0
  2466   001C36                     _fputc:
  2467                           	callstack 25
  2468   001C36  5003               	movf	fputc@fp^0,w,c
  2469   001C38  B4D8               	btfsc	status,2,c
  2470   001C3A  EF21  F00E         	goto	u1501
  2471   001C3E  EF23  F00E         	goto	u1500
  2472   001C42                     u1501:
  2473   001C42  EF2B  F00E         	goto	l3089
  2474   001C46                     u1500:
  2475   001C46  5003               	movf	fputc@fp^0,w,c
  2476   001C48  A4D8               	btfss	status,2,c
  2477   001C4A  EF29  F00E         	goto	u1511
  2478   001C4E  EF2B  F00E         	goto	u1510
  2479   001C52                     u1511:
  2480   001C52  EF30  F00E         	goto	l3091
  2481   001C56                     u1510:
  2482   001C56                     l3089:
  2483   001C56  5001               	movf	fputc@c^0,w,c
  2484   001C58  ECD1  F010         	call	_putch
  2485   001C5C  EF6F  F00E         	goto	l1602
  2486   001C60                     l3091:
  2487   001C60  5003               	movf	fputc@fp^0,w,c
  2488   001C62  6ED9               	movwf	fsr2l,c
  2489   001C64  6ADA               	clrf	fsr2h,c
  2490   001C66  0E0A               	movlw	10
  2491   001C68  26D9               	addwf	fsr2l,f,c
  2492   001C6A  50DE               	movf	postinc2,w,c
  2493   001C6C  10DE               	iorwf	postinc2,w,c
  2494   001C6E  B4D8               	btfsc	status,2,c
  2495   001C70  EF3C  F00E         	goto	u1521
  2496   001C74  EF3E  F00E         	goto	u1520
  2497   001C78                     u1521:
  2498   001C78  EF57  F00E         	goto	l3095
  2499   001C7C                     u1520:
  2500   001C7C  5003               	movf	fputc@fp^0,w,c
  2501   001C7E  6ED9               	movwf	fsr2l,c
  2502   001C80  6ADA               	clrf	fsr2h,c
  2503   001C82  0E0A               	movlw	10
  2504   001C84  26D9               	addwf	fsr2l,f,c
  2505   001C86  5003               	movf	fputc@fp^0,w,c
  2506   001C88  6EE1               	movwf	fsr1l,c
  2507   001C8A  6AE2               	clrf	fsr1h,c
  2508   001C8C  0E03               	movlw	3
  2509   001C8E  26E1               	addwf	fsr1l,f,c
  2510   001C90  50DE               	movf	postinc2,w,c
  2511   001C92  5CE6               	subwf	postinc1,w,c
  2512   001C94  50E6               	movf	postinc1,w,c
  2513   001C96  0A80               	xorlw	128
  2514   001C98  6E08               	movwf	(??_fputc+4)^0,c
  2515   001C9A  50DE               	movf	postinc2,w,c
  2516   001C9C  0A80               	xorlw	128
  2517   001C9E  5808               	subwfb	(??_fputc+4)^0,w,c
  2518   001CA0  B0D8               	btfsc	status,0,c
  2519   001CA2  EF55  F00E         	goto	u1531
  2520   001CA6  EF57  F00E         	goto	u1530
  2521   001CAA                     u1531:
  2522   001CAA  EF6F  F00E         	goto	l1602
  2523   001CAE                     u1530:
  2524   001CAE                     l3095:
  2525   001CAE  5003               	movf	fputc@fp^0,w,c
  2526   001CB0  6ED9               	movwf	fsr2l,c
  2527   001CB2  6ADA               	clrf	fsr2h,c
  2528   001CB4  0E03               	movlw	3
  2529   001CB6  26D9               	addwf	fsr2l,f,c
  2530   001CB8  50DF               	movf	indf2,w,c
  2531   001CBA  6E04               	movwf	??_fputc^0,c
  2532   001CBC  5003               	movf	fputc@fp^0,w,c
  2533   001CBE  6ED9               	movwf	fsr2l,c
  2534   001CC0  6ADA               	clrf	fsr2h,c
  2535   001CC2  50DF               	movf	indf2,w,c
  2536   001CC4  2404               	addwf	??_fputc^0,w,c
  2537   001CC6  6ED9               	movwf	fsr2l,c
  2538   001CC8  6ADA               	clrf	fsr2h,c
  2539   001CCA  C001  FFDF         	movff	fputc@c,indf2
  2540   001CCE  5003               	movf	fputc@fp^0,w,c
  2541   001CD0  6ED9               	movwf	fsr2l,c
  2542   001CD2  6ADA               	clrf	fsr2h,c
  2543   001CD4  0E03               	movlw	3
  2544   001CD6  26D9               	addwf	fsr2l,f,c
  2545   001CD8  2ADE               	incf	postinc2,f,c
  2546   001CDA  0E00               	movlw	0
  2547   001CDC  22DD               	addwfc	postdec2,f,c
  2548   001CDE                     l1602:
  2549   001CDE  0012               	return		;funcret
  2550   001CE0                     __end_of_fputc:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _putch *****************
  2554 ;; Defined at:
  2555 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  c               1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  c               1    0[COMRAM] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_fputc
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text11
  2583   0021A2                     __ptext11:
  2584                           	callstack 0
  2585   0021A2                     _putch:
  2586                           	callstack 25
  2587   0021A2  0012               	return		;funcret
  2588   0021A4                     __end_of_putch:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function _abs *****************
  2592 ;; Defined at:
  2593 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  a               2    6[COMRAM] int 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  2    6[COMRAM] int 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        4 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_vfpfcnvrt
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text12
  2621   0020B6                     __ptext12:
  2622                           	callstack 0
  2623   0020B6                     _abs:
  2624                           	callstack 26
  2625   0020B6  BE08               	btfsc	(abs@a+1)^0,7,c
  2626   0020B8  EF60  F010         	goto	u1541
  2627   0020BC  EF62  F010         	goto	u1540
  2628   0020C0                     u1541:
  2629   0020C0  EF68  F010         	goto	l1587
  2630   0020C4                     u1540:
  2631   0020C4  C007  F007         	movff	abs@a,?_abs
  2632   0020C8  C008  F008         	movff	abs@a+1,?_abs+1
  2633   0020CC  EF74  F010         	goto	l1590
  2634   0020D0                     l1587:
  2635   0020D0  C007  F009         	movff	abs@a,??_abs
  2636   0020D4  C008  F00A         	movff	abs@a+1,??_abs+1
  2637   0020D8  1E09               	comf	??_abs^0,f,c
  2638   0020DA  1E0A               	comf	(??_abs+1)^0,f,c
  2639   0020DC  4A09               	infsnz	??_abs^0,f,c
  2640   0020DE  2A0A               	incf	(??_abs+1)^0,f,c
  2641   0020E0  C009  F007         	movff	??_abs,?_abs
  2642   0020E4  C00A  F008         	movff	??_abs+1,?_abs+1
  2643   0020E8                     l1590:
  2644   0020E8  0012               	return		;funcret
  2645   0020EA                     __end_of_abs:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function ___lwmod *****************
  2649 ;; Defined at:
  2650 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  dividend        2    0[COMRAM] unsigned int 
  2653 ;;  divisor         2    2[COMRAM] unsigned int 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  counter         1    4[COMRAM] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  2    0[COMRAM] unsigned int 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        5 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_vfpfcnvrt
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text13
  2679   001F3E                     __ptext13:
  2680                           	callstack 0
  2681   001F3E                     ___lwmod:
  2682                           	callstack 26
  2683   001F3E  5003               	movf	___lwmod@divisor^0,w,c
  2684   001F40  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2685   001F42  B4D8               	btfsc	status,2,c
  2686   001F44  EFA6  F00F         	goto	u1471
  2687   001F48  EFA8  F00F         	goto	u1470
  2688   001F4C                     u1471:
  2689   001F4C  EFCC  F00F         	goto	l1343
  2690   001F50                     u1470:
  2691   001F50  0E01               	movlw	1
  2692   001F52  6E05               	movwf	___lwmod@counter^0,c
  2693   001F54  EFB0  F00F         	goto	l3075
  2694   001F58                     l3073:
  2695   001F58  90D8               	bcf	status,0,c
  2696   001F5A  3603               	rlcf	___lwmod@divisor^0,f,c
  2697   001F5C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2698   001F5E  2A05               	incf	___lwmod@counter^0,f,c
  2699   001F60                     l3075:
  2700   001F60  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2701   001F62  EFB5  F00F         	goto	u1481
  2702   001F66  EFB7  F00F         	goto	u1480
  2703   001F6A                     u1481:
  2704   001F6A  EFAC  F00F         	goto	l3073
  2705   001F6E                     u1480:
  2706   001F6E                     l3077:
  2707   001F6E  5003               	movf	___lwmod@divisor^0,w,c
  2708   001F70  5C01               	subwf	___lwmod@dividend^0,w,c
  2709   001F72  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2710   001F74  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2711   001F76  A0D8               	btfss	status,0,c
  2712   001F78  EFC0  F00F         	goto	u1491
  2713   001F7C  EFC2  F00F         	goto	u1490
  2714   001F80                     u1491:
  2715   001F80  EFC6  F00F         	goto	l3081
  2716   001F84                     u1490:
  2717   001F84  5003               	movf	___lwmod@divisor^0,w,c
  2718   001F86  5E01               	subwf	___lwmod@dividend^0,f,c
  2719   001F88  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2720   001F8A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2721   001F8C                     l3081:
  2722   001F8C  90D8               	bcf	status,0,c
  2723   001F8E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2724   001F90  3203               	rrcf	___lwmod@divisor^0,f,c
  2725   001F92  2E05               	decfsz	___lwmod@counter^0,f,c
  2726   001F94  EFB7  F00F         	goto	l3077
  2727   001F98                     l1343:
  2728   001F98  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2729   001F9C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2730   001FA0  0012               	return		;funcret
  2731   001FA2                     __end_of___lwmod:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function ___lwdiv *****************
  2735 ;; Defined at:
  2736 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  dividend        2    0[COMRAM] unsigned int 
  2739 ;;  divisor         2    2[COMRAM] unsigned int 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  quotient        2    4[COMRAM] unsigned int 
  2742 ;;  counter         1    6[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2    0[COMRAM] unsigned int 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        7 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_vfpfcnvrt
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text14
  2766   001E64                     __ptext14:
  2767                           	callstack 0
  2768   001E64                     ___lwdiv:
  2769                           	callstack 26
  2770   001E64  0E00               	movlw	0
  2771   001E66  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2772   001E68  0E00               	movlw	0
  2773   001E6A  6E05               	movwf	___lwdiv@quotient^0,c
  2774   001E6C  5003               	movf	___lwdiv@divisor^0,w,c
  2775   001E6E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2776   001E70  B4D8               	btfsc	status,2,c
  2777   001E72  EF3D  F00F         	goto	u1441
  2778   001E76  EF3F  F00F         	goto	u1440
  2779   001E7A                     u1441:
  2780   001E7A  EF67  F00F         	goto	l1333
  2781   001E7E                     u1440:
  2782   001E7E  0E01               	movlw	1
  2783   001E80  6E07               	movwf	___lwdiv@counter^0,c
  2784   001E82  EF47  F00F         	goto	l3055
  2785   001E86                     l3053:
  2786   001E86  90D8               	bcf	status,0,c
  2787   001E88  3603               	rlcf	___lwdiv@divisor^0,f,c
  2788   001E8A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2789   001E8C  2A07               	incf	___lwdiv@counter^0,f,c
  2790   001E8E                     l3055:
  2791   001E8E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2792   001E90  EF4C  F00F         	goto	u1451
  2793   001E94  EF4E  F00F         	goto	u1450
  2794   001E98                     u1451:
  2795   001E98  EF43  F00F         	goto	l3053
  2796   001E9C                     u1450:
  2797   001E9C                     l3057:
  2798   001E9C  90D8               	bcf	status,0,c
  2799   001E9E  3605               	rlcf	___lwdiv@quotient^0,f,c
  2800   001EA0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2801   001EA2  5003               	movf	___lwdiv@divisor^0,w,c
  2802   001EA4  5C01               	subwf	___lwdiv@dividend^0,w,c
  2803   001EA6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2804   001EA8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2805   001EAA  A0D8               	btfss	status,0,c
  2806   001EAC  EF5A  F00F         	goto	u1461
  2807   001EB0  EF5C  F00F         	goto	u1460
  2808   001EB4                     u1461:
  2809   001EB4  EF61  F00F         	goto	l3065
  2810   001EB8                     u1460:
  2811   001EB8  5003               	movf	___lwdiv@divisor^0,w,c
  2812   001EBA  5E01               	subwf	___lwdiv@dividend^0,f,c
  2813   001EBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2814   001EBE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2815   001EC0  8005               	bsf	___lwdiv@quotient^0,0,c
  2816   001EC2                     l3065:
  2817   001EC2  90D8               	bcf	status,0,c
  2818   001EC4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2819   001EC6  3203               	rrcf	___lwdiv@divisor^0,f,c
  2820   001EC8  2E07               	decfsz	___lwdiv@counter^0,f,c
  2821   001ECA  EF4E  F00F         	goto	l3057
  2822   001ECE                     l1333:
  2823   001ECE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2824   001ED2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2825   001ED6  0012               	return		;funcret
  2826   001ED8                     __end_of___lwdiv:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function ___awmod *****************
  2830 ;; Defined at:
  2831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  dividend        2    0[COMRAM] int 
  2834 ;;  divisor         2    2[COMRAM] int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  sign            1    5[COMRAM] unsigned char 
  2837 ;;  counter         1    4[COMRAM] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  2    0[COMRAM] int 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:        6 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_vfpfcnvrt
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text15
  2861   001B86                     __ptext15:
  2862                           	callstack 0
  2863   001B86                     ___awmod:
  2864                           	callstack 26
  2865   001B86  0E00               	movlw	0
  2866   001B88  6E06               	movwf	___awmod@sign^0,c
  2867   001B8A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2868   001B8C  EFCC  F00D         	goto	u1380
  2869   001B90  EFCA  F00D         	goto	u1381
  2870   001B94                     u1381:
  2871   001B94  EFD2  F00D         	goto	l3019
  2872   001B98                     u1380:
  2873   001B98  6C01               	negf	___awmod@dividend^0,c
  2874   001B9A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2875   001B9C  B0D8               	btfsc	status,0,c
  2876   001B9E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2877   001BA0  0E01               	movlw	1
  2878   001BA2  6E06               	movwf	___awmod@sign^0,c
  2879   001BA4                     l3019:
  2880   001BA4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2881   001BA6  EFD9  F00D         	goto	u1390
  2882   001BAA  EFD7  F00D         	goto	u1391
  2883   001BAE                     u1391:
  2884   001BAE  EFDD  F00D         	goto	l3023
  2885   001BB2                     u1390:
  2886   001BB2  6C03               	negf	___awmod@divisor^0,c
  2887   001BB4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2888   001BB6  B0D8               	btfsc	status,0,c
  2889   001BB8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2890   001BBA                     l3023:
  2891   001BBA  5003               	movf	___awmod@divisor^0,w,c
  2892   001BBC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2893   001BBE  B4D8               	btfsc	status,2,c
  2894   001BC0  EFE4  F00D         	goto	u1401
  2895   001BC4  EFE6  F00D         	goto	u1400
  2896   001BC8                     u1401:
  2897   001BC8  EF0A  F00E         	goto	l3039
  2898   001BCC                     u1400:
  2899   001BCC  0E01               	movlw	1
  2900   001BCE  6E05               	movwf	___awmod@counter^0,c
  2901   001BD0  EFEE  F00D         	goto	l3029
  2902   001BD4                     l3027:
  2903   001BD4  90D8               	bcf	status,0,c
  2904   001BD6  3603               	rlcf	___awmod@divisor^0,f,c
  2905   001BD8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2906   001BDA  2A05               	incf	___awmod@counter^0,f,c
  2907   001BDC                     l3029:
  2908   001BDC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2909   001BDE  EFF3  F00D         	goto	u1411
  2910   001BE2  EFF5  F00D         	goto	u1410
  2911   001BE6                     u1411:
  2912   001BE6  EFEA  F00D         	goto	l3027
  2913   001BEA                     u1410:
  2914   001BEA                     l3031:
  2915   001BEA  5003               	movf	___awmod@divisor^0,w,c
  2916   001BEC  5C01               	subwf	___awmod@dividend^0,w,c
  2917   001BEE  5004               	movf	(___awmod@divisor+1)^0,w,c
  2918   001BF0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2919   001BF2  A0D8               	btfss	status,0,c
  2920   001BF4  EFFE  F00D         	goto	u1421
  2921   001BF8  EF00  F00E         	goto	u1420
  2922   001BFC                     u1421:
  2923   001BFC  EF04  F00E         	goto	l3035
  2924   001C00                     u1420:
  2925   001C00  5003               	movf	___awmod@divisor^0,w,c
  2926   001C02  5E01               	subwf	___awmod@dividend^0,f,c
  2927   001C04  5004               	movf	(___awmod@divisor+1)^0,w,c
  2928   001C06  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2929   001C08                     l3035:
  2930   001C08  90D8               	bcf	status,0,c
  2931   001C0A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2932   001C0C  3203               	rrcf	___awmod@divisor^0,f,c
  2933   001C0E  2E05               	decfsz	___awmod@counter^0,f,c
  2934   001C10  EFF5  F00D         	goto	l3031
  2935   001C14                     l3039:
  2936   001C14  5006               	movf	___awmod@sign^0,w,c
  2937   001C16  B4D8               	btfsc	status,2,c
  2938   001C18  EF10  F00E         	goto	u1431
  2939   001C1C  EF12  F00E         	goto	u1430
  2940   001C20                     u1431:
  2941   001C20  EF16  F00E         	goto	l3043
  2942   001C24                     u1430:
  2943   001C24  6C01               	negf	___awmod@dividend^0,c
  2944   001C26  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2945   001C28  B0D8               	btfsc	status,0,c
  2946   001C2A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2947   001C2C                     l3043:
  2948   001C2C  C001  F001         	movff	___awmod@dividend,?___awmod
  2949   001C30  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2950   001C34  0012               	return		;funcret
  2951   001C36                     __end_of___awmod:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function ___awdiv *****************
  2955 ;; Defined at:
  2956 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  dividend        2    0[COMRAM] int 
  2959 ;;  divisor         2    2[COMRAM] int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  quotient        2    6[COMRAM] int 
  2962 ;;  sign            1    5[COMRAM] unsigned char 
  2963 ;;  counter         1    4[COMRAM] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    0[COMRAM] int 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        8 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_vfpfcnvrt
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text16
  2987   001714                     __ptext16:
  2988                           	callstack 0
  2989   001714                     ___awdiv:
  2990                           	callstack 26
  2991   001714  0E00               	movlw	0
  2992   001716  6E06               	movwf	___awdiv@sign^0,c
  2993   001718  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2994   00171A  EF93  F00B         	goto	u1320
  2995   00171E  EF91  F00B         	goto	u1321
  2996   001722                     u1321:
  2997   001722  EF99  F00B         	goto	l2975
  2998   001726                     u1320:
  2999   001726  6C03               	negf	___awdiv@divisor^0,c
  3000   001728  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3001   00172A  B0D8               	btfsc	status,0,c
  3002   00172C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3003   00172E  0E01               	movlw	1
  3004   001730  6E06               	movwf	___awdiv@sign^0,c
  3005   001732                     l2975:
  3006   001732  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3007   001734  EFA0  F00B         	goto	u1330
  3008   001738  EF9E  F00B         	goto	u1331
  3009   00173C                     u1331:
  3010   00173C  EFA6  F00B         	goto	l2981
  3011   001740                     u1330:
  3012   001740  6C01               	negf	___awdiv@dividend^0,c
  3013   001742  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3014   001744  B0D8               	btfsc	status,0,c
  3015   001746  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3016   001748  0E01               	movlw	1
  3017   00174A  1A06               	xorwf	___awdiv@sign^0,f,c
  3018   00174C                     l2981:
  3019   00174C  0E00               	movlw	0
  3020   00174E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3021   001750  0E00               	movlw	0
  3022   001752  6E07               	movwf	___awdiv@quotient^0,c
  3023   001754  5003               	movf	___awdiv@divisor^0,w,c
  3024   001756  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3025   001758  B4D8               	btfsc	status,2,c
  3026   00175A  EFB1  F00B         	goto	u1341
  3027   00175E  EFB3  F00B         	goto	u1340
  3028   001762                     u1341:
  3029   001762  EFDB  F00B         	goto	l3003
  3030   001766                     u1340:
  3031   001766  0E01               	movlw	1
  3032   001768  6E05               	movwf	___awdiv@counter^0,c
  3033   00176A  EFBB  F00B         	goto	l2989
  3034   00176E                     l2987:
  3035   00176E  90D8               	bcf	status,0,c
  3036   001770  3603               	rlcf	___awdiv@divisor^0,f,c
  3037   001772  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3038   001774  2A05               	incf	___awdiv@counter^0,f,c
  3039   001776                     l2989:
  3040   001776  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3041   001778  EFC0  F00B         	goto	u1351
  3042   00177C  EFC2  F00B         	goto	u1350
  3043   001780                     u1351:
  3044   001780  EFB7  F00B         	goto	l2987
  3045   001784                     u1350:
  3046   001784                     l2991:
  3047   001784  90D8               	bcf	status,0,c
  3048   001786  3607               	rlcf	___awdiv@quotient^0,f,c
  3049   001788  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3050   00178A  5003               	movf	___awdiv@divisor^0,w,c
  3051   00178C  5C01               	subwf	___awdiv@dividend^0,w,c
  3052   00178E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3053   001790  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3054   001792  A0D8               	btfss	status,0,c
  3055   001794  EFCE  F00B         	goto	u1361
  3056   001798  EFD0  F00B         	goto	u1360
  3057   00179C                     u1361:
  3058   00179C  EFD5  F00B         	goto	l2999
  3059   0017A0                     u1360:
  3060   0017A0  5003               	movf	___awdiv@divisor^0,w,c
  3061   0017A2  5E01               	subwf	___awdiv@dividend^0,f,c
  3062   0017A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3063   0017A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3064   0017A8  8007               	bsf	___awdiv@quotient^0,0,c
  3065   0017AA                     l2999:
  3066   0017AA  90D8               	bcf	status,0,c
  3067   0017AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3068   0017AE  3203               	rrcf	___awdiv@divisor^0,f,c
  3069   0017B0  2E05               	decfsz	___awdiv@counter^0,f,c
  3070   0017B2  EFC2  F00B         	goto	l2991
  3071   0017B6                     l3003:
  3072   0017B6  5006               	movf	___awdiv@sign^0,w,c
  3073   0017B8  B4D8               	btfsc	status,2,c
  3074   0017BA  EFE1  F00B         	goto	u1371
  3075   0017BE  EFE3  F00B         	goto	u1370
  3076   0017C2                     u1371:
  3077   0017C2  EFE7  F00B         	goto	l3007
  3078   0017C6                     u1370:
  3079   0017C6  6C07               	negf	___awdiv@quotient^0,c
  3080   0017C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3081   0017CA  B0D8               	btfsc	status,0,c
  3082   0017CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3083   0017CE                     l3007:
  3084   0017CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3085   0017D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3086   0017D6  0012               	return		;funcret
  3087   0017D8                     __end_of___awdiv:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _memset *****************
  3091 ;; Defined at:
  3092 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  dest            1    0[COMRAM] PTR void 
  3095 ;;		 -> main@msg_X(4), 
  3096 ;;  c               2    1[COMRAM] int 
  3097 ;;  n               2    3[COMRAM] unsigned int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  p               1    5[COMRAM] PTR unsigned char 
  3100 ;;		 -> main@msg_X(4), 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      PTR void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3110 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;Total ram usage:        6 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_convert_uint8_to_strng
  3120 ;;		_main
  3121 ;;		_convert_uint16_to_strng
  3122 ;;		_convert_uint32_to_strng
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text17
  3127   00211C                     __ptext17:
  3128                           	callstack 0
  3129   00211C                     _memset:
  3130                           	callstack 30
  3131   00211C  C001  F006         	movff	memset@dest,memset@p
  3132   002120  EF98  F010         	goto	l3313
  3133   002124                     l3309:
  3134   002124  5006               	movf	memset@p^0,w,c
  3135   002126  6ED9               	movwf	fsr2l,c
  3136   002128  6ADA               	clrf	fsr2h,c
  3137   00212A  C002  FFDF         	movff	memset@c,indf2
  3138   00212E  2A06               	incf	memset@p^0,f,c
  3139   002130                     l3313:
  3140   002130  0604               	decf	memset@n^0,f,c
  3141   002132  A0D8               	btfss	status,0,c
  3142   002134  0605               	decf	(memset@n+1)^0,f,c
  3143   002136  2804               	incf	memset@n^0,w,c
  3144   002138  E106               	bnz	u1771
  3145   00213A  2805               	incf	(memset@n+1)^0,w,c
  3146   00213C  A4D8               	btfss	status,2,c
  3147   00213E  EFA3  F010         	goto	u1771
  3148   002142  EFA5  F010         	goto	u1770
  3149   002146                     u1771:
  3150   002146  EF92  F010         	goto	l3309
  3151   00214A                     u1770:
  3152   00214A  0012               	return		;funcret
  3153   00214C                     __end_of_memset:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _app_init *****************
  3157 ;; Defined at:
  3158 ;;		line 41 in file "_APP/application.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 5
  3179 ;; This function calls:
  3180 ;;		_lcd_8bit_init
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text18
  3187   002198                     __ptext18:
  3188                           	callstack 0
  3189   002198                     _app_init:
  3190                           	callstack 25
  3191   002198                     
  3192                           ;_APP/application.c: 44:     lcd_8bit_init( &lcd_2_8bit);
  3193   002198  0EC3               	movlw	low _lcd_2_8bit
  3194   00219A  6E0D               	movwf	lcd_8bit_init@p_lcd^0,c
  3195   00219C  EC88  F009         	call	_lcd_8bit_init	;wreg free
  3196   0021A0  0012               	return		;funcret
  3197   0021A2                     __end_of_app_init:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _lcd_8bit_init *****************
  3201 ;; Defined at:
  3202 ;;		line 238 in file "_HAL/Drivers/LCD/LCD.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  p_lcd           1   12[COMRAM] PTR struct .
  3205 ;;		 -> lcd_2_8bit(50), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  idx             1   14[COMRAM] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      enum E2975
  3210 ;; Registers used:
  3211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        3 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 4
  3224 ;; This function calls:
  3225 ;;		_gpio_pin_direction_initialize
  3226 ;;		_gpio_pin_write_logic
  3227 ;;		_lcd_8bit_send_cmd
  3228 ;; This function is called by:
  3229 ;;		_app_init
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text19
  3234   001310                     __ptext19:
  3235                           	callstack 0
  3236   001310                     _lcd_8bit_init:
  3237                           	callstack 25
  3238   001310                     
  3239                           ;_HAL/Drivers/LCD/LCD.c: 238: std_return lcd_8bit_init( lcd_8bit_t * p_lcd);_HAL/Drivers
      +                          /LCD/LCD.c: 239: {;_HAL/Drivers/LCD/LCD.c: 240:     if (((void*)0) == p_lcd)
  3240   001310  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3241   001312  A4D8               	btfss	status,2,c
  3242   001314  EF8E  F009         	goto	u2481
  3243   001318  EF90  F009         	goto	u2480
  3244   00131C                     u2481:
  3245   00131C  EF92  F009         	goto	l4015
  3246   001320                     u2480:
  3247   001320  EF1E  F00A         	goto	l375
  3248   001324                     l4015:
  3249   001324                     
  3250                           ;_HAL/Drivers/LCD/LCD.c: 247:         gpio_pin_direction_initialize(&(p_lcd->lcd_reg_sel
      +                          ect_pin));
  3251   001324  C00D  F006         	movff	lcd_8bit_init@p_lcd,gpio_pin_direction_initialize@p_pin_config
  3252   001328  EC4D  F00C         	call	_gpio_pin_direction_initialize	;wreg free
  3253   00132C                     
  3254                           ;_HAL/Drivers/LCD/LCD.c: 248:         gpio_pin_write_logic(&(p_lcd->lcd_reg_select_pin),
      +                          p_lcd->lcd_reg_select_pin.logic);
  3255   00132C  C00D  F006         	movff	lcd_8bit_init@p_lcd,gpio_pin_write_logic@p_pin_config
  3256   001330  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3257   001332  6ED9               	movwf	fsr2l,c
  3258   001334  6ADA               	clrf	fsr2h,c
  3259   001336  0E03               	movlw	3
  3260   001338  26D9               	addwf	fsr2l,f,c
  3261   00133A  50DF               	movf	indf2,w,c
  3262   00133C  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3263   00133E  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3264   001342                     
  3265                           ;_HAL/Drivers/LCD/LCD.c: 249:         gpio_pin_direction_initialize(&(p_lcd->lcd_enable_
      +                          pin));
  3266   001342  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3267   001344  0F05               	addlw	5
  3268   001346  6E06               	movwf	gpio_pin_direction_initialize@p_pin_config^0,c
  3269   001348  EC4D  F00C         	call	_gpio_pin_direction_initialize	;wreg free
  3270   00134C                     
  3271                           ;_HAL/Drivers/LCD/LCD.c: 250:         gpio_pin_write_logic(&(p_lcd->lcd_enable_pin),p_lc
      +                          d->lcd_enable_pin.logic);
  3272   00134C  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3273   00134E  0F05               	addlw	5
  3274   001350  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3275   001352  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3276   001354  6ED9               	movwf	fsr2l,c
  3277   001356  6ADA               	clrf	fsr2h,c
  3278   001358  0E08               	movlw	8
  3279   00135A  26D9               	addwf	fsr2l,f,c
  3280   00135C  50DF               	movf	indf2,w,c
  3281   00135E  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3282   001360  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3283                           
  3284                           ;_HAL/Drivers/LCD/LCD.c: 251:         for (idx=0; idx<8; idx++)
  3285   001364  0E00               	movlw	0
  3286   001366  6E0F               	movwf	lcd_8bit_init@idx^0,c
  3287   001368                     l4029:
  3288                           
  3289                           ;_HAL/Drivers/LCD/LCD.c: 252:         {;_HAL/Drivers/LCD/LCD.c: 253:             gpio_pi
      +                          n_direction_initialize(&(p_lcd->lcd_data_pin[idx]));
  3290   001368  500F               	movf	lcd_8bit_init@idx^0,w,c
  3291   00136A  0D05               	mullw	5
  3292   00136C  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3293   00136E  24F3               	addwf	243,w,c
  3294   001370  0F0A               	addlw	10
  3295   001372  6E06               	movwf	gpio_pin_direction_initialize@p_pin_config^0,c
  3296   001374  EC4D  F00C         	call	_gpio_pin_direction_initialize	;wreg free
  3297                           
  3298                           ;_HAL/Drivers/LCD/LCD.c: 254:             gpio_pin_write_logic(&(p_lcd->lcd_data_pin[idx
      +                          ]),p_lcd->lcd_data_pin[idx].logic);
  3299   001378  500F               	movf	lcd_8bit_init@idx^0,w,c
  3300   00137A  0D05               	mullw	5
  3301   00137C  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3302   00137E  24F3               	addwf	243,w,c
  3303   001380  0F0A               	addlw	10
  3304   001382  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3305   001384  500F               	movf	lcd_8bit_init@idx^0,w,c
  3306   001386  0D05               	mullw	5
  3307   001388  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  3308   00138A  24F3               	addwf	243,w,c
  3309   00138C  6ED9               	movwf	fsr2l,c
  3310   00138E  6ADA               	clrf	fsr2h,c
  3311   001390  0E0D               	movlw	13
  3312   001392  26D9               	addwf	fsr2l,f,c
  3313   001394  50DF               	movf	indf2,w,c
  3314   001396  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3315   001398  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3316   00139C                     
  3317                           ;_HAL/Drivers/LCD/LCD.c: 255:         }
  3318   00139C  2A0F               	incf	lcd_8bit_init@idx^0,f,c
  3319   00139E  0E07               	movlw	7
  3320   0013A0  640F               	cpfsgt	lcd_8bit_init@idx^0,c
  3321   0013A2  EFD5  F009         	goto	u2491
  3322   0013A6  EFD7  F009         	goto	u2490
  3323   0013AA                     u2491:
  3324   0013AA  EFB4  F009         	goto	l4029
  3325   0013AE                     u2490:
  3326   0013AE                     
  3327                           ;_HAL/Drivers/LCD/LCD.c: 258:         _delay((unsigned long)((20)*((8000000UL)/4000.0)))
      +                          ;
  3328   0013AE  0E34               	movlw	52
  3329   0013B0  6E0E               	movwf	??_lcd_8bit_init^0,c
  3330   0013B2  0EF2               	movlw	242
  3331   0013B4                     u3017:
  3332   0013B4  2EE8               	decfsz	wreg,f,c
  3333   0013B6  D7FE               	bra	u3017
  3334   0013B8  2E0E               	decfsz	??_lcd_8bit_init^0,f,c
  3335   0013BA  D7FC               	bra	u3017
  3336   0013BC                     
  3337                           ;_HAL/Drivers/LCD/LCD.c: 259:         lcd_8bit_send_cmd(p_lcd, 0x38);
  3338   0013BC  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3339   0013C0  0E38               	movlw	56
  3340   0013C2  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3341   0013C4  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3342   0013C8                     
  3343                           ;_HAL/Drivers/LCD/LCD.c: 260:         _delay((unsigned long)((5)*((8000000UL)/4000.0)));
  3344   0013C8  0E0D               	movlw	13
  3345   0013CA  6E0E               	movwf	??_lcd_8bit_init^0,c
  3346   0013CC  0EFC               	movlw	252
  3347   0013CE                     u3027:
  3348   0013CE  2EE8               	decfsz	wreg,f,c
  3349   0013D0  D7FE               	bra	u3027
  3350   0013D2  2E0E               	decfsz	??_lcd_8bit_init^0,f,c
  3351   0013D4  D7FC               	bra	u3027
  3352                           
  3353                           ;_HAL/Drivers/LCD/LCD.c: 261:         lcd_8bit_send_cmd(p_lcd, 0x38);
  3354   0013D6  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3355   0013DA  0E38               	movlw	56
  3356   0013DC  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3357   0013DE  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3358   0013E2                     
  3359                           ;_HAL/Drivers/LCD/LCD.c: 262:         _delay((unsigned long)((150)*((8000000UL)/4000000.
      +                          0)));
  3360   0013E2  0E64               	movlw	100
  3361   0013E4                     u3037:
  3362   0013E4  2EE8               	decfsz	wreg,f,c
  3363   0013E6  D7FE               	bra	u3037
  3364   0013E8                     
  3365                           ;_HAL/Drivers/LCD/LCD.c: 263:         lcd_8bit_send_cmd(p_lcd, 0x38);
  3366   0013E8  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3367   0013EC  0E38               	movlw	56
  3368   0013EE  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3369   0013F0  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3370   0013F4                     
  3371                           ;_HAL/Drivers/LCD/LCD.c: 264:         lcd_8bit_send_cmd(p_lcd, 0x01);
  3372   0013F4  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3373   0013F8  0E01               	movlw	1
  3374   0013FA  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3375   0013FC  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3376   001400                     
  3377                           ;_HAL/Drivers/LCD/LCD.c: 265:         lcd_8bit_send_cmd(p_lcd, 0x02);
  3378   001400  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3379   001404  0E02               	movlw	2
  3380   001406  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3381   001408  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3382   00140C                     
  3383                           ;_HAL/Drivers/LCD/LCD.c: 266:         lcd_8bit_send_cmd(p_lcd, 0x06);
  3384   00140C  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3385   001410  0E06               	movlw	6
  3386   001412  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3387   001414  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3388   001418                     
  3389                           ;_HAL/Drivers/LCD/LCD.c: 267:         lcd_8bit_send_cmd(p_lcd, 0x0C);
  3390   001418  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3391   00141C  0E0C               	movlw	12
  3392   00141E  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3393   001420  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3394   001424                     
  3395                           ;_HAL/Drivers/LCD/LCD.c: 268:         lcd_8bit_send_cmd(p_lcd, 0x38);
  3396   001424  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3397   001428  0E38               	movlw	56
  3398   00142A  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3399   00142C  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3400   001430                     
  3401                           ;_HAL/Drivers/LCD/LCD.c: 269:         lcd_8bit_send_cmd(p_lcd, 0x80);
  3402   001430  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  3403   001434  0E80               	movlw	128
  3404   001436  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  3405   001438  EC0C  F00D         	call	_lcd_8bit_send_cmd	;wreg free
  3406   00143C                     l375:
  3407   00143C  0012               	return		;funcret
  3408   00143E                     __end_of_lcd_8bit_init:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _lcd_8bit_send_cmd *****************
  3412 ;; Defined at:
  3413 ;;		line 275 in file "_HAL/Drivers/LCD/LCD.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  p_lcd           1   10[COMRAM] PTR struct .
  3416 ;;		 -> lcd_2_8bit(50), 
  3417 ;;  d_cmd           1   11[COMRAM] const unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      enum E2975
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 3
  3436 ;; This function calls:
  3437 ;;		_gpio_pin_write_logic
  3438 ;;		_lcd_8bit_send_enable
  3439 ;; This function is called by:
  3440 ;;		_lcd_8bit_init
  3441 ;;		_lcd_8bit_send_custom_char_pos
  3442 ;;		_lcd_8bit_set_cursor
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text20
  3447   001A18                     __ptext20:
  3448                           	callstack 0
  3449   001A18                     _lcd_8bit_send_cmd:
  3450                           	callstack 25
  3451   001A18                     
  3452                           ;_HAL/Drivers/LCD/LCD.c: 275: std_return lcd_8bit_send_cmd( lcd_8bit_t * p_lcd, const ui
      +                          nt8_t d_cmd);_HAL/Drivers/LCD/LCD.c: 276: {;_HAL/Drivers/LCD/LCD.c: 277:     if (((void*
      +                          )0) == p_lcd)
  3453   001A18  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3454   001A1A  A4D8               	btfss	status,2,c
  3455   001A1C  EF12  F00D         	goto	u2441
  3456   001A20  EF14  F00D         	goto	u2440
  3457   001A24                     u2441:
  3458   001A24  EF16  F00D         	goto	l3961
  3459   001A28                     u2440:
  3460   001A28  EF6A  F00D         	goto	l382
  3461   001A2C                     l3961:
  3462                           
  3463                           ;_HAL/Drivers/LCD/LCD.c: 282:     {;_HAL/Drivers/LCD/LCD.c: 283:         gpio_pin_write_
      +                          logic(&(p_lcd->lcd_reg_select_pin),LOGIC_OFF);
  3464   001A2C  C00B  F006         	movff	lcd_8bit_send_cmd@p_lcd,gpio_pin_write_logic@p_pin_config
  3465   001A30  0E00               	movlw	0
  3466   001A32  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3467   001A34  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3468                           
  3469                           ;_HAL/Drivers/LCD/LCD.c: 285:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[0]), ((
      +                          d_cmd >> 0) & 0x01) );
  3470   001A38  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3471   001A3A  0F0A               	addlw	10
  3472   001A3C  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3473   001A3E  500C               	movf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3474   001A40  0B01               	andlw	1
  3475   001A42  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3476   001A44  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3477                           
  3478                           ;_HAL/Drivers/LCD/LCD.c: 286:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[1]), ((
      +                          d_cmd >> 1) & 0x01) );
  3479   001A48  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3480   001A4A  0F0F               	addlw	15
  3481   001A4C  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3482   001A4E  90D8               	bcf	status,0,c
  3483   001A50  300C               	rrcf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3484   001A52  0B01               	andlw	1
  3485   001A54  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3486   001A56  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3487                           
  3488                           ;_HAL/Drivers/LCD/LCD.c: 287:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[2]), ((
      +                          d_cmd >> 2) & 0x01) );
  3489   001A5A  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3490   001A5C  0F14               	addlw	20
  3491   001A5E  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3492   001A60  400C               	rrncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3493   001A62  42E8               	rrncf	wreg,f,c
  3494   001A64  0B3F               	andlw	63
  3495   001A66  0B01               	andlw	1
  3496   001A68  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3497   001A6A  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3498                           
  3499                           ;_HAL/Drivers/LCD/LCD.c: 288:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[3]), ((
      +                          d_cmd >> 3) & 0x01) );
  3500   001A6E  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3501   001A70  0F19               	addlw	25
  3502   001A72  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3503   001A74  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3504   001A76  46E8               	rlncf	wreg,f,c
  3505   001A78  0B1F               	andlw	31
  3506   001A7A  0B01               	andlw	1
  3507   001A7C  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3508   001A7E  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3509                           
  3510                           ;_HAL/Drivers/LCD/LCD.c: 289:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[4]), ((
      +                          d_cmd >> 4) & 0x01) );
  3511   001A82  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3512   001A84  0F1E               	addlw	30
  3513   001A86  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3514   001A88  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3515   001A8A  0B0F               	andlw	15
  3516   001A8C  0B01               	andlw	1
  3517   001A8E  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3518   001A90  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3519                           
  3520                           ;_HAL/Drivers/LCD/LCD.c: 290:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[5]), ((
      +                          d_cmd >> 5) & 0x01) );
  3521   001A94  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3522   001A96  0F23               	addlw	35
  3523   001A98  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3524   001A9A  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3525   001A9C  42E8               	rrncf	wreg,f,c
  3526   001A9E  0B07               	andlw	7
  3527   001AA0  0B01               	andlw	1
  3528   001AA2  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3529   001AA4  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3530                           
  3531                           ;_HAL/Drivers/LCD/LCD.c: 291:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[6]), ((
      +                          d_cmd >> 6) & 0x01) );
  3532   001AA8  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3533   001AAA  0F28               	addlw	40
  3534   001AAC  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3535   001AAE  440C               	rlncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3536   001AB0  46E8               	rlncf	wreg,f,c
  3537   001AB2  0B03               	andlw	3
  3538   001AB4  0B01               	andlw	1
  3539   001AB6  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3540   001AB8  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3541                           
  3542                           ;_HAL/Drivers/LCD/LCD.c: 292:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[7]), ((
      +                          d_cmd >> 7) & 0x01) );
  3543   001ABC  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  3544   001ABE  0F2D               	addlw	45
  3545   001AC0  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3546   001AC2  440C               	rlncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  3547   001AC4  0B01               	andlw	1
  3548   001AC6  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3549   001AC8  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3550                           
  3551                           ;_HAL/Drivers/LCD/LCD.c: 293:         lcd_8bit_send_enable(p_lcd);
  3552   001ACC  C00B  F00A         	movff	lcd_8bit_send_cmd@p_lcd,lcd_8bit_send_enable@p_lcd
  3553   001AD0  ECB9  F010         	call	_lcd_8bit_send_enable	;wreg free
  3554   001AD4                     l382:
  3555   001AD4  0012               	return		;funcret
  3556   001AD6                     __end_of_lcd_8bit_send_cmd:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _lcd_8bit_send_enable *****************
  3560 ;; Defined at:
  3561 ;;		line 474 in file "_HAL/Drivers/LCD/LCD.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  p_lcd           1    9[COMRAM] PTR struct .
  3564 ;;		 -> lcd_2_8bit(50), 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      enum E2975
  3569 ;; Registers used:
  3570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3576 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;Total ram usage:        1 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 2
  3583 ;; This function calls:
  3584 ;;		_gpio_pin_write_logic
  3585 ;; This function is called by:
  3586 ;;		_lcd_8bit_send_cmd
  3587 ;;		_lcd_8bit_send_char
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text21
  3592   002172                     __ptext21:
  3593                           	callstack 0
  3594   002172                     _lcd_8bit_send_enable:
  3595                           	callstack 25
  3596   002172                     
  3597                           ;_HAL/Drivers/LCD/LCD.c: 474: static std_return lcd_8bit_send_enable( lcd_8bit_t * p_lcd
      +                          );_HAL/Drivers/LCD/LCD.c: 475: {;_HAL/Drivers/LCD/LCD.c: 476:     gpio_pin_write_logic(&
      +                          (p_lcd->lcd_enable_pin),LOGIC_ON);
  3598   002172  500A               	movf	lcd_8bit_send_enable@p_lcd^0,w,c
  3599   002174  0F05               	addlw	5
  3600   002176  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3601   002178  0E01               	movlw	1
  3602   00217A  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3603   00217C  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3604   002180                     
  3605                           ;_HAL/Drivers/LCD/LCD.c: 477:     _delay((unsigned long)((10)*((8000000UL)/4000000.0)));
  3606   002180  0E06               	movlw	6
  3607   002182                     u3047:
  3608   002182  2EE8               	decfsz	wreg,f,c
  3609   002184  D7FE               	bra	u3047
  3610   002186  D000               	nop2	
  3611   002188                     
  3612                           ;_HAL/Drivers/LCD/LCD.c: 478:     gpio_pin_write_logic(&(p_lcd->lcd_enable_pin),LOGIC_OF
      +                          F);
  3613   002188  500A               	movf	lcd_8bit_send_enable@p_lcd^0,w,c
  3614   00218A  0F05               	addlw	5
  3615   00218C  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  3616   00218E  0E00               	movlw	0
  3617   002190  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  3618   002192  EC1F  F00A         	call	_gpio_pin_write_logic	;wreg free
  3619   002196  0012               	return		;funcret
  3620   002198                     __end_of_lcd_8bit_send_enable:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _gpio_pin_write_logic *****************
  3624 ;; Defined at:
  3625 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  p_pin_config    1    5[COMRAM] PTR struct .
  3628 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), lcd_2_8bit$lcd_data_pin(40), lcd_2_8bit(50), 
  3629 ;;  d_logic_desi    1    6[COMRAM] const enum E2992
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      enum E2975
  3634 ;; Registers used:
  3635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;Total ram usage:        4 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 1
  3648 ;; This function calls:
  3649 ;;		_clear_bit_uint8
  3650 ;;		_set_bit_uint8
  3651 ;; This function is called by:
  3652 ;;		_lcd_8bit_init
  3653 ;;		_lcd_8bit_send_cmd
  3654 ;;		_lcd_8bit_send_char
  3655 ;;		_lcd_8bit_send_enable
  3656 ;;		_DCmotor_init
  3657 ;;		_DCmotor_rotate_CW_CCW
  3658 ;;		_DCmotor_brake
  3659 ;;		_keypad_init
  3660 ;;		_keypad_read
  3661 ;;		_lcd_4bit_init
  3662 ;;		_lcd_4bit_send_cmd
  3663 ;;		_lcd_4bit_send_char
  3664 ;;		_lcd_4bit_send_enable
  3665 ;;		_led_on_off
  3666 ;;		_gpio_pin_initialize
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text22
  3671   00143E                     __ptext22:
  3672                           	callstack 0
  3673   00143E                     _gpio_pin_write_logic:
  3674                           	callstack 25
  3675   00143E                     
  3676                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
  3677   00143E  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3678   001440  B4D8               	btfsc	status,2,c
  3679   001442  EF25  F00A         	goto	u2401
  3680   001446  EF27  F00A         	goto	u2400
  3681   00144A                     u2401:
  3682   00144A  EF97  F00A         	goto	l690
  3683   00144E                     u2400:
  3684   00144E  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3685   001450  6ED9               	movwf	fsr2l,c
  3686   001452  6ADA               	clrf	fsr2h,c
  3687   001454  0E05               	movlw	5
  3688   001456  60DF               	cpfslt	indf2,c
  3689   001458  EF30  F00A         	goto	u2411
  3690   00145C  EF32  F00A         	goto	u2410
  3691   001460                     u2411:
  3692   001460  EF97  F00A         	goto	l690
  3693   001464                     u2410:
  3694   001464  0407               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  3695   001466  B4D8               	btfsc	status,2,c
  3696   001468  EF38  F00A         	goto	u2421
  3697   00146C  EF3A  F00A         	goto	u2420
  3698   001470                     u2421:
  3699   001470  EF82  F00A         	goto	l3941
  3700   001474                     u2420:
  3701   001474  5007               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  3702   001476  B4D8               	btfsc	status,2,c
  3703   001478  EF40  F00A         	goto	u2431
  3704   00147C  EF42  F00A         	goto	u2430
  3705   001480                     u2431:
  3706   001480  EF82  F00A         	goto	l3941
  3707   001484                     u2430:
  3708   001484  EF97  F00A         	goto	l690
  3709   001488                     l3929:
  3710                           
  3711                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
  3712   001488  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3713   00148A  6ED9               	movwf	fsr2l,c
  3714   00148C  6ADA               	clrf	fsr2h,c
  3715   00148E  0E03               	movlw	3
  3716   001490  26D9               	addwf	fsr2l,f,c
  3717   001492  C007  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  3718   001496                     
  3719                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  3720   001496  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3721   001498  6ED9               	movwf	fsr2l,c
  3722   00149A  6ADA               	clrf	fsr2h,c
  3723   00149C  50DF               	movf	indf2,w,c
  3724   00149E  0D02               	mullw	2
  3725   0014A0  50F3               	movf	243,w,c
  3726   0014A2  0F36               	addlw	low _LAT_REG_ADD_arr
  3727   0014A4  6ED9               	movwf	fsr2l,c
  3728   0014A6  6ADA               	clrf	fsr2h,c
  3729   0014A8  CFDE F001          	movff	postinc2,set_bit_uint8@p_reg
  3730   0014AC  CFDD F002          	movff	postdec2,set_bit_uint8@p_reg+1
  3731   0014B0  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3732   0014B2  6ED9               	movwf	fsr2l,c
  3733   0014B4  6ADA               	clrf	fsr2h,c
  3734   0014B6  0E01               	movlw	1
  3735   0014B8  26D9               	addwf	fsr2l,f,c
  3736   0014BA  50DF               	movf	indf2,w,c
  3737   0014BC  6E03               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  3738   0014BE  EC98  F00A         	call	_set_bit_uint8	;wreg free
  3739                           
  3740                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  3741   0014C2  EF97  F00A         	goto	l690
  3742   0014C6                     l3933:
  3743                           
  3744                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  3745   0014C6  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3746   0014C8  6ED9               	movwf	fsr2l,c
  3747   0014CA  6ADA               	clrf	fsr2h,c
  3748   0014CC  0E03               	movlw	3
  3749   0014CE  26D9               	addwf	fsr2l,f,c
  3750   0014D0  C007  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  3751   0014D4                     
  3752                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  3753   0014D4  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3754   0014D6  6ED9               	movwf	fsr2l,c
  3755   0014D8  6ADA               	clrf	fsr2h,c
  3756   0014DA  50DF               	movf	indf2,w,c
  3757   0014DC  0D02               	mullw	2
  3758   0014DE  50F3               	movf	243,w,c
  3759   0014E0  0F36               	addlw	low _LAT_REG_ADD_arr
  3760   0014E2  6ED9               	movwf	fsr2l,c
  3761   0014E4  6ADA               	clrf	fsr2h,c
  3762   0014E6  CFDE F001          	movff	postinc2,clear_bit_uint8@p_reg
  3763   0014EA  CFDD F002          	movff	postdec2,clear_bit_uint8@p_reg+1
  3764   0014EE  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  3765   0014F0  6ED9               	movwf	fsr2l,c
  3766   0014F2  6ADA               	clrf	fsr2h,c
  3767   0014F4  0E01               	movlw	1
  3768   0014F6  26D9               	addwf	fsr2l,f,c
  3769   0014F8  50DF               	movf	indf2,w,c
  3770   0014FA  6E03               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  3771   0014FC  EC11  F00B         	call	_clear_bit_uint8	;wreg free
  3772                           
  3773                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  3774   001500  EF97  F00A         	goto	l690
  3775   001504                     l3941:
  3776   001504  5007               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  3777   001506  6E08               	movwf	??_gpio_pin_write_logic^0,c
  3778   001508  6A09               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3779                           
  3780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3781                           ; Switch size 1, requested type "simple"
  3782                           ; Number of cases is 1, Range of values is 0 to 0
  3783                           ; switch strategies available:
  3784                           ; Name         Instructions Cycles
  3785                           ; simple_byte            4     3 (average)
  3786                           ;	Chosen strategy is simple_byte
  3787   00150A  5009               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3788   00150C  0A00               	xorlw	0	; case 0
  3789   00150E  B4D8               	btfsc	status,2,c
  3790   001510  EF8C  F00A         	goto	l4563
  3791   001514  EF97  F00A         	goto	l690
  3792   001518                     l4563:
  3793                           
  3794                           ; Switch size 1, requested type "simple"
  3795                           ; Number of cases is 2, Range of values is 0 to 1
  3796                           ; switch strategies available:
  3797                           ; Name         Instructions Cycles
  3798                           ; simple_byte            7     4 (average)
  3799                           ;	Chosen strategy is simple_byte
  3800   001518  5008               	movf	??_gpio_pin_write_logic^0,w,c
  3801   00151A  0A00               	xorlw	0	; case 0
  3802   00151C  B4D8               	btfsc	status,2,c
  3803   00151E  EF63  F00A         	goto	l3933
  3804   001522  0A01               	xorlw	1	; case 1
  3805   001524  B4D8               	btfsc	status,2,c
  3806   001526  EF44  F00A         	goto	l3929
  3807   00152A  EF97  F00A         	goto	l690
  3808   00152E                     l690:
  3809   00152E  0012               	return		;funcret
  3810   001530                     __end_of_gpio_pin_write_logic:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _gpio_pin_direction_initialize *****************
  3814 ;; Defined at:
  3815 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  3818 ;;		 -> led_init@led_pin(5), lcd_2_8bit$lcd_data_pin(40), lcd_2_8bit$lcd_enable_pin(5), lcd_2_8bit$lcd_reg_select_pin(5)
      +, 
  3819 ;;		 -> lcd_2_8bit(50), 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      enum E2975
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        3 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 1
  3838 ;; This function calls:
  3839 ;;		_clear_bit_uint8
  3840 ;;		_set_bit_uint8
  3841 ;; This function is called by:
  3842 ;;		_lcd_8bit_init
  3843 ;;		_push_button_init
  3844 ;;		_DCmotor_init
  3845 ;;		_keypad_init
  3846 ;;		_lcd_4bit_init
  3847 ;;		_gpio_pin_initialize
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text23
  3852   00189A                     __ptext23:
  3853                           	callstack 0
  3854   00189A                     _gpio_pin_direction_initialize:
  3855                           	callstack 27
  3856   00189A                     
  3857                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  3858   00189A  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3859   00189C  B4D8               	btfsc	status,2,c
  3860   00189E  EF53  F00C         	goto	u2451
  3861   0018A2  EF55  F00C         	goto	u2450
  3862   0018A6                     u2451:
  3863   0018A6  EFAC  F00C         	goto	l678
  3864   0018AA                     u2450:
  3865   0018AA  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3866   0018AC  6ED9               	movwf	fsr2l,c
  3867   0018AE  6ADA               	clrf	fsr2h,c
  3868   0018B0  0E04               	movlw	4
  3869   0018B2  64DF               	cpfsgt	indf2,c
  3870   0018B4  EF5E  F00C         	goto	u2461
  3871   0018B8  EF60  F00C         	goto	u2460
  3872   0018BC                     u2461:
  3873   0018BC  EF92  F00C         	goto	l3979
  3874   0018C0                     u2460:
  3875   0018C0  EFAC  F00C         	goto	l678
  3876   0018C4                     l3971:
  3877                           
  3878                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  3879   0018C4  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3880   0018C6  6ED9               	movwf	fsr2l,c
  3881   0018C8  6ADA               	clrf	fsr2h,c
  3882   0018CA  50DF               	movf	indf2,w,c
  3883   0018CC  0D02               	mullw	2
  3884   0018CE  50F3               	movf	243,w,c
  3885   0018D0  0F4A               	addlw	low _TRIS_REG_ADD_arr
  3886   0018D2  6ED9               	movwf	fsr2l,c
  3887   0018D4  6ADA               	clrf	fsr2h,c
  3888   0018D6  CFDE F001          	movff	postinc2,clear_bit_uint8@p_reg
  3889   0018DA  CFDD F002          	movff	postdec2,clear_bit_uint8@p_reg+1
  3890   0018DE  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3891   0018E0  6ED9               	movwf	fsr2l,c
  3892   0018E2  6ADA               	clrf	fsr2h,c
  3893   0018E4  0E01               	movlw	1
  3894   0018E6  26D9               	addwf	fsr2l,f,c
  3895   0018E8  50DF               	movf	indf2,w,c
  3896   0018EA  6E03               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  3897   0018EC  EC11  F00B         	call	_clear_bit_uint8	;wreg free
  3898                           
  3899                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  3900   0018F0  EFAC  F00C         	goto	l678
  3901   0018F4                     l3973:
  3902                           
  3903                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  3904   0018F4  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3905   0018F6  6ED9               	movwf	fsr2l,c
  3906   0018F8  6ADA               	clrf	fsr2h,c
  3907   0018FA  50DF               	movf	indf2,w,c
  3908   0018FC  0D02               	mullw	2
  3909   0018FE  50F3               	movf	243,w,c
  3910   001900  0F4A               	addlw	low _TRIS_REG_ADD_arr
  3911   001902  6ED9               	movwf	fsr2l,c
  3912   001904  6ADA               	clrf	fsr2h,c
  3913   001906  CFDE F001          	movff	postinc2,set_bit_uint8@p_reg
  3914   00190A  CFDD F002          	movff	postdec2,set_bit_uint8@p_reg+1
  3915   00190E  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3916   001910  6ED9               	movwf	fsr2l,c
  3917   001912  6ADA               	clrf	fsr2h,c
  3918   001914  0E01               	movlw	1
  3919   001916  26D9               	addwf	fsr2l,f,c
  3920   001918  50DF               	movf	indf2,w,c
  3921   00191A  6E03               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  3922   00191C  EC98  F00A         	call	_set_bit_uint8	;wreg free
  3923                           
  3924                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  3925   001920  EFAC  F00C         	goto	l678
  3926   001924                     l3979:
  3927   001924  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  3928   001926  6ED9               	movwf	fsr2l,c
  3929   001928  6ADA               	clrf	fsr2h,c
  3930   00192A  0E02               	movlw	2
  3931   00192C  26D9               	addwf	fsr2l,f,c
  3932   00192E  50DF               	movf	indf2,w,c
  3933   001930  6E07               	movwf	??_gpio_pin_direction_initialize^0,c
  3934   001932  6A08               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  3935                           
  3936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3937                           ; Switch size 1, requested type "simple"
  3938                           ; Number of cases is 1, Range of values is 0 to 0
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte            4     3 (average)
  3942                           ;	Chosen strategy is simple_byte
  3943   001934  5008               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3944   001936  0A00               	xorlw	0	; case 0
  3945   001938  B4D8               	btfsc	status,2,c
  3946   00193A  EFA1  F00C         	goto	l4565
  3947   00193E  EFAC  F00C         	goto	l678
  3948   001942                     l4565:
  3949                           
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 2, Range of values is 0 to 1
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte            7     4 (average)
  3955                           ;	Chosen strategy is simple_byte
  3956   001942  5007               	movf	??_gpio_pin_direction_initialize^0,w,c
  3957   001944  0A00               	xorlw	0	; case 0
  3958   001946  B4D8               	btfsc	status,2,c
  3959   001948  EF62  F00C         	goto	l3971
  3960   00194C  0A01               	xorlw	1	; case 1
  3961   00194E  B4D8               	btfsc	status,2,c
  3962   001950  EF7A  F00C         	goto	l3973
  3963   001954  EFAC  F00C         	goto	l678
  3964   001958                     l678:
  3965   001958  0012               	return		;funcret
  3966   00195A                     __end_of_gpio_pin_direction_initialize:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _set_bit_uint8 *****************
  3970 ;; Defined at:
  3971 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  3974 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  3975 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  3976 ;;		 -> TRISB(1), TRISA(1), 
  3977 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E3006
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      enum E2975
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        5 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_gpio_pin_direction_initialize
  3999 ;;		_gpio_pin_write_logic
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text24
  4004   001530                     __ptext24:
  4005                           	callstack 0
  4006   001530                     _set_bit_uint8:
  4007                           	callstack 25
  4008   001530                     
  4009                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  4010   001530  5001               	movf	set_bit_uint8@p_reg^0,w,c
  4011   001532  1002               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  4012   001534  A4D8               	btfss	status,2,c
  4013   001536  EF9F  F00A         	goto	u1261
  4014   00153A  EFA1  F00A         	goto	u1260
  4015   00153E                     u1261:
  4016   00153E  EFE3  F00A         	goto	l2893
  4017   001542                     u1260:
  4018   001542  EF10  F00B         	goto	l628
  4019   001546                     l2873:
  4020                           
  4021                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  4022   001546  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4023   00154A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4024   00154E  0E00               	movlw	0
  4025   001550  80DB               	bsf	plusw2,0,c
  4026                           
  4027                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  4028   001552  EF10  F00B         	goto	l628
  4029   001556                     l2875:
  4030                           
  4031                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  4032   001556  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4033   00155A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4034   00155E  0E00               	movlw	0
  4035   001560  82DB               	bsf	plusw2,1,c
  4036                           
  4037                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  4038   001562  EF10  F00B         	goto	l628
  4039   001566                     l2877:
  4040                           
  4041                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  4042   001566  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4043   00156A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4044   00156E  0E00               	movlw	0
  4045   001570  84DB               	bsf	plusw2,2,c
  4046                           
  4047                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  4048   001572  EF10  F00B         	goto	l628
  4049   001576                     l2879:
  4050                           
  4051                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  4052   001576  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4053   00157A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4054   00157E  0E00               	movlw	0
  4055   001580  86DB               	bsf	plusw2,3,c
  4056                           
  4057                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  4058   001582  EF10  F00B         	goto	l628
  4059   001586                     l2881:
  4060                           
  4061                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  4062   001586  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4063   00158A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4064   00158E  0E00               	movlw	0
  4065   001590  88DB               	bsf	plusw2,4,c
  4066                           
  4067                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  4068   001592  EF10  F00B         	goto	l628
  4069   001596                     l2883:
  4070                           
  4071                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  4072   001596  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4073   00159A  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4074   00159E  0E00               	movlw	0
  4075   0015A0  8ADB               	bsf	plusw2,5,c
  4076                           
  4077                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  4078   0015A2  EF10  F00B         	goto	l628
  4079   0015A6                     l2885:
  4080                           
  4081                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  4082   0015A6  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4083   0015AA  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4084   0015AE  0E00               	movlw	0
  4085   0015B0  8CDB               	bsf	plusw2,6,c
  4086                           
  4087                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  4088   0015B2  EF10  F00B         	goto	l628
  4089   0015B6                     l2887:
  4090                           
  4091                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  4092   0015B6  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  4093   0015BA  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  4094   0015BE  0E00               	movlw	0
  4095   0015C0  8EDB               	bsf	plusw2,7,c
  4096                           
  4097                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  4098   0015C2  EF10  F00B         	goto	l628
  4099   0015C6                     l2893:
  4100   0015C6  5003               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  4101   0015C8  6E04               	movwf	??_set_bit_uint8^0,c
  4102   0015CA  6A05               	clrf	(??_set_bit_uint8+1)^0,c
  4103                           
  4104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4105                           ; Switch size 1, requested type "simple"
  4106                           ; Number of cases is 1, Range of values is 0 to 0
  4107                           ; switch strategies available:
  4108                           ; Name         Instructions Cycles
  4109                           ; simple_byte            4     3 (average)
  4110                           ;	Chosen strategy is simple_byte
  4111   0015CC  5005               	movf	(??_set_bit_uint8+1)^0,w,c
  4112   0015CE  0A00               	xorlw	0	; case 0
  4113   0015D0  B4D8               	btfsc	status,2,c
  4114   0015D2  EFED  F00A         	goto	l4567
  4115   0015D6  EF10  F00B         	goto	l628
  4116   0015DA                     l4567:
  4117                           
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 8, Range of values is 0 to 7
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte           25    13 (average)
  4123                           ;	Chosen strategy is simple_byte
  4124   0015DA  5004               	movf	??_set_bit_uint8^0,w,c
  4125   0015DC  0A00               	xorlw	0	; case 0
  4126   0015DE  B4D8               	btfsc	status,2,c
  4127   0015E0  EFA3  F00A         	goto	l2873
  4128   0015E4  0A01               	xorlw	1	; case 1
  4129   0015E6  B4D8               	btfsc	status,2,c
  4130   0015E8  EFAB  F00A         	goto	l2875
  4131   0015EC  0A03               	xorlw	3	; case 2
  4132   0015EE  B4D8               	btfsc	status,2,c
  4133   0015F0  EFB3  F00A         	goto	l2877
  4134   0015F4  0A01               	xorlw	1	; case 3
  4135   0015F6  B4D8               	btfsc	status,2,c
  4136   0015F8  EFBB  F00A         	goto	l2879
  4137   0015FC  0A07               	xorlw	7	; case 4
  4138   0015FE  B4D8               	btfsc	status,2,c
  4139   001600  EFC3  F00A         	goto	l2881
  4140   001604  0A01               	xorlw	1	; case 5
  4141   001606  B4D8               	btfsc	status,2,c
  4142   001608  EFCB  F00A         	goto	l2883
  4143   00160C  0A03               	xorlw	3	; case 6
  4144   00160E  B4D8               	btfsc	status,2,c
  4145   001610  EFD3  F00A         	goto	l2885
  4146   001614  0A01               	xorlw	1	; case 7
  4147   001616  B4D8               	btfsc	status,2,c
  4148   001618  EFDB  F00A         	goto	l2887
  4149   00161C  EF10  F00B         	goto	l628
  4150   001620                     l628:
  4151   001620  0012               	return		;funcret
  4152   001622                     __end_of_set_bit_uint8:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _clear_bit_uint8 *****************
  4156 ;; Defined at:
  4157 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  4160 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  4161 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  4162 ;;		 -> TRISB(1), TRISA(1), 
  4163 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E3006
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      enum E2975
  4168 ;; Registers used:
  4169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4175 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;Total ram usage:        5 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_gpio_pin_direction_initialize
  4185 ;;		_gpio_pin_write_logic
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text25
  4190   001622                     __ptext25:
  4191                           	callstack 0
  4192   001622                     _clear_bit_uint8:
  4193                           	callstack 25
  4194   001622                     
  4195                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  4196   001622  5001               	movf	clear_bit_uint8@p_reg^0,w,c
  4197   001624  1002               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  4198   001626  A4D8               	btfss	status,2,c
  4199   001628  EF18  F00B         	goto	u1271
  4200   00162C  EF1A  F00B         	goto	u1270
  4201   001630                     u1271:
  4202   001630  EF5C  F00B         	goto	l2925
  4203   001634                     u1270:
  4204   001634  EF89  F00B         	goto	l644
  4205   001638                     l2905:
  4206                           
  4207                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  4208   001638  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4209   00163C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4210   001640  0EFE               	movlw	254
  4211   001642  16DF               	andwf	indf2,f,c
  4212                           
  4213                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  4214   001644  EF89  F00B         	goto	l644
  4215   001648                     l2907:
  4216                           
  4217                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  4218   001648  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4219   00164C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4220   001650  0EFD               	movlw	253
  4221   001652  16DF               	andwf	indf2,f,c
  4222                           
  4223                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  4224   001654  EF89  F00B         	goto	l644
  4225   001658                     l2909:
  4226                           
  4227                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  4228   001658  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4229   00165C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4230   001660  0EFB               	movlw	251
  4231   001662  16DF               	andwf	indf2,f,c
  4232                           
  4233                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  4234   001664  EF89  F00B         	goto	l644
  4235   001668                     l2911:
  4236                           
  4237                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  4238   001668  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4239   00166C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4240   001670  0EF7               	movlw	247
  4241   001672  16DF               	andwf	indf2,f,c
  4242                           
  4243                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  4244   001674  EF89  F00B         	goto	l644
  4245   001678                     l2913:
  4246                           
  4247                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  4248   001678  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4249   00167C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4250   001680  0EEF               	movlw	239
  4251   001682  16DF               	andwf	indf2,f,c
  4252                           
  4253                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  4254   001684  EF89  F00B         	goto	l644
  4255   001688                     l2915:
  4256                           
  4257                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  4258   001688  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4259   00168C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4260   001690  0EDF               	movlw	223
  4261   001692  16DF               	andwf	indf2,f,c
  4262                           
  4263                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  4264   001694  EF89  F00B         	goto	l644
  4265   001698                     l2917:
  4266                           
  4267                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  4268   001698  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4269   00169C  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4270   0016A0  0EBF               	movlw	191
  4271   0016A2  16DF               	andwf	indf2,f,c
  4272                           
  4273                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  4274   0016A4  EF89  F00B         	goto	l644
  4275   0016A8                     l2919:
  4276                           
  4277                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  4278   0016A8  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  4279   0016AC  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  4280   0016B0  0E7F               	movlw	127
  4281   0016B2  16DF               	andwf	indf2,f,c
  4282                           
  4283                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  4284   0016B4  EF89  F00B         	goto	l644
  4285   0016B8                     l2925:
  4286   0016B8  5003               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  4287   0016BA  6E04               	movwf	??_clear_bit_uint8^0,c
  4288   0016BC  6A05               	clrf	(??_clear_bit_uint8+1)^0,c
  4289                           
  4290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4291                           ; Switch size 1, requested type "simple"
  4292                           ; Number of cases is 1, Range of values is 0 to 0
  4293                           ; switch strategies available:
  4294                           ; Name         Instructions Cycles
  4295                           ; simple_byte            4     3 (average)
  4296                           ;	Chosen strategy is simple_byte
  4297   0016BE  5005               	movf	(??_clear_bit_uint8+1)^0,w,c
  4298   0016C0  0A00               	xorlw	0	; case 0
  4299   0016C2  B4D8               	btfsc	status,2,c
  4300   0016C4  EF66  F00B         	goto	l4569
  4301   0016C8  EF89  F00B         	goto	l644
  4302   0016CC                     l4569:
  4303                           
  4304                           ; Switch size 1, requested type "simple"
  4305                           ; Number of cases is 8, Range of values is 0 to 7
  4306                           ; switch strategies available:
  4307                           ; Name         Instructions Cycles
  4308                           ; simple_byte           25    13 (average)
  4309                           ;	Chosen strategy is simple_byte
  4310   0016CC  5004               	movf	??_clear_bit_uint8^0,w,c
  4311   0016CE  0A00               	xorlw	0	; case 0
  4312   0016D0  B4D8               	btfsc	status,2,c
  4313   0016D2  EF1C  F00B         	goto	l2905
  4314   0016D6  0A01               	xorlw	1	; case 1
  4315   0016D8  B4D8               	btfsc	status,2,c
  4316   0016DA  EF24  F00B         	goto	l2907
  4317   0016DE  0A03               	xorlw	3	; case 2
  4318   0016E0  B4D8               	btfsc	status,2,c
  4319   0016E2  EF2C  F00B         	goto	l2909
  4320   0016E6  0A01               	xorlw	1	; case 3
  4321   0016E8  B4D8               	btfsc	status,2,c
  4322   0016EA  EF34  F00B         	goto	l2911
  4323   0016EE  0A07               	xorlw	7	; case 4
  4324   0016F0  B4D8               	btfsc	status,2,c
  4325   0016F2  EF3C  F00B         	goto	l2913
  4326   0016F6  0A01               	xorlw	1	; case 5
  4327   0016F8  B4D8               	btfsc	status,2,c
  4328   0016FA  EF44  F00B         	goto	l2915
  4329   0016FE  0A03               	xorlw	3	; case 6
  4330   001700  B4D8               	btfsc	status,2,c
  4331   001702  EF4C  F00B         	goto	l2917
  4332   001706  0A01               	xorlw	1	; case 7
  4333   001708  B4D8               	btfsc	status,2,c
  4334   00170A  EF54  F00B         	goto	l2919
  4335   00170E  EF89  F00B         	goto	l644
  4336   001712                     l644:
  4337   001712  0012               	return		;funcret
  4338   001714                     __end_of_clear_bit_uint8:
  4339                           	callstack 0
  4340                           
  4341                           	psect	rparam
  4342   000000                     
  4343                           	psect	config
  4344                           
  4345                           ; Padding undefined space
  4346   300000                     	org	3145728
  4347   300000  FF                 	db	255
  4348                           
  4349                           ;Config register CONFIG1H @ 0x300001
  4350                           ;	Oscillator Selection bits
  4351                           ;	OSC = HS, HS oscillator
  4352                           ;	Fail-Safe Clock Monitor Enable bit
  4353                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4354                           ;	Internal/External Oscillator Switchover bit
  4355                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4356   300001                     	org	3145729
  4357   300001  02                 	db	2
  4358                           
  4359                           ;Config register CONFIG2L @ 0x300002
  4360                           ;	Power-up Timer Enable bit
  4361                           ;	PWRT = OFF, PWRT disabled
  4362                           ;	Brown-out Reset Enable bits
  4363                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4364                           ;	Brown Out Reset Voltage bits
  4365                           ;	BORV = 1, 
  4366   300002                     	org	3145730
  4367   300002  09                 	db	9
  4368                           
  4369                           ;Config register CONFIG2H @ 0x300003
  4370                           ;	Watchdog Timer Enable bit
  4371                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4372                           ;	Watchdog Timer Postscale Select bits
  4373                           ;	WDTPS = 32768, 1:32768
  4374   300003                     	org	3145731
  4375   300003  1E                 	db	30
  4376                           
  4377                           ; Padding undefined space
  4378   300004                     	org	3145732
  4379   300004  FF                 	db	255
  4380                           
  4381                           ;Config register CONFIG3H @ 0x300005
  4382                           ;	CCP2 MUX bit
  4383                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4384                           ;	PORTB A/D Enable bit
  4385                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4386                           ;	Low-Power Timer1 Oscillator Enable bit
  4387                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4388                           ;	MCLR Pin Enable bit
  4389                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4390   300005                     	org	3145733
  4391   300005  81                 	db	129
  4392                           
  4393                           ;Config register CONFIG4L @ 0x300006
  4394                           ;	Stack Full/Underflow Reset Enable bit
  4395                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4396                           ;	Single-Supply ICSP Enable bit
  4397                           ;	LVP = OFF, Single-Supply ICSP disabled
  4398                           ;	Extended Instruction Set Enable bit
  4399                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4400                           ;	Background Debugger Enable bit
  4401                           ;	DEBUG = 0x1, unprogrammed default
  4402   300006                     	org	3145734
  4403   300006  81                 	db	129
  4404                           
  4405                           ; Padding undefined space
  4406   300007                     	org	3145735
  4407   300007  FF                 	db	255
  4408                           
  4409                           ;Config register CONFIG5L @ 0x300008
  4410                           ;	Code Protection bit
  4411                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4412                           ;	Code Protection bit
  4413                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4414                           ;	Code Protection bit
  4415                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4416                           ;	Code Protection bit
  4417                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4418   300008                     	org	3145736
  4419   300008  0F                 	db	15
  4420                           
  4421                           ;Config register CONFIG5H @ 0x300009
  4422                           ;	Boot Block Code Protection bit
  4423                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4424                           ;	Data EEPROM Code Protection bit
  4425                           ;	CPD = OFF, Data EEPROM not code-protected
  4426   300009                     	org	3145737
  4427   300009  C0                 	db	192
  4428                           
  4429                           ;Config register CONFIG6L @ 0x30000A
  4430                           ;	Write Protection bit
  4431                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4432                           ;	Write Protection bit
  4433                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4434                           ;	Write Protection bit
  4435                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4436                           ;	Write Protection bit
  4437                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4438   30000A                     	org	3145738
  4439   30000A  0F                 	db	15
  4440                           
  4441                           ;Config register CONFIG6H @ 0x30000B
  4442                           ;	Configuration Register Write Protection bit
  4443                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4444                           ;	Boot Block Write Protection bit
  4445                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4446                           ;	Data EEPROM Write Protection bit
  4447                           ;	WRTD = OFF, Data EEPROM not write-protected
  4448   30000B                     	org	3145739
  4449   30000B  E0                 	db	224
  4450                           
  4451                           ;Config register CONFIG7L @ 0x30000C
  4452                           ;	Table Read Protection bit
  4453                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4454                           ;	Table Read Protection bit
  4455                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4456                           ;	Table Read Protection bit
  4457                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4458                           ;	Table Read Protection bit
  4459                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4460   30000C                     	org	3145740
  4461   30000C  0F                 	db	15
  4462                           
  4463                           ;Config register CONFIG7H @ 0x30000D
  4464                           ;	Boot Block Table Read Protection bit
  4465                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4466   30000D                     	org	3145741
  4467   30000D  40                 	db	64
  4468                           tosu	equ	0xFFF
  4469                           tosh	equ	0xFFE
  4470                           tosl	equ	0xFFD
  4471                           stkptr	equ	0xFFC
  4472                           pclatu	equ	0xFFB
  4473                           pclath	equ	0xFFA
  4474                           pcl	equ	0xFF9
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           prodh	equ	0xFF4
  4480                           prodl	equ	0xFF3
  4481                           indf0	equ	0xFEF
  4482                           postinc0	equ	0xFEE
  4483                           postdec0	equ	0xFED
  4484                           preinc0	equ	0xFEC
  4485                           plusw0	equ	0xFEB
  4486                           fsr0h	equ	0xFEA
  4487                           fsr0l	equ	0xFE9
  4488                           wreg	equ	0xFE8
  4489                           indf1	equ	0xFE7
  4490                           postinc1	equ	0xFE6
  4491                           postdec1	equ	0xFE5
  4492                           preinc1	equ	0xFE4
  4493                           plusw1	equ	0xFE3
  4494                           fsr1h	equ	0xFE2
  4495                           fsr1l	equ	0xFE1
  4496                           bsr	equ	0xFE0
  4497                           indf2	equ	0xFDF
  4498                           postinc2	equ	0xFDE
  4499                           postdec2	equ	0xFDD
  4500                           preinc2	equ	0xFDC
  4501                           plusw2	equ	0xFDB
  4502                           fsr2h	equ	0xFDA
  4503                           fsr2l	equ	0xFD9
  4504                           status	equ	0xFD8

Data Sizes:
    Strings     56
    Constant    0
    Data        349
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53     115
    BANK0           128      0     117
    BANK1           256      0     226
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    convert_uint8_to_strng@d_strng	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), lcd_2_8bit$lcd_data_pin(BANK0[40]), lcd_2_8bit$lcd_enable_pin(BANK0[5]), lcd_2_8bit$lcd_reg_select_pin(BANK0[5]), 
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), lcd_2_8bit$lcd_data_pin(BANK0[40]), led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_init@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_char@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_char_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_cmd@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_custom_char_pos@_char	PTR const unsigned char  size(1) Largest target is 8
		 -> _car_char_arr(COMRAM[8]), 

    lcd_8bit_send_custom_char_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_enable@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_strng_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_strng_pos@p_strng	PTR const unsigned char  size(2) Largest target is 18
		 -> init_msg_lcd@msg1(COMRAM[18]), init_msg_lcd@msg10(COMRAM[18]), init_msg_lcd@msg11(COMRAM[17]), init_msg_lcd@msg12(COMRAM[18]), 
		 -> init_msg_lcd@msg13(COMRAM[17]), init_msg_lcd@msg14(COMRAM[17]), init_msg_lcd@msg2(COMRAM[18]), init_msg_lcd@msg3(COMRAM[17]), 
		 -> init_msg_lcd@msg4(COMRAM[18]), init_msg_lcd@msg5(COMRAM[17]), init_msg_lcd@msg6(COMRAM[18]), init_msg_lcd@msg7(COMRAM[17]), 
		 -> init_msg_lcd@msg8(COMRAM[18]), init_msg_lcd@msg9(COMRAM[17]), main@msg_X(COMRAM[4]), STR_1(CODE[8]), 
		 -> STR_10(CODE[17]), STR_2(CODE[8]), STR_3(CODE[11]), STR_4(CODE[11]), 
		 -> STR_5(CODE[8]), STR_6(CODE[8]), STR_7(CODE[11]), STR_8(CODE[11]), 
		 -> STR_9(CODE[17]), 

    lcd_8bit_set_cursor@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1562$buffer	PTR unsigned char  size(2) Largest target is 0

    S1562$source	PTR const unsigned char  size(2) Largest target is 0

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_strng
    _lcd_8bit_send_strng_pos->_lcd_8bit_set_cursor
    _lcd_8bit_send_custom_char_pos->_lcd_8bit_send_char_pos
    _lcd_8bit_send_char_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_cmd
    _lcd_8bit_send_char->_lcd_8bit_send_enable
    _convert_uint8_to_strng->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _app_init->_lcd_8bit_init
    _lcd_8bit_init->_lcd_8bit_send_cmd
    _lcd_8bit_send_cmd->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  224337
                                             47 COMRAM     6     6      0
                           _app_init
             _convert_uint8_to_strng
      _lcd_8bit_send_custom_char_pos
            _lcd_8bit_send_strng_pos
                             _memset
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_strng_pos                              5     0      5   64032
                                             17 COMRAM     5     0      5
                 _lcd_8bit_send_char
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char_pos                        6     1      5  109555
                                             21 COMRAM     6     1      5
                 _lcd_8bit_send_char
             _lcd_8bit_send_char_pos
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_pos                               4     0      4   54998
                                             17 COMRAM     4     0      4
                 _lcd_8bit_send_char
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  5     2      3   28399
                                             12 COMRAM     5     2      3
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char                                   2     0      2   26053
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_strng                               2     1      1    6062
                                             45 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4662
                                             26 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4005
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    3653
                                             10 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     1      5    1236
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   43202
                      _lcd_8bit_init
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_init                                        3     2      1   43202
                                             12 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_cmd                                    2     0      2   27673
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 1     0      1   12493
                                              9 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 4     2      2   12251
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    2435
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (6) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _lcd_8bit_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
       _lcd_8bit_send_cmd
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
           _gpio_pin_write_logic
   _convert_uint8_to_strng
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_8bit_send_custom_char_pos
     _lcd_8bit_send_char
       _gpio_pin_write_logic
       _lcd_8bit_send_enable
     _lcd_8bit_send_char_pos
       _lcd_8bit_send_char
       _lcd_8bit_set_cursor
         _lcd_8bit_send_cmd
     _lcd_8bit_send_cmd
   _lcd_8bit_send_strng_pos
     _lcd_8bit_send_char
     _lcd_8bit_set_cursor
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E2       7       88.3%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      75       5       91.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      73       1       90.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CA      39        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 02:23:52 2024

               __end_of_lcd_8bit_send_char 1A18       lcd_8bit_send_custom_char_pos@mem_pos 001A  
                                       l53 21A0                               ___awdiv@sign 0006  
      gpio_pin_write_logic@d_logic_desired 0007                                        l420 2042  
                                      l413 1F3C                                        l405 1D6A  
                                      l453 2196                                        l382 1AD4  
                                      l375 143C                                        l447 2000  
                                      l392 211A                                        l387 1A16  
                                      l644 1712                                        l628 1620  
                                      l690 152E                                        l678 1958  
                                      _abs 20B6                               ___awmod@sign 0006  
                                      wreg 0FE8               __end_of_lcd_8bit_send_enable 2198  
              __end_of_lcd_8bit_set_cursor 2002                                       ?_abs 0007  
                                     l1073 17D6                                       l3001 17B0  
                                     l3003 17B6                                       l3011 1B86  
                                     l1340 1ED6                                       l3005 17C6  
                                     l3021 1BB2                                       l3013 1B8A  
                                     l1333 1ECE                                       l3101 20C4  
                                     l1086 1C34                                       l1350 1FA0  
                                     l3007 17CE                                       l3031 1BEA  
                                     l3023 1BBA                                       l3015 1B98  
                                     l1343 1F98                                       l3041 1C24  
                                     l3033 1C00                                       l3025 1BCC  
                                     l3017 1BA0                                       l3121 1074  
                                     l3113 103A                                       l1602 1CDE  
                                     l3043 1C2C                                       l3035 1C08  
                                     l3027 1BD4                                       l3019 1BA4  
                                     l3051 1E7E                                       l3131 10D8  
                                     l3123 107E                                       l3115 105C  
                                     l4003 1FD6                                       l4021 1342  
                                     l3037 1C0E                                       l3029 1BDC  
                                     l3061 1EB8                                       l3053 1E86  
                                     l1613 21A2                                       l3141 1162  
                                     l3133 10F0                                       l3125 109A  
                                     l3117 1064                                       l1526 20B4  
                                     l4031 139C                                       l4023 134C  
                                     l4015 1324                                       l1519 214A  
                                     l3311 212E                                       l3039 1C14  
                                     l3063 1EC0                                       l3055 1E8E  
                                     l3047 1E64                                       l3071 1F50  
                                     l3143 1172                                       l3151 11B8  
                                     l3135 1124                                       l3127 10B6  
                                     l3119 1070                                       l4111 1EEC  
                                     l4041 13E2                                       l4033 139E  
                                     l4017 1324                                       l4009 1310  
                                     l3313 2130                                       l3065 1EC2  
                                     l3057 1E9C                                       l3049 1E6C  
                                     l3081 1F8C                                       l3073 1F58  
                                     l3161 1214                                       l3145 1182  
                                     l3137 1140                                       l3129 10CE  
                                     l3153 11CE                                       l3241 205C  
                                     l3321 209A                                       l4121 1F02  
                                     l4113 1EFE                                       l4105 1ED8  
                                     l4051 1418                                       l4043 13E8  
                                     l4035 13AE                                       l4019 132C  
                                     l3307 211C                                       l3067 1EC8  
                                     l3059 1EA2                                       l3083 1F92  
                                     l3075 1F60                                       l3091 1C60  
                                     l3171 129C                                       l3163 123C  
                                     l3155 11EA                                       l3147 1198  
                                     l3139 1152                                       l3243 2078  
                                     l3323 20AA                                       l3315 2082  
                                     l4123 1F16                                       l4115 1EFE  
                                     l1564 130E                                       l4053 1424  
                                     l4045 13F4                                       l4037 13BC  
                                     l4029 1368                                       l3309 2124  
                                     l3077 1F6E                                       l3069 1F3E  
                                     l3093 1C7C                                       l3085 1C36  
                                     l3173 129E                                       l3165 1258  
                                     l3157 1202                                       l3149 11B6  
                                     l3237 2044                                       l3317 208A  
                                     l4125 1F18                                       l1590 20E8  
                                     l4055 1430                                       l4047 1400  
                                     l4039 13C8                                       l3079 1F84  
                                     l3095 1CAE                                       l3087 1C46  
                                     l3167 126A                                       l3159 1210  
                                     l3183 12EC                                       l1583 2080  
                                     l3239 204C                                       l3319 2092  
                                     l4127 1F28                                       l4071 1CE0  
                                     l4049 140C                                       l3089 1C56  
                                     l3169 127E                                       l3177 12B4  
                                     l4065 20FE                                       l4081 1D34  
                                     l1587 20D0                                       l3099 20B6  
                                     l3179 12E0                                       l4059 20EA  
                                     l4083 1D38                                       l4069 2198  
                                     l4077 1CF4                                       l2911 1668  
                                     l4079 1D08                                       l4511 1AD6  
                                     l2913 1678                                       l2905 1638  
                                     l4521 1B16                                       l4513 1ADA  
                                     l2915 1688                                       l2907 1648  
                                     l3395 2018                                       l4531 1B6C  
                                     l4523 1B18                                       l4515 1ADE  
                                     l2917 1698                                       l2909 1658  
                                     l2925 16B8                                       l3397 2030  
                                     l3389 2004                                       l4525 1B26  
                                     l4517 1AE8                                       l2919 16A8  
                                     l4527 1B3E                                       l4519 1AFE  
                                     l2881 1586                                       l2873 1546  
                                     l3921 144E                                       l4561 12D2  
                                     l4529 1B56                                       l2883 1596  
                                     l2875 1556                                       l2867 1530  
                                     l4563 1518                                       l3931 1496  
                                     l3923 1464                                       l2971 1726  
                                     l2885 15A6                                       l2877 1566  
                                     l2893 15C6                                       l4565 1942  
                                     l3933 14C6                                       l3925 1474  
                                     l3941 1504                                       l2981 174C  
                                     l2973 172E                                       l4567 15DA  
                                     l2887 15B6                                       l2879 1576  
                                     l3935 14D4                                       l3919 143E  
                                     l3951 2188                                       l2991 1784  
                                     l2983 1754                                       l2975 1732  
                                     l2967 1714                                       l4559 1FEA  
                                     l4569 16CC                                       l3929 1488  
                                     l3961 1A2C                                       l2993 178A  
                                     l2985 1766                                       l2977 1740  
                                     l2969 1718                                       l2899 1622  
                                     l3971 18C4                                       l3947 2172  
                                     l3955 1A18                                       l2995 17A0  
                                     l2987 176E                                       l2979 1748  
                                     l3973 18F4                                       l3965 189A  
                                     l3949 2180                                       l2997 17A8  
                                     l2989 1776                                       l3967 18AA  
                                     l2999 17AA                                       l3991 196E  
                                     l3985 195A                                       l3979 1924  
                                     l3995 1FA2                                       l3997 1FB2  
                                     l3999 1FC4                                       STR_1 102B  
                                     STR_2 1023                                       STR_9 1012  
                                     u1320 1726                                       u1400 1BCC  
                                     u1321 1722                                       u1401 1BC8  
                                     u1330 1740                                       u1410 1BEA  
                                     u1331 173C                                       u1411 1BE6  
                                     u1260 1542                                       u1340 1766  
                                     u1420 1C00                                       u1500 1C46  
                                     u1261 153E                                       u1341 1762  
                                     u1421 1BFC                                       u1501 1C42  
                                     _LATA 0F89                                       u1270 1634  
                                     u1350 1784                                       u1430 1C24  
                                     u1510 1C56                                       _LATB 0F8A  
                                     u1271 1630                                       u1351 1780  
                                     u1431 1C20                                       u1511 1C52  
                                     u3007 1B1E                                       _LATC 0F8B  
                                     u2400 144E                                       u1360 17A0  
                                     u1440 1E7E                                       u1520 1C7C  
                                     u1600 10EE                                       _LATD 0F8C  
                                     u2401 144A                                       u3017 13B4  
                                     u1361 179C                                       u1441 1E7A  
                                     u1521 1C78                                       _LATE 0F8D  
                                     u2410 1464                                       u1370 17C6  
                                     u1450 1E9C                                       u1530 1CAE  
                                     u1610 1152                                       u2411 1460  
                                     u3027 13CE                                       u1371 17C2  
                                     u1451 1E98                                       u1531 1CAA  
                                     u1611 114E                                       u2420 1474  
                                     u1380 1B98                                       u1460 1EB8  
                                     u1540 20C4                                       u1620 1162  
                                     u2500 20FA                                       u2421 1470  
                                     u3037 13E4                                       u1381 1B94  
                                     u1461 1EB4                                       u1541 20C0  
                                     u1621 115E                                       u2501 20F6  
                                     u2430 1484                                       u1390 1BB2  
                                     u1470 1F50                                       u1630 1172  
                                     u2510 1CF0                                       u2431 1480  
                                     u3047 2182                                       u1391 1BAE  
                                     u1471 1F4C                                       u1631 116E  
                                     u2511 1CEC                                       u2440 1A28  
                                     u1480 1F6E                                       u1640 1182  
                                     u1560 105C                                       u2520 1D2E  
                                     u2441 1A24                                       u1481 1F6A  
                                     u1641 117E                                       u1561 1058  
                                     u2450 18AA                                       u1490 1F84  
                                     u1650 11CA                                       u1570 109A  
                                     u1730 2078                                       u2530 1D5A  
                                     u2451 18A6                                       u1491 1F80  
                                     u1651 11C6                                       u1571 1096  
                                     u1731 2074                                       u2460 18C0  
                                     u1660 11EA                                       u1580 10B6  
                                     u2540 1D6A                                       u2461 18BC  
                                     u1661 11E6                                       u1581 10B2  
                                     u2541 1D66                                       u1670 126A  
                                     u1590 10EC                                       u2470 196A  
                                     u1671 1266                                       u1591 10E6  
                                     u2471 1966                                       u2527 1D24  
                                     u2480 1320                                       u1680 127A  
                                     u2481 131C                                       u1681 1276  
                                     u2537 1D50                                       u2490 13AE  
                                     u1770 214A                                       u1690 12B0  
                                     u2570 1EE8                                       u2491 13AA  
                                     u1771 2146                                       u1691 12AC  
                                     u2571 1EE4                                       u1860 2014  
                                     u2580 1F28                                       u1861 2010  
                                     u2581 1F24                                       u2990 1B7E  
                                     u2991 1B7A                                       abs@a 0007  
                                     _dbuf 01C2                                       _main 1AD6  
                                     _prec 0071                                       fsr0h 0FEA  
                                     fsr1h 0FE2                                       indf0 0FEF  
                                     fsr2h 0FDA                                       fsr0l 0FE9  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                    ?_lcd_8bit_send_char_pos 0012  
                                     prodl 0FF3                                       start 0000  
                             ___param_bank 0000                                      ??_abs 0009  
                     _gpio_pin_write_logic 143E                              __car_char_arr 0054  
                                    ?_main 0001                            __end_of___awdiv 17D8  
                                    STR_10 1001                                      STR_11 1033  
                                    STR_12 1036                            __end_of___awmod 1C36  
                          ___awdiv@divisor 0003                            __end_of___lwdiv 1ED8  
                          __end_of___lwmod 1FA2                            ___awdiv@counter 0005  
                             vfpfcnvrt@fmt 000C                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                                      _flags 0073  
                                    _fputc 1C36                                      _width 006F  
                                    _putch 21A2                                      main@X 0035  
                                    tablat 0FF5                            led_on_off@F3109 0061  
           __end_of_lcd_8bit_send_char_pos 211C                                      plusw2 0FDB  
                                    status 0FD8                            __end_of_sprintf 20B6  
           ?_gpio_pin_direction_initialize 0006                            __initialization 1D6C  
                             __end_of_main 1B86                      ?_gpio_pin_write_logic 0006  
                        _lcd_8bit_send_cmd 1A18                                     ??_main 0030  
                            __activetblptr 0002                         ?_lcd_8bit_send_cmd 000B  
                                   ?_fputc 0001                        ??_lcd_8bit_send_cmd 000D  
                         ___awdiv@dividend 0001                                     ?_putch 0001  
                            vfpfcnvrt@done 0010                         lcd_8bit_init@p_lcd 000D  
                         __end_of_app_init 21A2                               vfprintf@cfmt 001A  
                     _lcd_8bit_send_enable 2172                                  ??___awdiv 0005  
                                ??___awmod 0005                  __end_of_lcd_8bit_send_cmd 1AD6  
                                ??___lwdiv 0005                                  ??___lwmod 0005  
                                   _memset 211C                                     clear_0 1DD2  
                                   clear_1 1DDE                           ___awdiv@quotient 0007  
                          ___awmod@divisor 0003                                     isa$std 0001  
                          ___awmod@counter 0005                   ?_lcd_8bit_send_strng_pos 0012  
                            led_init@F3104 0066                                     fputc@c 0001  
                    __end_of_lcd_8bit_init 143E                               __pdataCOMRAM 0036  
              lcd_8bit_set_cursor@d_column 000F                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8              convert_uint8_to_strng@d_input 002F  
            convert_uint8_to_strng@d_strng 002E                      __end_of_set_bit_uint8 1622  
                                   putch@c 0001                           __end_of_vfprintf 2082  
                                ??_sprintf 0021                                 __accesstop 0080  
                  __end_of__initialization 1DE4                              ___rparam_used 0001  
                    ?_lcd_8bit_send_enable 000A                     ??_gpio_pin_write_logic 0008  
                           __pcstackCOMRAM 0001                               __pidataBANK0 1DEE  
                             __pidataBANK1 17D8                              __end_of_fputc 1CE0  
                            __end_of_putch 21A4                           _PORT_REG_ADD_arr 0040  
         gpio_pin_write_logic@p_pin_config 0006                           lcd_8bit_init@idx 000F  
                       _lcd_8bit_send_char 195A                                    ??_fputc 0004  
                                  ??_putch 0001                                 __pbssBANK1 01C2  
                      ?_lcd_8bit_send_char 000B                                 _lcd_2_8bit 00C3  
                     _program_step_counter 006B                            led_toggle@F3113 005C  
                                  ?_memset 0001                       ??_lcd_8bit_send_char 000D  
                                ?_app_init 0001                            _LAT_REG_ADD_arr 0036  
                        ??_clear_bit_uint8 0004            lcd_8bit_send_strng_pos@d_column 0014  
                 ??_convert_uint8_to_strng 002F                     ??_lcd_8bit_send_enable 000B  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___awdiv 1714                                    ___awmod 1B86  
                                  ___lwdiv 1E64                                    ___lwmod 1F3E  
                                ?_vfprintf 0017                               __psmallconst 1000  
                                  __pcinit 1D6C                                    __ramtop 1000  
                                  __ptext0 1AD6                                    __ptext1 1CE0  
                                  __ptext2 1ED8                                    __ptext3 20EA  
                                  __ptext4 1FA2                                    __ptext5 195A  
                                  __ptext6 2002                                    __ptext7 2082  
                                  __ptext8 2044                                    __ptext9 103A  
                    _keypad_key_values_arr 00B3            ??_gpio_pin_direction_initialize 0007  
               clear_bit_uint8@d_IDX_BIT_X 0003                           ___awmod@dividend 0001  
                               ??_app_init 0010                                    _sprintf 2082  
                     end_of_initialization 1DE4                                    fputc@fp 0003  
                                  memset@c 0002                                    memset@n 0004  
                                  memset@p 0006                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 0001                          __end_of_vfpfcnvrt 1310  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                           vfpfcnvrt@convarg 0012  
                               ??_vfprintf 001A               lcd_8bit_send_strng_pos@d_row 0013  
                 lcd_8bit_send_char@d_data 000C               lcd_8bit_send_char_pos@d_data 0015  
             lcd_8bit_send_strng_pos@p_lcd 0012                          init_msg_lcd@F3301 01A0  
                        init_msg_lcd@F3303 0100                          init_msg_lcd@F3305 018F  
                        init_msg_lcd@F3307 017E                          init_msg_lcd@F3281 016C  
                        init_msg_lcd@F3283 015A                          init_msg_lcd@F3291 0136  
                        init_msg_lcd@F3285 00A2                          init_msg_lcd@F3293 0080  
                        init_msg_lcd@F3287 0148                          init_msg_lcd@F3295 0124  
                        init_msg_lcd@F3297 01B1                          init_msg_lcd@F3289 0091  
                        init_msg_lcd@F3299 0112                                vfpfcnvrt@ap 000D  
                              vfpfcnvrt@cp 0011                                vfpfcnvrt@fp 000B  
                            __pidataCOMRAM 214C                             __end_of_memset 214C  
                      start_initialization 1D6C                   ??_lcd_8bit_send_char_pos 0016  
                              __end_of_abs 20EA      __end_of_gpio_pin_direction_initialize 195A  
            _gpio_pin_direction_initialize 189A      lcd_8bit_send_custom_char_pos@d_column 0018  
                 lcd_8bit_set_cursor@d_row 000E                   lcd_8bit_set_cursor@p_lcd 000D  
                              vfprintf@fmt 0018           lcd_8bit_send_custom_char_pos@idx 001B  
                              __pdataBANK0 0080                                __pdataBANK1 0100  
                                 ??_memset 0006                        _lcd_8bit_set_cursor 1FA2  
                               memset@dest 0001                            _clear_bit_uint8 1622  
                   _convert_uint8_to_strng 2002                                __pbssCOMRAM 005C  
          ??_lcd_8bit_send_custom_char_pos 001B                       ?_lcd_8bit_set_cursor 000D  
                         ___lwdiv@dividend 0001                                   ?___awdiv 0001  
                                 ?___awmod 0001                                   ?___lwdiv 0001  
                                 ?___lwmod 0001                                __smallconst 1000  
                            _lcd_8bit_init 1310                           ___lwdiv@quotient 0005  
                                 ?_sprintf 001B                              _set_bit_uint8 1530  
           lcd_8bit_send_char_pos@d_column 0014                    _lcd_8bit_send_strng_pos 1CE0  
           lcd_8bit_send_strng_pos@p_strng 0015                      ??_lcd_8bit_set_cursor 0010  
                lcd_8bit_send_enable@p_lcd 000A                    __end_of_clear_bit_uint8 1714  
              lcd_8bit_send_char_pos@d_row 0013                    lcd_8bit_send_char@p_lcd 000B  
              lcd_8bit_send_char_pos@p_lcd 0012                                  _vfpfcnvrt 103A  
                           ?_lcd_8bit_init 000D                                  main@msg_X 0031  
                           ?_set_bit_uint8 0001                                 vfpfcnvrt@c 0016  
                                copy_data0 1D80                                  copy_data1 1DA0  
                                copy_data2 1DC0      __end_of_lcd_8bit_send_custom_char_pos 1F3E  
            _lcd_8bit_send_custom_char_pos 1ED8                                   __Hrparam 0000  
                   _lcd_8bit_send_char_pos 20EA                                 vfprintf@ap 0019  
                                 __Lrparam 0000                                 vfprintf@fp 0017  
                               ?_vfpfcnvrt 000B                                 sprintf@fmt 001C  
                 set_bit_uint8@d_IDX_BIT_X 0003                  ??_lcd_8bit_send_strng_pos 0017  
                          ___lwdiv@divisor 0003                            ___lwdiv@counter 0007  
                                 __ptext10 1C36                                   __ptext11 21A2  
                                 __ptext20 1A18                                   __ptext12 20B6  
                                 __ptext21 2172                                   __ptext13 1F3E  
                                 __ptext22 143E                                   __ptext14 1E64  
                                 __ptext23 189A                                   __ptext15 1B86  
                                 __ptext24 1530                                   __ptext16 1714  
                                 __ptext25 1622                                   __ptext17 211C  
                                 __ptext18 2198                                   __ptext19 1310  
                                 _app_init 2198                     lcd_8bit_send_cmd@d_cmd 000C  
                                 isa$xinst 0000                     lcd_8bit_send_cmd@p_lcd 000B  
                         ?_clear_bit_uint8 0001                                   _vfprintf 2044  
                       set_bit_uint8@p_reg 0001                    ?_convert_uint8_to_strng 002E  
                          ??_lcd_8bit_init 000E                            ??_set_bit_uint8 0004  
             __end_of_gpio_pin_write_logic 1530                                  sprintf@ap 0021  
                         ___lwmod@dividend 0001  gpio_pin_direction_initialize@p_pin_config 0006  
          __end_of_lcd_8bit_send_strng_pos 1D6C             __end_of_convert_uint8_to_strng 2044  
           ?_lcd_8bit_send_custom_char_pos 0016                                ??_vfpfcnvrt 000E  
                                 sprintf@f 0022                                   sprintf@s 001B  
                          ___lwmod@divisor 0003                            ___lwmod@counter 0005  
                         _TRIS_REG_ADD_arr 004A         lcd_8bit_send_custom_char_pos@_char 0019  
       lcd_8bit_send_custom_char_pos@d_row 0017         lcd_8bit_send_custom_char_pos@p_lcd 0016  
