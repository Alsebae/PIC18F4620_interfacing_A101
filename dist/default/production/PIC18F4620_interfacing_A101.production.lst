

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 18 20:20:10 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 23/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001A6C                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _LAT_REG_ADD_arr
    75   001A6C  89                 	db	137
    76   001A6D  0F                 	db	15
    77   001A6E  8A                 	db	138
    78   001A6F  0F                 	db	15
    79   001A70  8B                 	db	139
    80   001A71  0F                 	db	15
    81   001A72  8C                 	db	140
    82   001A73  0F                 	db	15
    83   001A74  8D                 	db	141
    84   001A75  0F                 	db	15
    85                           
    86                           ;initializer for _PORT_REG_ADD_arr
    87   001A76  80                 	db	128
    88   001A77  0F                 	db	15
    89   001A78  81                 	db	129
    90   001A79  0F                 	db	15
    91   001A7A  82                 	db	130
    92   001A7B  0F                 	db	15
    93   001A7C  83                 	db	131
    94   001A7D  0F                 	db	15
    95   001A7E  84                 	db	132
    96   001A7F  0F                 	db	15
    97                           
    98                           ;initializer for _TRIS_REG_ADD_arr
    99   001A80  92                 	db	146
   100   001A81  0F                 	db	15
   101   001A82  93                 	db	147
   102   001A83  0F                 	db	15
   103   001A84  94                 	db	148
   104   001A85  0F                 	db	15
   105   001A86  95                 	db	149
   106   001A87  0F                 	db	15
   107   001A88  96                 	db	150
   108   001A89  0F                 	db	15
   109                           
   110                           ;initializer for _push_btn_2
   111   001A8A  02                 	db	2
   112   001A8B  01                 	db	1
   113   001A8C  01                 	db	1
   114   001A8D  00                 	db	0
   115   001A8E  00                 	db	0
   116   001A8F  00                 	db	0
   117   001A90  01                 	db	1
   118                           
   119                           ;initializer for _led_2
   120   001A91  02                 	db	2
   121   001A92  03                 	db	3
   122   001A93  00                 	db	0
   123                           
   124                           ;initializer for _button_2_state
   125   001A94  01                 	db	1
   126                           
   127                           ;initializer for _push_btn_1
   128   001A95  02                 	db	2
   129   001A96  00                 	db	0
   130   001A97  01                 	db	1
   131   001A98  01                 	db	1
   132   001A99  01                 	db	1
   133   001A9A  01                 	db	1
   134   001A9B  00                 	db	0
   135                           
   136                           ;initializer for _led_1
   137   001A9C  02                 	db	2
   138   001A9D  02                 	db	2
   139   001A9E  00                 	db	0
   140                           
   141                           ;initializer for _button_1_state
   142   001A9F  01                 	db	1
   143   000000                     _LATA	set	3977
   144   000000                     _PORTE	set	3972
   145   000000                     _PORTD	set	3971
   146   000000                     _PORTC	set	3970
   147   000000                     _PORTB	set	3969
   148   000000                     _PORTA	set	3968
   149   000000                     _TRISA	set	3986
   150   000000                     _TRISE	set	3990
   151   000000                     _TRISD	set	3989
   152   000000                     _TRISC	set	3988
   153   000000                     _TRISB	set	3987
   154   000000                     _LATE	set	3981
   155   000000                     _LATD	set	3980
   156   000000                     _LATC	set	3979
   157   000000                     _LATB	set	3978
   158                           
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162   001A36                     __pcinit:
   163                           	callstack 0
   164   001A36                     start_initialization:
   165                           	callstack 0
   166   001A36                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to COMRAM (52 bytes)
   170                           ; load TBLPTR registers with __pidataCOMRAM
   171   001A36  0E6C               	movlw	low __pidataCOMRAM
   172   001A38  6EF6               	movwf	tblptrl,c
   173   001A3A  0E1A               	movlw	high __pidataCOMRAM
   174   001A3C  6EF7               	movwf	tblptrh,c
   175   001A3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   176   001A40  6EF8               	movwf	tblptru,c
   177   001A42  EE00  F001         	lfsr	0,__pdataCOMRAM
   178   001A46  EE10 F034          	lfsr	1,52
   179   001A4A                     copy_data0:
   180   001A4A  0009               	tblrd		*+
   181   001A4C  CFF5 FFEE          	movff	tablat,postinc0
   182   001A50  50E5               	movf	postdec1,w,c
   183   001A52  50E1               	movf	fsr1l,w,c
   184   001A54  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to COMRAM (27 bytes)
   187   001A56  EE00  F035         	lfsr	0,__pbssCOMRAM
   188   001A5A  0E1B               	movlw	27
   189   001A5C                     clear_0:
   190   001A5C  6AEE               	clrf	postinc0,c
   191   001A5E  06E8               	decf	wreg,f,c
   192   001A60  E1FD               	bnz	clear_0
   193   001A62                     end_of_initialization:
   194                           	callstack 0
   195   001A62                     __end_of__initialization:
   196                           	callstack 0
   197   001A62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198   001A64  6EF8               	movwf	tblptru,c
   199   001A66  0100               	movlb	0
   200   001A68  EF5F  F00D         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   000035                     __pbssCOMRAM:
   204                           	callstack 0
   205   000035                     led_toggle@F2942:
   206                           	callstack 0
   207   000035                     	ds	5
   208   00003A                     led_on_off@F2938:
   209                           	callstack 0
   210   00003A                     	ds	5
   211   00003F                     led_init@F2933:
   212                           	callstack 0
   213   00003F                     	ds	5
   214   000044                     _btn_counter:
   215                           	callstack 0
   216   000044                     	ds	4
   217   000048                     _program_step_counter:
   218                           	callstack 0
   219   000048                     	ds	4
   220   00004C                     _rise_edge:
   221                           	callstack 0
   222   00004C                     	ds	1
   223   00004D                     _btn_1_high_valid_state_previous:
   224                           	callstack 0
   225   00004D                     	ds	1
   226   00004E                     _btn_1_high_valid_state:
   227                           	callstack 0
   228   00004E                     	ds	1
   229   00004F                     _program_counter:
   230                           	callstack 0
   231   00004F                     	ds	1
   232                           
   233                           	psect	dataCOMRAM
   234   000001                     __pdataCOMRAM:
   235                           	callstack 0
   236   000001                     _LAT_REG_ADD_arr:
   237                           	callstack 0
   238   000001                     	ds	10
   239   00000B                     _PORT_REG_ADD_arr:
   240                           	callstack 0
   241   00000B                     	ds	10
   242   000015                     _TRIS_REG_ADD_arr:
   243                           	callstack 0
   244   000015                     	ds	10
   245   00001F                     _push_btn_2:
   246                           	callstack 0
   247   00001F                     	ds	7
   248   000026                     _led_2:
   249                           	callstack 0
   250   000026                     	ds	3
   251   000029                     _button_2_state:
   252                           	callstack 0
   253   000029                     	ds	1
   254   00002A                     _push_btn_1:
   255                           	callstack 0
   256   00002A                     	ds	7
   257   000031                     _led_1:
   258                           	callstack 0
   259   000031                     	ds	3
   260   000034                     _button_1_state:
   261                           	callstack 0
   262   000034                     	ds	1
   263                           
   264                           	psect	cstackCOMRAM
   265   000050                     __pcstackCOMRAM:
   266                           	callstack 0
   267   000050                     ?___llmod:
   268                           	callstack 0
   269   000050                     gpio_pin_read_logic@p_pin_config:
   270                           	callstack 0
   271   000050                     gpio_pin_toggle_logic@p_pin_config:
   272                           	callstack 0
   273   000050                     set_bit_uint8@p_reg:
   274                           	callstack 0
   275   000050                     clear_bit_uint8@p_reg:
   276                           	callstack 0
   277   000050                     ___llmod@dividend:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x0
   281   000050                     	ds	1
   282   000051                     ??_gpio_pin_toggle_logic:
   283   000051                     gpio_pin_read_logic@p_logic:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x1
   287   000051                     	ds	1
   288   000052                     ??_gpio_pin_read_logic:
   289   000052                     set_bit_uint8@d_IDX_BIT_X:
   290                           	callstack 0
   291   000052                     clear_bit_uint8@d_IDX_BIT_X:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x2
   295   000052                     	ds	1
   296   000053                     ??_set_bit_uint8:
   297   000053                     ??_clear_bit_uint8:
   298   000053                     gpio_pin_toggle_logic@bit_mask:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x3
   302   000053                     	ds	1
   303   000054                     led_toggle@p_led:
   304                           	callstack 0
   305   000054                     gpio_pin_read_logic@bit_mask:
   306                           	callstack 0
   307   000054                     ___llmod@divisor:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x4
   311   000054                     	ds	1
   312   000055                     push_button_read@p_push_button:
   313                           	callstack 0
   314   000055                     gpio_pin_direction_initialize@p_pin_config:
   315                           	callstack 0
   316   000055                     gpio_pin_write_logic@p_pin_config:
   317                           	callstack 0
   318   000055                     led_toggle@led_pin:
   319                           	callstack 0
   320                           
   321                           ; 5 bytes @ 0x5
   322   000055                     	ds	1
   323   000056                     ??_gpio_pin_direction_initialize:
   324   000056                     push_button_read@p_button_state:
   325                           	callstack 0
   326   000056                     gpio_pin_write_logic@d_logic_desired:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x6
   330   000056                     	ds	1
   331   000057                     ??_gpio_pin_write_logic:
   332                           
   333                           ; 1 bytes @ 0x7
   334   000057                     	ds	1
   335   000058                     push_button_init@p_push_button:
   336                           	callstack 0
   337   000058                     push_button_read@btn_pin_logic:
   338                           	callstack 0
   339   000058                     ___llmod@counter:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x8
   343   000058                     	ds	1
   344   000059                     led_on_off@p_led:
   345                           	callstack 0
   346   000059                     gpio_pin_initialize@p_pin_config:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x9
   350   000059                     	ds	1
   351   00005A                     ??_gpio_pin_initialize:
   352   00005A                     led_on_off@led_status:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xA
   356   00005A                     	ds	1
   357   00005B                     led_on_off@led_pin:
   358                           	callstack 0
   359                           
   360                           ; 5 bytes @ 0xB
   361   00005B                     	ds	1
   362   00005C                     led_init@p_led:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xC
   366   00005C                     	ds	1
   367   00005D                     led_init@led_pin:
   368                           	callstack 0
   369                           
   370                           ; 5 bytes @ 0xD
   371   00005D                     	ds	3
   372   000060                     ??_magic_switch_led_programs:
   373                           
   374                           ; 1 bytes @ 0x10
   375   000060                     	ds	2
   376   000062                     
   377                           ; 1 bytes @ 0x12
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 28 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  2  484[None  ] int 
   390 ;; Registers used:
   391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels required when called: 5
   403 ;; This function calls:
   404 ;;		_app_init
   405 ;;		_calculate_step_counter
   406 ;;		_magic_switch_led_programs
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text0
   413   001ABE                     __ptext0:
   414                           	callstack 0
   415   001ABE                     _main:
   416                           	callstack 26
   417   001ABE                     
   418                           ;main.c: 30:     app_init();
   419   001ABE  EC69  F00D         	call	_app_init	;wreg free
   420   001AC2                     l2061:
   421                           
   422                           ;main.c: 32:     {;main.c: 33:         calculate_step_counter();
   423   001AC2  ECFD  F00C         	call	_calculate_step_counter	;wreg free
   424   001AC6                     
   425                           ;main.c: 34:         magic_switch_led_programs();
   426   001AC6  ECB7  F008         	call	_magic_switch_led_programs	;wreg free
   427                           
   428                           ;main.c: 35:     }
   429   001ACA  EF61  F00D         	goto	l2061
   430   001ACE  EF00  F000         	goto	start
   431   001AD2                     __end_of_main:
   432                           	callstack 0
   433                           
   434 ;; *************** function _magic_switch_led_programs *****************
   435 ;; Defined at:
   436 ;;		line 106 in file "_APP/application.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;Total ram usage:        2 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 4
   457 ;; This function calls:
   458 ;;		_led_program_1
   459 ;;		_led_program_2
   460 ;;		_led_program_3
   461 ;;		_push_button_read
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text1
   468   00116E                     __ptext1:
   469                           	callstack 0
   470   00116E                     _magic_switch_led_programs:
   471                           	callstack 26
   472   00116E                     
   473                           ;_APP/application.c: 108:     push_button_read(&push_btn_1, &button_1_state);
   474   00116E  0E2A               	movlw	low _push_btn_1
   475   001170  6E55               	movwf	push_button_read@p_push_button^0,c
   476   001172  0E34               	movlw	low _button_1_state
   477   001174  6E56               	movwf	push_button_read@p_button_state^0,c
   478   001176  EC8A  F00B         	call	_push_button_read	;wreg free
   479   00117A                     
   480                           ;_APP/application.c: 109:     if(BUTTON_PRESSED == button_1_state)
   481   00117A  5034               	movf	_button_1_state^0,w,c
   482   00117C  A4D8               	btfss	status,2,c
   483   00117E  EFC3  F008         	goto	u791
   484   001182  EFC5  F008         	goto	u790
   485   001186                     u791:
   486   001186  EFE4  F008         	goto	l2029
   487   00118A                     u790:
   488   00118A                     
   489                           ;_APP/application.c: 110:     {;_APP/application.c: 111:         btn_counter++;
   490   00118A  0E01               	movlw	1
   491   00118C  2644               	addwf	_btn_counter^0,f,c
   492   00118E  0E00               	movlw	0
   493   001190  2245               	addwfc	(_btn_counter+1)^0,f,c
   494   001192  2246               	addwfc	(_btn_counter+2)^0,f,c
   495   001194  2247               	addwfc	(_btn_counter+3)^0,f,c
   496                           
   497                           ;_APP/application.c: 113:         if(btn_counter>=100)
   498   001196  5047               	movf	(_btn_counter+3)^0,w,c
   499   001198  1046               	iorwf	(_btn_counter+2)^0,w,c
   500   00119A  1045               	iorwf	(_btn_counter+1)^0,w,c
   501   00119C  E109               	bnz	u800
   502   00119E  0E64               	movlw	100
   503   0011A0  5C44               	subwf	_btn_counter^0,w,c
   504   0011A2  A0D8               	btfss	status,0,c
   505   0011A4  EFD6  F008         	goto	u801
   506   0011A8  EFD8  F008         	goto	u800
   507   0011AC                     u801:
   508   0011AC  EFEE  F008         	goto	l95
   509   0011B0                     u800:
   510   0011B0                     
   511                           ;_APP/application.c: 114:         {;_APP/application.c: 115:             btn_counter = 1
      +                          00;
   512   0011B0  0E64               	movlw	100
   513   0011B2  6E44               	movwf	_btn_counter^0,c
   514   0011B4  0E00               	movlw	0
   515   0011B6  6E45               	movwf	(_btn_counter+1)^0,c
   516   0011B8  0E00               	movlw	0
   517   0011BA  6E46               	movwf	(_btn_counter+2)^0,c
   518   0011BC  0E00               	movlw	0
   519   0011BE  6E47               	movwf	(_btn_counter+3)^0,c
   520                           
   521                           ;_APP/application.c: 116:             btn_1_high_valid_state = HIGH;
   522   0011C0  0E01               	movlw	1
   523   0011C2  6E4E               	movwf	_btn_1_high_valid_state^0,c
   524   0011C4  EFEE  F008         	goto	l95
   525   0011C8                     l2029:
   526                           
   527                           ;_APP/application.c: 121:     {;_APP/application.c: 122:         btn_counter = 0;
   528   0011C8  0E00               	movlw	0
   529   0011CA  6E44               	movwf	_btn_counter^0,c
   530   0011CC  0E00               	movlw	0
   531   0011CE  6E45               	movwf	(_btn_counter+1)^0,c
   532   0011D0  0E00               	movlw	0
   533   0011D2  6E46               	movwf	(_btn_counter+2)^0,c
   534   0011D4  0E00               	movlw	0
   535   0011D6  6E47               	movwf	(_btn_counter+3)^0,c
   536                           
   537                           ;_APP/application.c: 123:         btn_1_high_valid_state = LOW;
   538   0011D8  0E00               	movlw	0
   539   0011DA  6E4E               	movwf	_btn_1_high_valid_state^0,c
   540   0011DC                     l95:
   541                           
   542                           ;_APP/application.c: 126:     if ((LOW == btn_1_high_valid_state_previous) && (HIGH == b
      +                          tn_1_high_valid_state))
   543   0011DC  504D               	movf	_btn_1_high_valid_state_previous^0,w,c
   544   0011DE  A4D8               	btfss	status,2,c
   545   0011E0  EFF4  F008         	goto	u811
   546   0011E4  EFF6  F008         	goto	u810
   547   0011E8                     u811:
   548   0011E8  EF02  F009         	goto	l2035
   549   0011EC                     u810:
   550   0011EC  044E               	decf	_btn_1_high_valid_state^0,w,c
   551   0011EE  A4D8               	btfss	status,2,c
   552   0011F0  EFFC  F008         	goto	u821
   553   0011F4  EFFE  F008         	goto	u820
   554   0011F8                     u821:
   555   0011F8  EF02  F009         	goto	l2035
   556   0011FC                     u820:
   557   0011FC                     
   558                           ;_APP/application.c: 127:     {;_APP/application.c: 128:         rise_edge = TRUE;
   559   0011FC  0E01               	movlw	1
   560   0011FE  6E4C               	movwf	_rise_edge^0,c
   561                           
   562                           ;_APP/application.c: 129:     }
   563   001200  EF04  F009         	goto	l2037
   564   001204                     l2035:
   565                           
   566                           ;_APP/application.c: 131:     {;_APP/application.c: 132:         rise_edge = FALSE;
   567   001204  0E00               	movlw	0
   568   001206  6E4C               	movwf	_rise_edge^0,c
   569   001208                     l2037:
   570                           
   571                           ;_APP/application.c: 135:     if (TRUE == rise_edge)
   572   001208  044C               	decf	_rise_edge^0,w,c
   573   00120A  A4D8               	btfss	status,2,c
   574   00120C  EF0A  F009         	goto	u831
   575   001210  EF0C  F009         	goto	u830
   576   001214                     u831:
   577   001214  EF25  F009         	goto	l2053
   578   001218                     u830:
   579   001218                     
   580                           ;_APP/application.c: 136:     {;_APP/application.c: 137:         program_counter++;
   581   001218  2A4F               	incf	_program_counter^0,f,c
   582   00121A                     
   583                           ;_APP/application.c: 138:         if (program_counter>3)
   584   00121A  0E03               	movlw	3
   585   00121C  644F               	cpfsgt	_program_counter^0,c
   586   00121E  EF13  F009         	goto	u841
   587   001222  EF15  F009         	goto	u840
   588   001226                     u841:
   589   001226  EF25  F009         	goto	l2053
   590   00122A                     u840:
   591   00122A                     
   592                           ;_APP/application.c: 139:         {;_APP/application.c: 140:             program_counter
      +                          =1;
   593   00122A  0E01               	movlw	1
   594   00122C  6E4F               	movwf	_program_counter^0,c
   595   00122E  EF25  F009         	goto	l2053
   596   001232                     l2045:
   597                           
   598                           ;_APP/application.c: 147:         {;_APP/application.c: 148:             led_program_1()
      +                          ;
   599   001232  EC79  F00D         	call	_led_program_1	;wreg free
   600                           
   601                           ;_APP/application.c: 149:             break;
   602   001236  EF3E  F009         	goto	l102
   603   00123A                     l2047:
   604                           
   605                           ;_APP/application.c: 152:         {;_APP/application.c: 153:             led_program_2()
      +                          ;
   606   00123A  ECDB  F00C         	call	_led_program_2	;wreg free
   607                           
   608                           ;_APP/application.c: 154:             break;
   609   00123E  EF3E  F009         	goto	l102
   610   001242                     l2049:
   611                           
   612                           ;_APP/application.c: 157:         {;_APP/application.c: 158:             led_program_3()
      +                          ;
   613   001242  EC72  F00D         	call	_led_program_3	;wreg free
   614                           
   615                           ;_APP/application.c: 159:             break;
   616   001246  EF3E  F009         	goto	l102
   617   00124A                     l2053:
   618   00124A  504F               	movf	_program_counter^0,w,c
   619   00124C  6E60               	movwf	??_magic_switch_led_programs^0,c
   620   00124E  6A61               	clrf	(??_magic_switch_led_programs+1)^0,c
   621                           
   622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   623                           ; Switch size 1, requested type "simple"
   624                           ; Number of cases is 1, Range of values is 0 to 0
   625                           ; switch strategies available:
   626                           ; Name         Instructions Cycles
   627                           ; simple_byte            4     3 (average)
   628                           ;	Chosen strategy is simple_byte
   629   001250  5061               	movf	(??_magic_switch_led_programs+1)^0,w,c
   630   001252  0A00               	xorlw	0	; case 0
   631   001254  B4D8               	btfsc	status,2,c
   632   001256  EF2F  F009         	goto	l2097
   633   00125A  EF3E  F009         	goto	l102
   634   00125E                     l2097:
   635                           
   636                           ; Switch size 1, requested type "simple"
   637                           ; Number of cases is 3, Range of values is 1 to 3
   638                           ; switch strategies available:
   639                           ; Name         Instructions Cycles
   640                           ; simple_byte           10     6 (average)
   641                           ;	Chosen strategy is simple_byte
   642   00125E  5060               	movf	??_magic_switch_led_programs^0,w,c
   643   001260  0A01               	xorlw	1	; case 1
   644   001262  B4D8               	btfsc	status,2,c
   645   001264  EF19  F009         	goto	l2045
   646   001268  0A03               	xorlw	3	; case 2
   647   00126A  B4D8               	btfsc	status,2,c
   648   00126C  EF1D  F009         	goto	l2047
   649   001270  0A01               	xorlw	1	; case 3
   650   001272  B4D8               	btfsc	status,2,c
   651   001274  EF21  F009         	goto	l2049
   652   001278  EF3E  F009         	goto	l102
   653   00127C                     l102:
   654                           
   655                           ;_APP/application.c: 167:     btn_1_high_valid_state_previous = btn_1_high_valid_state;
   656   00127C  C04E  F04D         	movff	_btn_1_high_valid_state,_btn_1_high_valid_state_previous
   657   001280  0012               	return		;funcret
   658   001282                     __end_of_magic_switch_led_programs:
   659                           	callstack 0
   660                           
   661 ;; *************** function _push_button_read *****************
   662 ;; Defined at:
   663 ;;		line 43 in file "_HAL/Drivers/button/button.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  p_push_butto    1    5[COMRAM] PTR struct .
   666 ;;		 -> push_btn_1(7), 
   667 ;;  p_button_sta    1    6[COMRAM] PTR enum E2914
   668 ;;		 -> button_1_state(1), 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  btn_pin_logi    1    8[COMRAM] enum E2821
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      enum E2804
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        4 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 1
   687 ;; This function calls:
   688 ;;		_gpio_pin_read_logic
   689 ;; This function is called by:
   690 ;;		_magic_switch_led_programs
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text2
   695   001714                     __ptext2:
   696                           	callstack 0
   697   001714                     _push_button_read:
   698                           	callstack 28
   699   001714                     
   700                           ;_HAL/Drivers/button/button.c: 43: std_return push_button_read(push_button_t * p_push_bu
      +                          tton, button_state_t * p_button_state);_HAL/Drivers/button/button.c: 44: {;_HAL/Drivers/
      +                          button/button.c: 45:   if(((void*)0) == p_push_button || ((void*)0) == p_button_state)
   701   001714  5055               	movf	push_button_read@p_push_button^0,w,c
   702   001716  B4D8               	btfsc	status,2,c
   703   001718  EF90  F00B         	goto	u721
   704   00171C  EF92  F00B         	goto	u720
   705   001720                     u721:
   706   001720  EFDB  F00B         	goto	l157
   707   001724                     u720:
   708   001724  5056               	movf	push_button_read@p_button_state^0,w,c
   709   001726  A4D8               	btfss	status,2,c
   710   001728  EF98  F00B         	goto	u731
   711   00172C  EF9A  F00B         	goto	u730
   712   001730                     u731:
   713   001730  EF9E  F00B         	goto	l1997
   714   001734                     u730:
   715   001734  EFDB  F00B         	goto	l157
   716   001738                     l156:
   717                           
   718                           ;_HAL/Drivers/button/button.c: 46:     {;_HAL/Drivers/button/button.c: 47:         retur
      +                          n EXCUTION_NOT_OK;;	Return value of _push_button_read is never used
   719   001738  EFDB  F00B         	goto	l157
   720   00173C                     l1997:
   721                           
   722                           ;_HAL/Drivers/button/button.c: 50:     {;_HAL/Drivers/button/button.c: 51:       *p_butt
      +                          on_state = BUTTON_RELEASED;
   723   00173C  5056               	movf	push_button_read@p_button_state^0,w,c
   724   00173E  6ED9               	movwf	fsr2l,c
   725   001740  6ADA               	clrf	fsr2h,c
   726   001742  0E01               	movlw	1
   727   001744  6EDF               	movwf	indf2,c
   728   001746                     
   729                           ;_HAL/Drivers/button/button.c: 53:       LOGIC_t btn_pin_logic;;_HAL/Drivers/button/butt
      +                          on.c: 54:       gpio_pin_read_logic(&p_push_button->button_pin,&btn_pin_logic);
   730   001746  C055  F050         	movff	push_button_read@p_push_button,gpio_pin_read_logic@p_pin_config
   731   00174A  0E58               	movlw	low push_button_read@btn_pin_logic
   732   00174C  6E51               	movwf	gpio_pin_read_logic@p_logic^0,c
   733   00174E  EC41  F009         	call	_gpio_pin_read_logic	;wreg free
   734   001752                     
   735                           ;_HAL/Drivers/button/button.c: 56:       if((HIGH == btn_pin_logic) && (BUTTON_ACTIVE_HI
      +                          GH == p_push_button->button_active_state))
   736   001752  0458               	decf	push_button_read@btn_pin_logic^0,w,c
   737   001754  A4D8               	btfss	status,2,c
   738   001756  EFAF  F00B         	goto	u741
   739   00175A  EFB1  F00B         	goto	u740
   740   00175E                     u741:
   741   00175E  EFC4  F00B         	goto	l2007
   742   001762                     u740:
   743   001762  5055               	movf	push_button_read@p_push_button^0,w,c
   744   001764  6ED9               	movwf	fsr2l,c
   745   001766  6ADA               	clrf	fsr2h,c
   746   001768  0E06               	movlw	6
   747   00176A  26D9               	addwf	fsr2l,f,c
   748   00176C  04DE               	decf	postinc2,w,c
   749   00176E  A4D8               	btfss	status,2,c
   750   001770  EFBC  F00B         	goto	u751
   751   001774  EFBE  F00B         	goto	u750
   752   001778                     u751:
   753   001778  EFC4  F00B         	goto	l2007
   754   00177C                     u750:
   755   00177C                     l2005:
   756                           
   757                           ;_HAL/Drivers/button/button.c: 57:       {;_HAL/Drivers/button/button.c: 58:           *
      +                          p_button_state = BUTTON_PRESSED;
   758   00177C  5056               	movf	push_button_read@p_button_state^0,w,c
   759   00177E  6ED9               	movwf	fsr2l,c
   760   001780  6ADA               	clrf	fsr2h,c
   761   001782  6ADF               	clrf	indf2,c
   762                           
   763                           ;_HAL/Drivers/button/button.c: 59:       }
   764   001784  EFDB  F00B         	goto	l157
   765   001788                     l2007:
   766   001788  5058               	movf	push_button_read@btn_pin_logic^0,w,c
   767   00178A  A4D8               	btfss	status,2,c
   768   00178C  EFCA  F00B         	goto	u761
   769   001790  EFCC  F00B         	goto	u760
   770   001794                     u761:
   771   001794  EF9C  F00B         	goto	l156
   772   001798                     u760:
   773   001798  5055               	movf	push_button_read@p_push_button^0,w,c
   774   00179A  6ED9               	movwf	fsr2l,c
   775   00179C  6ADA               	clrf	fsr2h,c
   776   00179E  0E06               	movlw	6
   777   0017A0  26D9               	addwf	fsr2l,f,c
   778   0017A2  50DF               	movf	indf2,w,c
   779   0017A4  A4D8               	btfss	status,2,c
   780   0017A6  EFD7  F00B         	goto	u771
   781   0017AA  EFD9  F00B         	goto	u770
   782   0017AE                     u771:
   783   0017AE  EF9C  F00B         	goto	l156
   784   0017B2                     u770:
   785   0017B2  EFBE  F00B         	goto	l2005
   786   0017B6                     l157:
   787   0017B6  0012               	return		;funcret
   788   0017B8                     __end_of_push_button_read:
   789                           	callstack 0
   790                           
   791 ;; *************** function _gpio_pin_read_logic *****************
   792 ;; Defined at:
   793 ;;		line 325 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  p_pin_config    1    0[COMRAM] PTR const struct .
   796 ;;		 -> push_btn_1$button_pin(5), push_btn_1(7), 
   797 ;;  p_logic         1    1[COMRAM] PTR enum E2821
   798 ;;		 -> push_button_read@btn_pin_logic(1), 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  bit_mask        1    4[COMRAM] enum E2825
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      enum E2804
   803 ;; Registers used:
   804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:        5 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_push_button_read
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text3
   824   001282                     __ptext3:
   825                           	callstack 0
   826   001282                     _gpio_pin_read_logic:
   827                           	callstack 28
   828   001282                     
   829                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 330:     if(((void*)0) == p_pin_config)
   830   001282  5050               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   831   001284  A4D8               	btfss	status,2,c
   832   001286  EF47  F009         	goto	u611
   833   00128A  EF49  F009         	goto	u610
   834   00128E                     u611:
   835   00128E  EF6B  F009         	goto	l1897
   836   001292                     u610:
   837   001292  EFBE  F009         	goto	l363
   838   001296                     l1877:
   839                           
   840                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 340:                 bit_mask = MASK_BIT_0;
   841   001296  0E01               	movlw	1
   842   001298  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   843                           
   844                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 341:                 break;
   845   00129A  EF9D  F009         	goto	l1899
   846   00129E                     l1879:
   847                           
   848                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 343:                 bit_mask = MASK_BIT_1;
   849   00129E  0E02               	movlw	2
   850   0012A0  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   851                           
   852                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 344:                 break;
   853   0012A2  EF9D  F009         	goto	l1899
   854   0012A6                     l1881:
   855                           
   856                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 346:                 bit_mask = MASK_BIT_2;
   857   0012A6  0E04               	movlw	4
   858   0012A8  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   859                           
   860                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 347:                 break;
   861   0012AA  EF9D  F009         	goto	l1899
   862   0012AE                     l1883:
   863                           
   864                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 349:                 bit_mask = MASK_BIT_3;
   865   0012AE  0E08               	movlw	8
   866   0012B0  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   867                           
   868                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 350:                 break;
   869   0012B2  EF9D  F009         	goto	l1899
   870   0012B6                     l1885:
   871                           
   872                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 352:                 bit_mask = MASK_BIT_4;
   873   0012B6  0E10               	movlw	16
   874   0012B8  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   875                           
   876                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 353:                 break;
   877   0012BA  EF9D  F009         	goto	l1899
   878   0012BE                     l1887:
   879                           
   880                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 355:                 bit_mask = MASK_BIT_5;
   881   0012BE  0E20               	movlw	32
   882   0012C0  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   883                           
   884                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 356:                 break;
   885   0012C2  EF9D  F009         	goto	l1899
   886   0012C6                     l1889:
   887                           
   888                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 358:                 bit_mask = MASK_BIT_6;
   889   0012C6  0E40               	movlw	64
   890   0012C8  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   891                           
   892                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 359:                 break;
   893   0012CA  EF9D  F009         	goto	l1899
   894   0012CE                     l1891:
   895                           
   896                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 361:                 bit_mask = MASK_BIT_7;
   897   0012CE  0E80               	movlw	128
   898   0012D0  6E54               	movwf	gpio_pin_read_logic@bit_mask^0,c
   899                           
   900                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 362:                 break;
   901   0012D2  EF9D  F009         	goto	l1899
   902   0012D6                     l1897:
   903   0012D6  5050               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   904   0012D8  6ED9               	movwf	fsr2l,c
   905   0012DA  6ADA               	clrf	fsr2h,c
   906   0012DC  0E01               	movlw	1
   907   0012DE  26D9               	addwf	fsr2l,f,c
   908   0012E0  50DF               	movf	indf2,w,c
   909   0012E2  6E52               	movwf	??_gpio_pin_read_logic^0,c
   910   0012E4  6A53               	clrf	(??_gpio_pin_read_logic+1)^0,c
   911                           
   912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   913                           ; Switch size 1, requested type "simple"
   914                           ; Number of cases is 1, Range of values is 0 to 0
   915                           ; switch strategies available:
   916                           ; Name         Instructions Cycles
   917                           ; simple_byte            4     3 (average)
   918                           ;	Chosen strategy is simple_byte
   919   0012E6  5053               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   920   0012E8  0A00               	xorlw	0	; case 0
   921   0012EA  B4D8               	btfsc	status,2,c
   922   0012EC  EF7A  F009         	goto	l2099
   923   0012F0  EFBE  F009         	goto	l363
   924   0012F4                     l2099:
   925                           
   926                           ; Switch size 1, requested type "simple"
   927                           ; Number of cases is 8, Range of values is 0 to 7
   928                           ; switch strategies available:
   929                           ; Name         Instructions Cycles
   930                           ; simple_byte           25    13 (average)
   931                           ;	Chosen strategy is simple_byte
   932   0012F4  5052               	movf	??_gpio_pin_read_logic^0,w,c
   933   0012F6  0A00               	xorlw	0	; case 0
   934   0012F8  B4D8               	btfsc	status,2,c
   935   0012FA  EF4B  F009         	goto	l1877
   936   0012FE  0A01               	xorlw	1	; case 1
   937   001300  B4D8               	btfsc	status,2,c
   938   001302  EF4F  F009         	goto	l1879
   939   001306  0A03               	xorlw	3	; case 2
   940   001308  B4D8               	btfsc	status,2,c
   941   00130A  EF53  F009         	goto	l1881
   942   00130E  0A01               	xorlw	1	; case 3
   943   001310  B4D8               	btfsc	status,2,c
   944   001312  EF57  F009         	goto	l1883
   945   001316  0A07               	xorlw	7	; case 4
   946   001318  B4D8               	btfsc	status,2,c
   947   00131A  EF5B  F009         	goto	l1885
   948   00131E  0A01               	xorlw	1	; case 5
   949   001320  B4D8               	btfsc	status,2,c
   950   001322  EF5F  F009         	goto	l1887
   951   001326  0A03               	xorlw	3	; case 6
   952   001328  B4D8               	btfsc	status,2,c
   953   00132A  EF63  F009         	goto	l1889
   954   00132E  0A01               	xorlw	1	; case 7
   955   001330  B4D8               	btfsc	status,2,c
   956   001332  EF67  F009         	goto	l1891
   957   001336  EFBE  F009         	goto	l363
   958   00133A                     l1899:
   959                           
   960                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 368:         *p_logic = ((*(PORT_REG_ADD_arr[p_pin_config->p
      +                          ort]) & bit_mask) == bit_mask);
   961   00133A  5051               	movf	gpio_pin_read_logic@p_logic^0,w,c
   962   00133C  6ED9               	movwf	fsr2l,c
   963   00133E  6ADA               	clrf	fsr2h,c
   964   001340  5050               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   965   001342  6EE1               	movwf	fsr1l,c
   966   001344  6AE2               	clrf	fsr1h,c
   967   001346  50E7               	movf	indf1,w,c
   968   001348  0D02               	mullw	2
   969   00134A  50F3               	movf	243,w,c
   970   00134C  0F0B               	addlw	low _PORT_REG_ADD_arr
   971   00134E  6EE1               	movwf	fsr1l,c
   972   001350  6AE2               	clrf	fsr1h,c
   973   001352  CFE6 F052          	movff	postinc1,??_gpio_pin_read_logic
   974   001356  CFE5 F053          	movff	postdec1,??_gpio_pin_read_logic+1
   975   00135A  C052  FFE1         	movff	??_gpio_pin_read_logic,fsr1l
   976   00135E  C053  FFE2         	movff	??_gpio_pin_read_logic+1,fsr1h
   977   001362  50E7               	movf	indf1,w,c
   978   001364  1454               	andwf	gpio_pin_read_logic@bit_mask^0,w,c	;volatile
   979   001366  1854               	xorwf	gpio_pin_read_logic@bit_mask^0,w,c
   980   001368  B4D8               	btfsc	status,2,c
   981   00136A  EFB9  F009         	goto	u621
   982   00136E  EFBC  F009         	goto	u620
   983   001372                     u621:
   984   001372  0E01               	movlw	1
   985   001374  EFBD  F009         	goto	u630
   986   001378                     u620:
   987   001378  0E00               	movlw	0
   988   00137A                     u630:
   989   00137A  6EDF               	movwf	indf2,c
   990   00137C                     l363:
   991   00137C  0012               	return		;funcret
   992   00137E                     __end_of_gpio_pin_read_logic:
   993                           	callstack 0
   994                           
   995 ;; *************** function _led_program_3 *****************
   996 ;; Defined at:
   997 ;;		line 61 in file "_APP/application.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 3
  1018 ;; This function calls:
  1019 ;;		_led_on_off
  1020 ;; This function is called by:
  1021 ;;		_magic_switch_led_programs
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text4
  1026   001AE4                     __ptext4:
  1027                           	callstack 0
  1028   001AE4                     _led_program_3:
  1029                           	callstack 26
  1030   001AE4                     
  1031                           ;_APP/application.c: 63:     led_on_off(&led_1, LED_OFF);
  1032   001AE4  0E31               	movlw	low _led_1
  1033   001AE6  6E59               	movwf	led_on_off@p_led^0,c
  1034   001AE8  0E00               	movlw	0
  1035   001AEA  6E5A               	movwf	led_on_off@led_status^0,c
  1036   001AEC  EC8B  F00C         	call	_led_on_off	;wreg free
  1037   001AF0  0012               	return		;funcret
  1038   001AF2                     __end_of_led_program_3:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _led_program_2 *****************
  1042 ;; Defined at:
  1043 ;;		line 53 in file "_APP/application.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 2
  1064 ;; This function calls:
  1065 ;;		___llmod
  1066 ;;		_led_toggle
  1067 ;; This function is called by:
  1068 ;;		_magic_switch_led_programs
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text5
  1073   0019B6                     __ptext5:
  1074                           	callstack 0
  1075   0019B6                     _led_program_2:
  1076                           	callstack 27
  1077   0019B6                     
  1078                           ;_APP/application.c: 55:     if (0 == (program_step_counter%100))
  1079   0019B6  C048  F050         	movff	_program_step_counter,___llmod@dividend
  1080   0019BA  C049  F051         	movff	_program_step_counter+1,___llmod@dividend+1
  1081   0019BE  C04A  F052         	movff	_program_step_counter+2,___llmod@dividend+2
  1082   0019C2  C04B  F053         	movff	_program_step_counter+3,___llmod@dividend+3
  1083   0019C6  0E64               	movlw	100
  1084   0019C8  6E54               	movwf	___llmod@divisor^0,c
  1085   0019CA  0E00               	movlw	0
  1086   0019CC  6E55               	movwf	(___llmod@divisor+1)^0,c
  1087   0019CE  0E00               	movlw	0
  1088   0019D0  6E56               	movwf	(___llmod@divisor+2)^0,c
  1089   0019D2  0E00               	movlw	0
  1090   0019D4  6E57               	movwf	(___llmod@divisor+3)^0,c
  1091   0019D6  ECDC  F00B         	call	___llmod	;wreg free
  1092   0019DA  5050               	movf	?___llmod^0,w,c
  1093   0019DC  1051               	iorwf	(?___llmod+1)^0,w,c
  1094   0019DE  1052               	iorwf	(?___llmod+2)^0,w,c
  1095   0019E0  1053               	iorwf	(?___llmod+3)^0,w,c
  1096   0019E2  A4D8               	btfss	status,2,c
  1097   0019E4  EFF6  F00C         	goto	u711
  1098   0019E8  EFF8  F00C         	goto	u710
  1099   0019EC                     u711:
  1100   0019EC  EFFC  F00C         	goto	l84
  1101   0019F0                     u710:
  1102   0019F0                     
  1103                           ;_APP/application.c: 56:     {;_APP/application.c: 57:     led_toggle(&led_1);
  1104   0019F0  0E31               	movlw	low _led_1
  1105   0019F2  6E54               	movwf	led_toggle@p_led^0,c
  1106   0019F4  ECB5  F00C         	call	_led_toggle	;wreg free
  1107   0019F8                     l84:
  1108   0019F8  0012               	return		;funcret
  1109   0019FA                     __end_of_led_program_2:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _led_toggle *****************
  1113 ;; Defined at:
  1114 ;;		line 70 in file "_HAL/Drivers/LED/LED.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  p_led           1    4[COMRAM] PTR struct .
  1117 ;;		 -> led_1(3), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  led_pin         5    5[COMRAM] struct .
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      enum E2804
  1122 ;; Registers used:
  1123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1129 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;Total ram usage:        6 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 1
  1136 ;; This function calls:
  1137 ;;		_gpio_pin_toggle_logic
  1138 ;; This function is called by:
  1139 ;;		_led_program_2
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text6
  1144   00196A                     __ptext6:
  1145                           	callstack 0
  1146   00196A                     _led_toggle:
  1147                           	callstack 27
  1148   00196A                     
  1149                           ;_HAL/Drivers/LED/LED.c: 70: std_return led_toggle(led_t * p_led);_HAL/Drivers/LED/LED.c
      +                          : 71: {;_HAL/Drivers/LED/LED.c: 72:     if(((void*)0) == p_led )
  1150   00196A  5054               	movf	led_toggle@p_led^0,w,c
  1151   00196C  A4D8               	btfss	status,2,c
  1152   00196E  EFBB  F00C         	goto	u591
  1153   001972  EFBD  F00C         	goto	u590
  1154   001976                     u591:
  1155   001976  EFBF  F00C         	goto	l1859
  1156   00197A                     u590:
  1157   00197A  EFDA  F00C         	goto	l222
  1158   00197E                     l1859:
  1159                           
  1160                           ;_HAL/Drivers/LED/LED.c: 77:     {;_HAL/Drivers/LED/LED.c: 78:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
  1161   00197E  EE20  F035         	lfsr	2,led_toggle@F2942
  1162   001982  EE10  F055         	lfsr	1,led_toggle@led_pin
  1163   001986  0E04               	movlw	4
  1164   001988                     u601:
  1165   001988  CFDB FFE3          	movff	plusw2,plusw1
  1166   00198C  06E8               	decf	wreg,f,c
  1167   00198E  E2FC               	bc	u601
  1168   001990  5054               	movf	led_toggle@p_led^0,w,c
  1169   001992  6ED9               	movwf	fsr2l,c
  1170   001994  6ADA               	clrf	fsr2h,c
  1171   001996  50DF               	movf	indf2,w,c
  1172   001998  6E55               	movwf	led_toggle@led_pin^0,c
  1173   00199A  5054               	movf	led_toggle@p_led^0,w,c
  1174   00199C  6ED9               	movwf	fsr2l,c
  1175   00199E  6ADA               	clrf	fsr2h,c
  1176   0019A0  0E01               	movlw	1
  1177   0019A2  26D9               	addwf	fsr2l,f,c
  1178   0019A4  50DF               	movf	indf2,w,c
  1179   0019A6  6E56               	movwf	(led_toggle@led_pin+1)^0,c
  1180   0019A8  0E00               	movlw	0
  1181   0019AA  6E57               	movwf	(led_toggle@led_pin+2)^0,c
  1182   0019AC                     
  1183                           ;_HAL/Drivers/LED/LED.c: 82:        gpio_pin_toggle_logic(&led_pin);
  1184   0019AC  0E55               	movlw	low led_toggle@led_pin
  1185   0019AE  6E50               	movwf	gpio_pin_toggle_logic@p_pin_config^0,c
  1186   0019B0  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
  1187   0019B4                     l222:
  1188   0019B4  0012               	return		;funcret
  1189   0019B6                     __end_of_led_toggle:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _gpio_pin_toggle_logic *****************
  1193 ;; Defined at:
  1194 ;;		line 379 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  p_pin_config    1    0[COMRAM] PTR struct .
  1197 ;;		 -> led_toggle@led_pin(5), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  bit_mask        1    3[COMRAM] enum E2825
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      enum E2804
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        4 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_led_toggle
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text7
  1223   001002                     __ptext7:
  1224                           	callstack 0
  1225   001002                     _gpio_pin_toggle_logic:
  1226                           	callstack 27
  1227   001002                     
  1228                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 383:     if(((void*)0) == p_pin_config)
  1229   001002  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1230   001004  A4D8               	btfss	status,2,c
  1231   001006  EF07  F008         	goto	u541
  1232   00100A  EF09  F008         	goto	u540
  1233   00100E                     u541:
  1234   00100E  EF2B  F008         	goto	l1819
  1235   001012                     u540:
  1236   001012  EFB6  F008         	goto	l379
  1237   001016                     l1799:
  1238                           
  1239                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 393:                 bit_mask = MASK_BIT_0;
  1240   001016  0E01               	movlw	1
  1241   001018  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1242                           
  1243                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 394:                 break;
  1244   00101A  EF5D  F008         	goto	l1821
  1245   00101E                     l1801:
  1246                           
  1247                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 396:                 bit_mask = MASK_BIT_1;
  1248   00101E  0E02               	movlw	2
  1249   001020  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1250                           
  1251                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 397:                 break;
  1252   001022  EF5D  F008         	goto	l1821
  1253   001026                     l1803:
  1254                           
  1255                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 399:                 bit_mask = MASK_BIT_2;
  1256   001026  0E04               	movlw	4
  1257   001028  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1258                           
  1259                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 400:                 break;
  1260   00102A  EF5D  F008         	goto	l1821
  1261   00102E                     l1805:
  1262                           
  1263                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 402:                 bit_mask = MASK_BIT_3;
  1264   00102E  0E08               	movlw	8
  1265   001030  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1266                           
  1267                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 403:                 break;
  1268   001032  EF5D  F008         	goto	l1821
  1269   001036                     l1807:
  1270                           
  1271                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 405:                 bit_mask = MASK_BIT_4;
  1272   001036  0E10               	movlw	16
  1273   001038  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1274                           
  1275                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 406:                 break;
  1276   00103A  EF5D  F008         	goto	l1821
  1277   00103E                     l1809:
  1278                           
  1279                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 408:                 bit_mask = MASK_BIT_5;
  1280   00103E  0E20               	movlw	32
  1281   001040  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1282                           
  1283                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 409:                 break;
  1284   001042  EF5D  F008         	goto	l1821
  1285   001046                     l1811:
  1286                           
  1287                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 411:                 bit_mask = MASK_BIT_6;
  1288   001046  0E40               	movlw	64
  1289   001048  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1290                           
  1291                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 412:                 break;
  1292   00104A  EF5D  F008         	goto	l1821
  1293   00104E                     l1813:
  1294                           
  1295                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 414:                 bit_mask = MASK_BIT_7;
  1296   00104E  0E80               	movlw	128
  1297   001050  6E53               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1298                           
  1299                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 break;
  1300   001052  EF5D  F008         	goto	l1821
  1301   001056                     l1819:
  1302   001056  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1303   001058  6ED9               	movwf	fsr2l,c
  1304   00105A  6ADA               	clrf	fsr2h,c
  1305   00105C  0E01               	movlw	1
  1306   00105E  26D9               	addwf	fsr2l,f,c
  1307   001060  50DF               	movf	indf2,w,c
  1308   001062  6E51               	movwf	??_gpio_pin_toggle_logic^0,c
  1309   001064  6A52               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
  1310                           
  1311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 1, Range of values is 0 to 0
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte            4     3 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318   001066  5052               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  1319   001068  0A00               	xorlw	0	; case 0
  1320   00106A  B4D8               	btfsc	status,2,c
  1321   00106C  EF3A  F008         	goto	l2101
  1322   001070  EFB6  F008         	goto	l379
  1323   001074                     l2101:
  1324                           
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 8, Range of values is 0 to 7
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte           25    13 (average)
  1330                           ;	Chosen strategy is simple_byte
  1331   001074  5051               	movf	??_gpio_pin_toggle_logic^0,w,c
  1332   001076  0A00               	xorlw	0	; case 0
  1333   001078  B4D8               	btfsc	status,2,c
  1334   00107A  EF0B  F008         	goto	l1799
  1335   00107E  0A01               	xorlw	1	; case 1
  1336   001080  B4D8               	btfsc	status,2,c
  1337   001082  EF0F  F008         	goto	l1801
  1338   001086  0A03               	xorlw	3	; case 2
  1339   001088  B4D8               	btfsc	status,2,c
  1340   00108A  EF13  F008         	goto	l1803
  1341   00108E  0A01               	xorlw	1	; case 3
  1342   001090  B4D8               	btfsc	status,2,c
  1343   001092  EF17  F008         	goto	l1805
  1344   001096  0A07               	xorlw	7	; case 4
  1345   001098  B4D8               	btfsc	status,2,c
  1346   00109A  EF1B  F008         	goto	l1807
  1347   00109E  0A01               	xorlw	1	; case 5
  1348   0010A0  B4D8               	btfsc	status,2,c
  1349   0010A2  EF1F  F008         	goto	l1809
  1350   0010A6  0A03               	xorlw	3	; case 6
  1351   0010A8  B4D8               	btfsc	status,2,c
  1352   0010AA  EF23  F008         	goto	l1811
  1353   0010AE  0A01               	xorlw	1	; case 7
  1354   0010B0  B4D8               	btfsc	status,2,c
  1355   0010B2  EF27  F008         	goto	l1813
  1356   0010B6  EFB6  F008         	goto	l379
  1357   0010BA                     l1821:
  1358                           
  1359                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 421:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
  1360   0010BA  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1361   0010BC  6ED9               	movwf	fsr2l,c
  1362   0010BE  6ADA               	clrf	fsr2h,c
  1363   0010C0  50DF               	movf	indf2,w,c
  1364   0010C2  0D02               	mullw	2
  1365   0010C4  50F3               	movf	243,w,c
  1366   0010C6  0F01               	addlw	low _LAT_REG_ADD_arr
  1367   0010C8  6ED9               	movwf	fsr2l,c
  1368   0010CA  6ADA               	clrf	fsr2h,c
  1369   0010CC  CFDE F051          	movff	postinc2,??_gpio_pin_toggle_logic
  1370   0010D0  CFDD F052          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1371   0010D4  C051  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1372   0010D8  C052  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1373   0010DC  5053               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
  1374   0010DE  1ADF               	xorwf	indf2,f,c
  1375                           
  1376                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
  1377   0010E0  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1378   0010E2  6ED9               	movwf	fsr2l,c
  1379   0010E4  6ADA               	clrf	fsr2h,c
  1380   0010E6  50DF               	movf	indf2,w,c
  1381   0010E8  0D02               	mullw	2
  1382   0010EA  50F3               	movf	243,w,c
  1383   0010EC  0F01               	addlw	low _LAT_REG_ADD_arr
  1384   0010EE  6ED9               	movwf	fsr2l,c
  1385   0010F0  6ADA               	clrf	fsr2h,c
  1386   0010F2  CFDE F051          	movff	postinc2,??_gpio_pin_toggle_logic
  1387   0010F6  CFDD F052          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1388   0010FA  C051  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1389   0010FE  C052  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1390   001102  50DF               	movf	indf2,w,c
  1391   001104  1453               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  1392   001106  1853               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
  1393   001108  A4D8               	btfss	status,2,c
  1394   00110A  EF89  F008         	goto	u551
  1395   00110E  EF8B  F008         	goto	u550
  1396   001112                     u551:
  1397   001112  EF94  F008         	goto	l1825
  1398   001116                     u550:
  1399   001116                     
  1400                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:             p_pin_config->logic = LOGIC_ON;
  1401   001116  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1402   001118  6ED9               	movwf	fsr2l,c
  1403   00111A  6ADA               	clrf	fsr2h,c
  1404   00111C  0E03               	movlw	3
  1405   00111E  26D9               	addwf	fsr2l,f,c
  1406   001120  0E01               	movlw	1
  1407   001122  6EDF               	movwf	indf2,c
  1408   001124  EFB6  F008         	goto	l379
  1409   001128                     l1825:
  1410   001128  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1411   00112A  6ED9               	movwf	fsr2l,c
  1412   00112C  6ADA               	clrf	fsr2h,c
  1413   00112E  50DF               	movf	indf2,w,c
  1414   001130  0D02               	mullw	2
  1415   001132  50F3               	movf	243,w,c
  1416   001134  0F01               	addlw	low _LAT_REG_ADD_arr
  1417   001136  6ED9               	movwf	fsr2l,c
  1418   001138  6ADA               	clrf	fsr2h,c
  1419   00113A  CFDE F051          	movff	postinc2,??_gpio_pin_toggle_logic
  1420   00113E  CFDD F052          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1421   001142  C051  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1422   001146  C052  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1423   00114A  50DF               	movf	indf2,w,c
  1424   00114C  1453               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  1425   00114E  0900               	iorlw	0
  1426   001150  A4D8               	btfss	status,2,c
  1427   001152  EFAD  F008         	goto	u561
  1428   001156  EFAF  F008         	goto	u560
  1429   00115A                     u561:
  1430   00115A  EFB6  F008         	goto	l379
  1431   00115E                     u560:
  1432   00115E                     
  1433                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 425:             p_pin_config->logic = LOGIC_ON;
  1434   00115E  5050               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1435   001160  6ED9               	movwf	fsr2l,c
  1436   001162  6ADA               	clrf	fsr2h,c
  1437   001164  0E03               	movlw	3
  1438   001166  26D9               	addwf	fsr2l,f,c
  1439   001168  0E01               	movlw	1
  1440   00116A  6EDF               	movwf	indf2,c
  1441   00116C                     l379:
  1442   00116C  0012               	return		;funcret
  1443   00116E                     __end_of_gpio_pin_toggle_logic:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function ___llmod *****************
  1447 ;; Defined at:
  1448 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  dividend        4    0[COMRAM] unsigned long 
  1451 ;;  divisor         4    4[COMRAM] unsigned long 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  counter         1    8[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  4    0[COMRAM] unsigned long 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        9 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_led_program_2
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text8
  1477   0017B8                     __ptext8:
  1478                           	callstack 0
  1479   0017B8                     ___llmod:
  1480                           	callstack 28
  1481   0017B8  5054               	movf	___llmod@divisor^0,w,c
  1482   0017BA  1055               	iorwf	(___llmod@divisor+1)^0,w,c
  1483   0017BC  1056               	iorwf	(___llmod@divisor+2)^0,w,c
  1484   0017BE  1057               	iorwf	(___llmod@divisor+3)^0,w,c
  1485   0017C0  B4D8               	btfsc	status,2,c
  1486   0017C2  EFE5  F00B         	goto	u651
  1487   0017C6  EFE7  F00B         	goto	u650
  1488   0017CA                     u651:
  1489   0017CA  EF17  F00C         	goto	l910
  1490   0017CE                     u650:
  1491   0017CE  0E01               	movlw	1
  1492   0017D0  6E58               	movwf	___llmod@counter^0,c
  1493   0017D2  EFF1  F00B         	goto	l1943
  1494   0017D6                     l1941:
  1495   0017D6  90D8               	bcf	status,0,c
  1496   0017D8  3654               	rlcf	___llmod@divisor^0,f,c
  1497   0017DA  3655               	rlcf	(___llmod@divisor+1)^0,f,c
  1498   0017DC  3656               	rlcf	(___llmod@divisor+2)^0,f,c
  1499   0017DE  3657               	rlcf	(___llmod@divisor+3)^0,f,c
  1500   0017E0  2A58               	incf	___llmod@counter^0,f,c
  1501   0017E2                     l1943:
  1502   0017E2  AE57               	btfss	(___llmod@divisor+3)^0,7,c
  1503   0017E4  EFF6  F00B         	goto	u661
  1504   0017E8  EFF8  F00B         	goto	u660
  1505   0017EC                     u661:
  1506   0017EC  EFEB  F00B         	goto	l1941
  1507   0017F0                     u660:
  1508   0017F0                     l1945:
  1509   0017F0  5054               	movf	___llmod@divisor^0,w,c
  1510   0017F2  5C50               	subwf	___llmod@dividend^0,w,c
  1511   0017F4  5055               	movf	(___llmod@divisor+1)^0,w,c
  1512   0017F6  5851               	subwfb	(___llmod@dividend+1)^0,w,c
  1513   0017F8  5056               	movf	(___llmod@divisor+2)^0,w,c
  1514   0017FA  5852               	subwfb	(___llmod@dividend+2)^0,w,c
  1515   0017FC  5057               	movf	(___llmod@divisor+3)^0,w,c
  1516   0017FE  5853               	subwfb	(___llmod@dividend+3)^0,w,c
  1517   001800  A0D8               	btfss	status,0,c
  1518   001802  EF05  F00C         	goto	u671
  1519   001806  EF07  F00C         	goto	u670
  1520   00180A                     u671:
  1521   00180A  EF0F  F00C         	goto	l1949
  1522   00180E                     u670:
  1523   00180E  5054               	movf	___llmod@divisor^0,w,c
  1524   001810  5E50               	subwf	___llmod@dividend^0,f,c
  1525   001812  5055               	movf	(___llmod@divisor+1)^0,w,c
  1526   001814  5A51               	subwfb	(___llmod@dividend+1)^0,f,c
  1527   001816  5056               	movf	(___llmod@divisor+2)^0,w,c
  1528   001818  5A52               	subwfb	(___llmod@dividend+2)^0,f,c
  1529   00181A  5057               	movf	(___llmod@divisor+3)^0,w,c
  1530   00181C  5A53               	subwfb	(___llmod@dividend+3)^0,f,c
  1531   00181E                     l1949:
  1532   00181E  90D8               	bcf	status,0,c
  1533   001820  3257               	rrcf	(___llmod@divisor+3)^0,f,c
  1534   001822  3256               	rrcf	(___llmod@divisor+2)^0,f,c
  1535   001824  3255               	rrcf	(___llmod@divisor+1)^0,f,c
  1536   001826  3254               	rrcf	___llmod@divisor^0,f,c
  1537   001828  2E58               	decfsz	___llmod@counter^0,f,c
  1538   00182A  EFF8  F00B         	goto	l1945
  1539   00182E                     l910:
  1540   00182E  C050  F050         	movff	___llmod@dividend,?___llmod
  1541   001832  C051  F051         	movff	___llmod@dividend+1,?___llmod+1
  1542   001836  C052  F052         	movff	___llmod@dividend+2,?___llmod+2
  1543   00183A  C053  F053         	movff	___llmod@dividend+3,?___llmod+3
  1544   00183E  0012               	return		;funcret
  1545   001840                     __end_of___llmod:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _led_program_1 *****************
  1549 ;; Defined at:
  1550 ;;		line 47 in file "_APP/application.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 3
  1571 ;; This function calls:
  1572 ;;		_led_on_off
  1573 ;; This function is called by:
  1574 ;;		_magic_switch_led_programs
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text9
  1579   001AF2                     __ptext9:
  1580                           	callstack 0
  1581   001AF2                     _led_program_1:
  1582                           	callstack 26
  1583   001AF2                     
  1584                           ;_APP/application.c: 49:     led_on_off(&led_1, LED_ON);
  1585   001AF2  0E31               	movlw	low _led_1
  1586   001AF4  6E59               	movwf	led_on_off@p_led^0,c
  1587   001AF6  0E01               	movlw	1
  1588   001AF8  6E5A               	movwf	led_on_off@led_status^0,c
  1589   001AFA  EC8B  F00C         	call	_led_on_off	;wreg free
  1590   001AFE  0012               	return		;funcret
  1591   001B00                     __end_of_led_program_1:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _led_on_off *****************
  1595 ;; Defined at:
  1596 ;;		line 50 in file "_HAL/Drivers/LED/LED.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  p_led           1    9[COMRAM] PTR struct .
  1599 ;;		 -> led_1(3), 
  1600 ;;  led_status      1   10[COMRAM] enum E2914
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  led_pin         5   11[COMRAM] struct .
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      enum E2804
  1605 ;; Registers used:
  1606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        7 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 2
  1619 ;; This function calls:
  1620 ;;		_gpio_pin_write_logic
  1621 ;; This function is called by:
  1622 ;;		_led_program_1
  1623 ;;		_led_program_3
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text10
  1628   001916                     __ptext10:
  1629                           	callstack 0
  1630   001916                     _led_on_off:
  1631                           	callstack 26
  1632   001916                     
  1633                           ;_HAL/Drivers/LED/LED.c: 50: std_return led_on_off(led_t * p_led, led_status_t led_statu
      +                          s);_HAL/Drivers/LED/LED.c: 51: {;_HAL/Drivers/LED/LED.c: 52:     if(((void*)0) == p_led 
      +                          )
  1634   001916  5059               	movf	led_on_off@p_led^0,w,c
  1635   001918  A4D8               	btfss	status,2,c
  1636   00191A  EF91  F00C         	goto	u571
  1637   00191E  EF93  F00C         	goto	u570
  1638   001922                     u571:
  1639   001922  EF95  F00C         	goto	l1839
  1640   001926                     u570:
  1641   001926  EFB4  F00C         	goto	l215
  1642   00192A                     l1839:
  1643                           
  1644                           ;_HAL/Drivers/LED/LED.c: 57:     {;_HAL/Drivers/LED/LED.c: 58:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
  1645   00192A  EE20  F03A         	lfsr	2,led_on_off@F2938
  1646   00192E  EE10  F05B         	lfsr	1,led_on_off@led_pin
  1647   001932  0E04               	movlw	4
  1648   001934                     u581:
  1649   001934  CFDB FFE3          	movff	plusw2,plusw1
  1650   001938  06E8               	decf	wreg,f,c
  1651   00193A  E2FC               	bc	u581
  1652   00193C  5059               	movf	led_on_off@p_led^0,w,c
  1653   00193E  6ED9               	movwf	fsr2l,c
  1654   001940  6ADA               	clrf	fsr2h,c
  1655   001942  50DF               	movf	indf2,w,c
  1656   001944  6E5B               	movwf	led_on_off@led_pin^0,c
  1657   001946  5059               	movf	led_on_off@p_led^0,w,c
  1658   001948  6ED9               	movwf	fsr2l,c
  1659   00194A  6ADA               	clrf	fsr2h,c
  1660   00194C  0E01               	movlw	1
  1661   00194E  26D9               	addwf	fsr2l,f,c
  1662   001950  50DF               	movf	indf2,w,c
  1663   001952  6E5C               	movwf	(led_on_off@led_pin+1)^0,c
  1664   001954  0E00               	movlw	0
  1665   001956  6E5D               	movwf	(led_on_off@led_pin+2)^0,c
  1666   001958  C05A  F05E         	movff	led_on_off@led_status,led_on_off@led_pin+3
  1667   00195C                     
  1668                           ;_HAL/Drivers/LED/LED.c: 63:        gpio_pin_write_logic(&led_pin,led_status);
  1669   00195C  0E5B               	movlw	low led_on_off@led_pin
  1670   00195E  6E55               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  1671   001960  C05A  F056         	movff	led_on_off@led_status,gpio_pin_write_logic@d_logic_desired
  1672   001964  ECBF  F009         	call	_gpio_pin_write_logic	;wreg free
  1673   001968                     l215:
  1674   001968  0012               	return		;funcret
  1675   00196A                     __end_of_led_on_off:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _calculate_step_counter *****************
  1679 ;; Defined at:
  1680 ;;		line 29 in file "_APP/application.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text11
  1708   0019FA                     __ptext11:
  1709                           	callstack 0
  1710   0019FA                     _calculate_step_counter:
  1711                           	callstack 30
  1712   0019FA                     
  1713                           ;_APP/application.c: 31:     program_step_counter++;
  1714   0019FA  0E01               	movlw	1
  1715   0019FC  2648               	addwf	_program_step_counter^0,f,c
  1716   0019FE  0E00               	movlw	0
  1717   001A00  2249               	addwfc	(_program_step_counter+1)^0,f,c
  1718   001A02  224A               	addwfc	(_program_step_counter+2)^0,f,c
  1719   001A04  224B               	addwfc	(_program_step_counter+3)^0,f,c
  1720                           
  1721                           ;_APP/application.c: 32:     if (0xFFFFFFFE == program_step_counter)
  1722   001A06  0EFE               	movlw	254
  1723   001A08  1848               	xorwf	_program_step_counter^0,w,c
  1724   001A0A  E10A               	bnz	u781
  1725   001A0C  2849               	incf	(_program_step_counter+1)^0,w,c
  1726   001A0E  E108               	bnz	u781
  1727   001A10  284A               	incf	(_program_step_counter+2)^0,w,c
  1728   001A12  E106               	bnz	u781
  1729   001A14  284B               	incf	(_program_step_counter+3)^0,w,c
  1730   001A16  A4D8               	btfss	status,2,c
  1731   001A18  EF10  F00D         	goto	u781
  1732   001A1C  EF12  F00D         	goto	u780
  1733   001A20                     u781:
  1734   001A20  EF1A  F00D         	goto	l74
  1735   001A24                     u780:
  1736   001A24                     
  1737                           ;_APP/application.c: 33:     {;_APP/application.c: 34:         program_step_counter = 0;
  1738   001A24  0E00               	movlw	0
  1739   001A26  6E48               	movwf	_program_step_counter^0,c
  1740   001A28  0E00               	movlw	0
  1741   001A2A  6E49               	movwf	(_program_step_counter+1)^0,c
  1742   001A2C  0E00               	movlw	0
  1743   001A2E  6E4A               	movwf	(_program_step_counter+2)^0,c
  1744   001A30  0E00               	movlw	0
  1745   001A32  6E4B               	movwf	(_program_step_counter+3)^0,c
  1746   001A34                     l74:
  1747   001A34  0012               	return		;funcret
  1748   001A36                     __end_of_calculate_step_counter:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _app_init *****************
  1752 ;; Defined at:
  1753 ;;		line 40 in file "_APP/application.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 4
  1774 ;; This function calls:
  1775 ;;		_led_init
  1776 ;;		_push_button_init
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text12
  1783   001AD2                     __ptext12:
  1784                           	callstack 0
  1785   001AD2                     _app_init:
  1786                           	callstack 26
  1787   001AD2                     
  1788                           ;_APP/application.c: 42: push_button_init(&push_btn_1);
  1789   001AD2  0E2A               	movlw	low _push_btn_1
  1790   001AD4  6E58               	movwf	push_button_init@p_push_button^0,c
  1791   001AD6  EC50  F00D         	call	_push_button_init	;wreg free
  1792   001ADA                     
  1793                           ;_APP/application.c: 43: led_init(&led_1);
  1794   001ADA  0E31               	movlw	low _led_1
  1795   001ADC  6E5C               	movwf	led_init@p_led^0,c
  1796   001ADE  EC5E  F00C         	call	_led_init	;wreg free
  1797   001AE2  0012               	return		;funcret
  1798   001AE4                     __end_of_app_init:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _push_button_init *****************
  1802 ;; Defined at:
  1803 ;;		line 28 in file "_HAL/Drivers/button/button.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  p_push_butto    1    8[COMRAM] PTR struct .
  1806 ;;		 -> push_btn_1(7), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      enum E2804
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 2
  1825 ;; This function calls:
  1826 ;;		_gpio_pin_direction_initialize
  1827 ;; This function is called by:
  1828 ;;		_app_init
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text13
  1833   001AA0                     __ptext13:
  1834                           	callstack 0
  1835   001AA0                     _push_button_init:
  1836                           	callstack 27
  1837   001AA0                     
  1838                           ;_HAL/Drivers/button/button.c: 28: std_return push_button_init(push_button_t * p_push_bu
      +                          tton);_HAL/Drivers/button/button.c: 29: {;_HAL/Drivers/button/button.c: 30:   if(((void*
      +                          )0) == p_push_button)
  1839   001AA0  5058               	movf	push_button_init@p_push_button^0,w,c
  1840   001AA2  A4D8               	btfss	status,2,c
  1841   001AA4  EF56  F00D         	goto	u681
  1842   001AA8  EF58  F00D         	goto	u680
  1843   001AAC                     u681:
  1844   001AAC  EF5A  F00D         	goto	l1959
  1845   001AB0                     u680:
  1846   001AB0  EF5E  F00D         	goto	l150
  1847   001AB4                     l1959:
  1848                           
  1849                           ;_HAL/Drivers/button/button.c: 35:     {;_HAL/Drivers/button/button.c: 36:        gpio_p
      +                          in_direction_initialize(&p_push_button->button_pin);
  1850   001AB4  C058  F055         	movff	push_button_init@p_push_button,gpio_pin_direction_initialize@p_pin_config
  1851   001AB8  EC2A  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  1852   001ABC                     l150:
  1853   001ABC  0012               	return		;funcret
  1854   001ABE                     __end_of_push_button_init:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _led_init *****************
  1858 ;; Defined at:
  1859 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  p_led           1   12[COMRAM] PTR struct .
  1862 ;;		 -> led_1(3), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  led_pin         5   13[COMRAM] struct .
  1865 ;;  func_return     1    0        enum E2804
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      enum E2804
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:        6 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 3
  1882 ;; This function calls:
  1883 ;;		_gpio_pin_initialize
  1884 ;; This function is called by:
  1885 ;;		_app_init
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text14
  1890   0018BC                     __ptext14:
  1891                           	callstack 0
  1892   0018BC                     _led_init:
  1893                           	callstack 26
  1894   0018BC                     
  1895                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
  1896   0018BC  505C               	movf	led_init@p_led^0,w,c
  1897   0018BE  A4D8               	btfss	status,2,c
  1898   0018C0  EF64  F00C         	goto	u691
  1899   0018C4  EF66  F00C         	goto	u690
  1900   0018C8                     u691:
  1901   0018C8  EF68  F00C         	goto	l1969
  1902   0018CC                     u690:
  1903   0018CC  EF8A  F00C         	goto	l208
  1904   0018D0                     l1969:
  1905                           
  1906                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
  1907   0018D0  EE20  F03F         	lfsr	2,led_init@F2933
  1908   0018D4  EE10  F05D         	lfsr	1,led_init@led_pin
  1909   0018D8  0E04               	movlw	4
  1910   0018DA                     u701:
  1911   0018DA  CFDB FFE3          	movff	plusw2,plusw1
  1912   0018DE  06E8               	decf	wreg,f,c
  1913   0018E0  E2FC               	bc	u701
  1914   0018E2  505C               	movf	led_init@p_led^0,w,c
  1915   0018E4  6ED9               	movwf	fsr2l,c
  1916   0018E6  6ADA               	clrf	fsr2h,c
  1917   0018E8  50DF               	movf	indf2,w,c
  1918   0018EA  6E5D               	movwf	led_init@led_pin^0,c
  1919   0018EC  505C               	movf	led_init@p_led^0,w,c
  1920   0018EE  6ED9               	movwf	fsr2l,c
  1921   0018F0  6ADA               	clrf	fsr2h,c
  1922   0018F2  0E01               	movlw	1
  1923   0018F4  26D9               	addwf	fsr2l,f,c
  1924   0018F6  50DF               	movf	indf2,w,c
  1925   0018F8  6E5E               	movwf	(led_init@led_pin+1)^0,c
  1926   0018FA  0E00               	movlw	0
  1927   0018FC  6E5F               	movwf	(led_init@led_pin+2)^0,c
  1928   0018FE  505C               	movf	led_init@p_led^0,w,c
  1929   001900  6ED9               	movwf	fsr2l,c
  1930   001902  6ADA               	clrf	fsr2h,c
  1931   001904  0E02               	movlw	2
  1932   001906  26D9               	addwf	fsr2l,f,c
  1933   001908  50DF               	movf	indf2,w,c
  1934   00190A  6E60               	movwf	(led_init@led_pin+3)^0,c
  1935   00190C  0E5D               	movlw	low led_init@led_pin
  1936   00190E  6E59               	movwf	gpio_pin_initialize@p_pin_config^0,c
  1937   001910  EC20  F00C         	call	_gpio_pin_initialize	;wreg free
  1938   001914                     l208:
  1939   001914  0012               	return		;funcret
  1940   001916                     __end_of_led_init:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _gpio_pin_initialize *****************
  1944 ;; Defined at:
  1945 ;;		line 293 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  p_pin_config    1    9[COMRAM] PTR struct .
  1948 ;;		 -> led_init@led_pin(5), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      enum E2804
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        3 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 2
  1967 ;; This function calls:
  1968 ;;		_gpio_pin_direction_initialize
  1969 ;;		_gpio_pin_write_logic
  1970 ;; This function is called by:
  1971 ;;		_led_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text15
  1976   001840                     __ptext15:
  1977                           	callstack 0
  1978   001840                     _gpio_pin_initialize:
  1979                           	callstack 26
  1980   001840                     
  1981                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 293: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 294: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 297:     if(((void*)0)
      +                           == p_pin_config)
  1982   001840  5059               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1983   001842  A4D8               	btfss	status,2,c
  1984   001844  EF26  F00C         	goto	u641
  1985   001848  EF28  F00C         	goto	u640
  1986   00184C                     u641:
  1987   00184C  EF42  F00C         	goto	l1927
  1988   001850                     u640:
  1989   001850                     l1909:
  1990                           
  1991                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:         return EX
      +                          CUTION_NOT_OK;
  1992   001850  0E01               	movlw	1
  1993   001852  EF5D  F00C         	goto	l353
  1994   001856                     l1915:
  1995                           
  1996                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 306:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1997   001856  C059  F055         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1998   00185A  EC2A  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  1999                           
  2000                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 break;
  2001   00185E  EF5C  F00C         	goto	l1929
  2002   001862                     l1917:
  2003                           
  2004                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 309:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  2005   001862  C059  F055         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  2006   001866  EC2A  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  2007                           
  2008                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
  2009   00186A  C059  F055         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
  2010   00186E  5059               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  2011   001870  6ED9               	movwf	fsr2l,c
  2012   001872  6ADA               	clrf	fsr2h,c
  2013   001874  0E03               	movlw	3
  2014   001876  26D9               	addwf	fsr2l,f,c
  2015   001878  50DF               	movf	indf2,w,c
  2016   00187A  6E56               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2017   00187C  ECBF  F009         	call	_gpio_pin_write_logic	;wreg free
  2018                           
  2019                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 break;
  2020   001880  EF5C  F00C         	goto	l1929
  2021   001884                     l1927:
  2022   001884  5059               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  2023   001886  6ED9               	movwf	fsr2l,c
  2024   001888  6ADA               	clrf	fsr2h,c
  2025   00188A  0E02               	movlw	2
  2026   00188C  26D9               	addwf	fsr2l,f,c
  2027   00188E  50DF               	movf	indf2,w,c
  2028   001890  6E5A               	movwf	??_gpio_pin_initialize^0,c
  2029   001892  6A5B               	clrf	(??_gpio_pin_initialize+1)^0,c
  2030                           
  2031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 1, Range of values is 0 to 0
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte            4     3 (average)
  2037                           ;	Chosen strategy is simple_byte
  2038   001894  505B               	movf	(??_gpio_pin_initialize+1)^0,w,c
  2039   001896  0A00               	xorlw	0	; case 0
  2040   001898  B4D8               	btfsc	status,2,c
  2041   00189A  EF51  F00C         	goto	l2103
  2042   00189E  EF28  F00C         	goto	l1909
  2043   0018A2                     l2103:
  2044                           
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 2, Range of values is 0 to 1
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte            7     4 (average)
  2050                           ;	Chosen strategy is simple_byte
  2051   0018A2  505A               	movf	??_gpio_pin_initialize^0,w,c
  2052   0018A4  0A00               	xorlw	0	; case 0
  2053   0018A6  B4D8               	btfsc	status,2,c
  2054   0018A8  EF31  F00C         	goto	l1917
  2055   0018AC  0A01               	xorlw	1	; case 1
  2056   0018AE  B4D8               	btfsc	status,2,c
  2057   0018B0  EF2B  F00C         	goto	l1915
  2058   0018B4  EF28  F00C         	goto	l1909
  2059   0018B8                     l1929:
  2060                           
  2061                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 317:     return EXCUTION_OK;
  2062   0018B8  0E00               	movlw	0
  2063   0018BA                     l353:
  2064   0018BA  0012               	return		;funcret
  2065   0018BC                     __end_of_gpio_pin_initialize:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _gpio_pin_write_logic *****************
  2069 ;; Defined at:
  2070 ;;		line 204 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  p_pin_config    1    5[COMRAM] PTR struct .
  2073 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), 
  2074 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      enum E2804
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        4 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 1
  2093 ;; This function calls:
  2094 ;;		_clear_bit_uint8
  2095 ;;		_set_bit_uint8
  2096 ;; This function is called by:
  2097 ;;		_led_on_off
  2098 ;;		_gpio_pin_initialize
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text16
  2103   00137E                     __ptext16:
  2104                           	callstack 0
  2105   00137E                     _gpio_pin_write_logic:
  2106                           	callstack 26
  2107   00137E                     
  2108                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 204: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 205:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 206: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 207:     if(
      +                          (((void*)0) == p_pin_config) ||
  2109   00137E  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2110   001380  B4D8               	btfsc	status,2,c
  2111   001382  EFC5  F009         	goto	u501
  2112   001386  EFC7  F009         	goto	u500
  2113   00138A                     u501:
  2114   00138A  EF37  F00A         	goto	l327
  2115   00138E                     u500:
  2116   00138E  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2117   001390  6ED9               	movwf	fsr2l,c
  2118   001392  6ADA               	clrf	fsr2h,c
  2119   001394  0E05               	movlw	5
  2120   001396  60DF               	cpfslt	indf2,c
  2121   001398  EFD0  F009         	goto	u511
  2122   00139C  EFD2  F009         	goto	u510
  2123   0013A0                     u511:
  2124   0013A0  EF37  F00A         	goto	l327
  2125   0013A4                     u510:
  2126   0013A4  0456               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  2127   0013A6  B4D8               	btfsc	status,2,c
  2128   0013A8  EFD8  F009         	goto	u521
  2129   0013AC  EFDA  F009         	goto	u520
  2130   0013B0                     u521:
  2131   0013B0  EF22  F00A         	goto	l1787
  2132   0013B4                     u520:
  2133   0013B4  5056               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  2134   0013B6  B4D8               	btfsc	status,2,c
  2135   0013B8  EFE0  F009         	goto	u531
  2136   0013BC  EFE2  F009         	goto	u530
  2137   0013C0                     u531:
  2138   0013C0  EF22  F00A         	goto	l1787
  2139   0013C4                     u530:
  2140   0013C4  EF37  F00A         	goto	l327
  2141   0013C8                     l1775:
  2142                           
  2143                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 218:                p_pin_config->logic = d_logic_desired;
  2144   0013C8  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2145   0013CA  6ED9               	movwf	fsr2l,c
  2146   0013CC  6ADA               	clrf	fsr2h,c
  2147   0013CE  0E03               	movlw	3
  2148   0013D0  26D9               	addwf	fsr2l,f,c
  2149   0013D2  C056  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  2150   0013D6                     
  2151                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  2152   0013D6  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2153   0013D8  6ED9               	movwf	fsr2l,c
  2154   0013DA  6ADA               	clrf	fsr2h,c
  2155   0013DC  50DF               	movf	indf2,w,c
  2156   0013DE  0D02               	mullw	2
  2157   0013E0  50F3               	movf	243,w,c
  2158   0013E2  0F01               	addlw	low _LAT_REG_ADD_arr
  2159   0013E4  6ED9               	movwf	fsr2l,c
  2160   0013E6  6ADA               	clrf	fsr2h,c
  2161   0013E8  CFDE F050          	movff	postinc2,set_bit_uint8@p_reg
  2162   0013EC  CFDD F051          	movff	postdec2,set_bit_uint8@p_reg+1
  2163   0013F0  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2164   0013F2  6ED9               	movwf	fsr2l,c
  2165   0013F4  6ADA               	clrf	fsr2h,c
  2166   0013F6  0E01               	movlw	1
  2167   0013F8  26D9               	addwf	fsr2l,f,c
  2168   0013FA  50DF               	movf	indf2,w,c
  2169   0013FC  6E52               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  2170   0013FE  EC38  F00A         	call	_set_bit_uint8	;wreg free
  2171                           
  2172                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                break;
  2173   001402  EF37  F00A         	goto	l327
  2174   001406                     l1779:
  2175                           
  2176                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 223:                p_pin_config->logic = d_logic_desired;
  2177   001406  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2178   001408  6ED9               	movwf	fsr2l,c
  2179   00140A  6ADA               	clrf	fsr2h,c
  2180   00140C  0E03               	movlw	3
  2181   00140E  26D9               	addwf	fsr2l,f,c
  2182   001410  C056  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  2183   001414                     
  2184                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  2185   001414  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2186   001416  6ED9               	movwf	fsr2l,c
  2187   001418  6ADA               	clrf	fsr2h,c
  2188   00141A  50DF               	movf	indf2,w,c
  2189   00141C  0D02               	mullw	2
  2190   00141E  50F3               	movf	243,w,c
  2191   001420  0F01               	addlw	low _LAT_REG_ADD_arr
  2192   001422  6ED9               	movwf	fsr2l,c
  2193   001424  6ADA               	clrf	fsr2h,c
  2194   001426  CFDE F050          	movff	postinc2,clear_bit_uint8@p_reg
  2195   00142A  CFDD F051          	movff	postdec2,clear_bit_uint8@p_reg+1
  2196   00142E  5055               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  2197   001430  6ED9               	movwf	fsr2l,c
  2198   001432  6ADA               	clrf	fsr2h,c
  2199   001434  0E01               	movlw	1
  2200   001436  26D9               	addwf	fsr2l,f,c
  2201   001438  50DF               	movf	indf2,w,c
  2202   00143A  6E52               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  2203   00143C  ECB1  F00A         	call	_clear_bit_uint8	;wreg free
  2204                           
  2205                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                break;
  2206   001440  EF37  F00A         	goto	l327
  2207   001444                     l1787:
  2208   001444  5056               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  2209   001446  6E57               	movwf	??_gpio_pin_write_logic^0,c
  2210   001448  6A58               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2211                           
  2212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 1, Range of values is 0 to 0
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            4     3 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219   00144A  5058               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2220   00144C  0A00               	xorlw	0	; case 0
  2221   00144E  B4D8               	btfsc	status,2,c
  2222   001450  EF2C  F00A         	goto	l2105
  2223   001454  EF37  F00A         	goto	l327
  2224   001458                     l2105:
  2225                           
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 2, Range of values is 0 to 1
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            7     4 (average)
  2231                           ;	Chosen strategy is simple_byte
  2232   001458  5057               	movf	??_gpio_pin_write_logic^0,w,c
  2233   00145A  0A00               	xorlw	0	; case 0
  2234   00145C  B4D8               	btfsc	status,2,c
  2235   00145E  EF03  F00A         	goto	l1779
  2236   001462  0A01               	xorlw	1	; case 1
  2237   001464  B4D8               	btfsc	status,2,c
  2238   001466  EFE4  F009         	goto	l1775
  2239   00146A  EF37  F00A         	goto	l327
  2240   00146E                     l327:
  2241   00146E  0012               	return		;funcret
  2242   001470                     __end_of_gpio_pin_write_logic:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _gpio_pin_direction_initialize *****************
  2246 ;; Defined at:
  2247 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  2250 ;;		 -> led_init@led_pin(5), push_btn_1$button_pin(5), push_btn_1(7), 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      enum E2804
  2255 ;; Registers used:
  2256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:        3 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 1
  2269 ;; This function calls:
  2270 ;;		_clear_bit_uint8
  2271 ;;		_set_bit_uint8
  2272 ;; This function is called by:
  2273 ;;		_push_button_init
  2274 ;;		_gpio_pin_initialize
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text17
  2279   001654                     __ptext17:
  2280                           	callstack 0
  2281   001654                     _gpio_pin_direction_initialize:
  2282                           	callstack 27
  2283   001654                     
  2284                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1)){
  2285   001654  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2286   001656  B4D8               	btfsc	status,2,c
  2287   001658  EF30  F00B         	goto	u481
  2288   00165C  EF32  F00B         	goto	u480
  2289   001660                     u481:
  2290   001660  EF89  F00B         	goto	l315
  2291   001664                     u480:
  2292   001664  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2293   001666  6ED9               	movwf	fsr2l,c
  2294   001668  6ADA               	clrf	fsr2h,c
  2295   00166A  0E04               	movlw	4
  2296   00166C  64DF               	cpfsgt	indf2,c
  2297   00166E  EF3B  F00B         	goto	u491
  2298   001672  EF3D  F00B         	goto	u490
  2299   001676                     u491:
  2300   001676  EF6F  F00B         	goto	l1759
  2301   00167A                     u490:
  2302   00167A  EF89  F00B         	goto	l315
  2303   00167E                     l1751:
  2304                           
  2305                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 183:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  2306   00167E  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2307   001680  6ED9               	movwf	fsr2l,c
  2308   001682  6ADA               	clrf	fsr2h,c
  2309   001684  50DF               	movf	indf2,w,c
  2310   001686  0D02               	mullw	2
  2311   001688  50F3               	movf	243,w,c
  2312   00168A  0F15               	addlw	low _TRIS_REG_ADD_arr
  2313   00168C  6ED9               	movwf	fsr2l,c
  2314   00168E  6ADA               	clrf	fsr2h,c
  2315   001690  CFDE F050          	movff	postinc2,clear_bit_uint8@p_reg
  2316   001694  CFDD F051          	movff	postdec2,clear_bit_uint8@p_reg+1
  2317   001698  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2318   00169A  6ED9               	movwf	fsr2l,c
  2319   00169C  6ADA               	clrf	fsr2h,c
  2320   00169E  0E01               	movlw	1
  2321   0016A0  26D9               	addwf	fsr2l,f,c
  2322   0016A2  50DF               	movf	indf2,w,c
  2323   0016A4  6E52               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  2324   0016A6  ECB1  F00A         	call	_clear_bit_uint8	;wreg free
  2325                           
  2326                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                break;
  2327   0016AA  EF89  F00B         	goto	l315
  2328   0016AE                     l1753:
  2329                           
  2330                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 187:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  2331   0016AE  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2332   0016B0  6ED9               	movwf	fsr2l,c
  2333   0016B2  6ADA               	clrf	fsr2h,c
  2334   0016B4  50DF               	movf	indf2,w,c
  2335   0016B6  0D02               	mullw	2
  2336   0016B8  50F3               	movf	243,w,c
  2337   0016BA  0F15               	addlw	low _TRIS_REG_ADD_arr
  2338   0016BC  6ED9               	movwf	fsr2l,c
  2339   0016BE  6ADA               	clrf	fsr2h,c
  2340   0016C0  CFDE F050          	movff	postinc2,set_bit_uint8@p_reg
  2341   0016C4  CFDD F051          	movff	postdec2,set_bit_uint8@p_reg+1
  2342   0016C8  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2343   0016CA  6ED9               	movwf	fsr2l,c
  2344   0016CC  6ADA               	clrf	fsr2h,c
  2345   0016CE  0E01               	movlw	1
  2346   0016D0  26D9               	addwf	fsr2l,f,c
  2347   0016D2  50DF               	movf	indf2,w,c
  2348   0016D4  6E52               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  2349   0016D6  EC38  F00A         	call	_set_bit_uint8	;wreg free
  2350                           
  2351                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                break;
  2352   0016DA  EF89  F00B         	goto	l315
  2353   0016DE                     l1759:
  2354   0016DE  5055               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  2355   0016E0  6ED9               	movwf	fsr2l,c
  2356   0016E2  6ADA               	clrf	fsr2h,c
  2357   0016E4  0E02               	movlw	2
  2358   0016E6  26D9               	addwf	fsr2l,f,c
  2359   0016E8  50DF               	movf	indf2,w,c
  2360   0016EA  6E56               	movwf	??_gpio_pin_direction_initialize^0,c
  2361   0016EC  6A57               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2362                           
  2363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2364                           ; Switch size 1, requested type "simple"
  2365                           ; Number of cases is 1, Range of values is 0 to 0
  2366                           ; switch strategies available:
  2367                           ; Name         Instructions Cycles
  2368                           ; simple_byte            4     3 (average)
  2369                           ;	Chosen strategy is simple_byte
  2370   0016EE  5057               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2371   0016F0  0A00               	xorlw	0	; case 0
  2372   0016F2  B4D8               	btfsc	status,2,c
  2373   0016F4  EF7E  F00B         	goto	l2107
  2374   0016F8  EF89  F00B         	goto	l315
  2375   0016FC                     l2107:
  2376                           
  2377                           ; Switch size 1, requested type "simple"
  2378                           ; Number of cases is 2, Range of values is 0 to 1
  2379                           ; switch strategies available:
  2380                           ; Name         Instructions Cycles
  2381                           ; simple_byte            7     4 (average)
  2382                           ;	Chosen strategy is simple_byte
  2383   0016FC  5056               	movf	??_gpio_pin_direction_initialize^0,w,c
  2384   0016FE  0A00               	xorlw	0	; case 0
  2385   001700  B4D8               	btfsc	status,2,c
  2386   001702  EF3F  F00B         	goto	l1751
  2387   001706  0A01               	xorlw	1	; case 1
  2388   001708  B4D8               	btfsc	status,2,c
  2389   00170A  EF57  F00B         	goto	l1753
  2390   00170E  EF89  F00B         	goto	l315
  2391   001712                     l315:
  2392   001712  0012               	return		;funcret
  2393   001714                     __end_of_gpio_pin_direction_initialize:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _set_bit_uint8 *****************
  2397 ;; Defined at:
  2398 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  2401 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  2402 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  2403 ;;		 -> TRISB(1), TRISA(1), 
  2404 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      enum E2804
  2409 ;; Registers used:
  2410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;Total ram usage:        5 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_gpio_pin_direction_initialize
  2426 ;;		_gpio_pin_write_logic
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text18
  2431   001470                     __ptext18:
  2432                           	callstack 0
  2433   001470                     _set_bit_uint8:
  2434                           	callstack 26
  2435   001470                     
  2436                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  2437   001470  5050               	movf	set_bit_uint8@p_reg^0,w,c
  2438   001472  1051               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  2439   001474  A4D8               	btfss	status,2,c
  2440   001476  EF3F  F00A         	goto	u461
  2441   00147A  EF41  F00A         	goto	u460
  2442   00147E                     u461:
  2443   00147E  EF83  F00A         	goto	l1707
  2444   001482                     u460:
  2445   001482  EFB0  F00A         	goto	l265
  2446   001486                     l1687:
  2447                           
  2448                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  2449   001486  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2450   00148A  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2451   00148E  0E00               	movlw	0
  2452   001490  80DB               	bsf	plusw2,0,c
  2453                           
  2454                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  2455   001492  EFB0  F00A         	goto	l265
  2456   001496                     l1689:
  2457                           
  2458                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  2459   001496  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2460   00149A  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2461   00149E  0E00               	movlw	0
  2462   0014A0  82DB               	bsf	plusw2,1,c
  2463                           
  2464                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  2465   0014A2  EFB0  F00A         	goto	l265
  2466   0014A6                     l1691:
  2467                           
  2468                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  2469   0014A6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2470   0014AA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2471   0014AE  0E00               	movlw	0
  2472   0014B0  84DB               	bsf	plusw2,2,c
  2473                           
  2474                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  2475   0014B2  EFB0  F00A         	goto	l265
  2476   0014B6                     l1693:
  2477                           
  2478                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  2479   0014B6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2480   0014BA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2481   0014BE  0E00               	movlw	0
  2482   0014C0  86DB               	bsf	plusw2,3,c
  2483                           
  2484                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  2485   0014C2  EFB0  F00A         	goto	l265
  2486   0014C6                     l1695:
  2487                           
  2488                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  2489   0014C6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2490   0014CA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2491   0014CE  0E00               	movlw	0
  2492   0014D0  88DB               	bsf	plusw2,4,c
  2493                           
  2494                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  2495   0014D2  EFB0  F00A         	goto	l265
  2496   0014D6                     l1697:
  2497                           
  2498                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  2499   0014D6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2500   0014DA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2501   0014DE  0E00               	movlw	0
  2502   0014E0  8ADB               	bsf	plusw2,5,c
  2503                           
  2504                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  2505   0014E2  EFB0  F00A         	goto	l265
  2506   0014E6                     l1699:
  2507                           
  2508                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  2509   0014E6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2510   0014EA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2511   0014EE  0E00               	movlw	0
  2512   0014F0  8CDB               	bsf	plusw2,6,c
  2513                           
  2514                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  2515   0014F2  EFB0  F00A         	goto	l265
  2516   0014F6                     l1701:
  2517                           
  2518                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  2519   0014F6  C050  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2520   0014FA  C051  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2521   0014FE  0E00               	movlw	0
  2522   001500  8EDB               	bsf	plusw2,7,c
  2523                           
  2524                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  2525   001502  EFB0  F00A         	goto	l265
  2526   001506                     l1707:
  2527   001506  5052               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  2528   001508  6E53               	movwf	??_set_bit_uint8^0,c
  2529   00150A  6A54               	clrf	(??_set_bit_uint8+1)^0,c
  2530                           
  2531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 1, Range of values is 0 to 0
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte            4     3 (average)
  2537                           ;	Chosen strategy is simple_byte
  2538   00150C  5054               	movf	(??_set_bit_uint8+1)^0,w,c
  2539   00150E  0A00               	xorlw	0	; case 0
  2540   001510  B4D8               	btfsc	status,2,c
  2541   001512  EF8D  F00A         	goto	l2109
  2542   001516  EFB0  F00A         	goto	l265
  2543   00151A                     l2109:
  2544                           
  2545                           ; Switch size 1, requested type "simple"
  2546                           ; Number of cases is 8, Range of values is 0 to 7
  2547                           ; switch strategies available:
  2548                           ; Name         Instructions Cycles
  2549                           ; simple_byte           25    13 (average)
  2550                           ;	Chosen strategy is simple_byte
  2551   00151A  5053               	movf	??_set_bit_uint8^0,w,c
  2552   00151C  0A00               	xorlw	0	; case 0
  2553   00151E  B4D8               	btfsc	status,2,c
  2554   001520  EF43  F00A         	goto	l1687
  2555   001524  0A01               	xorlw	1	; case 1
  2556   001526  B4D8               	btfsc	status,2,c
  2557   001528  EF4B  F00A         	goto	l1689
  2558   00152C  0A03               	xorlw	3	; case 2
  2559   00152E  B4D8               	btfsc	status,2,c
  2560   001530  EF53  F00A         	goto	l1691
  2561   001534  0A01               	xorlw	1	; case 3
  2562   001536  B4D8               	btfsc	status,2,c
  2563   001538  EF5B  F00A         	goto	l1693
  2564   00153C  0A07               	xorlw	7	; case 4
  2565   00153E  B4D8               	btfsc	status,2,c
  2566   001540  EF63  F00A         	goto	l1695
  2567   001544  0A01               	xorlw	1	; case 5
  2568   001546  B4D8               	btfsc	status,2,c
  2569   001548  EF6B  F00A         	goto	l1697
  2570   00154C  0A03               	xorlw	3	; case 6
  2571   00154E  B4D8               	btfsc	status,2,c
  2572   001550  EF73  F00A         	goto	l1699
  2573   001554  0A01               	xorlw	1	; case 7
  2574   001556  B4D8               	btfsc	status,2,c
  2575   001558  EF7B  F00A         	goto	l1701
  2576   00155C  EFB0  F00A         	goto	l265
  2577   001560                     l265:
  2578   001560  0012               	return		;funcret
  2579   001562                     __end_of_set_bit_uint8:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _clear_bit_uint8 *****************
  2583 ;; Defined at:
  2584 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  2587 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  2588 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  2589 ;;		 -> TRISB(1), TRISA(1), 
  2590 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      enum E2804
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        5 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_gpio_pin_direction_initialize
  2612 ;;		_gpio_pin_write_logic
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text19
  2617   001562                     __ptext19:
  2618                           	callstack 0
  2619   001562                     _clear_bit_uint8:
  2620                           	callstack 26
  2621   001562                     
  2622                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  2623   001562  5050               	movf	clear_bit_uint8@p_reg^0,w,c
  2624   001564  1051               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  2625   001566  A4D8               	btfss	status,2,c
  2626   001568  EFB8  F00A         	goto	u471
  2627   00156C  EFBA  F00A         	goto	u470
  2628   001570                     u471:
  2629   001570  EFFC  F00A         	goto	l1739
  2630   001574                     u470:
  2631   001574  EF29  F00B         	goto	l281
  2632   001578                     l1719:
  2633                           
  2634                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  2635   001578  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2636   00157C  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2637   001580  0EFE               	movlw	254
  2638   001582  16DF               	andwf	indf2,f,c
  2639                           
  2640                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  2641   001584  EF29  F00B         	goto	l281
  2642   001588                     l1721:
  2643                           
  2644                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  2645   001588  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2646   00158C  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2647   001590  0EFD               	movlw	253
  2648   001592  16DF               	andwf	indf2,f,c
  2649                           
  2650                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  2651   001594  EF29  F00B         	goto	l281
  2652   001598                     l1723:
  2653                           
  2654                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  2655   001598  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2656   00159C  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2657   0015A0  0EFB               	movlw	251
  2658   0015A2  16DF               	andwf	indf2,f,c
  2659                           
  2660                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  2661   0015A4  EF29  F00B         	goto	l281
  2662   0015A8                     l1725:
  2663                           
  2664                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  2665   0015A8  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2666   0015AC  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2667   0015B0  0EF7               	movlw	247
  2668   0015B2  16DF               	andwf	indf2,f,c
  2669                           
  2670                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  2671   0015B4  EF29  F00B         	goto	l281
  2672   0015B8                     l1727:
  2673                           
  2674                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  2675   0015B8  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2676   0015BC  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2677   0015C0  0EEF               	movlw	239
  2678   0015C2  16DF               	andwf	indf2,f,c
  2679                           
  2680                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  2681   0015C4  EF29  F00B         	goto	l281
  2682   0015C8                     l1729:
  2683                           
  2684                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  2685   0015C8  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2686   0015CC  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2687   0015D0  0EDF               	movlw	223
  2688   0015D2  16DF               	andwf	indf2,f,c
  2689                           
  2690                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  2691   0015D4  EF29  F00B         	goto	l281
  2692   0015D8                     l1731:
  2693                           
  2694                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  2695   0015D8  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2696   0015DC  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2697   0015E0  0EBF               	movlw	191
  2698   0015E2  16DF               	andwf	indf2,f,c
  2699                           
  2700                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  2701   0015E4  EF29  F00B         	goto	l281
  2702   0015E8                     l1733:
  2703                           
  2704                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  2705   0015E8  C050  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2706   0015EC  C051  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2707   0015F0  0E7F               	movlw	127
  2708   0015F2  16DF               	andwf	indf2,f,c
  2709                           
  2710                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  2711   0015F4  EF29  F00B         	goto	l281
  2712   0015F8                     l1739:
  2713   0015F8  5052               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  2714   0015FA  6E53               	movwf	??_clear_bit_uint8^0,c
  2715   0015FC  6A54               	clrf	(??_clear_bit_uint8+1)^0,c
  2716                           
  2717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 1, Range of values is 0 to 0
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte            4     3 (average)
  2723                           ;	Chosen strategy is simple_byte
  2724   0015FE  5054               	movf	(??_clear_bit_uint8+1)^0,w,c
  2725   001600  0A00               	xorlw	0	; case 0
  2726   001602  B4D8               	btfsc	status,2,c
  2727   001604  EF06  F00B         	goto	l2111
  2728   001608  EF29  F00B         	goto	l281
  2729   00160C                     l2111:
  2730                           
  2731                           ; Switch size 1, requested type "simple"
  2732                           ; Number of cases is 8, Range of values is 0 to 7
  2733                           ; switch strategies available:
  2734                           ; Name         Instructions Cycles
  2735                           ; simple_byte           25    13 (average)
  2736                           ;	Chosen strategy is simple_byte
  2737   00160C  5053               	movf	??_clear_bit_uint8^0,w,c
  2738   00160E  0A00               	xorlw	0	; case 0
  2739   001610  B4D8               	btfsc	status,2,c
  2740   001612  EFBC  F00A         	goto	l1719
  2741   001616  0A01               	xorlw	1	; case 1
  2742   001618  B4D8               	btfsc	status,2,c
  2743   00161A  EFC4  F00A         	goto	l1721
  2744   00161E  0A03               	xorlw	3	; case 2
  2745   001620  B4D8               	btfsc	status,2,c
  2746   001622  EFCC  F00A         	goto	l1723
  2747   001626  0A01               	xorlw	1	; case 3
  2748   001628  B4D8               	btfsc	status,2,c
  2749   00162A  EFD4  F00A         	goto	l1725
  2750   00162E  0A07               	xorlw	7	; case 4
  2751   001630  B4D8               	btfsc	status,2,c
  2752   001632  EFDC  F00A         	goto	l1727
  2753   001636  0A01               	xorlw	1	; case 5
  2754   001638  B4D8               	btfsc	status,2,c
  2755   00163A  EFE4  F00A         	goto	l1729
  2756   00163E  0A03               	xorlw	3	; case 6
  2757   001640  B4D8               	btfsc	status,2,c
  2758   001642  EFEC  F00A         	goto	l1731
  2759   001646  0A01               	xorlw	1	; case 7
  2760   001648  B4D8               	btfsc	status,2,c
  2761   00164A  EFF4  F00A         	goto	l1733
  2762   00164E  EF29  F00B         	goto	l281
  2763   001652                     l281:
  2764   001652  0012               	return		;funcret
  2765   001654                     __end_of_clear_bit_uint8:
  2766                           	callstack 0
  2767                           
  2768                           	psect	smallconst
  2769   001000                     __psmallconst:
  2770                           	callstack 0
  2771   001000  00                 	db	0
  2772   001001  00                 	db	0	; dummy byte at the end
  2773   000000                     
  2774                           	psect	rparam
  2775   000000                     
  2776                           	psect	config
  2777                           
  2778                           ; Padding undefined space
  2779   300000                     	org	3145728
  2780   300000  FF                 	db	255
  2781                           
  2782                           ;Config register CONFIG1H @ 0x300001
  2783                           ;	Oscillator Selection bits
  2784                           ;	OSC = HS, HS oscillator
  2785                           ;	Fail-Safe Clock Monitor Enable bit
  2786                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2787                           ;	Internal/External Oscillator Switchover bit
  2788                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2789   300001                     	org	3145729
  2790   300001  02                 	db	2
  2791                           
  2792                           ;Config register CONFIG2L @ 0x300002
  2793                           ;	Power-up Timer Enable bit
  2794                           ;	PWRT = OFF, PWRT disabled
  2795                           ;	Brown-out Reset Enable bits
  2796                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2797                           ;	Brown Out Reset Voltage bits
  2798                           ;	BORV = 1, 
  2799   300002                     	org	3145730
  2800   300002  09                 	db	9
  2801                           
  2802                           ;Config register CONFIG2H @ 0x300003
  2803                           ;	Watchdog Timer Enable bit
  2804                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2805                           ;	Watchdog Timer Postscale Select bits
  2806                           ;	WDTPS = 32768, 1:32768
  2807   300003                     	org	3145731
  2808   300003  1E                 	db	30
  2809                           
  2810                           ; Padding undefined space
  2811   300004                     	org	3145732
  2812   300004  FF                 	db	255
  2813                           
  2814                           ;Config register CONFIG3H @ 0x300005
  2815                           ;	CCP2 MUX bit
  2816                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2817                           ;	PORTB A/D Enable bit
  2818                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2819                           ;	Low-Power Timer1 Oscillator Enable bit
  2820                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2821                           ;	MCLR Pin Enable bit
  2822                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2823   300005                     	org	3145733
  2824   300005  81                 	db	129
  2825                           
  2826                           ;Config register CONFIG4L @ 0x300006
  2827                           ;	Stack Full/Underflow Reset Enable bit
  2828                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2829                           ;	Single-Supply ICSP Enable bit
  2830                           ;	LVP = OFF, Single-Supply ICSP disabled
  2831                           ;	Extended Instruction Set Enable bit
  2832                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2833                           ;	Background Debugger Enable bit
  2834                           ;	DEBUG = 0x1, unprogrammed default
  2835   300006                     	org	3145734
  2836   300006  81                 	db	129
  2837                           
  2838                           ; Padding undefined space
  2839   300007                     	org	3145735
  2840   300007  FF                 	db	255
  2841                           
  2842                           ;Config register CONFIG5L @ 0x300008
  2843                           ;	Code Protection bit
  2844                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2845                           ;	Code Protection bit
  2846                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2847                           ;	Code Protection bit
  2848                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2849                           ;	Code Protection bit
  2850                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2851   300008                     	org	3145736
  2852   300008  0F                 	db	15
  2853                           
  2854                           ;Config register CONFIG5H @ 0x300009
  2855                           ;	Boot Block Code Protection bit
  2856                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2857                           ;	Data EEPROM Code Protection bit
  2858                           ;	CPD = OFF, Data EEPROM not code-protected
  2859   300009                     	org	3145737
  2860   300009  C0                 	db	192
  2861                           
  2862                           ;Config register CONFIG6L @ 0x30000A
  2863                           ;	Write Protection bit
  2864                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2865                           ;	Write Protection bit
  2866                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2867                           ;	Write Protection bit
  2868                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2869                           ;	Write Protection bit
  2870                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2871   30000A                     	org	3145738
  2872   30000A  0F                 	db	15
  2873                           
  2874                           ;Config register CONFIG6H @ 0x30000B
  2875                           ;	Configuration Register Write Protection bit
  2876                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2877                           ;	Boot Block Write Protection bit
  2878                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2879                           ;	Data EEPROM Write Protection bit
  2880                           ;	WRTD = OFF, Data EEPROM not write-protected
  2881   30000B                     	org	3145739
  2882   30000B  E0                 	db	224
  2883                           
  2884                           ;Config register CONFIG7L @ 0x30000C
  2885                           ;	Table Read Protection bit
  2886                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2887                           ;	Table Read Protection bit
  2888                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2889                           ;	Table Read Protection bit
  2890                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2891                           ;	Table Read Protection bit
  2892                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2893   30000C                     	org	3145740
  2894   30000C  0F                 	db	15
  2895                           
  2896                           ;Config register CONFIG7H @ 0x30000D
  2897                           ;	Boot Block Table Read Protection bit
  2898                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2899   30000D                     	org	3145741
  2900   30000D  40                 	db	64
  2901                           tosu	equ	0xFFF
  2902                           tosh	equ	0xFFE
  2903                           tosl	equ	0xFFD
  2904                           stkptr	equ	0xFFC
  2905                           pclatu	equ	0xFFB
  2906                           pclath	equ	0xFFA
  2907                           pcl	equ	0xFF9
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           indf0	equ	0xFEF
  2915                           postinc0	equ	0xFEE
  2916                           postdec0	equ	0xFED
  2917                           preinc0	equ	0xFEC
  2918                           plusw0	equ	0xFEB
  2919                           fsr0h	equ	0xFEA
  2920                           fsr0l	equ	0xFE9
  2921                           wreg	equ	0xFE8
  2922                           indf1	equ	0xFE7
  2923                           postinc1	equ	0xFE6
  2924                           postdec1	equ	0xFE5
  2925                           preinc1	equ	0xFE4
  2926                           plusw1	equ	0xFE3
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           bsr	equ	0xFE0
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           preinc2	equ	0xFDC
  2934                           plusw2	equ	0xFDB
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> led_init@led_pin(COMRAM[5]), push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_read_logic@p_logic	PTR enum E2821 size(1) Largest target is 1
		 -> push_button_read@btn_pin_logic(COMRAM[1]), 

    gpio_pin_read_logic@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_toggle@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    led_on_off@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    led_toggle@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    push_button_init@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), 

    push_button_read@p_button_state	PTR enum E2914 size(1) Largest target is 1
		 -> button_1_state(COMRAM[1]), 

    push_button_read@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_magic_switch_led_programs
    _push_button_read->_gpio_pin_read_logic
    _led_program_3->_led_on_off
    _led_program_2->_led_toggle
    _led_toggle->_gpio_pin_toggle_logic
    _led_program_1->_led_on_off
    _led_on_off->_gpio_pin_write_logic
    _app_init->_led_init
    _push_button_init->_gpio_pin_direction_initialize
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10967
                           _app_init
             _calculate_step_counter
          _magic_switch_led_programs
 ---------------------------------------------------------------------------------
 (1) _magic_switch_led_programs                            2     2      0    5863
                                             16 COMRAM     2     2      0
                      _led_program_1
                      _led_program_2
                      _led_program_3
                   _push_button_read
 ---------------------------------------------------------------------------------
 (2) _push_button_read                                     4     2      2     689
                                              5 COMRAM     4     2      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  5     3      2     293
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _led_program_3                                        0     0      0    2157
                         _led_on_off
 ---------------------------------------------------------------------------------
 (2) _led_program_2                                        0     0      0     860
                            ___llmod
                         _led_toggle
 ---------------------------------------------------------------------------------
 (3) _led_toggle                                           6     5      1     549
                                              4 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_toggle_logic                                4     3      1     327
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) _led_program_1                                        0     0      0    2157
                         _led_on_off
 ---------------------------------------------------------------------------------
 (3) _led_on_off                                           7     5      2    2157
                                              9 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _calculate_step_counter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    5104
                           _led_init
                   _push_button_init
 ---------------------------------------------------------------------------------
 (2) _push_button_init                                     1     0      1    1550
                                              8 COMRAM     1     0      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _led_init                                             7     6      1    3554
                                             12 COMRAM     6     5      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    3276
                                              9 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 4     2      2    1638
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1430
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (5) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _led_init
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
           _clear_bit_uint8
           _set_bit_uint8
         _gpio_pin_write_logic
           _clear_bit_uint8
           _set_bit_uint8
     _push_button_init
       _gpio_pin_direction_initialize
   _calculate_step_counter
   _magic_switch_led_programs
     _led_program_1
       _led_on_off
         _gpio_pin_write_logic
     _led_program_2
       ___llmod
       _led_toggle
         _gpio_pin_toggle_logic
     _led_program_3
       _led_on_off
     _push_button_read
       _gpio_pin_read_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      61       1       76.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      39        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 18 20:20:10 2023

                                       l80 1AFE                                         l74 1A34  
                                       l84 19F8                                         l77 1AE2  
                                       l87 1AF0                                         l95 11DC  
      gpio_pin_write_logic@d_logic_desired 0056                                        l102 127C  
                                      l106 1280                                        l150 1ABC  
                                      l222 19B4                                        l215 1968  
                                      l208 1914                                        l315 1712  
                                      l156 1738                                        l157 17B6  
                                      l327 146E                                        l281 1652  
                                      l265 1560                                        l353 18BA  
                                      l363 137C                                        l379 116C  
                                      l910 182E                                        l917 183E  
                                      u500 138E                                        u501 138A  
                                      u510 13A4                                        u511 13A0  
                                      u520 13B4                                        u521 13B0  
                                      u601 1988                                        u530 13C4  
                                      u610 1292                                        u531 13C0  
                                      u611 128E                                        u460 1482  
                                      u540 1012                                        u620 1378  
                                      u461 147E                                        u701 18DA  
                                      u541 100E                                        u621 1372  
                                      u470 1574                                        u550 1116  
                                      u710 19F0                                        u630 137A  
                                      u471 1570                                        u551 1112  
                                      u711 19EC                                        u480 1664  
                                      u640 1850                                        u560 115E  
                                      u720 1724                                        u800 11B0  
                                      u481 1660                                        u641 184C  
                                      u561 115A                                        u721 1720  
                                      u801 11AC                                        u490 167A  
                                      u570 1926                                        u650 17CE  
                                      u730 1734                                        u810 11EC  
                                      u491 1676                                        u571 1922  
                                      u651 17CA                                        u731 1730  
                                      u811 11E8                                        u660 17F0  
                                      u740 1762                                        u820 11FC  
                                      u581 1934                                        u661 17EC  
                                      u741 175E                                        u821 11F8  
                                      u670 180E                                        u590 197A  
                                      u750 177C                                        u830 1218  
                                      u671 180A                                        u591 1976  
                                      u751 1778                                        u831 1214  
                                      u680 1AB0                                        u760 1798  
                                      u840 122A                                        u681 1AAC  
                                      u761 1794                                        u841 1226  
                                      u690 18CC                                        u770 17B2  
                                      u691 18C8                                        u771 17AE  
                                      u780 1A24                                        u781 1A20  
                                      u790 118A                                        u791 1186  
           push_button_read@p_button_state 0056                                        wreg 0FE8  
                            _led_program_1 1AF2                              _led_program_2 19B6  
                            _led_program_3 1AE4                                       l2001 1752  
                                     l2003 1762                                       l2013 19FA  
                                     l2101 1074                                       l2005 177C  
                                     l2021 116E                                       l2111 160C  
                                     l2103 18A2                                       l2015 1A24  
                                     l2007 1788                                       l2031 11EC  
                                     l2023 117A                                       l2105 1458  
                                     l2017 1AD2                                       l2009 1798  
                                     l2041 121A                                       l2033 11FC  
                                     l2025 118A                                       l2107 16FC  
                                     l2019 1ADA                                       l2043 122A  
                                     l2035 1204                                       l2027 11B0  
          gpio_pin_read_logic@p_pin_config 0050                                       l2109 151A  
                                     l2045 1232                                       l2053 124A  
                                     l2037 1208                                       l2029 11C8  
                                     l2061 1AC2                                       l2047 123A  
                                     l2039 1218                                       l2063 1AC6  
                                     l2049 1242                                       l2059 1ABE  
                                     l1701 14F6                                       l1721 1588  
                                     l1713 1562                                       l1801 101E  
                                     l2097 125E                                       l1731 15D8  
                                     l1723 1598                                       l1707 1506  
                                     l1811 1046                                       l1803 1026  
                                     l2099 12F4                                       l1733 15E8  
                                     l1725 15A8                                       l1813 104E  
                                     l1805 102E                                       l1821 10BA  
                                     l1727 15B8                                       l1719 1578  
                                     l1751 167E                                       l1823 1116  
                                     l1807 1036                                       l1729 15C8  
                                     l1681 1470                                       l1753 16AE  
                                     l1745 1654                                       l1841 193C  
                                     l1833 1916                                       l1825 1128  
                                     l1809 103E                                       l1739 15F8  
                                     l1691 14A6                                       l1747 1664  
                                     l1771 13B4                                       l1915 1856  
                                     l1907 1840                                       l1843 1946  
                                     l1827 115E                                       l1819 1056  
                                     l1693 14B6                                       l1781 1414  
                                     l1765 137E                                       l1917 1862  
                                     l1909 1850                                       l1845 1954  
                                     l1941 17D6                                       l1861 1990  
                                     l1853 196A                                       l1695 14C6  
                                     l1687 1486                                       l1759 16DE  
                                     l1775 13C8                                       l1767 138E  
                                     l1927 1884                                       l1847 1958  
                                     l1839 192A                                       l1951 1828  
                                     l1943 17E2                                       l1863 199A  
                                     l1871 1282                                       l1697 14D6  
                                     l1689 1496                                       l1777 13D6  
                                     l1769 13A4                                       l1929 18B8  
                                     l1953 1AA0                                       l1849 195C  
                                     l1945 17F0                                       l1937 17B8  
                                     l1793 1002                                       l1865 19A8  
                                     l1881 12A6                                       l1699 14E6  
                                     l1779 1406                                       l1787 1444  
                                     l1971 18E2                                       l1963 18BC  
                                     l1947 180E                                       l1939 17CE  
                                     l1867 19AC                                       l1859 197E  
                                     l1891 12CE                                       l1883 12AE  
                                     l1973 18EC                                       l1949 181E  
                                     l1885 12B6                                       l1877 1296  
                                     l1975 18FA                                       l1959 1AB4  
                                     l1983 1AF2                                       l1799 1016  
                                     l1887 12BE                                       l1879 129E  
                                     l1991 1714                                       l1977 18FE  
                                     l1969 18D0                                       l1985 19B6  
                                     l1889 12C6                                       l1897 12D6  
                                     l1993 1724                                       l1979 190C  
                                     l1987 19F0                                       l1899 133A  
                                     l1989 1AE4                                       l1997 173C  
                                     l1999 1746                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _main 1ABE                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                   ?_gpio_pin_toggle_logic 0050                       _gpio_pin_write_logic 137E  
                                    ?_main 0050                            __end_of___llmod 1840  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                                      _PORTD 0F83  
                                    _PORTE 0F84                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                           ?_led_program_1 0050                             ?_led_program_2 0050  
                           ?_led_program_3 0050                                      _led_1 0031  
                                    _led_2 0026                                      tablat 0FF5  
                          led_on_off@F2938 003A                                      plusw1 0FE3  
                                    plusw2 0FDB                                      status 0FD8  
            push_button_init@p_push_button 0058             ?_gpio_pin_direction_initialize 0055  
                          __initialization 1A36                               __end_of_main 1AD2  
                          led_on_off@p_led 0059                      ?_gpio_pin_write_logic 0055  
                                   ??_main 0062                              __activetblptr 0002  
                         ___llmod@dividend 0050                           __end_of_app_init 1AE4  
            push_button_read@p_push_button 0055                           __end_of_led_init 1916  
                                ??___llmod 0058                                     clear_0 1A5C  
                                   isa$std 0001                              led_init@F2933 003F  
                          ??_led_program_1 0060                            ??_led_program_2 005A  
                          ??_led_program_3 0060                          ?_push_button_init 0058  
                        ?_push_button_read 0055                               __pdataCOMRAM 0001  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                       ??_push_button_init 0059                         ??_push_button_read 0057  
                    __end_of_set_bit_uint8 1562                              led_init@p_led 005C  
                               __accesstop 0080                    __end_of__initialization 1A62  
                            ___rparam_used 0001                     ??_gpio_pin_write_logic 0057  
                           __pcstackCOMRAM 0050                           _PORT_REG_ADD_arr 000B  
         gpio_pin_write_logic@p_pin_config 0055          __end_of_magic_switch_led_programs 1282  
        gpio_pin_toggle_logic@p_pin_config 0050                    ??_gpio_pin_toggle_logic 0051  
                 ??_calculate_step_counter 0050                       _program_step_counter 0048  
                          led_toggle@F2942 0035                 gpio_pin_read_logic@p_logic 0051  
                          led_toggle@p_led 0054                                  ?_app_init 0050  
                          _LAT_REG_ADD_arr 0001                                 _led_on_off 1916  
                                ?_led_init 005C                          ??_clear_bit_uint8 0053  
                               _led_toggle 196A                                    __Hparam 0000  
                                  __Lparam 0000                        _gpio_pin_initialize 1840  
                      _gpio_pin_read_logic 1282                                    ___llmod 17B8  
                             __psmallconst 1000                                    __pcinit 1A36  
                     led_on_off@led_status 005A                                    __ramtop 1000  
                                  __ptext0 1ABE                                    __ptext1 116E  
                                  __ptext2 1714                                    __ptext3 1282  
                                  __ptext4 1AE4                                    __ptext5 19B6  
                                  __ptext6 196A                                    __ptext7 1002  
                                  __ptext8 17B8                                    __ptext9 1AF2  
          ??_gpio_pin_direction_initialize 0056                 clear_bit_uint8@d_IDX_BIT_X 0052  
                     ?_gpio_pin_initialize 0059                                 ??_app_init 0062  
                     ?_gpio_pin_read_logic 0050                                 ??_led_init 005D  
                     end_of_initialization 1A62                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 0050                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                        led_toggle@led_pin 0055                      ??_gpio_pin_initialize 005A  
                    ??_gpio_pin_read_logic 0052                                 _push_btn_1 002A  
                               _push_btn_2 001F                                ?_led_on_off 0059  
                              ?_led_toggle 0054                              __pidataCOMRAM 1A6C  
                        led_on_off@led_pin 005B              gpio_pin_toggle_logic@bit_mask 0053  
                      start_initialization 1A36                      __end_of_led_program_1 1B00  
                    __end_of_led_program_2 19FA                      __end_of_led_program_3 1AF2  
    __end_of_gpio_pin_direction_initialize 1714              _gpio_pin_direction_initialize 1654  
                   _calculate_step_counter 19FA                             _button_1_state 0034  
                           _button_2_state 0029            gpio_pin_initialize@p_pin_config 0059  
                          ___llmod@divisor 0054                            ___llmod@counter 0058  
            __end_of_gpio_pin_toggle_logic 116E                            _clear_bit_uint8 1562  
               ?_magic_switch_led_programs 0050                                __pbssCOMRAM 0035  
                                 ?___llmod 0050                                __smallconst 1000  
                            _set_bit_uint8 1470                gpio_pin_read_logic@bit_mask 0054  
                         _push_button_init 1AA0                           _push_button_read 1714  
                                _rise_edge 004C                    __end_of_clear_bit_uint8 1654  
            push_button_read@btn_pin_logic 0058                                _btn_counter 0044  
          _btn_1_high_valid_state_previous 004D                             ?_set_bit_uint8 0050  
                             ??_led_on_off 005B                                  copy_data0 1A4A  
                             ??_led_toggle 0055                                   __Hrparam 0000  
                                 __Lrparam 0000                         __end_of_led_on_off 196A  
              __end_of_gpio_pin_initialize 18BC                         __end_of_led_toggle 19B6  
              __end_of_gpio_pin_read_logic 137E                   set_bit_uint8@d_IDX_BIT_X 0052  
                  ?_calculate_step_counter 0050                                   __ptext10 1916  
                                 __ptext11 19FA                                   __ptext12 1AD2  
                                 __ptext13 1AA0                                   __ptext14 18BC  
                                 __ptext15 1840                                   __ptext16 137E  
                                 __ptext17 1654                                   __ptext18 1470  
                                 __ptext19 1562                                   _app_init 1AD2  
                   _btn_1_high_valid_state 004E                                   _led_init 18BC  
                                 isa$xinst 0000                            _program_counter 004F  
                         ?_clear_bit_uint8 0050                         set_bit_uint8@p_reg 0050  
           __end_of_calculate_step_counter 1A36                ??_magic_switch_led_programs 0060  
                          ??_set_bit_uint8 0053               __end_of_gpio_pin_write_logic 1470  
gpio_pin_direction_initialize@p_pin_config 0055                      _gpio_pin_toggle_logic 1002  
                 __end_of_push_button_init 1ABE                   __end_of_push_button_read 17B8  
                         _TRIS_REG_ADD_arr 0015                            led_init@led_pin 005D  
                _magic_switch_led_programs 116E  
