

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 26 11:45:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 23/03/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4620 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001BC6                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for _keypad_key_values_arr
    87   001BC6  31                 	db	49
    88   001BC7  32                 	db	50
    89   001BC8  33                 	db	51
    90   001BC9  41                 	db	65
    91   001BCA  34                 	db	52
    92   001BCB  35                 	db	53
    93   001BCC  36                 	db	54
    94   001BCD  42                 	db	66
    95   001BCE  37                 	db	55
    96   001BCF  38                 	db	56
    97   001BD0  39                 	db	57
    98   001BD1  43                 	db	67
    99   001BD2  2A                 	db	42
   100   001BD3  30                 	db	48
   101   001BD4  23                 	db	35
   102   001BD5  44                 	db	68
   103                           
   104                           ;initializer for _LAT_REG_ADD_arr
   105   001BD6  89                 	db	137
   106   001BD7  0F                 	db	15
   107   001BD8  8A                 	db	138
   108   001BD9  0F                 	db	15
   109   001BDA  8B                 	db	139
   110   001BDB  0F                 	db	15
   111   001BDC  8C                 	db	140
   112   001BDD  0F                 	db	15
   113   001BDE  8D                 	db	141
   114   001BDF  0F                 	db	15
   115                           
   116                           ;initializer for _PORT_REG_ADD_arr
   117   001BE0  80                 	db	128
   118   001BE1  0F                 	db	15
   119   001BE2  81                 	db	129
   120   001BE3  0F                 	db	15
   121   001BE4  82                 	db	130
   122   001BE5  0F                 	db	15
   123   001BE6  83                 	db	131
   124   001BE7  0F                 	db	15
   125   001BE8  84                 	db	132
   126   001BE9  0F                 	db	15
   127                           
   128                           ;initializer for _TRIS_REG_ADD_arr
   129   001BEA  92                 	db	146
   130   001BEB  0F                 	db	15
   131   001BEC  93                 	db	147
   132   001BED  0F                 	db	15
   133   001BEE  94                 	db	148
   134   001BEF  0F                 	db	15
   135   001BF0  95                 	db	149
   136   001BF1  0F                 	db	15
   137   001BF2  96                 	db	150
   138   001BF3  0F                 	db	15
   139                           
   140                           ;initializer for _int0_object
   141   001BF4  DA                 	db	low _int0_APP_ISR
   142   001BF5  1C                 	db	high _int0_APP_ISR
   143   001BF6  01                 	db	1
   144   001BF7  00                 	db	0
   145   001BF8  01                 	db	1
   146   001BF9  00                 	db	0
   147   001BFA  00                 	db	0
   148   001BFB  00                 	db	0
   149   001BFC  01                 	db	1
   150   001BFD  01                 	db	1
   151                           
   152                           ;initializer for _led1
   153   001BFE  02                 	db	2
   154   001BFF  00                 	db	0
   155   001C00  00                 	db	0
   156                           
   157                           	psect	idataBANK0
   158   001848                     __pidataBANK0:
   159                           	callstack 0
   160                           
   161                           ;initializer for init_msg_lcd@F3335
   162   001848  20                 	db	32
   163   001849  20                 	db	32
   164   00184A  20                 	db	32
   165   00184B  20                 	db	32
   166   00184C  20                 	db	32
   167   00184D  20                 	db	32
   168   00184E  20                 	db	32
   169   00184F  20                 	db	32
   170   001850  20                 	db	32
   171   001851  20                 	db	32
   172   001852  20                 	db	32
   173   001853  20                 	db	32
   174   001854  20                 	db	32
   175   001855  20                 	db	32
   176   001856  20                 	db	32
   177   001857  20                 	db	32
   178   001858  00                 	db	0
   179                           
   180                           ;initializer for init_msg_lcd@F3331
   181   001859  20                 	db	32
   182   00185A  20                 	db	32
   183   00185B  20                 	db	32
   184   00185C  20                 	db	32
   185   00185D  20                 	db	32
   186   00185E  20                 	db	32
   187   00185F  20                 	db	32
   188   001860  20                 	db	32
   189   001861  20                 	db	32
   190   001862  20                 	db	32
   191   001863  20                 	db	32
   192   001864  20                 	db	32
   193   001865  20                 	db	32
   194   001866  20                 	db	32
   195   001867  20                 	db	32
   196   001868  20                 	db	32
   197   001869  00                 	db	0
   198                           
   199                           ;initializer for init_msg_lcd@F3327
   200   00186A  20                 	db	32
   201   00186B  20                 	db	32
   202   00186C  20                 	db	32
   203   00186D  20                 	db	32
   204   00186E  20                 	db	32
   205   00186F  20                 	db	32
   206   001870  20                 	db	32
   207   001871  20                 	db	32
   208   001872  20                 	db	32
   209   001873  20                 	db	32
   210   001874  20                 	db	32
   211   001875  20                 	db	32
   212   001876  20                 	db	32
   213   001877  20                 	db	32
   214   001878  20                 	db	32
   215   001879  20                 	db	32
   216   00187A  00                 	db	0
   217                           
   218                           ;initializer for init_msg_lcd@F3323
   219   00187B  20                 	db	32
   220   00187C  20                 	db	32
   221   00187D  20                 	db	32
   222   00187E  20                 	db	32
   223   00187F  20                 	db	32
   224   001880  20                 	db	32
   225   001881  20                 	db	32
   226   001882  20                 	db	32
   227   001883  20                 	db	32
   228   001884  20                 	db	32
   229   001885  20                 	db	32
   230   001886  20                 	db	32
   231   001887  20                 	db	32
   232   001888  20                 	db	32
   233   001889  20                 	db	32
   234   00188A  20                 	db	32
   235   00188B  00                 	db	0
   236                           
   237                           ;initializer for _lcd_2_8bit
   238   00188C  02                 	db	2
   239   00188D  06                 	db	6
   240   00188E  00                 	db	0
   241   00188F  00                 	db	0
   242   001890  00                 	db	0
   243   001891  02                 	db	2
   244   001892  07                 	db	7
   245   001893  00                 	db	0
   246   001894  00                 	db	0
   247   001895  00                 	db	0
   248   001896  03                 	db	3
   249   001897  00                 	db	0
   250   001898  00                 	db	0
   251   001899  00                 	db	0
   252   00189A  00                 	db	0
   253   00189B  03                 	db	3
   254   00189C  01                 	db	1
   255   00189D  00                 	db	0
   256   00189E  00                 	db	0
   257   00189F  00                 	db	0
   258   0018A0  03                 	db	3
   259   0018A1  02                 	db	2
   260   0018A2  00                 	db	0
   261   0018A3  00                 	db	0
   262   0018A4  00                 	db	0
   263   0018A5  03                 	db	3
   264   0018A6  03                 	db	3
   265   0018A7  00                 	db	0
   266   0018A8  00                 	db	0
   267   0018A9  00                 	db	0
   268   0018AA  03                 	db	3
   269   0018AB  04                 	db	4
   270   0018AC  00                 	db	0
   271   0018AD  00                 	db	0
   272   0018AE  00                 	db	0
   273   0018AF  03                 	db	3
   274   0018B0  05                 	db	5
   275   0018B1  00                 	db	0
   276   0018B2  00                 	db	0
   277   0018B3  00                 	db	0
   278   0018B4  03                 	db	3
   279   0018B5  06                 	db	6
   280   0018B6  00                 	db	0
   281   0018B7  00                 	db	0
   282   0018B8  00                 	db	0
   283   0018B9  03                 	db	3
   284   0018BA  07                 	db	7
   285   0018BB  00                 	db	0
   286   0018BC  00                 	db	0
   287   0018BD  00                 	db	0
   288                           
   289                           	psect	idataBANK1
   290   001670                     __pidataBANK1:
   291                           	callstack 0
   292                           
   293                           ;initializer for init_msg_lcd@F3341
   294   001670  6C                 	db	108
   295   001671  6F                 	db	111
   296   001672  61                 	db	97
   297   001673  64                 	db	100
   298   001674  69                 	db	105
   299   001675  6E                 	db	110
   300   001676  67                 	db	103
   301   001677  2E                 	db	46
   302   001678  2E                 	db	46
   303   001679  2E                 	db	46
   304   00167A  2E                 	db	46
   305   00167B  2E                 	db	46
   306   00167C  2E                 	db	46
   307   00167D  2E                 	db	46
   308   00167E  2E                 	db	46
   309   00167F  2E                 	db	46
   310   001680  2E                 	db	46
   311   001681  00                 	db	0
   312                           
   313                           ;initializer for init_msg_lcd@F3337
   314   001682  6C                 	db	108
   315   001683  6F                 	db	111
   316   001684  61                 	db	97
   317   001685  64                 	db	100
   318   001686  69                 	db	105
   319   001687  6E                 	db	110
   320   001688  67                 	db	103
   321   001689  2E                 	db	46
   322   00168A  2E                 	db	46
   323   00168B  2E                 	db	46
   324   00168C  2E                 	db	46
   325   00168D  2E                 	db	46
   326   00168E  2E                 	db	46
   327   00168F  2E                 	db	46
   328   001690  2E                 	db	46
   329   001691  20                 	db	32
   330   001692  20                 	db	32
   331   001693  00                 	db	0
   332                           
   333                           ;initializer for init_msg_lcd@F3333
   334   001694  6C                 	db	108
   335   001695  6F                 	db	111
   336   001696  61                 	db	97
   337   001697  64                 	db	100
   338   001698  69                 	db	105
   339   001699  6E                 	db	110
   340   00169A  67                 	db	103
   341   00169B  2E                 	db	46
   342   00169C  2E                 	db	46
   343   00169D  2E                 	db	46
   344   00169E  2E                 	db	46
   345   00169F  2E                 	db	46
   346   0016A0  2E                 	db	46
   347   0016A1  20                 	db	32
   348   0016A2  20                 	db	32
   349   0016A3  20                 	db	32
   350   0016A4  20                 	db	32
   351   0016A5  00                 	db	0
   352                           
   353                           ;initializer for init_msg_lcd@F3329
   354   0016A6  6C                 	db	108
   355   0016A7  6F                 	db	111
   356   0016A8  61                 	db	97
   357   0016A9  64                 	db	100
   358   0016AA  69                 	db	105
   359   0016AB  6E                 	db	110
   360   0016AC  67                 	db	103
   361   0016AD  2E                 	db	46
   362   0016AE  2E                 	db	46
   363   0016AF  2E                 	db	46
   364   0016B0  2E                 	db	46
   365   0016B1  20                 	db	32
   366   0016B2  20                 	db	32
   367   0016B3  20                 	db	32
   368   0016B4  20                 	db	32
   369   0016B5  20                 	db	32
   370   0016B6  20                 	db	32
   371   0016B7  00                 	db	0
   372                           
   373                           ;initializer for init_msg_lcd@F3325
   374   0016B8  6C                 	db	108
   375   0016B9  6F                 	db	111
   376   0016BA  61                 	db	97
   377   0016BB  64                 	db	100
   378   0016BC  69                 	db	105
   379   0016BD  6E                 	db	110
   380   0016BE  67                 	db	103
   381   0016BF  2E                 	db	46
   382   0016C0  2E                 	db	46
   383   0016C1  20                 	db	32
   384   0016C2  20                 	db	32
   385   0016C3  20                 	db	32
   386   0016C4  20                 	db	32
   387   0016C5  20                 	db	32
   388   0016C6  20                 	db	32
   389   0016C7  20                 	db	32
   390   0016C8  20                 	db	32
   391   0016C9  00                 	db	0
   392                           
   393                           ;initializer for init_msg_lcd@F3321
   394   0016CA  6C                 	db	108
   395   0016CB  6F                 	db	111
   396   0016CC  61                 	db	97
   397   0016CD  64                 	db	100
   398   0016CE  69                 	db	105
   399   0016CF  6E                 	db	110
   400   0016D0  67                 	db	103
   401   0016D1  20                 	db	32
   402   0016D2  20                 	db	32
   403   0016D3  20                 	db	32
   404   0016D4  20                 	db	32
   405   0016D5  20                 	db	32
   406   0016D6  20                 	db	32
   407   0016D7  20                 	db	32
   408   0016D8  20                 	db	32
   409   0016D9  20                 	db	32
   410   0016DA  20                 	db	32
   411   0016DB  00                 	db	0
   412                           
   413                           ;initializer for init_msg_lcd@F3319
   414   0016DC  20                 	db	32
   415   0016DD  50                 	db	80
   416   0016DE  4C                 	db	76
   417   0016DF  45                 	db	69
   418   0016E0  41                 	db	65
   419   0016E1  53                 	db	83
   420   0016E2  45                 	db	69
   421   0016E3  20                 	db	32
   422   0016E4  57                 	db	87
   423   0016E5  41                 	db	65
   424   0016E6  49                 	db	73
   425   0016E7  54                 	db	84
   426   0016E8  20                 	db	32
   427   0016E9  3D                 	db	61
   428   0016EA  29                 	db	41
   429   0016EB  20                 	db	32
   430   0016EC  20                 	db	32
   431   0016ED  00                 	db	0
   432                           
   433                           ;initializer for init_msg_lcd@F3345
   434   0016EE  20                 	db	32
   435   0016EF  20                 	db	32
   436   0016F0  20                 	db	32
   437   0016F1  20                 	db	32
   438   0016F2  20                 	db	32
   439   0016F3  20                 	db	32
   440   0016F4  20                 	db	32
   441   0016F5  20                 	db	32
   442   0016F6  20                 	db	32
   443   0016F7  20                 	db	32
   444   0016F8  20                 	db	32
   445   0016F9  20                 	db	32
   446   0016FA  20                 	db	32
   447   0016FB  20                 	db	32
   448   0016FC  20                 	db	32
   449   0016FD  20                 	db	32
   450   0016FE  00                 	db	0
   451                           
   452                           ;initializer for init_msg_lcd@F3343
   453   0016FF  20                 	db	32
   454   001700  20                 	db	32
   455   001701  20                 	db	32
   456   001702  20                 	db	32
   457   001703  20                 	db	32
   458   001704  20                 	db	32
   459   001705  20                 	db	32
   460   001706  20                 	db	32
   461   001707  20                 	db	32
   462   001708  20                 	db	32
   463   001709  20                 	db	32
   464   00170A  20                 	db	32
   465   00170B  20                 	db	32
   466   00170C  20                 	db	32
   467   00170D  20                 	db	32
   468   00170E  20                 	db	32
   469   00170F  00                 	db	0
   470                           
   471                           ;initializer for init_msg_lcd@F3339
   472   001710  20                 	db	32
   473   001711  20                 	db	32
   474   001712  20                 	db	32
   475   001713  20                 	db	32
   476   001714  20                 	db	32
   477   001715  20                 	db	32
   478   001716  20                 	db	32
   479   001717  20                 	db	32
   480   001718  20                 	db	32
   481   001719  20                 	db	32
   482   00171A  20                 	db	32
   483   00171B  20                 	db	32
   484   00171C  20                 	db	32
   485   00171D  20                 	db	32
   486   00171E  20                 	db	32
   487   00171F  20                 	db	32
   488   001720  00                 	db	0
   489   000000                     _INTCON2bits	set	4081
   490   000000                     _LATA	set	3977
   491   000000                     _PORTE	set	3972
   492   000000                     _PORTD	set	3971
   493   000000                     _PORTC	set	3970
   494   000000                     _PORTB	set	3969
   495   000000                     _PORTA	set	3968
   496   000000                     _TRISA	set	3986
   497   000000                     _INTCON3bits	set	4080
   498   000000                     _INTCONbits	set	4082
   499   000000                     _TRISE	set	3990
   500   000000                     _TRISD	set	3989
   501   000000                     _TRISC	set	3988
   502   000000                     _TRISB	set	3987
   503   000000                     _LATE	set	3981
   504   000000                     _LATD	set	3980
   505   000000                     _LATC	set	3979
   506   000000                     _LATB	set	3978
   507                           
   508                           	psect	smallconst
   509   001000                     __psmallconst:
   510                           	callstack 0
   511   001000  00                 	db	0
   512   001001                     STR_10:
   513   001001  20                 	db	32
   514   001002  20                 	db	32
   515   001003  20                 	db	32
   516   001004  20                 	db	32
   517   001005  20                 	db	32
   518   001006  20                 	db	32
   519   001007  20                 	db	32
   520   001008  20                 	db	32
   521   001009  20                 	db	32
   522   00100A  20                 	db	32
   523   00100B  20                 	db	32
   524   00100C  20                 	db	32
   525   00100D  20                 	db	32
   526   00100E  20                 	db	32
   527   00100F  20                 	db	32
   528   001010  20                 	db	32
   529   001011  00                 	db	0
   530   001012  5F                 	db	95	;'_'
   531   001013  49                 	db	73	;'I'
   532   001014  4E                 	db	78	;'N'
   533   001015  49                 	db	73	;'I'
   534   001016  54                 	db	84	;'T'
   535   001017  49                 	db	73	;'I'
   536   001018  41                 	db	65	;'A'
   537   001019  4C                 	db	76	;'L'
   538   00101A  49                 	db	73	;'I'
   539   00101B  5A                 	db	90	;'Z'
   540   00101C  41                 	db	65	;'A'
   541   00101D  54                 	db	84	;'T'
   542   00101E  49                 	db	73	;'I'
   543   00101F  4F                 	db	79	;'O'
   544   001020  4E                 	db	78	;'N'
   545   001021  5F                 	db	95	;'_'
   546   001022  00                 	db	0
   547   001023                     STR_2:
   548   001023  5F                 	db	95	;'_'
   549   001024  57                 	db	87	;'W'
   550   001025  4F                 	db	79	;'O'
   551   001026  52                 	db	82	;'R'
   552   001027  4C                 	db	76	;'L'
   553   001028  44                 	db	68	;'D'
   554   001029  5F                 	db	95	;'_'
   555   00102A  00                 	db	0
   556   00102B                     STR_1:
   557   00102B  5F                 	db	95	;'_'
   558   00102C  48                 	db	72	;'H'
   559   00102D  45                 	db	69	;'E'
   560   00102E  4C                 	db	76	;'L'
   561   00102F  4C                 	db	76	;'L'
   562   001030  4F                 	db	79	;'O'
   563   001031  5F                 	db	95	;'_'
   564   001032  00                 	db	0
   565   001033  25                 	db	37
   566   001034  69                 	db	105	;'i'
   567   001035  00                 	db	0
   568   001036                     STR_12:
   569   001036  25                 	db	37
   570   001037  75                 	db	117	;'u'
   571   001038  00                 	db	0
   572   001039  00                 	db	0	; dummy byte at the end
   573   000000                     
   574                           ; #config settings
   575                           
   576                           	psect	cinit
   577   0018BE                     __pcinit:
   578                           	callstack 0
   579   0018BE                     start_initialization:
   580                           	callstack 0
   581   0018BE                     __initialization:
   582                           	callstack 0
   583                           
   584                           ; Initialize objects allocated to BANK1 (177 bytes)
   585                           ; load TBLPTR registers with __pidataBANK1
   586   0018BE  0E70               	movlw	low __pidataBANK1
   587   0018C0  6EF6               	movwf	tblptrl,c
   588   0018C2  0E16               	movlw	high __pidataBANK1
   589   0018C4  6EF7               	movwf	tblptrh,c
   590   0018C6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   591   0018C8  6EF8               	movwf	tblptru,c
   592   0018CA  EE01  F000         	lfsr	0,__pdataBANK1
   593   0018CE  EE10 F0B1          	lfsr	1,177
   594   0018D2                     copy_data0:
   595   0018D2  0009               	tblrd		*+
   596   0018D4  CFF5 FFEE          	movff	tablat,postinc0
   597   0018D8  50E5               	movf	postdec1,w,c
   598   0018DA  50E1               	movf	fsr1l,w,c
   599   0018DC  E1FA               	bnz	copy_data0
   600                           
   601                           ; Initialize objects allocated to BANK0 (118 bytes)
   602                           ; load TBLPTR registers with __pidataBANK0
   603   0018DE  0E48               	movlw	low __pidataBANK0
   604   0018E0  6EF6               	movwf	tblptrl,c
   605   0018E2  0E18               	movlw	high __pidataBANK0
   606   0018E4  6EF7               	movwf	tblptrh,c
   607   0018E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   608   0018E8  6EF8               	movwf	tblptru,c
   609   0018EA  EE00  F080         	lfsr	0,__pdataBANK0
   610   0018EE  EE10 F076          	lfsr	1,118
   611   0018F2                     copy_data1:
   612   0018F2  0009               	tblrd		*+
   613   0018F4  CFF5 FFEE          	movff	tablat,postinc0
   614   0018F8  50E5               	movf	postdec1,w,c
   615   0018FA  50E1               	movf	fsr1l,w,c
   616   0018FC  E1FA               	bnz	copy_data1
   617                           
   618                           ; Initialize objects allocated to COMRAM (59 bytes)
   619                           ; load TBLPTR registers with __pidataCOMRAM
   620   0018FE  0EC6               	movlw	low __pidataCOMRAM
   621   001900  6EF6               	movwf	tblptrl,c
   622   001902  0E1B               	movlw	high __pidataCOMRAM
   623   001904  6EF7               	movwf	tblptrh,c
   624   001906  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   625   001908  6EF8               	movwf	tblptru,c
   626   00190A  EE00  F001         	lfsr	0,__pdataCOMRAM
   627   00190E  EE10 F03B          	lfsr	1,59
   628   001912                     copy_data2:
   629   001912  0009               	tblrd		*+
   630   001914  CFF5 FFEE          	movff	tablat,postinc0
   631   001918  50E5               	movf	postdec1,w,c
   632   00191A  50E1               	movf	fsr1l,w,c
   633   00191C  E1FA               	bnz	copy_data2
   634                           
   635                           ; Clear objects allocated to COMRAM (25 bytes)
   636   00191E  EE00  F03C         	lfsr	0,__pbssCOMRAM
   637   001922  0E19               	movlw	25
   638   001924                     clear_0:
   639   001924  6AEE               	clrf	postinc0,c
   640   001926  06E8               	decf	wreg,f,c
   641   001928  E1FD               	bnz	clear_0
   642   00192A                     end_of_initialization:
   643                           	callstack 0
   644   00192A                     __end_of__initialization:
   645                           	callstack 0
   646   00192A  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   647   00192C  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   648   00192E  0100               	movlb	0
   649   001930  EF2D  F00E         	goto	_main	;jump to C main() function
   650                           
   651                           	psect	bssCOMRAM
   652   00003C                     __pbssCOMRAM:
   653                           	callstack 0
   654   00003C                     led_toggle@F3113:
   655                           	callstack 0
   656   00003C                     	ds	5
   657   000041                     led_on_off@F3109:
   658                           	callstack 0
   659   000041                     	ds	5
   660   000046                     led_init@F3104:
   661                           	callstack 0
   662   000046                     	ds	5
   663   00004B                     _program_step_counter:
   664                           	callstack 0
   665   00004B                     	ds	4
   666   00004F                     _INT2_InterruptHandler:
   667                           	callstack 0
   668   00004F                     	ds	2
   669   000051                     _INT1_InterruptHandler:
   670                           	callstack 0
   671   000051                     	ds	2
   672   000053                     _INT0_InterruptHandler:
   673                           	callstack 0
   674   000053                     	ds	2
   675                           
   676                           	psect	dataCOMRAM
   677   000001                     __pdataCOMRAM:
   678                           	callstack 0
   679   000001                     _keypad_key_values_arr:
   680                           	callstack 0
   681   000001                     	ds	16
   682   000011                     _LAT_REG_ADD_arr:
   683                           	callstack 0
   684   000011                     	ds	10
   685   00001B                     _PORT_REG_ADD_arr:
   686                           	callstack 0
   687   00001B                     	ds	10
   688   000025                     _TRIS_REG_ADD_arr:
   689                           	callstack 0
   690   000025                     	ds	10
   691   00002F                     _int0_object:
   692                           	callstack 0
   693   00002F                     	ds	10
   694   000039                     _led1:
   695                           	callstack 0
   696   000039                     	ds	3
   697                           
   698                           	psect	dataBANK0
   699   000080                     __pdataBANK0:
   700                           	callstack 0
   701   000080                     init_msg_lcd@F3335:
   702                           	callstack 0
   703   000080                     	ds	17
   704   000091                     init_msg_lcd@F3331:
   705                           	callstack 0
   706   000091                     	ds	17
   707   0000A2                     init_msg_lcd@F3327:
   708                           	callstack 0
   709   0000A2                     	ds	17
   710   0000B3                     init_msg_lcd@F3323:
   711                           	callstack 0
   712   0000B3                     	ds	17
   713   0000C4                     _lcd_2_8bit:
   714                           	callstack 0
   715   0000C4                     	ds	50
   716                           
   717                           	psect	dataBANK1
   718   000100                     __pdataBANK1:
   719                           	callstack 0
   720   000100                     init_msg_lcd@F3341:
   721                           	callstack 0
   722   000100                     	ds	18
   723   000112                     init_msg_lcd@F3337:
   724                           	callstack 0
   725   000112                     	ds	18
   726   000124                     init_msg_lcd@F3333:
   727                           	callstack 0
   728   000124                     	ds	18
   729   000136                     init_msg_lcd@F3329:
   730                           	callstack 0
   731   000136                     	ds	18
   732   000148                     init_msg_lcd@F3325:
   733                           	callstack 0
   734   000148                     	ds	18
   735   00015A                     init_msg_lcd@F3321:
   736                           	callstack 0
   737   00015A                     	ds	18
   738   00016C                     init_msg_lcd@F3319:
   739                           	callstack 0
   740   00016C                     	ds	18
   741   00017E                     init_msg_lcd@F3345:
   742                           	callstack 0
   743   00017E                     	ds	17
   744   00018F                     init_msg_lcd@F3343:
   745                           	callstack 0
   746   00018F                     	ds	17
   747   0001A0                     init_msg_lcd@F3339:
   748                           	callstack 0
   749   0001A0                     	ds	17
   750                           
   751                           	psect	cstackBANK1
   752   0001B1                     __pcstackBANK1:
   753                           	callstack 0
   754   0001B1                     led_init@led_pin:
   755                           	callstack 0
   756                           
   757                           ; 5 bytes @ 0x0
   758   0001B1                     	ds	5
   759                           
   760                           	psect	cstackBANK0
   761   0000F6                     __pcstackBANK0:
   762                           	callstack 0
   763   0000F6                     gpio_pin_direction_initialize@p_pin_config:
   764                           	callstack 0
   765   0000F6                     gpio_pin_write_logic@p_pin_config:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x0
   769   0000F6                     	ds	2
   770   0000F8                     ??_gpio_pin_direction_initialize:
   771   0000F8                     gpio_pin_write_logic@d_logic_desired:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x2
   775   0000F8                     	ds	1
   776   0000F9                     ??_gpio_pin_write_logic:
   777                           
   778                           ; 1 bytes @ 0x3
   779   0000F9                     	ds	1
   780   0000FA                     interrupt_INTx_pin_init@interrupt_INTx_st:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x4
   784   0000FA                     	ds	1
   785   0000FB                     interrupt_INTx_init@interrupt_INTx_st:
   786                           	callstack 0
   787   0000FB                     gpio_pin_initialize@p_pin_config:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x5
   791   0000FB                     	ds	2
   792   0000FD                     ??_gpio_pin_initialize:
   793                           
   794                           ; 1 bytes @ 0x7
   795   0000FD                     	ds	2
   796   0000FF                     led_init@p_led:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x9
   800   0000FF                     	ds	1
   801                           
   802                           	psect	cstackCOMRAM
   803   000055                     __pcstackCOMRAM:
   804                           	callstack 0
   805   000055                     gpio_pin_toggle_logic@p_pin_config:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x0
   809   000055                     	ds	1
   810   000056                     ??_gpio_pin_toggle_logic:
   811                           
   812                           ; 1 bytes @ 0x1
   813   000056                     	ds	2
   814   000058                     gpio_pin_toggle_logic@bit_mask:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x3
   818   000058                     	ds	1
   819   000059                     led_toggle@p_led:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x4
   823   000059                     	ds	1
   824   00005A                     led_toggle@led_pin:
   825                           	callstack 0
   826                           
   827                           ; 5 bytes @ 0x5
   828   00005A                     	ds	5
   829   00005F                     ??_InterruptManager:
   830   00005F                     
   831                           ; 1 bytes @ 0xA
   832   00005F                     	ds	8
   833   000067                     interrupt_INTx_enable@interrupt_INTx_st:
   834                           	callstack 0
   835   000067                     interrupt_INTx_disable@interrupt_INTx_st:
   836                           	callstack 0
   837   000067                     interrupt_INTx_edge_init@interrupt_INTx_st:
   838                           	callstack 0
   839   000067                     interrupt_INTx_clear_flag@interrupt_INTx_st:
   840                           	callstack 0
   841   000067                     set_bit_uint8@p_reg:
   842                           	callstack 0
   843   000067                     clear_bit_uint8@p_reg:
   844                           	callstack 0
   845   000067                     INT0_SetInterruptHandler@InterruptHandler:
   846                           	callstack 0
   847   000067                     INT1_SetInterruptHandler@InterruptHandler:
   848                           	callstack 0
   849   000067                     INT2_SetInterruptHandler@InterruptHandler:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x12
   853   000067                     	ds	1
   854   000068                     ??_interrupt_INTx_disable:
   855   000068                     ??_interrupt_INTx_clear_flag:
   856   000068                     ??_interrupt_INTx_edge_init:
   857   000068                     ??_interrupt_INTx_enable:
   858                           
   859                           ; 1 bytes @ 0x13
   860   000068                     	ds	1
   861   000069                     set_bit_uint8@d_IDX_BIT_X:
   862                           	callstack 0
   863   000069                     clear_bit_uint8@d_IDX_BIT_X:
   864                           	callstack 0
   865   000069                     Interrupt_INTX_SetInterruptHandler@interrupt_object:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x14
   869   000069                     	ds	1
   870   00006A                     ??_Interrupt_INTX_SetInterruptHandler:
   871   00006A                     ??_set_bit_uint8:
   872   00006A                     ??_clear_bit_uint8:
   873                           
   874                           ; 1 bytes @ 0x15
   875   00006A                     	ds	2
   876   00006C                     ??_interrupt_INTx_pin_init:
   877   00006C                     
   878                           ; 1 bytes @ 0x17
   879   00006C                     	ds	1
   880   00006D                     
   881                           ; 1 bytes @ 0x18
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 51 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2  1095[None  ] int 
   894 ;; Registers used:
   895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels required when called: 9
   907 ;; This function calls:
   908 ;;		_app_init
   909 ;;		_interrupt_INTx_init
   910 ;;		_led_init
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917   001C5A                     __ptext0:
   918                           	callstack 0
   919   001C5A                     _main:
   920                           	callstack 22
   921   001C5A                     
   922                           ;main.c: 53:     app_init();
   923   001C5A  EC72  F00E         	call	_app_init	;wreg free
   924   001C5E                     
   925                           ;main.c: 54:     led_init(&led1);
   926   001C5E  0E39               	movlw	low _led1
   927   001C60  0100               	movlb	0	; () banked
   928   001C62  6FFF               	movwf	led_init@p_led& (0+255),b
   929   001C64  EC9A  F00C         	call	_led_init	;wreg free
   930   001C68                     
   931                           ;main.c: 55:     interrupt_INTx_init(&int0_object);
   932   001C68  0E2F               	movlw	low _int0_object
   933   001C6A  0100               	movlb	0	; () banked
   934   001C6C  6FFB               	movwf	interrupt_INTx_init@interrupt_INTx_st& (0+255),b
   935   001C6E  ECBF  F00D         	call	_interrupt_INTx_init	;wreg free
   936   001C72                     l1096:
   937                           
   938                           ;main.c: 57:     {;main.c: 60:      }
   939   001C72  EF39  F00E         	goto	l1096
   940   001C76  EF07  F000         	goto	start
   941   001C7A                     __end_of_main:
   942                           	callstack 0
   943                           
   944 ;; *************** function _led_init *****************
   945 ;; Defined at:
   946 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  p_led           1    9[BANK0 ] PTR struct .
   949 ;;		 -> led1(3), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  led_pin         5    0[BANK1 ] struct .
   952 ;;  func_return     1    0        enum E2975
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      enum E2975
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        6 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 8
   969 ;; This function calls:
   970 ;;		_gpio_pin_initialize
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text1
   977   001934                     __ptext1:
   978                           	callstack 0
   979   001934                     _led_init:
   980                           	callstack 22
   981   001934                     
   982                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
   983   001934  0100               	movlb	0	; () banked
   984   001936  51FF               	movf	led_init@p_led& (0+255),w,b
   985   001938  A4D8               	btfss	status,2,c
   986   00193A  EFA1  F00C         	goto	u2971
   987   00193E  EFA3  F00C         	goto	u2970
   988   001942                     u2971:
   989   001942  EFA5  F00C         	goto	l5141
   990   001946                     u2970:
   991   001946  EFCF  F00C         	goto	l497
   992   00194A                     l5141:
   993                           
   994                           ; BSR set to: 0
   995                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
   996   00194A  EE20  F046         	lfsr	2,led_init@F3104
   997   00194E  EE11  F0B1         	lfsr	1,led_init@led_pin
   998   001952  0E04               	movlw	4
   999   001954                     u2981:
  1000   001954  CFDB FFE3          	movff	plusw2,plusw1
  1001   001958  06E8               	decf	wreg,f,c
  1002   00195A  E2FC               	bc	u2981
  1003   00195C                     
  1004                           ; BSR set to: 0
  1005   00195C  51FF               	movf	led_init@p_led& (0+255),w,b
  1006   00195E  6ED9               	movwf	fsr2l,c
  1007   001960  6ADA               	clrf	fsr2h,c
  1008   001962  50DF               	movf	indf2,w,c
  1009   001964  0101               	movlb	1	; () banked
  1010   001966  6FB1               	movwf	led_init@led_pin& (0+255),b
  1011   001968                     
  1012                           ; BSR set to: 1
  1013   001968  0100               	movlb	0	; () banked
  1014   00196A  51FF               	movf	led_init@p_led& (0+255),w,b
  1015   00196C  6ED9               	movwf	fsr2l,c
  1016   00196E  6ADA               	clrf	fsr2h,c
  1017   001970  0E01               	movlw	1
  1018   001972  26D9               	addwf	fsr2l,f,c
  1019   001974  50DF               	movf	indf2,w,c
  1020   001976  0101               	movlb	1	; () banked
  1021   001978  6FB2               	movwf	(led_init@led_pin+1)& (0+255),b
  1022   00197A                     
  1023                           ; BSR set to: 1
  1024   00197A  0E00               	movlw	0
  1025   00197C  6FB3               	movwf	(led_init@led_pin+2)& (0+255),b
  1026   00197E                     
  1027                           ; BSR set to: 1
  1028   00197E  0100               	movlb	0	; () banked
  1029   001980  51FF               	movf	led_init@p_led& (0+255),w,b
  1030   001982  6ED9               	movwf	fsr2l,c
  1031   001984  6ADA               	clrf	fsr2h,c
  1032   001986  0E02               	movlw	2
  1033   001988  26D9               	addwf	fsr2l,f,c
  1034   00198A  50DF               	movf	indf2,w,c
  1035   00198C  0101               	movlb	1	; () banked
  1036   00198E  6FB4               	movwf	(led_init@led_pin+3)& (0+255),b
  1037   001990                     
  1038                           ; BSR set to: 1
  1039   001990  0EB1               	movlw	low led_init@led_pin
  1040   001992  0100               	movlb	0	; () banked
  1041   001994  6FFB               	movwf	gpio_pin_initialize@p_pin_config& (0+255),b
  1042   001996  0E01               	movlw	high led_init@led_pin
  1043   001998  6FFC               	movwf	(gpio_pin_initialize@p_pin_config+1)& (0+255),b
  1044   00199A  ECDB  F00B         	call	_gpio_pin_initialize	;wreg free
  1045   00199E                     l497:
  1046   00199E  0012               	return		;funcret
  1047   0019A0                     __end_of_led_init:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _gpio_pin_initialize *****************
  1051 ;; Defined at:
  1052 ;;		line 294 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  p_pin_config    2    5[BANK0 ] PTR struct .
  1055 ;;		 -> led_init@led_pin(5), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      enum E2975
  1060 ;; Registers used:
  1061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        4 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 7
  1074 ;; This function calls:
  1075 ;;		_gpio_pin_direction_initialize
  1076 ;;		_gpio_pin_write_logic
  1077 ;; This function is called by:
  1078 ;;		_led_init
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text2
  1083   0017B6                     __ptext2:
  1084                           	callstack 0
  1085   0017B6                     _gpio_pin_initialize:
  1086                           	callstack 22
  1087   0017B6                     
  1088                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 294: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 295: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     if(((void*)0)
      +                           == p_pin_config)
  1089   0017B6  0100               	movlb	0	; () banked
  1090   0017B8  51FB               	movf	gpio_pin_initialize@p_pin_config& (0+255),w,b
  1091   0017BA  11FC               	iorwf	(gpio_pin_initialize@p_pin_config+1)& (0+255),w,b
  1092   0017BC  A4D8               	btfss	status,2,c
  1093   0017BE  EFE3  F00B         	goto	u2911
  1094   0017C2  EFE5  F00B         	goto	u2910
  1095   0017C6                     u2911:
  1096   0017C6  EF07  F00C         	goto	l5073
  1097   0017CA                     u2910:
  1098   0017CA                     l5055:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 300:         return EX
      +                          CUTION_NOT_OK;
  1102   0017CA  0E01               	movlw	1
  1103   0017CC  EF23  F00C         	goto	l714
  1104   0017D0                     l5061:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1108   0017D0  C0FB  F0F6         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1109   0017D4  C0FC  F0F7         	movff	gpio_pin_initialize@p_pin_config+1,gpio_pin_direction_initialize@p_pin_config+1
  1110   0017D8  ECD0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1111                           
  1112                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 308:                 break;
  1113   0017DC  EF22  F00C         	goto	l5075
  1114   0017E0                     l5063:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1118   0017E0  C0FB  F0F6         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1119   0017E4  C0FC  F0F7         	movff	gpio_pin_initialize@p_pin_config+1,gpio_pin_direction_initialize@p_pin_config+1
  1120   0017E8  ECD0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1121                           
  1122                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
  1123   0017EC  C0FB  F0F6         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
  1124   0017F0  C0FC  F0F7         	movff	gpio_pin_initialize@p_pin_config+1,gpio_pin_write_logic@p_pin_config+1
  1125   0017F4  0100               	movlb	0	; () banked
  1126   0017F6  EE20 F003          	lfsr	2,3
  1127   0017FA  51FB               	movf	gpio_pin_initialize@p_pin_config& (0+255),w,b
  1128   0017FC  26D9               	addwf	fsr2l,f,c
  1129   0017FE  51FC               	movf	(gpio_pin_initialize@p_pin_config+1)& (0+255),w,b
  1130   001800  22DA               	addwfc	fsr2h,f,c
  1131   001802  50DF               	movf	indf2,w,c
  1132   001804  6FF8               	movwf	gpio_pin_write_logic@d_logic_desired& (0+255),b
  1133   001806  EC5C  F009         	call	_gpio_pin_write_logic	;wreg free
  1134                           
  1135                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 312:                 break;
  1136   00180A  EF22  F00C         	goto	l5075
  1137   00180E                     l5073:
  1138                           
  1139                           ; BSR set to: 0
  1140   00180E  EE20 F002          	lfsr	2,2
  1141   001812  51FB               	movf	gpio_pin_initialize@p_pin_config& (0+255),w,b
  1142   001814  26D9               	addwf	fsr2l,f,c
  1143   001816  51FC               	movf	(gpio_pin_initialize@p_pin_config+1)& (0+255),w,b
  1144   001818  22DA               	addwfc	fsr2h,f,c
  1145   00181A  50DF               	movf	indf2,w,c
  1146   00181C  6FFD               	movwf	??_gpio_pin_initialize& (0+255),b
  1147   00181E  6BFE               	clrf	(??_gpio_pin_initialize+1)& (0+255),b
  1148                           
  1149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 0 to 0
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ;	Chosen strategy is simple_byte
  1156   001820  51FE               	movf	(??_gpio_pin_initialize+1)& (0+255),w,b
  1157   001822  0A00               	xorlw	0	; case 0
  1158   001824  B4D8               	btfsc	status,2,c
  1159   001826  EF17  F00C         	goto	l5849
  1160   00182A  EFE5  F00B         	goto	l5055
  1161   00182E                     l5849:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 2, Range of values is 0 to 1
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            7     4 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170   00182E  51FD               	movf	??_gpio_pin_initialize& (0+255),w,b
  1171   001830  0A00               	xorlw	0	; case 0
  1172   001832  B4D8               	btfsc	status,2,c
  1173   001834  EFF0  F00B         	goto	l5063
  1174   001838  0A01               	xorlw	1	; case 1
  1175   00183A  B4D8               	btfsc	status,2,c
  1176   00183C  EFE8  F00B         	goto	l5061
  1177   001840  EFE5  F00B         	goto	l5055
  1178   001844                     l5075:
  1179                           
  1180                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 318:     return EXCUTION_OK;
  1181   001844  0E00               	movlw	0
  1182   001846                     l714:
  1183   001846  0012               	return		;funcret
  1184   001848                     __end_of_gpio_pin_initialize:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _gpio_pin_write_logic *****************
  1188 ;; Defined at:
  1189 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  p_pin_config    2    0[BANK0 ] PTR struct .
  1192 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), lcd_2_8bit$lcd_data_pin(40), lcd_2_8bit(50), 
  1193 ;;  d_logic_desi    1    2[BANK0 ] const enum E2992
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      enum E2975
  1198 ;; Registers used:
  1199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:        5 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; Hardware stack levels required when called: 6
  1212 ;; This function calls:
  1213 ;;		_clear_bit_uint8
  1214 ;;		_set_bit_uint8
  1215 ;; This function is called by:
  1216 ;;		_gpio_pin_initialize
  1217 ;;		_DCmotor_init
  1218 ;;		_DCmotor_rotate_CW_CCW
  1219 ;;		_DCmotor_brake
  1220 ;;		_keypad_init
  1221 ;;		_keypad_read
  1222 ;;		_lcd_4bit_init
  1223 ;;		_lcd_4bit_send_cmd
  1224 ;;		_lcd_4bit_send_char
  1225 ;;		_lcd_8bit_init
  1226 ;;		_lcd_8bit_send_cmd
  1227 ;;		_lcd_8bit_send_char
  1228 ;;		_lcd_4bit_send_enable
  1229 ;;		_lcd_8bit_send_enable
  1230 ;;		_led_on_off
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text3
  1235   0012B8                     __ptext3:
  1236                           	callstack 0
  1237   0012B8                     _gpio_pin_write_logic:
  1238                           	callstack 22
  1239   0012B8                     
  1240                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
  1241   0012B8  0100               	movlb	0	; () banked
  1242   0012BA  51F6               	movf	gpio_pin_write_logic@p_pin_config& (0+255),w,b
  1243   0012BC  11F7               	iorwf	(gpio_pin_write_logic@p_pin_config+1)& (0+255),w,b
  1244   0012BE  B4D8               	btfsc	status,2,c
  1245   0012C0  EF64  F009         	goto	u2861
  1246   0012C4  EF66  F009         	goto	u2860
  1247   0012C8                     u2861:
  1248   0012C8  EFDD  F009         	goto	l688
  1249   0012CC                     u2860:
  1250   0012CC                     
  1251                           ; BSR set to: 0
  1252   0012CC  C0F6  FFD9         	movff	gpio_pin_write_logic@p_pin_config,fsr2l
  1253   0012D0  C0F7  FFDA         	movff	gpio_pin_write_logic@p_pin_config+1,fsr2h
  1254   0012D4  0E05               	movlw	5
  1255   0012D6  60DF               	cpfslt	indf2,c
  1256   0012D8  EF70  F009         	goto	u2871
  1257   0012DC  EF72  F009         	goto	u2870
  1258   0012E0                     u2871:
  1259   0012E0  EFDD  F009         	goto	l688
  1260   0012E4                     u2870:
  1261   0012E4                     
  1262                           ; BSR set to: 0
  1263   0012E4  05F8               	decf	gpio_pin_write_logic@d_logic_desired& (0+255),w,b
  1264   0012E6  B4D8               	btfsc	status,2,c
  1265   0012E8  EF78  F009         	goto	u2881
  1266   0012EC  EF7A  F009         	goto	u2880
  1267   0012F0                     u2881:
  1268   0012F0  EFC8  F009         	goto	l5037
  1269   0012F4                     u2880:
  1270   0012F4                     
  1271                           ; BSR set to: 0
  1272   0012F4  51F8               	movf	gpio_pin_write_logic@d_logic_desired& (0+255),w,b
  1273   0012F6  B4D8               	btfsc	status,2,c
  1274   0012F8  EF80  F009         	goto	u2891
  1275   0012FC  EF82  F009         	goto	u2890
  1276   001300                     u2891:
  1277   001300  EFC8  F009         	goto	l5037
  1278   001304                     u2890:
  1279   001304  EFDD  F009         	goto	l688
  1280   001308                     l5025:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
  1284   001308  EE20 F003          	lfsr	2,3
  1285   00130C  51F6               	movf	gpio_pin_write_logic@p_pin_config& (0+255),w,b
  1286   00130E  26D9               	addwf	fsr2l,f,c
  1287   001310  51F7               	movf	(gpio_pin_write_logic@p_pin_config+1)& (0+255),w,b
  1288   001312  22DA               	addwfc	fsr2h,f,c
  1289   001314  C0F8  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1290   001318                     
  1291                           ; BSR set to: 0
  1292                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1293   001318  C0F6  FFD9         	movff	gpio_pin_write_logic@p_pin_config,fsr2l
  1294   00131C  C0F7  FFDA         	movff	gpio_pin_write_logic@p_pin_config+1,fsr2h
  1295   001320  50DF               	movf	indf2,w,c
  1296   001322  0D02               	mullw	2
  1297   001324  50F3               	movf	243,w,c
  1298   001326  0F11               	addlw	low _LAT_REG_ADD_arr
  1299   001328  6ED9               	movwf	fsr2l,c
  1300   00132A  6ADA               	clrf	fsr2h,c
  1301   00132C  CFDE F067          	movff	postinc2,set_bit_uint8@p_reg
  1302   001330  CFDD F068          	movff	postdec2,set_bit_uint8@p_reg+1
  1303   001334  EE20 F001          	lfsr	2,1
  1304   001338  51F6               	movf	gpio_pin_write_logic@p_pin_config& (0+255),w,b
  1305   00133A  26D9               	addwf	fsr2l,f,c
  1306   00133C  51F7               	movf	(gpio_pin_write_logic@p_pin_config+1)& (0+255),w,b
  1307   00133E  22DA               	addwfc	fsr2h,f,c
  1308   001340  50DF               	movf	indf2,w,c
  1309   001342  6E69               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1310   001344  ECDE  F009         	call	_set_bit_uint8	;wreg free
  1311                           
  1312                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  1313   001348  EFDD  F009         	goto	l688
  1314   00134C                     l5029:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  1318   00134C  EE20 F003          	lfsr	2,3
  1319   001350  51F6               	movf	gpio_pin_write_logic@p_pin_config& (0+255),w,b
  1320   001352  26D9               	addwf	fsr2l,f,c
  1321   001354  51F7               	movf	(gpio_pin_write_logic@p_pin_config+1)& (0+255),w,b
  1322   001356  22DA               	addwfc	fsr2h,f,c
  1323   001358  C0F8  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1324   00135C                     
  1325                           ; BSR set to: 0
  1326                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1327   00135C  C0F6  FFD9         	movff	gpio_pin_write_logic@p_pin_config,fsr2l
  1328   001360  C0F7  FFDA         	movff	gpio_pin_write_logic@p_pin_config+1,fsr2h
  1329   001364  50DF               	movf	indf2,w,c
  1330   001366  0D02               	mullw	2
  1331   001368  50F3               	movf	243,w,c
  1332   00136A  0F11               	addlw	low _LAT_REG_ADD_arr
  1333   00136C  6ED9               	movwf	fsr2l,c
  1334   00136E  6ADA               	clrf	fsr2h,c
  1335   001370  CFDE F067          	movff	postinc2,clear_bit_uint8@p_reg
  1336   001374  CFDD F068          	movff	postdec2,clear_bit_uint8@p_reg+1
  1337   001378  EE20 F001          	lfsr	2,1
  1338   00137C  51F6               	movf	gpio_pin_write_logic@p_pin_config& (0+255),w,b
  1339   00137E  26D9               	addwf	fsr2l,f,c
  1340   001380  51F7               	movf	(gpio_pin_write_logic@p_pin_config+1)& (0+255),w,b
  1341   001382  22DA               	addwfc	fsr2h,f,c
  1342   001384  50DF               	movf	indf2,w,c
  1343   001386  6E69               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1344   001388  EC57  F00A         	call	_clear_bit_uint8	;wreg free
  1345                           
  1346                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  1347   00138C  EFDD  F009         	goto	l688
  1348   001390                     l5037:
  1349                           
  1350                           ; BSR set to: 0
  1351   001390  51F8               	movf	gpio_pin_write_logic@d_logic_desired& (0+255),w,b
  1352   001392  6FF9               	movwf	??_gpio_pin_write_logic& (0+255),b
  1353   001394  6BFA               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  1354                           
  1355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 1, Range of values is 0 to 0
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte            4     3 (average)
  1361                           ;	Chosen strategy is simple_byte
  1362   001396  51FA               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1363   001398  0A00               	xorlw	0	; case 0
  1364   00139A  B4D8               	btfsc	status,2,c
  1365   00139C  EFD2  F009         	goto	l5851
  1366   0013A0  EFDD  F009         	goto	l688
  1367   0013A4                     l5851:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ; Switch size 1, requested type "simple"
  1371                           ; Number of cases is 2, Range of values is 0 to 1
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte            7     4 (average)
  1375                           ;	Chosen strategy is simple_byte
  1376   0013A4  51F9               	movf	??_gpio_pin_write_logic& (0+255),w,b
  1377   0013A6  0A00               	xorlw	0	; case 0
  1378   0013A8  B4D8               	btfsc	status,2,c
  1379   0013AA  EFA6  F009         	goto	l5029
  1380   0013AE  0A01               	xorlw	1	; case 1
  1381   0013B0  B4D8               	btfsc	status,2,c
  1382   0013B2  EF84  F009         	goto	l5025
  1383   0013B6  EFDD  F009         	goto	l688
  1384   0013BA                     l688:
  1385   0013BA  0012               	return		;funcret
  1386   0013BC                     __end_of_gpio_pin_write_logic:
  1387                           	callstack 0
  1388                           
  1389 ;; *************** function _interrupt_INTx_init *****************
  1390 ;; Defined at:
  1391 ;;		line 26 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  interrupt_IN    1    5[BANK0 ] PTR const struct .
  1394 ;;		 -> int0_object(10), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      enum E2975
  1399 ;; Registers used:
  1400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:        1 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 8
  1413 ;; This function calls:
  1414 ;;		_Interrupt_INTX_SetInterruptHandler
  1415 ;;		_interrupt_INTx_clear_flag
  1416 ;;		_interrupt_INTx_disable
  1417 ;;		_interrupt_INTx_edge_init
  1418 ;;		_interrupt_INTx_enable
  1419 ;;		_interrupt_INTx_pin_init
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text4
  1426   001B7E                     __ptext4:
  1427                           	callstack 0
  1428   001B7E                     _interrupt_INTx_init:
  1429                           	callstack 22
  1430   001B7E                     
  1431                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 26: std_return interrupt_INTx_init (const int
      +                          errupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.c: 27: {;_HAL/
      +                          MCAL/Interrupt/external_interrupt.c: 28:     if (((void*)0) == interrupt_INTx_st)
  1432   001B7E  0100               	movlb	0	; () banked
  1433   001B80  51FB               	movf	interrupt_INTx_init@interrupt_INTx_st& (0+255),w,b
  1434   001B82  A4D8               	btfss	status,2,c
  1435   001B84  EFC6  F00D         	goto	u2991
  1436   001B88  EFC8  F00D         	goto	u2990
  1437   001B8C                     u2991:
  1438   001B8C  EFCA  F00D         	goto	l5161
  1439   001B90                     u2990:
  1440   001B90  EFE2  F00D         	goto	l877
  1441   001B94                     l5161:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 33:     {;_HAL/MCAL/Interrupt/external_interr
      +                          upt.c: 35:         interrupt_INTx_disable(interrupt_INTx_st);
  1445   001B94  C0FB  F067         	movff	interrupt_INTx_init@interrupt_INTx_st,interrupt_INTx_disable@interrupt_INTx_st
  1446   001B98  EC35  F00D         	call	_interrupt_INTx_disable	;wreg free
  1447                           
  1448                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 38:         interrupt_INTx_clear_flag(interru
      +                          pt_INTx_st);
  1449   001B9C  C0FB  F067         	movff	interrupt_INTx_init@interrupt_INTx_st,interrupt_INTx_clear_flag@interrupt_INTx_st
  1450   001BA0  EC67  F00D         	call	_interrupt_INTx_clear_flag	;wreg free
  1451                           
  1452                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 40:         interrupt_INTx_edge_init(interrup
      +                          t_INTx_st);
  1453   001BA4  C0FB  F067         	movff	interrupt_INTx_init@interrupt_INTx_st,interrupt_INTx_edge_init@interrupt_INTx_st
  1454   001BA8  ECD3  F008         	call	_interrupt_INTx_edge_init	;wreg free
  1455   001BAC                     
  1456                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 46:         interrupt_INTx_pin_init(interrupt
      +                          _INTx_st);
  1457   001BAC  C0FB  F0FA         	movff	interrupt_INTx_init@interrupt_INTx_st,interrupt_INTx_pin_init@interrupt_INTx_st
  1458   001BB0  EC18  F00E         	call	_interrupt_INTx_pin_init	;wreg free
  1459   001BB4                     
  1460                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 48:         Interrupt_INTX_SetInterruptHandle
      +                          r(interrupt_INTx_st);
  1461   001BB4  C0FB  F069         	movff	interrupt_INTx_init@interrupt_INTx_st,Interrupt_INTX_SetInterruptHandler@interrup
      +                          t_object
  1462   001BB8  EC91  F00B         	call	_Interrupt_INTX_SetInterruptHandler	;wreg free
  1463   001BBC                     
  1464                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 51:         interrupt_INTx_enable(interrupt_I
      +                          NTx_st);
  1465   001BBC  C0FB  F067         	movff	interrupt_INTx_init@interrupt_INTx_st,interrupt_INTx_enable@interrupt_INTx_st
  1466   001BC0  EC03  F00D         	call	_interrupt_INTx_enable	;wreg free
  1467   001BC4                     l877:
  1468   001BC4  0012               	return		;funcret
  1469   001BC6                     __end_of_interrupt_INTx_init:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _interrupt_INTx_pin_init *****************
  1473 ;; Defined at:
  1474 ;;		line 143 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  interrupt_IN    1    4[BANK0 ] PTR const struct .
  1477 ;;		 -> int0_object(10), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      enum E2975
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 7
  1496 ;; This function calls:
  1497 ;;		_gpio_pin_direction_initialize
  1498 ;; This function is called by:
  1499 ;;		_interrupt_INTx_init
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text5
  1504   001C30                     __ptext5:
  1505                           	callstack 0
  1506   001C30                     _interrupt_INTx_pin_init:
  1507                           	callstack 22
  1508   001C30                     
  1509                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 143: static std_return interrupt_INTx_pin_ini
      +                          t (const interrupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.c:
      +                           144: {;_HAL/MCAL/Interrupt/external_interrupt.c: 145:     if (((void*)0) == interrupt_I
      +                          NTx_st)
  1510   001C30  0100               	movlb	0	; () banked
  1511   001C32  51FA               	movf	interrupt_INTx_pin_init@interrupt_INTx_st& (0+255),w,b
  1512   001C34  A4D8               	btfss	status,2,c
  1513   001C36  EF1F  F00E         	goto	u2921
  1514   001C3A  EF21  F00E         	goto	u2920
  1515   001C3E                     u2921:
  1516   001C3E  EF23  F00E         	goto	l5091
  1517   001C42                     u2920:
  1518   001C42  EF2C  F00E         	goto	l919
  1519   001C46                     l5091:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 150:     {;_HAL/MCAL/Interrupt/external_inter
      +                          rupt.c: 151:         gpio_pin_direction_initialize( &(interrupt_INTx_st->interrupt_pin) 
      +                          );
  1523   001C46  C0FA  F06C         	movff	interrupt_INTx_pin_init@interrupt_INTx_st,??_interrupt_INTx_pin_init
  1524   001C4A  0E02               	movlw	2
  1525   001C4C  266C               	addwf	??_interrupt_INTx_pin_init^0,f,c
  1526   001C4E  C06C  F0F6         	movff	??_interrupt_INTx_pin_init,gpio_pin_direction_initialize@p_pin_config
  1527   001C52  6BF7               	clrf	(gpio_pin_direction_initialize@p_pin_config+1)& (0+255),b
  1528   001C54  ECD0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1529   001C58                     l919:
  1530   001C58  0012               	return		;funcret
  1531   001C5A                     __end_of_interrupt_INTx_pin_init:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _gpio_pin_direction_initialize *****************
  1535 ;; Defined at:
  1536 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  p_pin_config    2    0[BANK0 ] PTR const struct .
  1539 ;;		 -> int0_object(10), led_init@led_pin(5), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      enum E2975
  1544 ;; Registers used:
  1545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;Total ram usage:        4 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 6
  1558 ;; This function calls:
  1559 ;;		_clear_bit_uint8
  1560 ;;		_set_bit_uint8
  1561 ;; This function is called by:
  1562 ;;		_gpio_pin_initialize
  1563 ;;		_interrupt_INTx_pin_init
  1564 ;;		_push_button_init
  1565 ;;		_DCmotor_init
  1566 ;;		_keypad_init
  1567 ;;		_lcd_4bit_init
  1568 ;;		_lcd_8bit_init
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text6
  1573   0015A0                     __ptext6:
  1574                           	callstack 0
  1575   0015A0                     _gpio_pin_direction_initialize:
  1576                           	callstack 22
  1577   0015A0                     
  1578                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  1579   0015A0  0100               	movlb	0	; () banked
  1580   0015A2  51F6               	movf	gpio_pin_direction_initialize@p_pin_config& (0+255),w,b
  1581   0015A4  11F7               	iorwf	(gpio_pin_direction_initialize@p_pin_config+1)& (0+255),w,b
  1582   0015A6  B4D8               	btfsc	status,2,c
  1583   0015A8  EFD8  F00A         	goto	u2841
  1584   0015AC  EFDA  F00A         	goto	u2840
  1585   0015B0                     u2841:
  1586   0015B0  EF37  F00B         	goto	l676
  1587   0015B4                     u2840:
  1588   0015B4                     
  1589                           ; BSR set to: 0
  1590   0015B4  C0F6  FFD9         	movff	gpio_pin_direction_initialize@p_pin_config,fsr2l
  1591   0015B8  C0F7  FFDA         	movff	gpio_pin_direction_initialize@p_pin_config+1,fsr2h
  1592   0015BC  0E04               	movlw	4
  1593   0015BE  64DF               	cpfsgt	indf2,c
  1594   0015C0  EFE4  F00A         	goto	u2851
  1595   0015C4  EFE6  F00A         	goto	u2850
  1596   0015C8                     u2851:
  1597   0015C8  EF1C  F00B         	goto	l5009
  1598   0015CC                     u2850:
  1599   0015CC  EF37  F00B         	goto	l676
  1600   0015D0                     l5001:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1604   0015D0  C0F6  FFD9         	movff	gpio_pin_direction_initialize@p_pin_config,fsr2l
  1605   0015D4  C0F7  FFDA         	movff	gpio_pin_direction_initialize@p_pin_config+1,fsr2h
  1606   0015D8  50DF               	movf	indf2,w,c
  1607   0015DA  0D02               	mullw	2
  1608   0015DC  50F3               	movf	243,w,c
  1609   0015DE  0F25               	addlw	low _TRIS_REG_ADD_arr
  1610   0015E0  6ED9               	movwf	fsr2l,c
  1611   0015E2  6ADA               	clrf	fsr2h,c
  1612   0015E4  CFDE F067          	movff	postinc2,clear_bit_uint8@p_reg
  1613   0015E8  CFDD F068          	movff	postdec2,clear_bit_uint8@p_reg+1
  1614   0015EC  EE20 F001          	lfsr	2,1
  1615   0015F0  51F6               	movf	gpio_pin_direction_initialize@p_pin_config& (0+255),w,b
  1616   0015F2  26D9               	addwf	fsr2l,f,c
  1617   0015F4  51F7               	movf	(gpio_pin_direction_initialize@p_pin_config+1)& (0+255),w,b
  1618   0015F6  22DA               	addwfc	fsr2h,f,c
  1619   0015F8  50DF               	movf	indf2,w,c
  1620   0015FA  6E69               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1621   0015FC  EC57  F00A         	call	_clear_bit_uint8	;wreg free
  1622                           
  1623                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  1624   001600  EF37  F00B         	goto	l676
  1625   001604                     l5003:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1629   001604  C0F6  FFD9         	movff	gpio_pin_direction_initialize@p_pin_config,fsr2l
  1630   001608  C0F7  FFDA         	movff	gpio_pin_direction_initialize@p_pin_config+1,fsr2h
  1631   00160C  50DF               	movf	indf2,w,c
  1632   00160E  0D02               	mullw	2
  1633   001610  50F3               	movf	243,w,c
  1634   001612  0F25               	addlw	low _TRIS_REG_ADD_arr
  1635   001614  6ED9               	movwf	fsr2l,c
  1636   001616  6ADA               	clrf	fsr2h,c
  1637   001618  CFDE F067          	movff	postinc2,set_bit_uint8@p_reg
  1638   00161C  CFDD F068          	movff	postdec2,set_bit_uint8@p_reg+1
  1639   001620  EE20 F001          	lfsr	2,1
  1640   001624  51F6               	movf	gpio_pin_direction_initialize@p_pin_config& (0+255),w,b
  1641   001626  26D9               	addwf	fsr2l,f,c
  1642   001628  51F7               	movf	(gpio_pin_direction_initialize@p_pin_config+1)& (0+255),w,b
  1643   00162A  22DA               	addwfc	fsr2h,f,c
  1644   00162C  50DF               	movf	indf2,w,c
  1645   00162E  6E69               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1646   001630  ECDE  F009         	call	_set_bit_uint8	;wreg free
  1647                           
  1648                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  1649   001634  EF37  F00B         	goto	l676
  1650   001638                     l5009:
  1651                           
  1652                           ; BSR set to: 0
  1653   001638  EE20 F002          	lfsr	2,2
  1654   00163C  51F6               	movf	gpio_pin_direction_initialize@p_pin_config& (0+255),w,b
  1655   00163E  26D9               	addwf	fsr2l,f,c
  1656   001640  51F7               	movf	(gpio_pin_direction_initialize@p_pin_config+1)& (0+255),w,b
  1657   001642  22DA               	addwfc	fsr2h,f,c
  1658   001644  50DF               	movf	indf2,w,c
  1659   001646  6FF8               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  1660   001648  6BF9               	clrf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ;	Chosen strategy is simple_byte
  1669   00164A  51F9               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  1670   00164C  0A00               	xorlw	0	; case 0
  1671   00164E  B4D8               	btfsc	status,2,c
  1672   001650  EF2C  F00B         	goto	l5853
  1673   001654  EF37  F00B         	goto	l676
  1674   001658                     l5853:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ; Switch size 1, requested type "simple"
  1678                           ; Number of cases is 2, Range of values is 0 to 1
  1679                           ; switch strategies available:
  1680                           ; Name         Instructions Cycles
  1681                           ; simple_byte            7     4 (average)
  1682                           ;	Chosen strategy is simple_byte
  1683   001658  51F8               	movf	??_gpio_pin_direction_initialize& (0+255),w,b
  1684   00165A  0A00               	xorlw	0	; case 0
  1685   00165C  B4D8               	btfsc	status,2,c
  1686   00165E  EFE8  F00A         	goto	l5001
  1687   001662  0A01               	xorlw	1	; case 1
  1688   001664  B4D8               	btfsc	status,2,c
  1689   001666  EF02  F00B         	goto	l5003
  1690   00166A  EF37  F00B         	goto	l676
  1691   00166E                     l676:
  1692   00166E  0012               	return		;funcret
  1693   001670                     __end_of_gpio_pin_direction_initialize:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _set_bit_uint8 *****************
  1697 ;; Defined at:
  1698 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  p_reg           2   18[COMRAM] PTR volatile unsigned ch
  1701 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1702 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1703 ;;		 -> TRISB(1), TRISA(1), 
  1704 ;;  d_IDX_BIT_X     1   20[COMRAM] enum E3006
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      enum E2975
  1709 ;; Registers used:
  1710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        5 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 5
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_gpio_pin_direction_initialize
  1727 ;;		_gpio_pin_write_logic
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text7
  1732   0013BC                     __ptext7:
  1733                           	callstack 0
  1734   0013BC                     _set_bit_uint8:
  1735                           	callstack 22
  1736   0013BC                     
  1737                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1738   0013BC  5067               	movf	set_bit_uint8@p_reg^0,w,c
  1739   0013BE  1068               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1740   0013C0  A4D8               	btfss	status,2,c
  1741   0013C2  EFE5  F009         	goto	u2121
  1742   0013C6  EFE7  F009         	goto	u2120
  1743   0013CA                     u2121:
  1744   0013CA  EF29  F00A         	goto	l4043
  1745   0013CE                     u2120:
  1746   0013CE  EF56  F00A         	goto	l626
  1747   0013D2                     l4023:
  1748                           
  1749                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1750   0013D2  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1751   0013D6  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1752   0013DA  0E00               	movlw	0
  1753   0013DC  80DB               	bsf	plusw2,0,c
  1754                           
  1755                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1756   0013DE  EF56  F00A         	goto	l626
  1757   0013E2                     l4025:
  1758                           
  1759                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1760   0013E2  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1761   0013E6  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1762   0013EA  0E00               	movlw	0
  1763   0013EC  82DB               	bsf	plusw2,1,c
  1764                           
  1765                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1766   0013EE  EF56  F00A         	goto	l626
  1767   0013F2                     l4027:
  1768                           
  1769                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1770   0013F2  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1771   0013F6  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1772   0013FA  0E00               	movlw	0
  1773   0013FC  84DB               	bsf	plusw2,2,c
  1774                           
  1775                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1776   0013FE  EF56  F00A         	goto	l626
  1777   001402                     l4029:
  1778                           
  1779                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1780   001402  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1781   001406  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1782   00140A  0E00               	movlw	0
  1783   00140C  86DB               	bsf	plusw2,3,c
  1784                           
  1785                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1786   00140E  EF56  F00A         	goto	l626
  1787   001412                     l4031:
  1788                           
  1789                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1790   001412  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1791   001416  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1792   00141A  0E00               	movlw	0
  1793   00141C  88DB               	bsf	plusw2,4,c
  1794                           
  1795                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1796   00141E  EF56  F00A         	goto	l626
  1797   001422                     l4033:
  1798                           
  1799                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1800   001422  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1801   001426  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1802   00142A  0E00               	movlw	0
  1803   00142C  8ADB               	bsf	plusw2,5,c
  1804                           
  1805                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1806   00142E  EF56  F00A         	goto	l626
  1807   001432                     l4035:
  1808                           
  1809                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1810   001432  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1811   001436  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1812   00143A  0E00               	movlw	0
  1813   00143C  8CDB               	bsf	plusw2,6,c
  1814                           
  1815                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1816   00143E  EF56  F00A         	goto	l626
  1817   001442                     l4037:
  1818                           
  1819                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1820   001442  C067  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1821   001446  C068  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1822   00144A  0E00               	movlw	0
  1823   00144C  8EDB               	bsf	plusw2,7,c
  1824                           
  1825                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1826   00144E  EF56  F00A         	goto	l626
  1827   001452                     l4043:
  1828   001452  5069               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1829   001454  6E6A               	movwf	??_set_bit_uint8^0,c
  1830   001456  6A6B               	clrf	(??_set_bit_uint8+1)^0,c
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839   001458  506B               	movf	(??_set_bit_uint8+1)^0,w,c
  1840   00145A  0A00               	xorlw	0	; case 0
  1841   00145C  B4D8               	btfsc	status,2,c
  1842   00145E  EF33  F00A         	goto	l5855
  1843   001462  EF56  F00A         	goto	l626
  1844   001466                     l5855:
  1845                           
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 8, Range of values is 0 to 7
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte           25    13 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852   001466  506A               	movf	??_set_bit_uint8^0,w,c
  1853   001468  0A00               	xorlw	0	; case 0
  1854   00146A  B4D8               	btfsc	status,2,c
  1855   00146C  EFE9  F009         	goto	l4023
  1856   001470  0A01               	xorlw	1	; case 1
  1857   001472  B4D8               	btfsc	status,2,c
  1858   001474  EFF1  F009         	goto	l4025
  1859   001478  0A03               	xorlw	3	; case 2
  1860   00147A  B4D8               	btfsc	status,2,c
  1861   00147C  EFF9  F009         	goto	l4027
  1862   001480  0A01               	xorlw	1	; case 3
  1863   001482  B4D8               	btfsc	status,2,c
  1864   001484  EF01  F00A         	goto	l4029
  1865   001488  0A07               	xorlw	7	; case 4
  1866   00148A  B4D8               	btfsc	status,2,c
  1867   00148C  EF09  F00A         	goto	l4031
  1868   001490  0A01               	xorlw	1	; case 5
  1869   001492  B4D8               	btfsc	status,2,c
  1870   001494  EF11  F00A         	goto	l4033
  1871   001498  0A03               	xorlw	3	; case 6
  1872   00149A  B4D8               	btfsc	status,2,c
  1873   00149C  EF19  F00A         	goto	l4035
  1874   0014A0  0A01               	xorlw	1	; case 7
  1875   0014A2  B4D8               	btfsc	status,2,c
  1876   0014A4  EF21  F00A         	goto	l4037
  1877   0014A8  EF56  F00A         	goto	l626
  1878   0014AC                     l626:
  1879   0014AC  0012               	return		;funcret
  1880   0014AE                     __end_of_set_bit_uint8:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _clear_bit_uint8 *****************
  1884 ;; Defined at:
  1885 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  p_reg           2   18[COMRAM] PTR volatile unsigned ch
  1888 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1889 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1890 ;;		 -> TRISB(1), TRISA(1), 
  1891 ;;  d_IDX_BIT_X     1   20[COMRAM] enum E3006
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      enum E2975
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        5 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 5
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_gpio_pin_direction_initialize
  1914 ;;		_gpio_pin_write_logic
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text8
  1919   0014AE                     __ptext8:
  1920                           	callstack 0
  1921   0014AE                     _clear_bit_uint8:
  1922                           	callstack 22
  1923   0014AE                     
  1924                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1925   0014AE  5067               	movf	clear_bit_uint8@p_reg^0,w,c
  1926   0014B0  1068               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1927   0014B2  A4D8               	btfss	status,2,c
  1928   0014B4  EF5E  F00A         	goto	u2131
  1929   0014B8  EF60  F00A         	goto	u2130
  1930   0014BC                     u2131:
  1931   0014BC  EFA2  F00A         	goto	l4075
  1932   0014C0                     u2130:
  1933   0014C0  EFCF  F00A         	goto	l642
  1934   0014C4                     l4055:
  1935                           
  1936                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  1937   0014C4  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1938   0014C8  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1939   0014CC  0EFE               	movlw	254
  1940   0014CE  16DF               	andwf	indf2,f,c
  1941                           
  1942                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1943   0014D0  EFCF  F00A         	goto	l642
  1944   0014D4                     l4057:
  1945                           
  1946                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  1947   0014D4  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1948   0014D8  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1949   0014DC  0EFD               	movlw	253
  1950   0014DE  16DF               	andwf	indf2,f,c
  1951                           
  1952                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  1953   0014E0  EFCF  F00A         	goto	l642
  1954   0014E4                     l4059:
  1955                           
  1956                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  1957   0014E4  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1958   0014E8  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1959   0014EC  0EFB               	movlw	251
  1960   0014EE  16DF               	andwf	indf2,f,c
  1961                           
  1962                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  1963   0014F0  EFCF  F00A         	goto	l642
  1964   0014F4                     l4061:
  1965                           
  1966                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  1967   0014F4  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1968   0014F8  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1969   0014FC  0EF7               	movlw	247
  1970   0014FE  16DF               	andwf	indf2,f,c
  1971                           
  1972                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  1973   001500  EFCF  F00A         	goto	l642
  1974   001504                     l4063:
  1975                           
  1976                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  1977   001504  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1978   001508  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1979   00150C  0EEF               	movlw	239
  1980   00150E  16DF               	andwf	indf2,f,c
  1981                           
  1982                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  1983   001510  EFCF  F00A         	goto	l642
  1984   001514                     l4065:
  1985                           
  1986                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  1987   001514  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1988   001518  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1989   00151C  0EDF               	movlw	223
  1990   00151E  16DF               	andwf	indf2,f,c
  1991                           
  1992                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  1993   001520  EFCF  F00A         	goto	l642
  1994   001524                     l4067:
  1995                           
  1996                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  1997   001524  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1998   001528  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1999   00152C  0EBF               	movlw	191
  2000   00152E  16DF               	andwf	indf2,f,c
  2001                           
  2002                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  2003   001530  EFCF  F00A         	goto	l642
  2004   001534                     l4069:
  2005                           
  2006                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  2007   001534  C067  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2008   001538  C068  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2009   00153C  0E7F               	movlw	127
  2010   00153E  16DF               	andwf	indf2,f,c
  2011                           
  2012                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  2013   001540  EFCF  F00A         	goto	l642
  2014   001544                     l4075:
  2015   001544  5069               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  2016   001546  6E6A               	movwf	??_clear_bit_uint8^0,c
  2017   001548  6A6B               	clrf	(??_clear_bit_uint8+1)^0,c
  2018                           
  2019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 1, Range of values is 0 to 0
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte            4     3 (average)
  2025                           ;	Chosen strategy is simple_byte
  2026   00154A  506B               	movf	(??_clear_bit_uint8+1)^0,w,c
  2027   00154C  0A00               	xorlw	0	; case 0
  2028   00154E  B4D8               	btfsc	status,2,c
  2029   001550  EFAC  F00A         	goto	l5857
  2030   001554  EFCF  F00A         	goto	l642
  2031   001558                     l5857:
  2032                           
  2033                           ; Switch size 1, requested type "simple"
  2034                           ; Number of cases is 8, Range of values is 0 to 7
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte           25    13 (average)
  2038                           ;	Chosen strategy is simple_byte
  2039   001558  506A               	movf	??_clear_bit_uint8^0,w,c
  2040   00155A  0A00               	xorlw	0	; case 0
  2041   00155C  B4D8               	btfsc	status,2,c
  2042   00155E  EF62  F00A         	goto	l4055
  2043   001562  0A01               	xorlw	1	; case 1
  2044   001564  B4D8               	btfsc	status,2,c
  2045   001566  EF6A  F00A         	goto	l4057
  2046   00156A  0A03               	xorlw	3	; case 2
  2047   00156C  B4D8               	btfsc	status,2,c
  2048   00156E  EF72  F00A         	goto	l4059
  2049   001572  0A01               	xorlw	1	; case 3
  2050   001574  B4D8               	btfsc	status,2,c
  2051   001576  EF7A  F00A         	goto	l4061
  2052   00157A  0A07               	xorlw	7	; case 4
  2053   00157C  B4D8               	btfsc	status,2,c
  2054   00157E  EF82  F00A         	goto	l4063
  2055   001582  0A01               	xorlw	1	; case 5
  2056   001584  B4D8               	btfsc	status,2,c
  2057   001586  EF8A  F00A         	goto	l4065
  2058   00158A  0A03               	xorlw	3	; case 6
  2059   00158C  B4D8               	btfsc	status,2,c
  2060   00158E  EF92  F00A         	goto	l4067
  2061   001592  0A01               	xorlw	1	; case 7
  2062   001594  B4D8               	btfsc	status,2,c
  2063   001596  EF9A  F00A         	goto	l4069
  2064   00159A  EFCF  F00A         	goto	l642
  2065   00159E                     l642:
  2066   00159E  0012               	return		;funcret
  2067   0015A0                     __end_of_clear_bit_uint8:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _interrupt_INTx_enable *****************
  2071 ;; Defined at:
  2072 ;;		line 102 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  interrupt_IN    1   18[COMRAM] PTR const struct .
  2075 ;;		 -> int0_object(10), 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      enum E2975
  2080 ;; Registers used:
  2081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 5
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_interrupt_INTx_init
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text9
  2102   001A06                     __ptext9:
  2103                           	callstack 0
  2104   001A06                     _interrupt_INTx_enable:
  2105                           	callstack 24
  2106   001A06                     
  2107                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 102: static std_return interrupt_INTx_enable 
      +                          (const interrupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.c: 1
      +                          03: {;_HAL/MCAL/Interrupt/external_interrupt.c: 104:     if (((void*)0) == interrupt_INT
      +                          x_st)
  2108   001A06  5067               	movf	interrupt_INTx_enable@interrupt_INTx_st^0,w,c
  2109   001A08  A4D8               	btfss	status,2,c
  2110   001A0A  EF09  F00D         	goto	u1401
  2111   001A0E  EF0B  F00D         	goto	u1400
  2112   001A12                     u1401:
  2113   001A12  EF16  F00D         	goto	l3339
  2114   001A16                     u1400:
  2115   001A16  EF34  F00D         	goto	l897
  2116   001A1A                     l900:
  2117   001A1A  88F2               	bsf	242,4,c	;volatile
  2118   001A1C  EF34  F00D         	goto	l897
  2119   001A20                     l902:
  2120   001A20  86F0               	bsf	240,3,c	;volatile
  2121   001A22  EF34  F00D         	goto	l897
  2122   001A26                     l903:
  2123   001A26  88F0               	bsf	240,4,c	;volatile
  2124   001A28  EF34  F00D         	goto	l897
  2125   001A2C                     l3339:
  2126   001A2C  5067               	movf	interrupt_INTx_enable@interrupt_INTx_st^0,w,c
  2127   001A2E  6ED9               	movwf	fsr2l,c
  2128   001A30  6ADA               	clrf	fsr2h,c
  2129   001A32  0E07               	movlw	7
  2130   001A34  26D9               	addwf	fsr2l,f,c
  2131   001A36  50DF               	movf	indf2,w,c
  2132   001A38  6E68               	movwf	??_interrupt_INTx_enable^0,c
  2133   001A3A  6A69               	clrf	(??_interrupt_INTx_enable+1)^0,c
  2134                           
  2135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 1, Range of values is 0 to 0
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            4     3 (average)
  2141                           ;	Chosen strategy is simple_byte
  2142   001A3C  5069               	movf	(??_interrupt_INTx_enable+1)^0,w,c
  2143   001A3E  0A00               	xorlw	0	; case 0
  2144   001A40  B4D8               	btfsc	status,2,c
  2145   001A42  EF25  F00D         	goto	l5859
  2146   001A46  EF34  F00D         	goto	l897
  2147   001A4A                     l5859:
  2148                           
  2149                           ; Switch size 1, requested type "simple"
  2150                           ; Number of cases is 3, Range of values is 0 to 2
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte           10     6 (average)
  2154                           ;	Chosen strategy is simple_byte
  2155   001A4A  5068               	movf	??_interrupt_INTx_enable^0,w,c
  2156   001A4C  0A00               	xorlw	0	; case 0
  2157   001A4E  B4D8               	btfsc	status,2,c
  2158   001A50  EF0D  F00D         	goto	l900
  2159   001A54  0A01               	xorlw	1	; case 1
  2160   001A56  B4D8               	btfsc	status,2,c
  2161   001A58  EF10  F00D         	goto	l902
  2162   001A5C  0A03               	xorlw	3	; case 2
  2163   001A5E  B4D8               	btfsc	status,2,c
  2164   001A60  EF13  F00D         	goto	l903
  2165   001A64  EF34  F00D         	goto	l897
  2166   001A68                     l897:
  2167   001A68  0012               	return		;funcret
  2168   001A6A                     __end_of_interrupt_INTx_enable:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _interrupt_INTx_edge_init *****************
  2172 ;; Defined at:
  2173 ;;		line 192 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  interrupt_IN    1   18[COMRAM] PTR const struct .
  2176 ;;		 -> int0_object(10), 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      enum E2975
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:        3 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 5
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_interrupt_INTx_init
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text10
  2203   0011A6                     __ptext10:
  2204                           	callstack 0
  2205   0011A6                     _interrupt_INTx_edge_init:
  2206                           	callstack 24
  2207   0011A6                     
  2208                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 192: static std_return interrupt_INTx_edge_in
      +                          it (const interrupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.c
      +                          : 193: {;_HAL/MCAL/Interrupt/external_interrupt.c: 194:     if (((void*)0) == interrupt_
      +                          INTx_st)
  2209   0011A6  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2210   0011A8  A4D8               	btfss	status,2,c
  2211   0011AA  EFD9  F008         	goto	u1311
  2212   0011AE  EFDB  F008         	goto	u1310
  2213   0011B2                     u1311:
  2214   0011B2  EF3D  F009         	goto	l3295
  2215   0011B6                     u1310:
  2216   0011B6  EF5B  F009         	goto	l924
  2217   0011BA                     l3269:
  2218                           
  2219                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 203:                 if(RISING_EDGE == interr
      +                          upt_INTx_st->edge)
  2220   0011BA  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2221   0011BC  6ED9               	movwf	fsr2l,c
  2222   0011BE  6ADA               	clrf	fsr2h,c
  2223   0011C0  0E08               	movlw	8
  2224   0011C2  26D9               	addwf	fsr2l,f,c
  2225   0011C4  04DE               	decf	postinc2,w,c
  2226   0011C6  A4D8               	btfss	status,2,c
  2227   0011C8  EFE8  F008         	goto	u1321
  2228   0011CC  EFEA  F008         	goto	u1320
  2229   0011D0                     u1321:
  2230   0011D0  EFED  F008         	goto	l3273
  2231   0011D4                     u1320:
  2232   0011D4                     
  2233                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 204:                 {(INTCON2bits.INTEDG0 = 
      +                          1);}
  2234   0011D4  8CF1               	bsf	241,6,c	;volatile
  2235   0011D6  EF5B  F009         	goto	l924
  2236   0011DA                     l3273:
  2237   0011DA  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2238   0011DC  6ED9               	movwf	fsr2l,c
  2239   0011DE  6ADA               	clrf	fsr2h,c
  2240   0011E0  0E08               	movlw	8
  2241   0011E2  26D9               	addwf	fsr2l,f,c
  2242   0011E4  50DF               	movf	indf2,w,c
  2243   0011E6  A4D8               	btfss	status,2,c
  2244   0011E8  EFF8  F008         	goto	u1331
  2245   0011EC  EFFA  F008         	goto	u1330
  2246   0011F0                     u1331:
  2247   0011F0  EF5B  F009         	goto	l924
  2248   0011F4                     u1330:
  2249   0011F4                     
  2250                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 206:                 {(INTCON2bits.INTEDG0 = 
      +                          0);}
  2251   0011F4  9CF1               	bcf	241,6,c	;volatile
  2252   0011F6  EF5B  F009         	goto	l924
  2253   0011FA                     l3277:
  2254                           
  2255                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 211:                 if(RISING_EDGE == interr
      +                          upt_INTx_st->edge)
  2256   0011FA  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2257   0011FC  6ED9               	movwf	fsr2l,c
  2258   0011FE  6ADA               	clrf	fsr2h,c
  2259   001200  0E08               	movlw	8
  2260   001202  26D9               	addwf	fsr2l,f,c
  2261   001204  04DE               	decf	postinc2,w,c
  2262   001206  A4D8               	btfss	status,2,c
  2263   001208  EF08  F009         	goto	u1341
  2264   00120C  EF0A  F009         	goto	u1340
  2265   001210                     u1341:
  2266   001210  EF0D  F009         	goto	l3281
  2267   001214                     u1340:
  2268   001214                     
  2269                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 212:                 {(INTCON2bits.INTEDG1 = 
      +                          1);}
  2270   001214  8AF1               	bsf	241,5,c	;volatile
  2271   001216  EF5B  F009         	goto	l924
  2272   00121A                     l3281:
  2273   00121A  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2274   00121C  6ED9               	movwf	fsr2l,c
  2275   00121E  6ADA               	clrf	fsr2h,c
  2276   001220  0E08               	movlw	8
  2277   001222  26D9               	addwf	fsr2l,f,c
  2278   001224  50DF               	movf	indf2,w,c
  2279   001226  A4D8               	btfss	status,2,c
  2280   001228  EF18  F009         	goto	u1351
  2281   00122C  EF1A  F009         	goto	u1350
  2282   001230                     u1351:
  2283   001230  EF5B  F009         	goto	l924
  2284   001234                     u1350:
  2285   001234                     
  2286                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 214:                 {(INTCON2bits.INTEDG1 = 
      +                          0);}
  2287   001234  9AF1               	bcf	241,5,c	;volatile
  2288   001236  EF5B  F009         	goto	l924
  2289   00123A                     l3285:
  2290                           
  2291                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 219:                 if(RISING_EDGE == interr
      +                          upt_INTx_st->edge)
  2292   00123A  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2293   00123C  6ED9               	movwf	fsr2l,c
  2294   00123E  6ADA               	clrf	fsr2h,c
  2295   001240  0E08               	movlw	8
  2296   001242  26D9               	addwf	fsr2l,f,c
  2297   001244  04DE               	decf	postinc2,w,c
  2298   001246  A4D8               	btfss	status,2,c
  2299   001248  EF28  F009         	goto	u1361
  2300   00124C  EF2A  F009         	goto	u1360
  2301   001250                     u1361:
  2302   001250  EF2D  F009         	goto	l3289
  2303   001254                     u1360:
  2304   001254                     
  2305                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 220:                 {(INTCON2bits.INTEDG2 = 
      +                          1);}
  2306   001254  88F1               	bsf	241,4,c	;volatile
  2307   001256  EF5B  F009         	goto	l924
  2308   00125A                     l3289:
  2309   00125A  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2310   00125C  6ED9               	movwf	fsr2l,c
  2311   00125E  6ADA               	clrf	fsr2h,c
  2312   001260  0E08               	movlw	8
  2313   001262  26D9               	addwf	fsr2l,f,c
  2314   001264  50DF               	movf	indf2,w,c
  2315   001266  A4D8               	btfss	status,2,c
  2316   001268  EF38  F009         	goto	u1371
  2317   00126C  EF3A  F009         	goto	u1370
  2318   001270                     u1371:
  2319   001270  EF5B  F009         	goto	l924
  2320   001274                     u1370:
  2321   001274                     
  2322                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 222:                 {(INTCON2bits.INTEDG2 = 
      +                          0);}
  2323   001274  98F1               	bcf	241,4,c	;volatile
  2324   001276  EF5B  F009         	goto	l924
  2325   00127A                     l3295:
  2326   00127A  5067               	movf	interrupt_INTx_edge_init@interrupt_INTx_st^0,w,c
  2327   00127C  6ED9               	movwf	fsr2l,c
  2328   00127E  6ADA               	clrf	fsr2h,c
  2329   001280  0E07               	movlw	7
  2330   001282  26D9               	addwf	fsr2l,f,c
  2331   001284  50DF               	movf	indf2,w,c
  2332   001286  6E68               	movwf	??_interrupt_INTx_edge_init^0,c
  2333   001288  6A69               	clrf	(??_interrupt_INTx_edge_init+1)^0,c
  2334                           
  2335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2336                           ; Switch size 1, requested type "simple"
  2337                           ; Number of cases is 1, Range of values is 0 to 0
  2338                           ; switch strategies available:
  2339                           ; Name         Instructions Cycles
  2340                           ; simple_byte            4     3 (average)
  2341                           ;	Chosen strategy is simple_byte
  2342   00128A  5069               	movf	(??_interrupt_INTx_edge_init+1)^0,w,c
  2343   00128C  0A00               	xorlw	0	; case 0
  2344   00128E  B4D8               	btfsc	status,2,c
  2345   001290  EF4C  F009         	goto	l5861
  2346   001294  EF5B  F009         	goto	l924
  2347   001298                     l5861:
  2348                           
  2349                           ; Switch size 1, requested type "simple"
  2350                           ; Number of cases is 3, Range of values is 0 to 2
  2351                           ; switch strategies available:
  2352                           ; Name         Instructions Cycles
  2353                           ; simple_byte           10     6 (average)
  2354                           ;	Chosen strategy is simple_byte
  2355   001298  5068               	movf	??_interrupt_INTx_edge_init^0,w,c
  2356   00129A  0A00               	xorlw	0	; case 0
  2357   00129C  B4D8               	btfsc	status,2,c
  2358   00129E  EFDD  F008         	goto	l3269
  2359   0012A2  0A01               	xorlw	1	; case 1
  2360   0012A4  B4D8               	btfsc	status,2,c
  2361   0012A6  EFFD  F008         	goto	l3277
  2362   0012AA  0A03               	xorlw	3	; case 2
  2363   0012AC  B4D8               	btfsc	status,2,c
  2364   0012AE  EF1D  F009         	goto	l3285
  2365   0012B2  EF5B  F009         	goto	l924
  2366   0012B6                     l924:
  2367   0012B6  0012               	return		;funcret
  2368   0012B8                     __end_of_interrupt_INTx_edge_init:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _interrupt_INTx_disable *****************
  2372 ;; Defined at:
  2373 ;;		line 122 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  interrupt_IN    1   18[COMRAM] PTR const struct .
  2376 ;;		 -> int0_object(10), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      enum E2975
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 5
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_interrupt_INTx_init
  2399 ;;		_interrupt_INTx_deinit
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text11
  2404   001A6A                     __ptext11:
  2405                           	callstack 0
  2406   001A6A                     _interrupt_INTx_disable:
  2407                           	callstack 24
  2408   001A6A                     
  2409                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 122: static std_return interrupt_INTx_disable
      +                           (const interrupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.c: 
      +                          123: {;_HAL/MCAL/Interrupt/external_interrupt.c: 124:     if (((void*)0) == interrupt_IN
      +                          Tx_st)
  2410   001A6A  5067               	movf	interrupt_INTx_disable@interrupt_INTx_st^0,w,c
  2411   001A6C  A4D8               	btfss	status,2,c
  2412   001A6E  EF3B  F00D         	goto	u1291
  2413   001A72  EF3D  F00D         	goto	u1290
  2414   001A76                     u1291:
  2415   001A76  EF48  F00D         	goto	l3243
  2416   001A7A                     u1290:
  2417   001A7A  EF66  F00D         	goto	l908
  2418   001A7E                     l911:
  2419   001A7E  98F2               	bcf	242,4,c	;volatile
  2420   001A80  EF66  F00D         	goto	l908
  2421   001A84                     l913:
  2422   001A84  96F0               	bcf	240,3,c	;volatile
  2423   001A86  EF66  F00D         	goto	l908
  2424   001A8A                     l914:
  2425   001A8A  98F0               	bcf	240,4,c	;volatile
  2426   001A8C  EF66  F00D         	goto	l908
  2427   001A90                     l3243:
  2428   001A90  5067               	movf	interrupt_INTx_disable@interrupt_INTx_st^0,w,c
  2429   001A92  6ED9               	movwf	fsr2l,c
  2430   001A94  6ADA               	clrf	fsr2h,c
  2431   001A96  0E07               	movlw	7
  2432   001A98  26D9               	addwf	fsr2l,f,c
  2433   001A9A  50DF               	movf	indf2,w,c
  2434   001A9C  6E68               	movwf	??_interrupt_INTx_disable^0,c
  2435   001A9E  6A69               	clrf	(??_interrupt_INTx_disable+1)^0,c
  2436                           
  2437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 1, Range of values is 0 to 0
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            4     3 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444   001AA0  5069               	movf	(??_interrupt_INTx_disable+1)^0,w,c
  2445   001AA2  0A00               	xorlw	0	; case 0
  2446   001AA4  B4D8               	btfsc	status,2,c
  2447   001AA6  EF57  F00D         	goto	l5863
  2448   001AAA  EF66  F00D         	goto	l908
  2449   001AAE                     l5863:
  2450                           
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 3, Range of values is 0 to 2
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte           10     6 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457   001AAE  5068               	movf	??_interrupt_INTx_disable^0,w,c
  2458   001AB0  0A00               	xorlw	0	; case 0
  2459   001AB2  B4D8               	btfsc	status,2,c
  2460   001AB4  EF3F  F00D         	goto	l911
  2461   001AB8  0A01               	xorlw	1	; case 1
  2462   001ABA  B4D8               	btfsc	status,2,c
  2463   001ABC  EF42  F00D         	goto	l913
  2464   001AC0  0A03               	xorlw	3	; case 2
  2465   001AC2  B4D8               	btfsc	status,2,c
  2466   001AC4  EF45  F00D         	goto	l914
  2467   001AC8  EF66  F00D         	goto	l908
  2468   001ACC                     l908:
  2469   001ACC  0012               	return		;funcret
  2470   001ACE                     __end_of_interrupt_INTx_disable:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _interrupt_INTx_clear_flag *****************
  2474 ;; Defined at:
  2475 ;;		line 233 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  interrupt_IN    1   18[COMRAM] PTR const struct .
  2478 ;;		 -> int0_object(10), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      enum E2975
  2483 ;; Registers used:
  2484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        3 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 5
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_interrupt_INTx_init
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text12
  2505   001ACE                     __ptext12:
  2506                           	callstack 0
  2507   001ACE                     _interrupt_INTx_clear_flag:
  2508                           	callstack 24
  2509   001ACE                     
  2510                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 233: static std_return interrupt_INTx_clear_f
      +                          lag (const interrupt_INTx_t * interrupt_INTx_st);_HAL/MCAL/Interrupt/external_interrupt.
      +                          c: 234: {;_HAL/MCAL/Interrupt/external_interrupt.c: 235:     if (((void*)0) == interrupt
      +                          _INTx_st)
  2511   001ACE  5067               	movf	interrupt_INTx_clear_flag@interrupt_INTx_st^0,w,c
  2512   001AD0  A4D8               	btfss	status,2,c
  2513   001AD2  EF6D  F00D         	goto	u1301
  2514   001AD6  EF6F  F00D         	goto	u1300
  2515   001ADA                     u1301:
  2516   001ADA  EF7A  F00D         	goto	l3257
  2517   001ADE                     u1300:
  2518   001ADE  EF98  F00D         	goto	l947
  2519   001AE2                     l950:
  2520                           
  2521                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 244:                 (INTCONbits.INT0IF = 0);
  2522   001AE2  92F2               	bcf	242,1,c	;volatile
  2523                           
  2524                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 245:                 break;
  2525   001AE4  EF98  F00D         	goto	l947
  2526   001AE8                     l952:
  2527                           
  2528                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 247:                 (INTCON3bits.INT1IF = 0)
      +                          ;
  2529   001AE8  90F0               	bcf	240,0,c	;volatile
  2530                           
  2531                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 248:                 break;
  2532   001AEA  EF98  F00D         	goto	l947
  2533   001AEE                     l953:
  2534                           
  2535                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 250:                 (INTCON3bits.INT2IF = 0)
      +                          ;
  2536   001AEE  92F0               	bcf	240,1,c	;volatile
  2537                           
  2538                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 251:                 break;
  2539   001AF0  EF98  F00D         	goto	l947
  2540   001AF4                     l3257:
  2541   001AF4  5067               	movf	interrupt_INTx_clear_flag@interrupt_INTx_st^0,w,c
  2542   001AF6  6ED9               	movwf	fsr2l,c
  2543   001AF8  6ADA               	clrf	fsr2h,c
  2544   001AFA  0E07               	movlw	7
  2545   001AFC  26D9               	addwf	fsr2l,f,c
  2546   001AFE  50DF               	movf	indf2,w,c
  2547   001B00  6E68               	movwf	??_interrupt_INTx_clear_flag^0,c
  2548   001B02  6A69               	clrf	(??_interrupt_INTx_clear_flag+1)^0,c
  2549                           
  2550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2551                           ; Switch size 1, requested type "simple"
  2552                           ; Number of cases is 1, Range of values is 0 to 0
  2553                           ; switch strategies available:
  2554                           ; Name         Instructions Cycles
  2555                           ; simple_byte            4     3 (average)
  2556                           ;	Chosen strategy is simple_byte
  2557   001B04  5069               	movf	(??_interrupt_INTx_clear_flag+1)^0,w,c
  2558   001B06  0A00               	xorlw	0	; case 0
  2559   001B08  B4D8               	btfsc	status,2,c
  2560   001B0A  EF89  F00D         	goto	l5865
  2561   001B0E  EF98  F00D         	goto	l947
  2562   001B12                     l5865:
  2563                           
  2564                           ; Switch size 1, requested type "simple"
  2565                           ; Number of cases is 3, Range of values is 0 to 2
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte           10     6 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570   001B12  5068               	movf	??_interrupt_INTx_clear_flag^0,w,c
  2571   001B14  0A00               	xorlw	0	; case 0
  2572   001B16  B4D8               	btfsc	status,2,c
  2573   001B18  EF71  F00D         	goto	l950
  2574   001B1C  0A01               	xorlw	1	; case 1
  2575   001B1E  B4D8               	btfsc	status,2,c
  2576   001B20  EF74  F00D         	goto	l952
  2577   001B24  0A03               	xorlw	3	; case 2
  2578   001B26  B4D8               	btfsc	status,2,c
  2579   001B28  EF77  F00D         	goto	l953
  2580   001B2C  EF98  F00D         	goto	l947
  2581   001B30                     l947:
  2582   001B30  0012               	return		;funcret
  2583   001B32                     __end_of_interrupt_INTx_clear_flag:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _Interrupt_INTX_SetInterruptHandler *****************
  2587 ;; Defined at:
  2588 ;;		line 303 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  interrupt_ob    1   20[COMRAM] PTR const struct .
  2591 ;;		 -> int0_object(10), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      enum E2975
  2596 ;; Registers used:
  2597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        3 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 6
  2610 ;; This function calls:
  2611 ;;		_INT0_SetInterruptHandler
  2612 ;;		_INT1_SetInterruptHandler
  2613 ;;		_INT2_SetInterruptHandler
  2614 ;; This function is called by:
  2615 ;;		_interrupt_INTx_init
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text13
  2620   001722                     __ptext13:
  2621                           	callstack 0
  2622   001722                     _Interrupt_INTX_SetInterruptHandler:
  2623                           	callstack 23
  2624   001722                     
  2625                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 303: static std_return Interrupt_INTX_SetInte
      +                          rruptHandler(const interrupt_INTx_t * interrupt_object);_HAL/MCAL/Interrupt/external_int
      +                          errupt.c: 304: {;_HAL/MCAL/Interrupt/external_interrupt.c: 305:     if (((void*)0) == in
      +                          terrupt_object)
  2626   001722  5069               	movf	Interrupt_INTX_SetInterruptHandler@interrupt_object^0,w,c
  2627   001724  A4D8               	btfss	status,2,c
  2628   001726  EF97  F00B         	goto	u1391
  2629   00172A  EF99  F00B         	goto	u1390
  2630   00172E                     u1391:
  2631   00172E  EFBC  F00B         	goto	l3325
  2632   001732                     u1390:
  2633   001732  EFDA  F00B         	goto	l973
  2634   001736                     l3317:
  2635   001736  5069               	movf	Interrupt_INTX_SetInterruptHandler@interrupt_object^0,w,c
  2636   001738  6ED9               	movwf	fsr2l,c
  2637   00173A  6ADA               	clrf	fsr2h,c
  2638   00173C  CFDE F067          	movff	postinc2,INT0_SetInterruptHandler@InterruptHandler
  2639   001740  CFDD F068          	movff	postdec2,INT0_SetInterruptHandler@InterruptHandler+1
  2640   001744  EC5D  F00E         	call	_INT0_SetInterruptHandler	;wreg free
  2641   001748  EFDA  F00B         	goto	l973
  2642   00174C                     l3319:
  2643   00174C  5069               	movf	Interrupt_INTX_SetInterruptHandler@interrupt_object^0,w,c
  2644   00174E  6ED9               	movwf	fsr2l,c
  2645   001750  6ADA               	clrf	fsr2h,c
  2646   001752  CFDE F067          	movff	postinc2,INT1_SetInterruptHandler@InterruptHandler
  2647   001756  CFDD F068          	movff	postdec2,INT1_SetInterruptHandler@InterruptHandler+1
  2648   00175A  EC4D  F00E         	call	_INT1_SetInterruptHandler	;wreg free
  2649   00175E  EFDA  F00B         	goto	l973
  2650   001762                     l3321:
  2651   001762  5069               	movf	Interrupt_INTX_SetInterruptHandler@interrupt_object^0,w,c
  2652   001764  6ED9               	movwf	fsr2l,c
  2653   001766  6ADA               	clrf	fsr2h,c
  2654   001768  CFDE F067          	movff	postinc2,INT2_SetInterruptHandler@InterruptHandler
  2655   00176C  CFDD F068          	movff	postdec2,INT2_SetInterruptHandler@InterruptHandler+1
  2656   001770  EC3D  F00E         	call	_INT2_SetInterruptHandler	;wreg free
  2657   001774  EFDA  F00B         	goto	l973
  2658   001778                     l3325:
  2659   001778  5069               	movf	Interrupt_INTX_SetInterruptHandler@interrupt_object^0,w,c
  2660   00177A  6ED9               	movwf	fsr2l,c
  2661   00177C  6ADA               	clrf	fsr2h,c
  2662   00177E  0E07               	movlw	7
  2663   001780  26D9               	addwf	fsr2l,f,c
  2664   001782  50DF               	movf	indf2,w,c
  2665   001784  6E6A               	movwf	??_Interrupt_INTX_SetInterruptHandler^0,c
  2666   001786  6A6B               	clrf	(??_Interrupt_INTX_SetInterruptHandler+1)^0,c
  2667                           
  2668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 1, Range of values is 0 to 0
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte            4     3 (average)
  2674                           ;	Chosen strategy is simple_byte
  2675   001788  506B               	movf	(??_Interrupt_INTX_SetInterruptHandler+1)^0,w,c
  2676   00178A  0A00               	xorlw	0	; case 0
  2677   00178C  B4D8               	btfsc	status,2,c
  2678   00178E  EFCB  F00B         	goto	l5867
  2679   001792  EFDA  F00B         	goto	l973
  2680   001796                     l5867:
  2681                           
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 3, Range of values is 0 to 2
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte           10     6 (average)
  2687                           ;	Chosen strategy is simple_byte
  2688   001796  506A               	movf	??_Interrupt_INTX_SetInterruptHandler^0,w,c
  2689   001798  0A00               	xorlw	0	; case 0
  2690   00179A  B4D8               	btfsc	status,2,c
  2691   00179C  EF9B  F00B         	goto	l3317
  2692   0017A0  0A01               	xorlw	1	; case 1
  2693   0017A2  B4D8               	btfsc	status,2,c
  2694   0017A4  EFA6  F00B         	goto	l3319
  2695   0017A8  0A03               	xorlw	3	; case 2
  2696   0017AA  B4D8               	btfsc	status,2,c
  2697   0017AC  EFB1  F00B         	goto	l3321
  2698   0017B0  EFDA  F00B         	goto	l973
  2699   0017B4                     l973:
  2700   0017B4  0012               	return		;funcret
  2701   0017B6                     __end_of_Interrupt_INTX_SetInterruptHandler:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _INT2_SetInterruptHandler *****************
  2705 ;; Defined at:
  2706 ;;		line 289 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2709 ;;		 -> int0_APP_ISR(1), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      enum E2975
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;Total ram usage:        2 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 5
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_Interrupt_INTX_SetInterruptHandler
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text14
  2736   001C7A                     __ptext14:
  2737                           	callstack 0
  2738   001C7A                     _INT2_SetInterruptHandler:
  2739                           	callstack 23
  2740   001C7A                     
  2741                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 289: static std_return INT2_SetInterruptHandl
      +                          er( void(*InterruptHandler)(void) );_HAL/MCAL/Interrupt/external_interrupt.c: 290: {;_HA
      +                          L/MCAL/Interrupt/external_interrupt.c: 291:     if (((void*)0) == InterruptHandler)
  2742   001C7A  5067               	movf	INT2_SetInterruptHandler@InterruptHandler^0,w,c
  2743   001C7C  1068               	iorwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2744   001C7E  A4D8               	btfss	status,2,c
  2745   001C80  EF44  F00E         	goto	u1261
  2746   001C84  EF46  F00E         	goto	u1260
  2747   001C88                     u1261:
  2748   001C88  EF48  F00E         	goto	l3191
  2749   001C8C                     u1260:
  2750   001C8C  EF4C  F00E         	goto	l968
  2751   001C90                     l3191:
  2752                           
  2753                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 296:     {;_HAL/MCAL/Interrupt/external_inter
      +                          rupt.c: 297:         INT2_InterruptHandler = InterruptHandler;
  2754   001C90  C067  F04F         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2755   001C94  C068  F050         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2756   001C98                     l968:
  2757   001C98  0012               	return		;funcret
  2758   001C9A                     __end_of_INT2_SetInterruptHandler:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _INT1_SetInterruptHandler *****************
  2762 ;; Defined at:
  2763 ;;		line 275 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2766 ;;		 -> int0_APP_ISR(1), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      enum E2975
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;Total ram usage:        2 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 5
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_Interrupt_INTX_SetInterruptHandler
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text15
  2793   001C9A                     __ptext15:
  2794                           	callstack 0
  2795   001C9A                     _INT1_SetInterruptHandler:
  2796                           	callstack 23
  2797   001C9A                     
  2798                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 275: static std_return INT1_SetInterruptHandl
      +                          er( void(*InterruptHandler)(void) );_HAL/MCAL/Interrupt/external_interrupt.c: 276: {;_HA
      +                          L/MCAL/Interrupt/external_interrupt.c: 277:     if (((void*)0) == InterruptHandler)
  2799   001C9A  5067               	movf	INT1_SetInterruptHandler@InterruptHandler^0,w,c
  2800   001C9C  1068               	iorwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2801   001C9E  A4D8               	btfss	status,2,c
  2802   001CA0  EF54  F00E         	goto	u1251
  2803   001CA4  EF56  F00E         	goto	u1250
  2804   001CA8                     u1251:
  2805   001CA8  EF58  F00E         	goto	l3181
  2806   001CAC                     u1250:
  2807   001CAC  EF5C  F00E         	goto	l963
  2808   001CB0                     l3181:
  2809                           
  2810                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 282:     {;_HAL/MCAL/Interrupt/external_inter
      +                          rupt.c: 283:         INT1_InterruptHandler = InterruptHandler;
  2811   001CB0  C067  F051         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2812   001CB4  C068  F052         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2813   001CB8                     l963:
  2814   001CB8  0012               	return		;funcret
  2815   001CBA                     __end_of_INT1_SetInterruptHandler:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _INT0_SetInterruptHandler *****************
  2819 ;; Defined at:
  2820 ;;		line 261 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2823 ;;		 -> int0_APP_ISR(1), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      enum E2975
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 5
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_Interrupt_INTX_SetInterruptHandler
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text16
  2850   001CBA                     __ptext16:
  2851                           	callstack 0
  2852   001CBA                     _INT0_SetInterruptHandler:
  2853                           	callstack 23
  2854   001CBA                     
  2855                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 261: static std_return INT0_SetInterruptHandl
      +                          er( void(*InterruptHandler)(void) );_HAL/MCAL/Interrupt/external_interrupt.c: 262: {;_HA
      +                          L/MCAL/Interrupt/external_interrupt.c: 263:     if (((void*)0) == InterruptHandler)
  2856   001CBA  5067               	movf	INT0_SetInterruptHandler@InterruptHandler^0,w,c
  2857   001CBC  1068               	iorwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2858   001CBE  A4D8               	btfss	status,2,c
  2859   001CC0  EF64  F00E         	goto	u1241
  2860   001CC4  EF66  F00E         	goto	u1240
  2861   001CC8                     u1241:
  2862   001CC8  EF68  F00E         	goto	l3171
  2863   001CCC                     u1240:
  2864   001CCC  EF6C  F00E         	goto	l958
  2865   001CD0                     l3171:
  2866                           
  2867                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 268:     {;_HAL/MCAL/Interrupt/external_inter
      +                          rupt.c: 269:        INT0_InterruptHandler = InterruptHandler;
  2868   001CD0  C067  F053         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2869   001CD4  C068  F054         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2870   001CD8                     l958:
  2871   001CD8  0012               	return		;funcret
  2872   001CDA                     __end_of_INT0_SetInterruptHandler:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _app_init *****************
  2876 ;; Defined at:
  2877 ;;		line 41 in file "_APP/application.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		None
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 5
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text17
  2906   001CE4                     __ptext17:
  2907                           	callstack 0
  2908   001CE4                     _app_init:
  2909                           	callstack 25
  2910   001CE4  0012               	return		;funcret
  2911   001CE6                     __end_of_app_init:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _InterruptManager *****************
  2915 ;; Defined at:
  2916 ;;		line 17 in file "_HAL/MCAL/Interrupt/interrupt_manager.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        8 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 4
  2937 ;; This function calls:
  2938 ;;		_INT0_ISR
  2939 ;; This function is called by:
  2940 ;;		Interrupt level 2
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	intcode
  2945   000008                     __pintcode:
  2946                           	callstack 0
  2947   000008                     _InterruptManager:
  2948                           	callstack 22
  2949                           
  2950                           ;incstack = 0
  2951   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2952   00000A  EDD0  F00C         	call	int_func,f	;refresh shadow registers
  2953                           
  2954                           	psect	intcode_body
  2955   0019A0                     __pintcode_body:
  2956                           	callstack 22
  2957   0019A0                     int_func:
  2958                           	callstack 22
  2959   0019A0  0006               	pop		; remove dummy address from shadow register refresh
  2960   0019A2  CFFA F05F          	movff	pclath,??_InterruptManager
  2961   0019A6  CFFB F060          	movff	pclatu,??_InterruptManager+1
  2962   0019AA  CFE1 F061          	movff	fsr1l,??_InterruptManager+2
  2963   0019AE  CFE2 F062          	movff	fsr1h,??_InterruptManager+3
  2964   0019B2  CFD9 F063          	movff	fsr2l,??_InterruptManager+4
  2965   0019B6  CFDA F064          	movff	fsr2h,??_InterruptManager+5
  2966   0019BA  CFF3 F065          	movff	prodl,??_InterruptManager+6
  2967   0019BE  CFF4 F066          	movff	prodh,??_InterruptManager+7
  2968   0019C2                     
  2969                           ;_HAL/MCAL/Interrupt/interrupt_manager.c: 19:     if ( (1 == INTCONbits.INT0IE)
  2970   0019C2  A8F2               	btfss	242,4,c	;volatile
  2971   0019C4  EFE6  F00C         	goto	i2u210_41
  2972   0019C8  EFE8  F00C         	goto	i2u210_40
  2973   0019CC                     i2u210_41:
  2974   0019CC  EFF1  F00C         	goto	i2l1038
  2975   0019D0                     i2u210_40:
  2976   0019D0  A2F2               	btfss	242,1,c	;volatile
  2977   0019D2  EFED  F00C         	goto	i2u211_41
  2978   0019D6  EFEF  F00C         	goto	i2u211_40
  2979   0019DA                     i2u211_41:
  2980   0019DA  EFF1  F00C         	goto	i2l1038
  2981   0019DE                     i2u211_40:
  2982   0019DE                     
  2983                           ;_HAL/MCAL/Interrupt/interrupt_manager.c: 21:     {;_HAL/MCAL/Interrupt/interrupt_manage
      +                          r.c: 22:         INT0_ISR();
  2984   0019DE  EC01  F00E         	call	_INT0_ISR	;wreg free
  2985   0019E2                     i2l1038:
  2986   0019E2  C066  FFF4         	movff	??_InterruptManager+7,prodh
  2987   0019E6  C065  FFF3         	movff	??_InterruptManager+6,prodl
  2988   0019EA  C064  FFDA         	movff	??_InterruptManager+5,fsr2h
  2989   0019EE  C063  FFD9         	movff	??_InterruptManager+4,fsr2l
  2990   0019F2  C062  FFE2         	movff	??_InterruptManager+3,fsr1h
  2991   0019F6  C061  FFE1         	movff	??_InterruptManager+2,fsr1l
  2992   0019FA  C060  FFFB         	movff	??_InterruptManager+1,pclatu
  2993   0019FE  C05F  FFFA         	movff	??_InterruptManager,pclath
  2994   001A02  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2995   001A04  0011               	retfie		f
  2996   001A06                     __end_of_InterruptManager:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _INT0_ISR *****************
  3000 ;; Defined at:
  3001 ;;		line 324 in file "_HAL/MCAL/Interrupt/external_interrupt.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 3
  3022 ;; This function calls:
  3023 ;;		NULL
  3024 ;;		_int0_APP_ISR
  3025 ;; This function is called by:
  3026 ;;		_InterruptManager
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text19
  3031   001C02                     __ptext19:
  3032                           	callstack 0
  3033   001C02                     _INT0_ISR:
  3034                           	callstack 22
  3035   001C02                     
  3036                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 327:     (INTCONbits.INT0IF = 0);
  3037   001C02  92F2               	bcf	242,1,c	;volatile
  3038   001C04                     
  3039                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 332:     if(INT0_InterruptHandler)
  3040   001C04  5053               	movf	_INT0_InterruptHandler^0,w,c
  3041   001C06  1054               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  3042   001C08  B4D8               	btfsc	status,2,c
  3043   001C0A  EF09  F00E         	goto	i2u148_41
  3044   001C0E  EF0B  F00E         	goto	i2u148_40
  3045   001C12                     i2u148_41:
  3046   001C12  EF17  F00E         	goto	i2l984
  3047   001C16                     i2u148_40:
  3048   001C16                     
  3049                           ;_HAL/MCAL/Interrupt/external_interrupt.c: 333:     {;_HAL/MCAL/Interrupt/external_inter
      +                          rupt.c: 334:         INT0_InterruptHandler();
  3050   001C16  D802               	call	i2u149_48
  3051   001C18  EF17  F00E         	goto	i2u149_49
  3052   001C1C                     i2u149_48:
  3053   001C1C  0005               	push	
  3054   001C1E  6EFA               	movwf	pclath,c
  3055   001C20  5053               	movf	_INT0_InterruptHandler^0,w,c
  3056   001C22  6EFD               	movwf	tosl,c
  3057   001C24  5054               	movf	(_INT0_InterruptHandler+1)^0,w,c
  3058   001C26  6EFE               	movwf	tosh,c
  3059   001C28  6AFF               	clrf	tosu,c
  3060   001C2A  50FA               	movf	pclath,w,c
  3061   001C2C  0012               	return		;indir
  3062   001C2E                     i2u149_49:
  3063   001C2E                     i2l984:
  3064   001C2E  0012               	return		;funcret
  3065   001C30                     __end_of_INT0_ISR:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _int0_APP_ISR *****************
  3069 ;; Defined at:
  3070 ;;		line 18 in file "main.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 2
  3091 ;; This function calls:
  3092 ;;		_led_toggle
  3093 ;; This function is called by:
  3094 ;;		_INT0_ISR
  3095 ;;		_INT1_ISR
  3096 ;;		_INT2_ISR
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text20
  3101   001CDA                     __ptext20:
  3102                           	callstack 0
  3103   001CDA                     _int0_APP_ISR:
  3104                           	callstack 22
  3105   001CDA                     
  3106                           ;main.c: 20:     led_toggle(&led1);
  3107   001CDA  0E39               	movlw	low _led1
  3108   001CDC  6E59               	movwf	led_toggle@p_led^0,c
  3109   001CDE  EC99  F00D         	call	_led_toggle	;wreg free
  3110   001CE2  0012               	return		;funcret
  3111   001CE4                     __end_of_int0_APP_ISR:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _led_toggle *****************
  3115 ;; Defined at:
  3116 ;;		line 70 in file "_HAL/Drivers/LED/LED.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  p_led           1    4[COMRAM] PTR struct .
  3119 ;;		 -> led1(3), 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  led_pin         5    5[COMRAM] struct .
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      enum E2975
  3124 ;; Registers used:
  3125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:        6 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		_gpio_pin_toggle_logic
  3140 ;; This function is called by:
  3141 ;;		_int0_APP_ISR
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text21
  3146   001B32                     __ptext21:
  3147                           	callstack 0
  3148   001B32                     _led_toggle:
  3149                           	callstack 22
  3150   001B32                     
  3151                           ;_HAL/Drivers/LED/LED.c: 70: std_return led_toggle(led_t * p_led);_HAL/Drivers/LED/LED.c
      +                          : 71: {;_HAL/Drivers/LED/LED.c: 72:     if(((void*)0) == p_led )
  3152   001B32  5059               	movf	led_toggle@p_led^0,w,c
  3153   001B34  A4D8               	btfss	status,2,c
  3154   001B36  EF9F  F00D         	goto	i2u122_41
  3155   001B3A  EFA1  F00D         	goto	i2u122_40
  3156   001B3E                     i2u122_41:
  3157   001B3E  EFA3  F00D         	goto	i2l3153
  3158   001B42                     i2u122_40:
  3159   001B42  EFBE  F00D         	goto	i2l511
  3160   001B46                     i2l3153:
  3161                           
  3162                           ;_HAL/Drivers/LED/LED.c: 77:     {;_HAL/Drivers/LED/LED.c: 78:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
  3163   001B46  EE20  F03C         	lfsr	2,led_toggle@F3113
  3164   001B4A  EE10  F05A         	lfsr	1,led_toggle@led_pin
  3165   001B4E  0E04               	movlw	4
  3166   001B50                     i2u123_41:
  3167   001B50  CFDB FFE3          	movff	plusw2,plusw1
  3168   001B54  06E8               	decf	wreg,f,c
  3169   001B56  E2FC               	bc	i2u123_41
  3170   001B58  5059               	movf	led_toggle@p_led^0,w,c
  3171   001B5A  6ED9               	movwf	fsr2l,c
  3172   001B5C  6ADA               	clrf	fsr2h,c
  3173   001B5E  50DF               	movf	indf2,w,c
  3174   001B60  6E5A               	movwf	led_toggle@led_pin^0,c
  3175   001B62  5059               	movf	led_toggle@p_led^0,w,c
  3176   001B64  6ED9               	movwf	fsr2l,c
  3177   001B66  6ADA               	clrf	fsr2h,c
  3178   001B68  0E01               	movlw	1
  3179   001B6A  26D9               	addwf	fsr2l,f,c
  3180   001B6C  50DF               	movf	indf2,w,c
  3181   001B6E  6E5B               	movwf	(led_toggle@led_pin+1)^0,c
  3182   001B70  0E00               	movlw	0
  3183   001B72  6E5C               	movwf	(led_toggle@led_pin+2)^0,c
  3184   001B74                     
  3185                           ;_HAL/Drivers/LED/LED.c: 82:        gpio_pin_toggle_logic(&led_pin);
  3186   001B74  0E5A               	movlw	low led_toggle@led_pin
  3187   001B76  6E55               	movwf	gpio_pin_toggle_logic@p_pin_config^0,c
  3188   001B78  EC1D  F008         	call	_gpio_pin_toggle_logic	;wreg free
  3189   001B7C                     i2l511:
  3190   001B7C  0012               	return		;funcret
  3191   001B7E                     __end_of_led_toggle:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _gpio_pin_toggle_logic *****************
  3195 ;; Defined at:
  3196 ;;		line 380 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  p_pin_config    1    0[COMRAM] PTR struct .
  3199 ;;		 -> led_toggle@led_pin(5), 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  bit_mask        1    3[COMRAM] enum E2996
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      enum E2975
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        4 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_led_toggle
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text22
  3225   00103A                     __ptext22:
  3226                           	callstack 0
  3227   00103A                     _gpio_pin_toggle_logic:
  3228                           	callstack 22
  3229   00103A                     
  3230                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 384:     if(((void*)0) == p_pin_config)
  3231   00103A  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3232   00103C  A4D8               	btfss	status,2,c
  3233   00103E  EF23  F008         	goto	i2u111_41
  3234   001042  EF25  F008         	goto	i2u111_40
  3235   001046                     i2u111_41:
  3236   001046  EF47  F008         	goto	i2l3021
  3237   00104A                     i2u111_40:
  3238   00104A  EFD2  F008         	goto	i2l740
  3239   00104E                     i2l3001:
  3240                           
  3241                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 394:                 bit_mask = MASK_BIT_0;
  3242   00104E  0E01               	movlw	1
  3243   001050  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3244                           
  3245                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 395:                 break;
  3246   001052  EF79  F008         	goto	i2l3023
  3247   001056                     i2l3003:
  3248                           
  3249                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 397:                 bit_mask = MASK_BIT_1;
  3250   001056  0E02               	movlw	2
  3251   001058  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3252                           
  3253                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 398:                 break;
  3254   00105A  EF79  F008         	goto	i2l3023
  3255   00105E                     i2l3005:
  3256                           
  3257                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 400:                 bit_mask = MASK_BIT_2;
  3258   00105E  0E04               	movlw	4
  3259   001060  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3260                           
  3261                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 401:                 break;
  3262   001062  EF79  F008         	goto	i2l3023
  3263   001066                     i2l3007:
  3264                           
  3265                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 403:                 bit_mask = MASK_BIT_3;
  3266   001066  0E08               	movlw	8
  3267   001068  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3268                           
  3269                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 404:                 break;
  3270   00106A  EF79  F008         	goto	i2l3023
  3271   00106E                     i2l3009:
  3272                           
  3273                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 406:                 bit_mask = MASK_BIT_4;
  3274   00106E  0E10               	movlw	16
  3275   001070  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3276                           
  3277                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 407:                 break;
  3278   001072  EF79  F008         	goto	i2l3023
  3279   001076                     i2l3011:
  3280                           
  3281                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 409:                 bit_mask = MASK_BIT_5;
  3282   001076  0E20               	movlw	32
  3283   001078  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3284                           
  3285                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 410:                 break;
  3286   00107A  EF79  F008         	goto	i2l3023
  3287   00107E                     i2l3013:
  3288                           
  3289                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 412:                 bit_mask = MASK_BIT_6;
  3290   00107E  0E40               	movlw	64
  3291   001080  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3292                           
  3293                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 413:                 break;
  3294   001082  EF79  F008         	goto	i2l3023
  3295   001086                     i2l3015:
  3296                           
  3297                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 bit_mask = MASK_BIT_7;
  3298   001086  0E80               	movlw	128
  3299   001088  6E58               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  3300                           
  3301                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 416:                 break;
  3302   00108A  EF79  F008         	goto	i2l3023
  3303   00108E                     i2l3021:
  3304   00108E  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3305   001090  6ED9               	movwf	fsr2l,c
  3306   001092  6ADA               	clrf	fsr2h,c
  3307   001094  0E01               	movlw	1
  3308   001096  26D9               	addwf	fsr2l,f,c
  3309   001098  50DF               	movf	indf2,w,c
  3310   00109A  6E56               	movwf	??_gpio_pin_toggle_logic^0,c
  3311   00109C  6A57               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
  3312                           
  3313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 1, Range of values is 0 to 0
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte            4     3 (average)
  3319                           ;	Chosen strategy is simple_byte
  3320   00109E  5057               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  3321   0010A0  0A00               	xorlw	0	; case 0
  3322   0010A2  B4D8               	btfsc	status,2,c
  3323   0010A4  EF56  F008         	goto	i2l5869
  3324   0010A8  EFD2  F008         	goto	i2l740
  3325   0010AC                     i2l5869:
  3326                           
  3327                           ; Switch size 1, requested type "simple"
  3328                           ; Number of cases is 8, Range of values is 0 to 7
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte           25    13 (average)
  3332                           ;	Chosen strategy is simple_byte
  3333   0010AC  5056               	movf	??_gpio_pin_toggle_logic^0,w,c
  3334   0010AE  0A00               	xorlw	0	; case 0
  3335   0010B0  B4D8               	btfsc	status,2,c
  3336   0010B2  EF27  F008         	goto	i2l3001
  3337   0010B6  0A01               	xorlw	1	; case 1
  3338   0010B8  B4D8               	btfsc	status,2,c
  3339   0010BA  EF2B  F008         	goto	i2l3003
  3340   0010BE  0A03               	xorlw	3	; case 2
  3341   0010C0  B4D8               	btfsc	status,2,c
  3342   0010C2  EF2F  F008         	goto	i2l3005
  3343   0010C6  0A01               	xorlw	1	; case 3
  3344   0010C8  B4D8               	btfsc	status,2,c
  3345   0010CA  EF33  F008         	goto	i2l3007
  3346   0010CE  0A07               	xorlw	7	; case 4
  3347   0010D0  B4D8               	btfsc	status,2,c
  3348   0010D2  EF37  F008         	goto	i2l3009
  3349   0010D6  0A01               	xorlw	1	; case 5
  3350   0010D8  B4D8               	btfsc	status,2,c
  3351   0010DA  EF3B  F008         	goto	i2l3011
  3352   0010DE  0A03               	xorlw	3	; case 6
  3353   0010E0  B4D8               	btfsc	status,2,c
  3354   0010E2  EF3F  F008         	goto	i2l3013
  3355   0010E6  0A01               	xorlw	1	; case 7
  3356   0010E8  B4D8               	btfsc	status,2,c
  3357   0010EA  EF43  F008         	goto	i2l3015
  3358   0010EE  EFD2  F008         	goto	i2l740
  3359   0010F2                     i2l3023:
  3360                           
  3361                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
  3362   0010F2  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3363   0010F4  6ED9               	movwf	fsr2l,c
  3364   0010F6  6ADA               	clrf	fsr2h,c
  3365   0010F8  50DF               	movf	indf2,w,c
  3366   0010FA  0D02               	mullw	2
  3367   0010FC  50F3               	movf	243,w,c
  3368   0010FE  0F11               	addlw	low _LAT_REG_ADD_arr
  3369   001100  6ED9               	movwf	fsr2l,c
  3370   001102  6ADA               	clrf	fsr2h,c
  3371   001104  CFDE F056          	movff	postinc2,??_gpio_pin_toggle_logic
  3372   001108  CFDD F057          	movff	postdec2,??_gpio_pin_toggle_logic+1
  3373   00110C  C056  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  3374   001110  C057  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  3375   001114  5058               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
  3376   001116  1ADF               	xorwf	indf2,f,c
  3377                           
  3378                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
  3379   001118  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3380   00111A  6ED9               	movwf	fsr2l,c
  3381   00111C  6ADA               	clrf	fsr2h,c
  3382   00111E  50DF               	movf	indf2,w,c
  3383   001120  0D02               	mullw	2
  3384   001122  50F3               	movf	243,w,c
  3385   001124  0F11               	addlw	low _LAT_REG_ADD_arr
  3386   001126  6ED9               	movwf	fsr2l,c
  3387   001128  6ADA               	clrf	fsr2h,c
  3388   00112A  CFDE F056          	movff	postinc2,??_gpio_pin_toggle_logic
  3389   00112E  CFDD F057          	movff	postdec2,??_gpio_pin_toggle_logic+1
  3390   001132  C056  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  3391   001136  C057  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  3392   00113A  50DF               	movf	indf2,w,c
  3393   00113C  1458               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  3394   00113E  1858               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
  3395   001140  A4D8               	btfss	status,2,c
  3396   001142  EFA5  F008         	goto	i2u112_41
  3397   001146  EFA7  F008         	goto	i2u112_40
  3398   00114A                     i2u112_41:
  3399   00114A  EFB0  F008         	goto	i2l3027
  3400   00114E                     i2u112_40:
  3401   00114E                     
  3402                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 424:             p_pin_config->logic = LOGIC_ON;
  3403   00114E  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3404   001150  6ED9               	movwf	fsr2l,c
  3405   001152  6ADA               	clrf	fsr2h,c
  3406   001154  0E03               	movlw	3
  3407   001156  26D9               	addwf	fsr2l,f,c
  3408   001158  0E01               	movlw	1
  3409   00115A  6EDF               	movwf	indf2,c
  3410   00115C  EFD2  F008         	goto	i2l740
  3411   001160                     i2l3027:
  3412   001160  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3413   001162  6ED9               	movwf	fsr2l,c
  3414   001164  6ADA               	clrf	fsr2h,c
  3415   001166  50DF               	movf	indf2,w,c
  3416   001168  0D02               	mullw	2
  3417   00116A  50F3               	movf	243,w,c
  3418   00116C  0F11               	addlw	low _LAT_REG_ADD_arr
  3419   00116E  6ED9               	movwf	fsr2l,c
  3420   001170  6ADA               	clrf	fsr2h,c
  3421   001172  CFDE F056          	movff	postinc2,??_gpio_pin_toggle_logic
  3422   001176  CFDD F057          	movff	postdec2,??_gpio_pin_toggle_logic+1
  3423   00117A  C056  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  3424   00117E  C057  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  3425   001182  50DF               	movf	indf2,w,c
  3426   001184  1458               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  3427   001186  0900               	iorlw	0
  3428   001188  A4D8               	btfss	status,2,c
  3429   00118A  EFC9  F008         	goto	i2u113_41
  3430   00118E  EFCB  F008         	goto	i2u113_40
  3431   001192                     i2u113_41:
  3432   001192  EFD2  F008         	goto	i2l740
  3433   001196                     i2u113_40:
  3434   001196                     
  3435                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 426:             p_pin_config->logic = LOGIC_ON;
  3436   001196  5055               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  3437   001198  6ED9               	movwf	fsr2l,c
  3438   00119A  6ADA               	clrf	fsr2h,c
  3439   00119C  0E03               	movlw	3
  3440   00119E  26D9               	addwf	fsr2l,f,c
  3441   0011A0  0E01               	movlw	1
  3442   0011A2  6EDF               	movwf	indf2,c
  3443   0011A4                     i2l740:
  3444   0011A4  0012               	return		;funcret
  3445   0011A6                     __end_of_gpio_pin_toggle_logic:
  3446                           	callstack 0
  3447                           
  3448                           	psect	text23
  3449   000000                     __ptext23:
  3450                           	callstack 0
  3451   000000                     
  3452                           	psect	rparam
  3453   000000                     
  3454                           	psect	temp
  3455   00006D                     btemp:
  3456                           	callstack 0
  3457   00006D                     	ds	1
  3458   000000                     int$flags	set	btemp
  3459   000000                     wtemp8	set	btemp+1
  3460   000000                     ttemp5	set	btemp+1
  3461   000000                     ttemp6	set	btemp+4
  3462   000000                     ttemp7	set	btemp+8
  3463                           
  3464                           	psect	config
  3465                           
  3466                           ; Padding undefined space
  3467   300000                     	org	3145728
  3468   300000  FF                 	db	255
  3469                           
  3470                           ;Config register CONFIG1H @ 0x300001
  3471                           ;	Oscillator Selection bits
  3472                           ;	OSC = HS, HS oscillator
  3473                           ;	Fail-Safe Clock Monitor Enable bit
  3474                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3475                           ;	Internal/External Oscillator Switchover bit
  3476                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3477   300001                     	org	3145729
  3478   300001  02                 	db	2
  3479                           
  3480                           ;Config register CONFIG2L @ 0x300002
  3481                           ;	Power-up Timer Enable bit
  3482                           ;	PWRT = OFF, PWRT disabled
  3483                           ;	Brown-out Reset Enable bits
  3484                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3485                           ;	Brown Out Reset Voltage bits
  3486                           ;	BORV = 1, 
  3487   300002                     	org	3145730
  3488   300002  09                 	db	9
  3489                           
  3490                           ;Config register CONFIG2H @ 0x300003
  3491                           ;	Watchdog Timer Enable bit
  3492                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3493                           ;	Watchdog Timer Postscale Select bits
  3494                           ;	WDTPS = 32768, 1:32768
  3495   300003                     	org	3145731
  3496   300003  1E                 	db	30
  3497                           
  3498                           ; Padding undefined space
  3499   300004                     	org	3145732
  3500   300004  FF                 	db	255
  3501                           
  3502                           ;Config register CONFIG3H @ 0x300005
  3503                           ;	CCP2 MUX bit
  3504                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3505                           ;	PORTB A/D Enable bit
  3506                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3507                           ;	Low-Power Timer1 Oscillator Enable bit
  3508                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3509                           ;	MCLR Pin Enable bit
  3510                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3511   300005                     	org	3145733
  3512   300005  81                 	db	129
  3513                           
  3514                           ;Config register CONFIG4L @ 0x300006
  3515                           ;	Stack Full/Underflow Reset Enable bit
  3516                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3517                           ;	Single-Supply ICSP Enable bit
  3518                           ;	LVP = OFF, Single-Supply ICSP disabled
  3519                           ;	Extended Instruction Set Enable bit
  3520                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3521                           ;	Background Debugger Enable bit
  3522                           ;	DEBUG = 0x1, unprogrammed default
  3523   300006                     	org	3145734
  3524   300006  81                 	db	129
  3525                           
  3526                           ; Padding undefined space
  3527   300007                     	org	3145735
  3528   300007  FF                 	db	255
  3529                           
  3530                           ;Config register CONFIG5L @ 0x300008
  3531                           ;	Code Protection bit
  3532                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3533                           ;	Code Protection bit
  3534                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3535                           ;	Code Protection bit
  3536                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3537                           ;	Code Protection bit
  3538                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3539   300008                     	org	3145736
  3540   300008  0F                 	db	15
  3541                           
  3542                           ;Config register CONFIG5H @ 0x300009
  3543                           ;	Boot Block Code Protection bit
  3544                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3545                           ;	Data EEPROM Code Protection bit
  3546                           ;	CPD = OFF, Data EEPROM not code-protected
  3547   300009                     	org	3145737
  3548   300009  C0                 	db	192
  3549                           
  3550                           ;Config register CONFIG6L @ 0x30000A
  3551                           ;	Write Protection bit
  3552                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3553                           ;	Write Protection bit
  3554                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3555                           ;	Write Protection bit
  3556                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3557                           ;	Write Protection bit
  3558                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3559   30000A                     	org	3145738
  3560   30000A  0F                 	db	15
  3561                           
  3562                           ;Config register CONFIG6H @ 0x30000B
  3563                           ;	Configuration Register Write Protection bit
  3564                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3565                           ;	Boot Block Write Protection bit
  3566                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3567                           ;	Data EEPROM Write Protection bit
  3568                           ;	WRTD = OFF, Data EEPROM not write-protected
  3569   30000B                     	org	3145739
  3570   30000B  E0                 	db	224
  3571                           
  3572                           ;Config register CONFIG7L @ 0x30000C
  3573                           ;	Table Read Protection bit
  3574                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3575                           ;	Table Read Protection bit
  3576                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3577                           ;	Table Read Protection bit
  3578                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3579                           ;	Table Read Protection bit
  3580                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3581   30000C                     	org	3145740
  3582   30000C  0F                 	db	15
  3583                           
  3584                           ;Config register CONFIG7H @ 0x30000D
  3585                           ;	Boot Block Table Read Protection bit
  3586                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3587   30000D                     	org	3145741
  3588   30000D  40                 	db	64
  3589                           tosu	equ	0xFFF
  3590                           tosh	equ	0xFFE
  3591                           tosl	equ	0xFFD
  3592                           stkptr	equ	0xFFC
  3593                           pclatu	equ	0xFFB
  3594                           pclath	equ	0xFFA
  3595                           pcl	equ	0xFF9
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           indf0	equ	0xFEF
  3603                           postinc0	equ	0xFEE
  3604                           postdec0	equ	0xFED
  3605                           preinc0	equ	0xFEC
  3606                           plusw0	equ	0xFEB
  3607                           fsr0h	equ	0xFEA
  3608                           fsr0l	equ	0xFE9
  3609                           wreg	equ	0xFE8
  3610                           indf1	equ	0xFE7
  3611                           postinc1	equ	0xFE6
  3612                           postdec1	equ	0xFE5
  3613                           preinc1	equ	0xFE4
  3614                           plusw1	equ	0xFE3
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           bsr	equ	0xFE0
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           preinc2	equ	0xFDC
  3622                           plusw2	equ	0xFDB
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8

Data Sizes:
    Strings     56
    Constant    0
    Data        354
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24     108
    BANK0           128     10     128
    BANK1           256      5     182
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), 
		 -> TRISD(BITBIGSFRhll[1]), TRISE(BITBIGSFRhll[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(2) Largest target is 10
		 -> int0_object(COMRAM[10]), led_init@led_pin(BANK1[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(2) Largest target is 5
		 -> led_init@led_pin(BANK1[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_toggle@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(2) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), lcd_2_8bit$lcd_data_pin(BANK0[40]), led_init@led_pin(BANK1[5]), led_on_off@led_pin(COMRAM[5]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), NULL(), 

    int0_object$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    interrupt_INTx_clear_flag@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_clear_flag@interrupt_INTx_st$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    interrupt_INTx_disable@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_disable@interrupt_INTx_st$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    interrupt_INTx_edge_init@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_edge_init@interrupt_INTx_st$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    interrupt_INTx_enable@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_enable@interrupt_INTx_st$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    interrupt_INTx_init@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_pin_init@interrupt_INTx_st	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    interrupt_INTx_pin_init@interrupt_INTx_st$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    Interrupt_INTX_SetInterruptHandler@interrupt_object	PTR const struct . size(1) Largest target is 10
		 -> int0_object(COMRAM[10]), 

    Interrupt_INTX_SetInterruptHandler@interrupt_object$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led1(COMRAM[3]), 

    led_toggle@p_led	PTR struct . size(1) Largest target is 3
		 -> led1(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1120$external_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_APP_ISR(), 

    S2028$buffer	PTR unsigned char  size(2) Largest target is 0

    S2028$source	PTR const unsigned char  size(2) Largest target is 0

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), 
		 -> TRISD(BITBIGSFRhll[1]), TRISE(BITBIGSFRhll[1]), 

    sp__memset	PTR void  size(2) Largest target is 0

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), 
		 -> TRISE(BITBIGSFRhll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _interrupt_INTx_init->_interrupt_INTx_pin_init
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8
    _Interrupt_INTX_SetInterruptHandler->_INT0_SetInterruptHandler
    _Interrupt_INTX_SetInterruptHandler->_INT1_SetInterruptHandler
    _Interrupt_INTX_SetInterruptHandler->_INT2_SetInterruptHandler

Critical Paths under _InterruptManager in COMRAM

    _int0_APP_ISR->_led_toggle
    _led_toggle->_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _main->_led_init
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _interrupt_INTx_init->_interrupt_INTx_pin_init
    _interrupt_INTx_pin_init->_gpio_pin_direction_initialize

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_led_init

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23622
                           _app_init
                _interrupt_INTx_init
                           _led_init
 ---------------------------------------------------------------------------------
 (1) _led_init                                             7     6      1   18680
                                              9 BANK0      1     0      1
                                              0 BANK1      5     5      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2   18082
                                              5 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 5     2      3   14606
                                              0 BANK0      5     2      3
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (1) _interrupt_INTx_init                                  1     0      1    4942
                                              5 BANK0      1     0      1
 _Interrupt_INTX_SetInterruptHandler
          _interrupt_INTx_clear_flag
             _interrupt_INTx_disable
           _interrupt_INTx_edge_init
              _interrupt_INTx_enable
            _interrupt_INTx_pin_init
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_pin_init                              2     1      1    3308
                                             23 COMRAM     1     1      0
                                              4 BANK0      1     0      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        4     2      2    3118
                                              0 BANK0      4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     670
                                             18 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     670
                                             18 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_enable                                3     2      1     120
                                             18 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_edge_init                             3     2      1     252
                                             18 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_disable                               3     2      1     196
                                             18 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_clear_flag                            3     2      1     120
                                             18 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTX_SetInterruptHandler                   3     2      1     546
                                             20 COMRAM     3     2      1
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2     120
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     120
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     120
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManager                                     8     8      0     549
                                             10 COMRAM     8     8      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0     549
                                NULL *
                       _int0_APP_ISR *
 ---------------------------------------------------------------------------------
 (7) _int0_APP_ISR                                         0     0      0     549
                         _led_toggle
 ---------------------------------------------------------------------------------
 (8) _led_toggle                                           6     5      1     549
                                              4 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (9) _gpio_pin_toggle_logic                                4     3      1     327
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
   _interrupt_INTx_init
     _Interrupt_INTX_SetInterruptHandler
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _interrupt_INTx_clear_flag
     _interrupt_INTx_disable
     _interrupt_INTx_edge_init
     _interrupt_INTx_enable
     _interrupt_INTx_pin_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
   _led_init
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8

 _InterruptManager (ROOT)
   _INT0_ISR
     NULL(Fake) *
     _int0_APP_ISR *
       _led_toggle
         _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      B6       7       71.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      6C       1       85.7%
BITBIGSFRhll        59      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A2      26        0.0%
DATA                 0      0     1A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 26 11:45:17 2024

                                ??_InterruptManager 005F                                                  l51 1CE4  
               gpio_pin_write_logic@d_logic_desired 00F8                                                 l642 159E  
                                               l626 14AC                                                 l714 1846  
                                               l900 1A1A                                                 l902 1A20  
                                               l911 1A7E                                                 l903 1A26  
                                               l913 1A84                                                 l497 199E  
                                               l914 1A8A                                                 l908 1ACC  
                                               l924 12B6                                                 l676 166E  
                                               l950 1AE2                                                 l919 1C58  
                                               l952 1AE8                                                 l688 13BA  
                                               l953 1AEE                                                 l963 1CB8  
                                               l947 1B30                                                 l973 17B4  
                                               l877 1BC4                                                 l958 1CD8  
                                               l968 1C98                                                 l897 1A68  
                        ??_INT0_SetInterruptHandler 0069                                                 tosl 0FFD  
                                               wreg 0FE8                                                l1096 1C72  
                                              l3311 1722                                                l4031 1412  
                                              l4023 13D2                                                l3321 1762  
                                              l4033 1422                                                l4025 13E2  
                                              l4017 13BC                                                l5001 15D0  
                                              l3171 1CD0                                                l3243 1A90  
                                              l3235 1A6A                                                l3331 1A06  
                                              l4035 1432                                                l4027 13F2  
                                              l4043 1452                                                l5003 1604  
                                              l3165 1CBA                                                l3181 1CB0  
                                              l3317 1736                                                l3325 1778  
                                              l4061 14F4                                                l4037 1442  
                                              l4029 1402                                                l5021 12F4  
                                              l3175 1C9A                                                l3191 1C90  
                                              l3319 174C                                                l3271 11D4  
                                              l3263 11A6                                                l4063 1504  
                                              l4055 14C4                                                l5031 135C  
                                              l5015 12B8                                                l3185 1C7A  
                                              l3257 1AF4                                                l3249 1ACE  
                                              l3281 121A                                                l3273 11DA  
                                              l4065 1514                                                l4057 14D4  
                                              l4049 14AE                                                l5009 1638  
                                              l5025 1308                                                l5017 12CC  
                                              l3291 1274                                                l3283 1234  
                                              l3275 11F4                                                l3339 1A2C  
                                              l4067 1524                                                l4059 14E4  
                                              l4075 1544                                                l5027 1318  
                                              l5019 12E4                                                l3285 123A  
                                              l3277 11FA                                                l3269 11BA  
                                              l4069 1534                                                l5029 134C  
                                              l5037 1390                                                l5061 17D0  
                                              l5053 17B6                                                l5141 194A  
                                              l3287 1254                                                l3279 1214  
                                              l3295 127A                                                l5063 17E0  
                                              l5055 17CA                                                l5151 1990  
                                              l5143 195C                                                l5135 1934  
                                              l3289 125A                                                l5161 1B94  
                                              l5073 180E                                                l5145 1968  
                                              l5091 1C46                                                l5163 1BAC  
                                              l5155 1B7E                                                l5075 1844  
                                              l5147 197A                                                l5085 1C30  
                                              l5165 1BB4                                                l5149 197E  
                                              l5167 1BBC                                                l5613 1C5A  
                                              l5615 1C5E                                                l5617 1C68  
                                              l5851 13A4                                                l5861 1298  
                                              l5853 1658                                                l5863 1AAE  
                                              l5855 1466                                                l5865 1B12  
                                              l5857 1558                                                l5849 182E  
                                              l5867 1796                                                l5859 1A4A  
                                              l4995 15A0                                                l4997 15B4  
                                              STR_1 102B                                                STR_2 1023  
                                              STR_9 1012                                                u1300 1ADE  
                                              u1301 1ADA                                                u1310 11B6  
                                              u1311 11B2                                                u1240 1CCC  
                                              u1320 11D4                                                u1400 1A16  
                                              u2120 13CE                                                u1241 1CC8  
                                              u1321 11D0                                                u1401 1A12  
                                              u2121 13CA                                                u1250 1CAC  
                                              u1330 11F4                                                u2130 14C0  
                                              u1251 1CA8                                                u1331 11F0  
                                              u2131 14BC                                                u1260 1C8C  
                                              u1340 1214                                                u1261 1C88  
                                              u1341 1210                                                _LATA 0F89  
                                              u1350 1234                                                _LATB 0F8A  
                                              u1351 1230                                                _LATC 0F8B  
                                              u1360 1254                                                _LATD 0F8C  
                                              u1361 1250                                                _LATE 0F8D  
                                              u1290 1A7A                                                u1370 1274  
                                              u1291 1A76                                                u1371 1270  
                                              u1390 1732                                                u1391 172E  
                                              u2910 17CA                                                u2911 17C6  
                                              u2840 15B4                                                u2920 1C42  
                                              u2841 15B0                                                u2921 1C3E  
                                              u2850 15CC                                                u2851 15C8  
                                              u2860 12CC                                                u2861 12C8  
                                              u2870 12E4                                                u2871 12E0  
                                              u2880 12F4                                                u2881 12F0  
                                              u2890 1304                                                u2970 1946  
                                              u2891 1300                                                u2971 1942  
                                              u2981 1954                                                u2990 1B90  
                                              u2991 1B8C                   __end_of_interrupt_INTx_clear_flag 1B32  
                                              _led1 0039           interrupt_INTx_edge_init@interrupt_INTx_st 0067  
                                              _main 1C5A                                                fsr1h 0FE2  
                                              fsr2h 0FDA                                                indf2 0FDF  
                                              fsr1l 0FE1                                                fsr2l 0FD9  
                                              btemp 006D                           ?_INT2_SetInterruptHandler 0067  
                                              prodh 0FF4                                                prodl 0FF3  
                                              start 000E                                        ___param_bank 0000  
                            ?_gpio_pin_toggle_logic 0055                             _interrupt_INTx_pin_init 1C30  
                          _interrupt_INTx_edge_init 11A6                                _gpio_pin_write_logic 12B8  
                                  __end_of_INT0_ISR 1C30                                               ?_main 0055  
                                             STR_10 1001                                               STR_11 1033  
                                             STR_12 1036          interrupt_INTx_clear_flag@interrupt_INTx_st 0067  
                                             i2l511 1B7C                                               i2l740 11A4  
                                             i2l984 1C2E                                               _PORTA 0F80  
                                             _PORTB 0F81                                               _PORTC 0F82  
                                             _PORTD 0F83                                               _PORTE 0F84  
                                             _TRISA 0F92                                               _TRISB 0F93  
                                             _TRISC 0F94                                               _TRISD 0F95  
                                             _TRISE 0F96                            _INT1_SetInterruptHandler 1C9A  
                                             pclath 0FFA                                               pclatu 0FFB  
                                             tablat 0FF5                                     led_on_off@F3109 0041  
           interrupt_INTx_disable@interrupt_INTx_st 0067                                               plusw1 0FE3  
                                             plusw2 0FDB                                               ttemp5 006E  
                                             ttemp6 0071                                               ttemp7 0075  
                                             status 0FD8                                               wtemp8 006E  
                    ?_gpio_pin_direction_initialize 00F6                                     __initialization 18BE  
                                      __end_of_main 1C7A                               ?_gpio_pin_write_logic 00F6  
                                            ??_main 006D                                __end_of_int0_APP_ISR 1CE4  
                                     __activetblptr 0003                interrupt_INTx_init@interrupt_INTx_st 00FB  
                                            i2l1038 19E2                                              i2l3001 104E  
                                            i2l3011 1076                                              i2l3003 1056  
                                            i2l3013 107E                                              i2l3005 105E  
                                            i2l3021 108E                                              i2l3015 1086  
                                            i2l3007 1066                                              i2l3023 10F2  
                                            i2l3025 114E                                              i2l3009 106E  
                                            i2l1089 1CE2                                              i2l3027 1160  
                                            i2l3029 1196                                              i2l3161 1B74  
                                            i2l3153 1B46                                              i2l3155 1B58  
                                            i2l3147 1B32                                              i2l3157 1B62  
                                            i2l3159 1B70                                              i2l3345 1CDA  
                                            i2l3425 1C02                                              i2l3427 1C04  
                                            i2l3429 1C16                                              i2l3961 19C2  
                                            i2l2995 103A                                              i2l3963 19D0  
                                            i2l3965 19DE                                              i2l5869 10AC  
                         ??_interrupt_INTx_pin_init 006C                                    __end_of_app_init 1CE6  
                                  __end_of_led_init 19A0            interrupt_INTx_pin_init@interrupt_INTx_st 00FA  
                                            clear_0 1924                                              isa$std 0001  
                                     led_init@F3104 0046                                        __pdataCOMRAM 0001  
                                      __mediumconst 0000                                              tblptrh 0FF7  
                                            tblptrl 0FF6                                              tblptru 0FF8  
                             __end_of_set_bit_uint8 14AE            INT2_SetInterruptHandler@InterruptHandler 0067  
          INT1_SetInterruptHandler@InterruptHandler 0067            INT0_SetInterruptHandler@InterruptHandler 0067  
                                     led_init@p_led 00FF                                          __accesstop 0080  
                           __end_of__initialization 192A                                           ?_INT0_ISR 0055  
                                     ___rparam_used 0001                               _interrupt_INTx_enable 1A06  
                            ??_gpio_pin_write_logic 00F9                                      __pcstackCOMRAM 0055  
                                      __pidataBANK0 1848                                        __pidataBANK1 1670  
                                  _PORT_REG_ADD_arr 001B                    gpio_pin_write_logic@p_pin_config 00F6  
                          ??_interrupt_INTx_disable 0068                     __end_of_interrupt_INTx_pin_init 1C5A  
                  __end_of_INT2_SetInterruptHandler 1C9A                               _INT0_InterruptHandler 0053  
                                        ??_INT0_ISR 005F                   gpio_pin_toggle_logic@p_pin_config 0055  
                        ??_interrupt_INTx_edge_init 0068                             ??_gpio_pin_toggle_logic 0056  
                                        _lcd_2_8bit 00C4                                _program_step_counter 004B  
                                   led_toggle@F3113 003C                          ??_INT1_SetInterruptHandler 0069  
                                   led_toggle@p_led 0059                                           ?_app_init 0055  
                                   _LAT_REG_ADD_arr 0011                                           ?_led_init 00FF  
                                 ??_clear_bit_uint8 006A                                          _led_toggle 1B32  
                            ?_interrupt_INTx_enable 0067                          ?_interrupt_INTx_clear_flag 0067  
                         ?_INT0_SetInterruptHandler 0067                                        _int0_APP_ISR 1CDA  
                                           __Hparam 0000                                             __Lparam 0000  
                               _gpio_pin_initialize 17B6                                        __psmallconst 1000  
                                           __pcinit 18BE                                             __ramtop 1000  
                                           __ptext0 1C5A                                             __ptext1 1934  
                                           __ptext2 17B6                                             __ptext3 12B8  
                                           __ptext4 1B7E                                             __ptext5 1C30  
                                           __ptext6 15A0                                             __ptext7 13BC  
                                           __ptext8 14AE                                             __ptext9 1A06  
                             _keypad_key_values_arr 0001                     ??_gpio_pin_direction_initialize 00F8  
                        clear_bit_uint8@d_IDX_BIT_X 0069                                ?_gpio_pin_initialize 00FB  
                                        ??_app_init 0067                                      __pintcode_body 19A0  
                                        ??_led_init 006C                                end_of_initialization 192A  
                          _INT2_SetInterruptHandler 1C7A                                             int_func 19A0  
                              clear_bit_uint8@p_reg 0067                                             postdec1 0FE5  
                                           postdec2 0FDD                                             postinc0 0FEE  
                                           postinc2 0FDE                                   led_toggle@led_pin 005A  
                             _INT1_InterruptHandler 0051                                    _InterruptManager 0008  
                                 init_msg_lcd@F3321 015A                                   init_msg_lcd@F3323 00B3  
                                 init_msg_lcd@F3331 0091                                   init_msg_lcd@F3325 0148  
                                 init_msg_lcd@F3333 0124                                   init_msg_lcd@F3341 0100  
                                 init_msg_lcd@F3343 018F                                   init_msg_lcd@F3319 016C  
                                 init_msg_lcd@F3327 00A2                                   init_msg_lcd@F3335 0080  
                                 init_msg_lcd@F3345 017E                                   init_msg_lcd@F3329 0136  
                                 init_msg_lcd@F3337 0112                                   init_msg_lcd@F3339 01A0  
                             ??_gpio_pin_initialize 00FD                                         ?_led_toggle 0059  
                  __end_of_interrupt_INTx_edge_init 12B8                              _interrupt_INTx_disable 1A6A  
                                     __pidataCOMRAM 1BC6                       gpio_pin_toggle_logic@bit_mask 0058  
                               start_initialization 18BE                                 _interrupt_INTx_init 1B7E  
             __end_of_gpio_pin_direction_initialize 1670                       _gpio_pin_direction_initialize 15A0  
                          ?_interrupt_INTx_pin_init 00FA                     gpio_pin_initialize@p_pin_config 00FB  
                              ?_interrupt_INTx_init 00FB                       __end_of_gpio_pin_toggle_logic 11A6  
Interrupt_INTX_SetInterruptHandler@interrupt_object 0069                                         __pdataBANK0 0080  
                                       __pdataBANK1 0100                                     _clear_bit_uint8 14AE  
                                       __pbssCOMRAM 003C                    __end_of_INT0_SetInterruptHandler 1CDA  
                                     __pcstackBANK0 00F6                                       __pcstackBANK1 01B1  
                           ??_interrupt_INTx_enable 0068                               _INT2_InterruptHandler 004F  
            interrupt_INTx_enable@interrupt_INTx_st 0067                         ??_interrupt_INTx_clear_flag 0068  
                             ??_interrupt_INTx_init 006D          __end_of_Interrupt_INTX_SetInterruptHandler 17B6  
              ??_Interrupt_INTX_SetInterruptHandler 006A                 ?_Interrupt_INTX_SetInterruptHandler 0069  
                _Interrupt_INTX_SetInterruptHandler 1722                                           __pintcode 0008  
                         ?_interrupt_INTx_edge_init 0067                                         __smallconst 1000  
                        ??_INT2_SetInterruptHandler 0069                                       _set_bit_uint8 13BC  
                                          _INT0_ISR 1C02                           ?_INT1_SetInterruptHandler 0067  
                          __end_of_InterruptManager 1A06                                            i2u111_40 104A  
                                          i2u111_41 1046                                         _int0_object 002F  
                                          i2u112_40 114E                                            i2u112_41 114A  
                                          i2u113_40 1196                                            i2u113_41 1192  
                                          i2u122_40 1B42                                            i2u210_40 19D0  
                                          i2u122_41 1B3E                                            i2u210_41 19CC  
                                          i2u211_40 19DE                                            i2u123_41 1B50  
                                          i2u211_41 19DA                                            i2u148_40 1C16  
                                          i2u148_41 1C12                                            i2u149_48 1C1C  
                                          i2u149_49 1C2E                             __end_of_clear_bit_uint8 15A0  
                         _interrupt_INTx_clear_flag 1ACE                                      ?_set_bit_uint8 0067  
                                       _INTCON2bits 0FF1                                         _INTCON3bits 0FF0  
                                         copy_data0 18D2                                           copy_data1 18F2  
                                         copy_data2 1912                            _INT0_SetInterruptHandler 1CBA  
                                      ??_led_toggle 005A                             ?_interrupt_INTx_disable 0067  
                                          __Hrparam 0000                                            __Lrparam 0000  
                       __end_of_gpio_pin_initialize 1848                                  __end_of_led_toggle 1B7E  
                          set_bit_uint8@d_IDX_BIT_X 0069                                            __ptext10 11A6  
                                          __ptext11 1A6A                                            __ptext20 1CDA  
                                          __ptext12 1ACE                                            __ptext21 1B32  
                                          __ptext13 1722                                            __ptext22 103A  
                                          __ptext14 1C7A                                            __ptext23 0000  
                                          __ptext15 1C9A                                            __ptext16 1CBA  
                                          __ptext17 1CE4                                            __ptext19 1C02  
                                          _app_init 1CE4                      __end_of_interrupt_INTx_disable 1ACE  
                                   fp__int0_APP_ISR 0000                                            _led_init 1934  
                                          isa$xinst 0000                                            int$flags 006D  
                                  ?_clear_bit_uint8 0067                                  set_bit_uint8@p_reg 0067  
                                        _INTCONbits 0FF2                                     ??_set_bit_uint8 006A  
                      __end_of_gpio_pin_write_logic 13BC                                            intlevel2 0000  
                     __end_of_interrupt_INTx_enable 1A6A                                       ?_int0_APP_ISR 0055  
         gpio_pin_direction_initialize@p_pin_config 00F6                               _gpio_pin_toggle_logic 103A  
                  __end_of_INT1_SetInterruptHandler 1CBA                                    _TRIS_REG_ADD_arr 0025  
                       __end_of_interrupt_INTx_init 1BC6                                     led_init@led_pin 01B1  
                                    ??_int0_APP_ISR 005F                                   ?_InterruptManager 0055  
