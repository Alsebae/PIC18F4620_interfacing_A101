

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 18 16:52:12 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 23/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00174C                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _LAT_REG_ADD_arr
    67   00174C  89                 	db	137
    68   00174D  0F                 	db	15
    69   00174E  8A                 	db	138
    70   00174F  0F                 	db	15
    71   001750  8B                 	db	139
    72   001751  0F                 	db	15
    73   001752  8C                 	db	140
    74   001753  0F                 	db	15
    75   001754  8D                 	db	141
    76   001755  0F                 	db	15
    77                           
    78                           ;initializer for _PORT_REG_ADD_arr
    79   001756  80                 	db	128
    80   001757  0F                 	db	15
    81   001758  81                 	db	129
    82   001759  0F                 	db	15
    83   00175A  82                 	db	130
    84   00175B  0F                 	db	15
    85   00175C  83                 	db	131
    86   00175D  0F                 	db	15
    87   00175E  84                 	db	132
    88   00175F  0F                 	db	15
    89                           
    90                           ;initializer for _TRIS_REG_ADD_arr
    91   001760  92                 	db	146
    92   001761  0F                 	db	15
    93   001762  93                 	db	147
    94   001763  0F                 	db	15
    95   001764  94                 	db	148
    96   001765  0F                 	db	15
    97   001766  95                 	db	149
    98   001767  0F                 	db	15
    99   001768  96                 	db	150
   100   001769  0F                 	db	15
   101                           
   102                           ;initializer for _push_btn_2
   103   00176A  02                 	db	2
   104   00176B  01                 	db	1
   105   00176C  01                 	db	1
   106   00176D  00                 	db	0
   107   00176E  00                 	db	0
   108   00176F  00                 	db	0
   109   001770  01                 	db	1
   110                           
   111                           ;initializer for _push_btn_1
   112   001771  02                 	db	2
   113   001772  00                 	db	0
   114   001773  01                 	db	1
   115   001774  01                 	db	1
   116   001775  01                 	db	1
   117   001776  01                 	db	1
   118   001777  00                 	db	0
   119                           
   120                           ;initializer for _led_2
   121   001778  02                 	db	2
   122   001779  03                 	db	3
   123   00177A  00                 	db	0
   124                           
   125                           ;initializer for _led_1
   126   00177B  02                 	db	2
   127   00177C  02                 	db	2
   128   00177D  00                 	db	0
   129                           
   130                           ;initializer for _button_2_state
   131   00177E  01                 	db	1
   132                           
   133                           ;initializer for _button_1_state
   134   00177F  01                 	db	1
   135   000000                     _LATA	set	3977
   136   000000                     _PORTE	set	3972
   137   000000                     _PORTD	set	3971
   138   000000                     _PORTC	set	3970
   139   000000                     _PORTB	set	3969
   140   000000                     _PORTA	set	3968
   141   000000                     _TRISA	set	3986
   142   000000                     _TRISE	set	3990
   143   000000                     _TRISD	set	3989
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _LATE	set	3981
   147   000000                     _LATD	set	3980
   148   000000                     _LATC	set	3979
   149   000000                     _LATB	set	3978
   150                           
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154   001716                     __pcinit:
   155                           	callstack 0
   156   001716                     start_initialization:
   157                           	callstack 0
   158   001716                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to COMRAM (52 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163   001716  0E4C               	movlw	low __pidataCOMRAM
   164   001718  6EF6               	movwf	tblptrl,c
   165   00171A  0E17               	movlw	high __pidataCOMRAM
   166   00171C  6EF7               	movwf	tblptrh,c
   167   00171E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168   001720  6EF8               	movwf	tblptru,c
   169   001722  EE00  F001         	lfsr	0,__pdataCOMRAM
   170   001726  EE10 F034          	lfsr	1,52
   171   00172A                     copy_data0:
   172   00172A  0009               	tblrd		*+
   173   00172C  CFF5 FFEE          	movff	tablat,postinc0
   174   001730  50E5               	movf	postdec1,w,c
   175   001732  50E1               	movf	fsr1l,w,c
   176   001734  E1FA               	bnz	copy_data0
   177                           
   178                           ; Clear objects allocated to COMRAM (16 bytes)
   179   001736  EE00  F047         	lfsr	0,__pbssCOMRAM
   180   00173A  0E10               	movlw	16
   181   00173C                     clear_0:
   182   00173C  6AEE               	clrf	postinc0,c
   183   00173E  06E8               	decf	wreg,f,c
   184   001740  E1FD               	bnz	clear_0
   185   001742                     end_of_initialization:
   186                           	callstack 0
   187   001742                     __end_of__initialization:
   188                           	callstack 0
   189   001742  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190   001744  6EF8               	movwf	tblptru,c
   191   001746  0100               	movlb	0
   192   001748  EF4A  F00A         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195   000047                     __pbssCOMRAM:
   196                           	callstack 0
   197   000047                     led_toggle@F2942:
   198                           	callstack 0
   199   000047                     	ds	5
   200   00004C                     led_on_off@F2938:
   201                           	callstack 0
   202   00004C                     	ds	5
   203   000051                     led_init@F2933:
   204                           	callstack 0
   205   000051                     	ds	5
   206   000056                     _flag:
   207                           	callstack 0
   208   000056                     	ds	1
   209                           
   210                           	psect	dataCOMRAM
   211   000001                     __pdataCOMRAM:
   212                           	callstack 0
   213   000001                     _LAT_REG_ADD_arr:
   214                           	callstack 0
   215   000001                     	ds	10
   216   00000B                     _PORT_REG_ADD_arr:
   217                           	callstack 0
   218   00000B                     	ds	10
   219   000015                     _TRIS_REG_ADD_arr:
   220                           	callstack 0
   221   000015                     	ds	10
   222   00001F                     _push_btn_2:
   223                           	callstack 0
   224   00001F                     	ds	7
   225   000026                     _push_btn_1:
   226                           	callstack 0
   227   000026                     	ds	7
   228   00002D                     _led_2:
   229                           	callstack 0
   230   00002D                     	ds	3
   231   000030                     _led_1:
   232                           	callstack 0
   233   000030                     	ds	3
   234   000033                     _button_2_state:
   235                           	callstack 0
   236   000033                     	ds	1
   237   000034                     _button_1_state:
   238                           	callstack 0
   239   000034                     	ds	1
   240                           
   241                           	psect	cstackCOMRAM
   242   000035                     __pcstackCOMRAM:
   243                           	callstack 0
   244   000035                     gpio_pin_read_logic@p_pin_config:
   245                           	callstack 0
   246   000035                     set_bit_uint8@p_reg:
   247                           	callstack 0
   248   000035                     clear_bit_uint8@p_reg:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x0
   252   000035                     	ds	1
   253   000036                     gpio_pin_read_logic@p_logic:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x1
   257   000036                     	ds	1
   258   000037                     ??_gpio_pin_read_logic:
   259   000037                     set_bit_uint8@d_IDX_BIT_X:
   260                           	callstack 0
   261   000037                     clear_bit_uint8@d_IDX_BIT_X:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265   000037                     	ds	1
   266   000038                     ??_set_bit_uint8:
   267   000038                     ??_clear_bit_uint8:
   268                           
   269                           ; 1 bytes @ 0x3
   270   000038                     	ds	1
   271   000039                     gpio_pin_read_logic@bit_mask:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x4
   275   000039                     	ds	1
   276   00003A                     push_button_read@p_push_button:
   277                           	callstack 0
   278   00003A                     gpio_pin_direction_initialize@p_pin_config:
   279                           	callstack 0
   280   00003A                     gpio_pin_write_logic@p_pin_config:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x5
   284   00003A                     	ds	1
   285   00003B                     ??_gpio_pin_direction_initialize:
   286   00003B                     push_button_read@p_button_state:
   287                           	callstack 0
   288   00003B                     gpio_pin_write_logic@d_logic_desired:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x6
   292   00003B                     	ds	1
   293   00003C                     ??_gpio_pin_write_logic:
   294   00003C                     
   295                           ; 1 bytes @ 0x7
   296   00003C                     	ds	1
   297   00003D                     push_button_init@p_push_button:
   298                           	callstack 0
   299   00003D                     push_button_read@btn_pin_logic:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x8
   303   00003D                     	ds	1
   304   00003E                     led_on_off@p_led:
   305                           	callstack 0
   306   00003E                     gpio_pin_initialize@p_pin_config:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x9
   310   00003E                     	ds	1
   311   00003F                     ??_gpio_pin_initialize:
   312   00003F                     led_on_off@led_status:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xA
   316   00003F                     	ds	1
   317   000040                     led_on_off@led_pin:
   318                           	callstack 0
   319                           
   320                           ; 5 bytes @ 0xB
   321   000040                     	ds	1
   322   000041                     led_init@p_led:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xC
   326   000041                     	ds	1
   327   000042                     led_init@led_pin:
   328                           	callstack 0
   329                           
   330                           ; 5 bytes @ 0xD
   331   000042                     	ds	5
   332   000047                     
   333                           ; 1 bytes @ 0x12
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 32 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  2  423[None  ] int 
   346 ;; Registers used:
   347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called: 5
   359 ;; This function calls:
   360 ;;		_app_init
   361 ;;		_led_on_off
   362 ;;		_push_button_read
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text0
   369   001494                     __ptext0:
   370                           	callstack 0
   371   001494                     _main:
   372                           	callstack 26
   373   001494                     
   374                           ;main.c: 35:     app_init();
   375   001494  ECC0  F00B         	call	_app_init	;wreg free
   376   001498                     l424:
   377                           
   378                           ;main.c: 38: {;main.c: 39:     push_button_read(&push_btn_1, &button_1_state);
   379   001498  0E26               	movlw	low _push_btn_1
   380   00149A  6E3A               	movwf	push_button_read@p_push_button^0,c
   381   00149C  0E34               	movlw	low _button_1_state
   382   00149E  6E3B               	movwf	push_button_read@p_button_state^0,c
   383   0014A0  ECA4  F00A         	call	_push_button_read	;wreg free
   384   0014A4                     
   385                           ;main.c: 40:     if ((BUTTON_PRESSED == button_1_state) && (LOW == flag))
   386   0014A4  5034               	movf	_button_1_state^0,w,c
   387   0014A6  A4D8               	btfss	status,2,c
   388   0014A8  EF58  F00A         	goto	u631
   389   0014AC  EF5A  F00A         	goto	u630
   390   0014B0                     u631:
   391   0014B0  EF6C  F00A         	goto	l1837
   392   0014B4                     u630:
   393   0014B4  5056               	movf	_flag^0,w,c
   394   0014B6  A4D8               	btfss	status,2,c
   395   0014B8  EF60  F00A         	goto	u641
   396   0014BC  EF62  F00A         	goto	u640
   397   0014C0                     u641:
   398   0014C0  EF6C  F00A         	goto	l1837
   399   0014C4                     u640:
   400   0014C4                     
   401                           ;main.c: 41:     {;main.c: 42:         led_on_off(&led_1, LED_ON);
   402   0014C4  0E30               	movlw	low _led_1
   403   0014C6  6E3E               	movwf	led_on_off@p_led^0,c
   404   0014C8  0E01               	movlw	1
   405   0014CA  6E3F               	movwf	led_on_off@led_status^0,c
   406   0014CC  EC61  F00B         	call	_led_on_off	;wreg free
   407   0014D0                     
   408                           ;main.c: 43:         flag = HIGH;
   409   0014D0  0E01               	movlw	1
   410   0014D2  6E56               	movwf	_flag^0,c
   411                           
   412                           ;main.c: 44:     }
   413   0014D4  EF84  F00A         	goto	l1845
   414   0014D8                     l1837:
   415   0014D8  5034               	movf	_button_1_state^0,w,c
   416   0014DA  A4D8               	btfss	status,2,c
   417   0014DC  EF72  F00A         	goto	u651
   418   0014E0  EF74  F00A         	goto	u650
   419   0014E4                     u651:
   420   0014E4  EF84  F00A         	goto	l1845
   421   0014E8                     u650:
   422   0014E8  0456               	decf	_flag^0,w,c
   423   0014EA  A4D8               	btfss	status,2,c
   424   0014EC  EF7A  F00A         	goto	u661
   425   0014F0  EF7C  F00A         	goto	u660
   426   0014F4                     u661:
   427   0014F4  EF84  F00A         	goto	l1845
   428   0014F8                     u660:
   429   0014F8                     
   430                           ;main.c: 46:     {;main.c: 47:         led_on_off(&led_1, LED_OFF);
   431   0014F8  0E30               	movlw	low _led_1
   432   0014FA  6E3E               	movwf	led_on_off@p_led^0,c
   433   0014FC  0E00               	movlw	0
   434   0014FE  6E3F               	movwf	led_on_off@led_status^0,c
   435   001500  EC61  F00B         	call	_led_on_off	;wreg free
   436   001504                     
   437                           ;main.c: 48:         flag = LOW;
   438   001504  0E00               	movlw	0
   439   001506  6E56               	movwf	_flag^0,c
   440   001508                     l1845:
   441                           
   442                           ;main.c: 51:     push_button_read(&push_btn_2, &button_2_state);
   443   001508  0E1F               	movlw	low _push_btn_2
   444   00150A  6E3A               	movwf	push_button_read@p_push_button^0,c
   445   00150C  0E33               	movlw	low _button_2_state
   446   00150E  6E3B               	movwf	push_button_read@p_button_state^0,c
   447   001510  ECA4  F00A         	call	_push_button_read	;wreg free
   448                           
   449                           ;main.c: 52:     if (BUTTON_PRESSED == button_2_state)
   450   001514  5033               	movf	_button_2_state^0,w,c
   451   001516  A4D8               	btfss	status,2,c
   452   001518  EF90  F00A         	goto	u671
   453   00151C  EF92  F00A         	goto	u670
   454   001520                     u671:
   455   001520  EF9A  F00A         	goto	l1849
   456   001524                     u670:
   457   001524                     
   458                           ;main.c: 53:     {;main.c: 54:         led_on_off(&led_2, LED_ON);
   459   001524  0E2D               	movlw	low _led_2
   460   001526  6E3E               	movwf	led_on_off@p_led^0,c
   461   001528  0E01               	movlw	1
   462   00152A  6E3F               	movwf	led_on_off@led_status^0,c
   463   00152C  EC61  F00B         	call	_led_on_off	;wreg free
   464                           
   465                           ;main.c: 55:     }
   466   001530  EF4C  F00A         	goto	l424
   467   001534                     l1849:
   468                           
   469                           ;main.c: 57:     {;main.c: 58:        led_on_off(&led_2, LED_OFF);
   470   001534  0E2D               	movlw	low _led_2
   471   001536  6E3E               	movwf	led_on_off@p_led^0,c
   472   001538  0E00               	movlw	0
   473   00153A  6E3F               	movwf	led_on_off@led_status^0,c
   474   00153C  EC61  F00B         	call	_led_on_off	;wreg free
   475   001540  EF4C  F00A         	goto	l424
   476   001544  EF00  F000         	goto	start
   477   001548                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _push_button_read *****************
   481 ;; Defined at:
   482 ;;		line 43 in file "_HAL/Drivers/button/button.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  p_push_butto    1    5[COMRAM] PTR struct .
   485 ;;		 -> push_btn_2(7), push_btn_1(7), 
   486 ;;  p_button_sta    1    6[COMRAM] PTR enum E2914
   487 ;;		 -> button_2_state(1), button_1_state(1), 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  btn_pin_logi    1    8[COMRAM] enum E2821
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      enum E2804
   492 ;; Registers used:
   493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        4 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		_gpio_pin_read_logic
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514   001548                     __ptext1:
   515                           	callstack 0
   516   001548                     _push_button_read:
   517                           	callstack 29
   518   001548                     
   519                           ;_HAL/Drivers/button/button.c: 43: std_return push_button_read(push_button_t * p_push_bu
      +                          tton, button_state_t * p_button_state);_HAL/Drivers/button/button.c: 44: {;_HAL/Drivers/
      +                          button/button.c: 45:   if(((void*)0) == p_push_button || ((void*)0) == p_button_state)
   520   001548  503A               	movf	push_button_read@p_push_button^0,w,c
   521   00154A  B4D8               	btfsc	status,2,c
   522   00154C  EFAA  F00A         	goto	u551
   523   001550  EFAC  F00A         	goto	u550
   524   001554                     u551:
   525   001554  EFF5  F00A         	goto	l106
   526   001558                     u550:
   527   001558  503B               	movf	push_button_read@p_button_state^0,w,c
   528   00155A  A4D8               	btfss	status,2,c
   529   00155C  EFB2  F00A         	goto	u561
   530   001560  EFB4  F00A         	goto	u560
   531   001564                     u561:
   532   001564  EFB8  F00A         	goto	l1791
   533   001568                     u560:
   534   001568  EFF5  F00A         	goto	l106
   535   00156C                     l105:
   536                           
   537                           ;_HAL/Drivers/button/button.c: 46:     {;_HAL/Drivers/button/button.c: 47:         retur
      +                          n EXCUTION_NOT_OK;;	Return value of _push_button_read is never used
   538   00156C  EFF5  F00A         	goto	l106
   539   001570                     l1791:
   540                           
   541                           ;_HAL/Drivers/button/button.c: 50:     {;_HAL/Drivers/button/button.c: 51:       *p_butt
      +                          on_state = BUTTON_RELEASED;
   542   001570  503B               	movf	push_button_read@p_button_state^0,w,c
   543   001572  6ED9               	movwf	fsr2l,c
   544   001574  6ADA               	clrf	fsr2h,c
   545   001576  0E01               	movlw	1
   546   001578  6EDF               	movwf	indf2,c
   547   00157A                     
   548                           ;_HAL/Drivers/button/button.c: 53:       LOGIC_t btn_pin_logic;;_HAL/Drivers/button/butt
      +                          on.c: 54:       gpio_pin_read_logic(&p_push_button->button_pin,&btn_pin_logic);
   549   00157A  C03A  F035         	movff	push_button_read@p_push_button,gpio_pin_read_logic@p_pin_config
   550   00157E  0E3D               	movlw	low push_button_read@btn_pin_logic
   551   001580  6E36               	movwf	gpio_pin_read_logic@p_logic^0,c
   552   001582  EC01  F008         	call	_gpio_pin_read_logic	;wreg free
   553   001586                     
   554                           ;_HAL/Drivers/button/button.c: 56:       if((HIGH == btn_pin_logic) && (BUTTON_ACTIVE_HI
      +                          GH == p_push_button->button_active_state))
   555   001586  043D               	decf	push_button_read@btn_pin_logic^0,w,c
   556   001588  A4D8               	btfss	status,2,c
   557   00158A  EFC9  F00A         	goto	u571
   558   00158E  EFCB  F00A         	goto	u570
   559   001592                     u571:
   560   001592  EFDE  F00A         	goto	l1801
   561   001596                     u570:
   562   001596  503A               	movf	push_button_read@p_push_button^0,w,c
   563   001598  6ED9               	movwf	fsr2l,c
   564   00159A  6ADA               	clrf	fsr2h,c
   565   00159C  0E06               	movlw	6
   566   00159E  26D9               	addwf	fsr2l,f,c
   567   0015A0  04DE               	decf	postinc2,w,c
   568   0015A2  A4D8               	btfss	status,2,c
   569   0015A4  EFD6  F00A         	goto	u581
   570   0015A8  EFD8  F00A         	goto	u580
   571   0015AC                     u581:
   572   0015AC  EFDE  F00A         	goto	l1801
   573   0015B0                     u580:
   574   0015B0                     l1799:
   575                           
   576                           ;_HAL/Drivers/button/button.c: 57:       {;_HAL/Drivers/button/button.c: 58:           *
      +                          p_button_state = BUTTON_PRESSED;
   577   0015B0  503B               	movf	push_button_read@p_button_state^0,w,c
   578   0015B2  6ED9               	movwf	fsr2l,c
   579   0015B4  6ADA               	clrf	fsr2h,c
   580   0015B6  6ADF               	clrf	indf2,c
   581                           
   582                           ;_HAL/Drivers/button/button.c: 59:       }
   583   0015B8  EFF5  F00A         	goto	l106
   584   0015BC                     l1801:
   585   0015BC  503D               	movf	push_button_read@btn_pin_logic^0,w,c
   586   0015BE  A4D8               	btfss	status,2,c
   587   0015C0  EFE4  F00A         	goto	u591
   588   0015C4  EFE6  F00A         	goto	u590
   589   0015C8                     u591:
   590   0015C8  EFB6  F00A         	goto	l105
   591   0015CC                     u590:
   592   0015CC  503A               	movf	push_button_read@p_push_button^0,w,c
   593   0015CE  6ED9               	movwf	fsr2l,c
   594   0015D0  6ADA               	clrf	fsr2h,c
   595   0015D2  0E06               	movlw	6
   596   0015D4  26D9               	addwf	fsr2l,f,c
   597   0015D6  50DF               	movf	indf2,w,c
   598   0015D8  A4D8               	btfss	status,2,c
   599   0015DA  EFF1  F00A         	goto	u601
   600   0015DE  EFF3  F00A         	goto	u600
   601   0015E2                     u601:
   602   0015E2  EFB6  F00A         	goto	l105
   603   0015E6                     u600:
   604   0015E6  EFD8  F00A         	goto	l1799
   605   0015EA                     l106:
   606   0015EA  0012               	return		;funcret
   607   0015EC                     __end_of_push_button_read:
   608                           	callstack 0
   609                           
   610 ;; *************** function _gpio_pin_read_logic *****************
   611 ;; Defined at:
   612 ;;		line 325 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  p_pin_config    1    0[COMRAM] PTR const struct .
   615 ;;		 -> push_btn_2$button_pin(5), push_btn_2(7), push_btn_1$button_pin(5), push_btn_1(7), 
   616 ;;  p_logic         1    1[COMRAM] PTR enum E2821
   617 ;;		 -> push_button_read@btn_pin_logic(1), 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  bit_mask        1    4[COMRAM] enum E2825
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      enum E2804
   622 ;; Registers used:
   623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        5 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_push_button_read
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text2
   643   001002                     __ptext2:
   644                           	callstack 0
   645   001002                     _gpio_pin_read_logic:
   646                           	callstack 29
   647   001002                     
   648                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 330:     if(((void*)0) == p_pin_config)
   649   001002  5035               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   650   001004  A4D8               	btfss	status,2,c
   651   001006  EF07  F008         	goto	u521
   652   00100A  EF09  F008         	goto	u520
   653   00100E                     u521:
   654   00100E  EF2B  F008         	goto	l1769
   655   001012                     u520:
   656   001012  EF7E  F008         	goto	l312
   657   001016                     l1749:
   658                           
   659                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 340:                 bit_mask = MASK_BIT_0;
   660   001016  0E01               	movlw	1
   661   001018  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   662                           
   663                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 341:                 break;
   664   00101A  EF5D  F008         	goto	l1771
   665   00101E                     l1751:
   666                           
   667                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 343:                 bit_mask = MASK_BIT_1;
   668   00101E  0E02               	movlw	2
   669   001020  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   670                           
   671                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 344:                 break;
   672   001022  EF5D  F008         	goto	l1771
   673   001026                     l1753:
   674                           
   675                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 346:                 bit_mask = MASK_BIT_2;
   676   001026  0E04               	movlw	4
   677   001028  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   678                           
   679                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 347:                 break;
   680   00102A  EF5D  F008         	goto	l1771
   681   00102E                     l1755:
   682                           
   683                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 349:                 bit_mask = MASK_BIT_3;
   684   00102E  0E08               	movlw	8
   685   001030  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   686                           
   687                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 350:                 break;
   688   001032  EF5D  F008         	goto	l1771
   689   001036                     l1757:
   690                           
   691                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 352:                 bit_mask = MASK_BIT_4;
   692   001036  0E10               	movlw	16
   693   001038  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   694                           
   695                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 353:                 break;
   696   00103A  EF5D  F008         	goto	l1771
   697   00103E                     l1759:
   698                           
   699                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 355:                 bit_mask = MASK_BIT_5;
   700   00103E  0E20               	movlw	32
   701   001040  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   702                           
   703                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 356:                 break;
   704   001042  EF5D  F008         	goto	l1771
   705   001046                     l1761:
   706                           
   707                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 358:                 bit_mask = MASK_BIT_6;
   708   001046  0E40               	movlw	64
   709   001048  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   710                           
   711                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 359:                 break;
   712   00104A  EF5D  F008         	goto	l1771
   713   00104E                     l1763:
   714                           
   715                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 361:                 bit_mask = MASK_BIT_7;
   716   00104E  0E80               	movlw	128
   717   001050  6E39               	movwf	gpio_pin_read_logic@bit_mask^0,c
   718                           
   719                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 362:                 break;
   720   001052  EF5D  F008         	goto	l1771
   721   001056                     l1769:
   722   001056  5035               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   723   001058  6ED9               	movwf	fsr2l,c
   724   00105A  6ADA               	clrf	fsr2h,c
   725   00105C  0E01               	movlw	1
   726   00105E  26D9               	addwf	fsr2l,f,c
   727   001060  50DF               	movf	indf2,w,c
   728   001062  6E37               	movwf	??_gpio_pin_read_logic^0,c
   729   001064  6A38               	clrf	(??_gpio_pin_read_logic+1)^0,c
   730                           
   731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   732                           ; Switch size 1, requested type "simple"
   733                           ; Number of cases is 1, Range of values is 0 to 0
   734                           ; switch strategies available:
   735                           ; Name         Instructions Cycles
   736                           ; simple_byte            4     3 (average)
   737                           ;	Chosen strategy is simple_byte
   738   001066  5038               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   739   001068  0A00               	xorlw	0	; case 0
   740   00106A  B4D8               	btfsc	status,2,c
   741   00106C  EF3A  F008         	goto	l1875
   742   001070  EF7E  F008         	goto	l312
   743   001074                     l1875:
   744                           
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 8, Range of values is 0 to 7
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte           25    13 (average)
   750                           ;	Chosen strategy is simple_byte
   751   001074  5037               	movf	??_gpio_pin_read_logic^0,w,c
   752   001076  0A00               	xorlw	0	; case 0
   753   001078  B4D8               	btfsc	status,2,c
   754   00107A  EF0B  F008         	goto	l1749
   755   00107E  0A01               	xorlw	1	; case 1
   756   001080  B4D8               	btfsc	status,2,c
   757   001082  EF0F  F008         	goto	l1751
   758   001086  0A03               	xorlw	3	; case 2
   759   001088  B4D8               	btfsc	status,2,c
   760   00108A  EF13  F008         	goto	l1753
   761   00108E  0A01               	xorlw	1	; case 3
   762   001090  B4D8               	btfsc	status,2,c
   763   001092  EF17  F008         	goto	l1755
   764   001096  0A07               	xorlw	7	; case 4
   765   001098  B4D8               	btfsc	status,2,c
   766   00109A  EF1B  F008         	goto	l1757
   767   00109E  0A01               	xorlw	1	; case 5
   768   0010A0  B4D8               	btfsc	status,2,c
   769   0010A2  EF1F  F008         	goto	l1759
   770   0010A6  0A03               	xorlw	3	; case 6
   771   0010A8  B4D8               	btfsc	status,2,c
   772   0010AA  EF23  F008         	goto	l1761
   773   0010AE  0A01               	xorlw	1	; case 7
   774   0010B0  B4D8               	btfsc	status,2,c
   775   0010B2  EF27  F008         	goto	l1763
   776   0010B6  EF7E  F008         	goto	l312
   777   0010BA                     l1771:
   778                           
   779                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 368:         *p_logic = ((*(PORT_REG_ADD_arr[p_pin_config->p
      +                          ort]) & bit_mask) == bit_mask);
   780   0010BA  5036               	movf	gpio_pin_read_logic@p_logic^0,w,c
   781   0010BC  6ED9               	movwf	fsr2l,c
   782   0010BE  6ADA               	clrf	fsr2h,c
   783   0010C0  5035               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   784   0010C2  6EE1               	movwf	fsr1l,c
   785   0010C4  6AE2               	clrf	fsr1h,c
   786   0010C6  50E7               	movf	indf1,w,c
   787   0010C8  0D02               	mullw	2
   788   0010CA  50F3               	movf	243,w,c
   789   0010CC  0F0B               	addlw	low _PORT_REG_ADD_arr
   790   0010CE  6EE1               	movwf	fsr1l,c
   791   0010D0  6AE2               	clrf	fsr1h,c
   792   0010D2  CFE6 F037          	movff	postinc1,??_gpio_pin_read_logic
   793   0010D6  CFE5 F038          	movff	postdec1,??_gpio_pin_read_logic+1
   794   0010DA  C037  FFE1         	movff	??_gpio_pin_read_logic,fsr1l
   795   0010DE  C038  FFE2         	movff	??_gpio_pin_read_logic+1,fsr1h
   796   0010E2  50E7               	movf	indf1,w,c
   797   0010E4  1439               	andwf	gpio_pin_read_logic@bit_mask^0,w,c	;volatile
   798   0010E6  1839               	xorwf	gpio_pin_read_logic@bit_mask^0,w,c
   799   0010E8  B4D8               	btfsc	status,2,c
   800   0010EA  EF79  F008         	goto	u531
   801   0010EE  EF7C  F008         	goto	u530
   802   0010F2                     u531:
   803   0010F2  0E01               	movlw	1
   804   0010F4  EF7D  F008         	goto	u540
   805   0010F8                     u530:
   806   0010F8  0E00               	movlw	0
   807   0010FA                     u540:
   808   0010FA  6EDF               	movwf	indf2,c
   809   0010FC                     l312:
   810   0010FC  0012               	return		;funcret
   811   0010FE                     __end_of_gpio_pin_read_logic:
   812                           	callstack 0
   813                           
   814 ;; *************** function _led_on_off *****************
   815 ;; Defined at:
   816 ;;		line 50 in file "_HAL/Drivers/LED/LED.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  p_led           1    9[COMRAM] PTR struct .
   819 ;;		 -> led_2(3), led_1(3), 
   820 ;;  led_status      1   10[COMRAM] enum E2914
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  led_pin         5   11[COMRAM] struct .
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      enum E2804
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;Total ram usage:        7 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 2
   839 ;; This function calls:
   840 ;;		_gpio_pin_write_logic
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text3
   847   0016C2                     __ptext3:
   848                           	callstack 0
   849   0016C2                     _led_on_off:
   850                           	callstack 28
   851   0016C2                     
   852                           ;_HAL/Drivers/LED/LED.c: 50: std_return led_on_off(led_t * p_led, led_status_t led_statu
      +                          s);_HAL/Drivers/LED/LED.c: 51: {;_HAL/Drivers/LED/LED.c: 52:     if(((void*)0) == p_led 
      +                          )
   853   0016C2  503E               	movf	led_on_off@p_led^0,w,c
   854   0016C4  A4D8               	btfss	status,2,c
   855   0016C6  EF67  F00B         	goto	u611
   856   0016CA  EF69  F00B         	goto	u610
   857   0016CE                     u611:
   858   0016CE  EF6B  F00B         	goto	l1813
   859   0016D2                     u610:
   860   0016D2  EF8A  F00B         	goto	l164
   861   0016D6                     l1813:
   862                           
   863                           ;_HAL/Drivers/LED/LED.c: 57:     {;_HAL/Drivers/LED/LED.c: 58:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
   864   0016D6  EE20  F04C         	lfsr	2,led_on_off@F2938
   865   0016DA  EE10  F040         	lfsr	1,led_on_off@led_pin
   866   0016DE  0E04               	movlw	4
   867   0016E0                     u621:
   868   0016E0  CFDB FFE3          	movff	plusw2,plusw1
   869   0016E4  06E8               	decf	wreg,f,c
   870   0016E6  E2FC               	bc	u621
   871   0016E8  503E               	movf	led_on_off@p_led^0,w,c
   872   0016EA  6ED9               	movwf	fsr2l,c
   873   0016EC  6ADA               	clrf	fsr2h,c
   874   0016EE  50DF               	movf	indf2,w,c
   875   0016F0  6E40               	movwf	led_on_off@led_pin^0,c
   876   0016F2  503E               	movf	led_on_off@p_led^0,w,c
   877   0016F4  6ED9               	movwf	fsr2l,c
   878   0016F6  6ADA               	clrf	fsr2h,c
   879   0016F8  0E01               	movlw	1
   880   0016FA  26D9               	addwf	fsr2l,f,c
   881   0016FC  50DF               	movf	indf2,w,c
   882   0016FE  6E41               	movwf	(led_on_off@led_pin+1)^0,c
   883   001700  0E00               	movlw	0
   884   001702  6E42               	movwf	(led_on_off@led_pin+2)^0,c
   885   001704  C03F  F043         	movff	led_on_off@led_status,led_on_off@led_pin+3
   886   001708                     
   887                           ;_HAL/Drivers/LED/LED.c: 63:        gpio_pin_write_logic(&led_pin,led_status);
   888   001708  0E40               	movlw	low led_on_off@led_pin
   889   00170A  6E3A               	movwf	gpio_pin_write_logic@p_pin_config^0,c
   890   00170C  C03F  F03B         	movff	led_on_off@led_status,gpio_pin_write_logic@d_logic_desired
   891   001710  EC7F  F008         	call	_gpio_pin_write_logic	;wreg free
   892   001714                     l164:
   893   001714  0012               	return		;funcret
   894   001716                     __end_of_led_on_off:
   895                           	callstack 0
   896                           
   897 ;; *************** function _app_init *****************
   898 ;; Defined at:
   899 ;;		line 29 in file "_APP/application.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 4
   920 ;; This function calls:
   921 ;;		_led_init
   922 ;;		_push_button_init
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text4
   929   001780                     __ptext4:
   930                           	callstack 0
   931   001780                     _app_init:
   932                           	callstack 26
   933   001780                     
   934                           ;_APP/application.c: 30: push_button_init(&push_btn_1);
   935   001780  0E26               	movlw	low _push_btn_1
   936   001782  6E3D               	movwf	push_button_init@p_push_button^0,c
   937   001784  ECD1  F00B         	call	_push_button_init	;wreg free
   938                           
   939                           ;_APP/application.c: 31: push_button_init(&push_btn_2);
   940   001788  0E1F               	movlw	low _push_btn_2
   941   00178A  6E3D               	movwf	push_button_init@p_push_button^0,c
   942   00178C  ECD1  F00B         	call	_push_button_init	;wreg free
   943   001790                     
   944                           ;_APP/application.c: 32: led_init(&led_1);
   945   001790  0E30               	movlw	low _led_1
   946   001792  6E41               	movwf	led_init@p_led^0,c
   947   001794  EC34  F00B         	call	_led_init	;wreg free
   948   001798                     
   949                           ;_APP/application.c: 33: led_init(&led_2);
   950   001798  0E2D               	movlw	low _led_2
   951   00179A  6E41               	movwf	led_init@p_led^0,c
   952   00179C  EC34  F00B         	call	_led_init	;wreg free
   953   0017A0  0012               	return		;funcret
   954   0017A2                     __end_of_app_init:
   955                           	callstack 0
   956                           
   957 ;; *************** function _push_button_init *****************
   958 ;; Defined at:
   959 ;;		line 28 in file "_HAL/Drivers/button/button.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  p_push_butto    1    8[COMRAM] PTR struct .
   962 ;;		 -> push_btn_2(7), push_btn_1(7), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      enum E2804
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 2
   981 ;; This function calls:
   982 ;;		_gpio_pin_direction_initialize
   983 ;; This function is called by:
   984 ;;		_app_init
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text5
   989   0017A2                     __ptext5:
   990                           	callstack 0
   991   0017A2                     _push_button_init:
   992                           	callstack 27
   993   0017A2                     
   994                           ;_HAL/Drivers/button/button.c: 28: std_return push_button_init(push_button_t * p_push_bu
      +                          tton);_HAL/Drivers/button/button.c: 29: {;_HAL/Drivers/button/button.c: 30:   if(((void*
      +                          )0) == p_push_button)
   995   0017A2  503D               	movf	push_button_init@p_push_button^0,w,c
   996   0017A4  A4D8               	btfss	status,2,c
   997   0017A6  EFD7  F00B         	goto	u491
   998   0017AA  EFD9  F00B         	goto	u490
   999   0017AE                     u491:
  1000   0017AE  EFDB  F00B         	goto	l1719
  1001   0017B2                     u490:
  1002   0017B2  EFDF  F00B         	goto	l99
  1003   0017B6                     l1719:
  1004                           
  1005                           ;_HAL/Drivers/button/button.c: 35:     {;_HAL/Drivers/button/button.c: 36:        gpio_p
      +                          in_direction_initialize(&p_push_button->button_pin);
  1006   0017B6  C03D  F03A         	movff	push_button_init@p_push_button,gpio_pin_direction_initialize@p_pin_config
  1007   0017BA  ECEA  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1008   0017BE                     l99:
  1009   0017BE  0012               	return		;funcret
  1010   0017C0                     __end_of_push_button_init:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _led_init *****************
  1014 ;; Defined at:
  1015 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  p_led           1   12[COMRAM] PTR struct .
  1018 ;;		 -> led_2(3), led_1(3), 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  led_pin         5   13[COMRAM] struct .
  1021 ;;  func_return     1    0        enum E2804
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      enum E2804
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1031 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;Total ram usage:        6 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 3
  1038 ;; This function calls:
  1039 ;;		_gpio_pin_initialize
  1040 ;; This function is called by:
  1041 ;;		_app_init
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text6
  1046   001668                     __ptext6:
  1047                           	callstack 0
  1048   001668                     _led_init:
  1049                           	callstack 26
  1050   001668                     
  1051                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
  1052   001668  5041               	movf	led_init@p_led^0,w,c
  1053   00166A  A4D8               	btfss	status,2,c
  1054   00166C  EF3A  F00B         	goto	u501
  1055   001670  EF3C  F00B         	goto	u500
  1056   001674                     u501:
  1057   001674  EF3E  F00B         	goto	l1729
  1058   001678                     u500:
  1059   001678  EF60  F00B         	goto	l157
  1060   00167C                     l1729:
  1061                           
  1062                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
  1063   00167C  EE20  F051         	lfsr	2,led_init@F2933
  1064   001680  EE10  F042         	lfsr	1,led_init@led_pin
  1065   001684  0E04               	movlw	4
  1066   001686                     u511:
  1067   001686  CFDB FFE3          	movff	plusw2,plusw1
  1068   00168A  06E8               	decf	wreg,f,c
  1069   00168C  E2FC               	bc	u511
  1070   00168E  5041               	movf	led_init@p_led^0,w,c
  1071   001690  6ED9               	movwf	fsr2l,c
  1072   001692  6ADA               	clrf	fsr2h,c
  1073   001694  50DF               	movf	indf2,w,c
  1074   001696  6E42               	movwf	led_init@led_pin^0,c
  1075   001698  5041               	movf	led_init@p_led^0,w,c
  1076   00169A  6ED9               	movwf	fsr2l,c
  1077   00169C  6ADA               	clrf	fsr2h,c
  1078   00169E  0E01               	movlw	1
  1079   0016A0  26D9               	addwf	fsr2l,f,c
  1080   0016A2  50DF               	movf	indf2,w,c
  1081   0016A4  6E43               	movwf	(led_init@led_pin+1)^0,c
  1082   0016A6  0E00               	movlw	0
  1083   0016A8  6E44               	movwf	(led_init@led_pin+2)^0,c
  1084   0016AA  5041               	movf	led_init@p_led^0,w,c
  1085   0016AC  6ED9               	movwf	fsr2l,c
  1086   0016AE  6ADA               	clrf	fsr2h,c
  1087   0016B0  0E02               	movlw	2
  1088   0016B2  26D9               	addwf	fsr2l,f,c
  1089   0016B4  50DF               	movf	indf2,w,c
  1090   0016B6  6E45               	movwf	(led_init@led_pin+3)^0,c
  1091   0016B8  0E42               	movlw	low led_init@led_pin
  1092   0016BA  6E3E               	movwf	gpio_pin_initialize@p_pin_config^0,c
  1093   0016BC  ECF6  F00A         	call	_gpio_pin_initialize	;wreg free
  1094   0016C0                     l157:
  1095   0016C0  0012               	return		;funcret
  1096   0016C2                     __end_of_led_init:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _gpio_pin_initialize *****************
  1100 ;; Defined at:
  1101 ;;		line 293 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  p_pin_config    1    9[COMRAM] PTR struct .
  1104 ;;		 -> led_init@led_pin(5), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      enum E2804
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;Total ram usage:        3 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 2
  1123 ;; This function calls:
  1124 ;;		_gpio_pin_direction_initialize
  1125 ;;		_gpio_pin_write_logic
  1126 ;; This function is called by:
  1127 ;;		_led_init
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text7
  1132   0015EC                     __ptext7:
  1133                           	callstack 0
  1134   0015EC                     _gpio_pin_initialize:
  1135                           	callstack 26
  1136   0015EC                     
  1137                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 293: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 294: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 297:     if(((void*)0)
      +                           == p_pin_config)
  1138   0015EC  503E               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1139   0015EE  A4D8               	btfss	status,2,c
  1140   0015F0  EFFC  F00A         	goto	u481
  1141   0015F4  EFFE  F00A         	goto	u480
  1142   0015F8                     u481:
  1143   0015F8  EF18  F00B         	goto	l1703
  1144   0015FC                     u480:
  1145   0015FC                     l1685:
  1146                           
  1147                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:         return EX
      +                          CUTION_NOT_OK;
  1148   0015FC  0E01               	movlw	1
  1149   0015FE  EF33  F00B         	goto	l302
  1150   001602                     l1691:
  1151                           
  1152                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 306:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1153   001602  C03E  F03A         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1154   001606  ECEA  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1155                           
  1156                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 break;
  1157   00160A  EF32  F00B         	goto	l1705
  1158   00160E                     l1693:
  1159                           
  1160                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 309:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1161   00160E  C03E  F03A         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1162   001612  ECEA  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1163                           
  1164                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
  1165   001616  C03E  F03A         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
  1166   00161A  503E               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1167   00161C  6ED9               	movwf	fsr2l,c
  1168   00161E  6ADA               	clrf	fsr2h,c
  1169   001620  0E03               	movlw	3
  1170   001622  26D9               	addwf	fsr2l,f,c
  1171   001624  50DF               	movf	indf2,w,c
  1172   001626  6E3B               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1173   001628  EC7F  F008         	call	_gpio_pin_write_logic	;wreg free
  1174                           
  1175                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 break;
  1176   00162C  EF32  F00B         	goto	l1705
  1177   001630                     l1703:
  1178   001630  503E               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1179   001632  6ED9               	movwf	fsr2l,c
  1180   001634  6ADA               	clrf	fsr2h,c
  1181   001636  0E02               	movlw	2
  1182   001638  26D9               	addwf	fsr2l,f,c
  1183   00163A  50DF               	movf	indf2,w,c
  1184   00163C  6E3F               	movwf	??_gpio_pin_initialize^0,c
  1185   00163E  6A40               	clrf	(??_gpio_pin_initialize+1)^0,c
  1186                           
  1187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1188                           ; Switch size 1, requested type "simple"
  1189                           ; Number of cases is 1, Range of values is 0 to 0
  1190                           ; switch strategies available:
  1191                           ; Name         Instructions Cycles
  1192                           ; simple_byte            4     3 (average)
  1193                           ;	Chosen strategy is simple_byte
  1194   001640  5040               	movf	(??_gpio_pin_initialize+1)^0,w,c
  1195   001642  0A00               	xorlw	0	; case 0
  1196   001644  B4D8               	btfsc	status,2,c
  1197   001646  EF27  F00B         	goto	l1877
  1198   00164A  EFFE  F00A         	goto	l1685
  1199   00164E                     l1877:
  1200                           
  1201                           ; Switch size 1, requested type "simple"
  1202                           ; Number of cases is 2, Range of values is 0 to 1
  1203                           ; switch strategies available:
  1204                           ; Name         Instructions Cycles
  1205                           ; simple_byte            7     4 (average)
  1206                           ;	Chosen strategy is simple_byte
  1207   00164E  503F               	movf	??_gpio_pin_initialize^0,w,c
  1208   001650  0A00               	xorlw	0	; case 0
  1209   001652  B4D8               	btfsc	status,2,c
  1210   001654  EF07  F00B         	goto	l1693
  1211   001658  0A01               	xorlw	1	; case 1
  1212   00165A  B4D8               	btfsc	status,2,c
  1213   00165C  EF01  F00B         	goto	l1691
  1214   001660  EFFE  F00A         	goto	l1685
  1215   001664                     l1705:
  1216                           
  1217                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 317:     return EXCUTION_OK;
  1218   001664  0E00               	movlw	0
  1219   001666                     l302:
  1220   001666  0012               	return		;funcret
  1221   001668                     __end_of_gpio_pin_initialize:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _gpio_pin_write_logic *****************
  1225 ;; Defined at:
  1226 ;;		line 204 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  p_pin_config    1    5[COMRAM] PTR struct .
  1229 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), 
  1230 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      enum E2804
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        4 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 1
  1249 ;; This function calls:
  1250 ;;		_clear_bit_uint8
  1251 ;;		_set_bit_uint8
  1252 ;; This function is called by:
  1253 ;;		_led_on_off
  1254 ;;		_gpio_pin_initialize
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text8
  1259   0010FE                     __ptext8:
  1260                           	callstack 0
  1261   0010FE                     _gpio_pin_write_logic:
  1262                           	callstack 28
  1263   0010FE                     
  1264                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 204: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 205:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 206: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 207:     if(
      +                          (((void*)0) == p_pin_config) ||
  1265   0010FE  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1266   001100  B4D8               	btfsc	status,2,c
  1267   001102  EF85  F008         	goto	u441
  1268   001106  EF87  F008         	goto	u440
  1269   00110A                     u441:
  1270   00110A  EFF7  F008         	goto	l276
  1271   00110E                     u440:
  1272   00110E  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1273   001110  6ED9               	movwf	fsr2l,c
  1274   001112  6ADA               	clrf	fsr2h,c
  1275   001114  0E05               	movlw	5
  1276   001116  60DF               	cpfslt	indf2,c
  1277   001118  EF90  F008         	goto	u451
  1278   00111C  EF92  F008         	goto	u450
  1279   001120                     u451:
  1280   001120  EFF7  F008         	goto	l276
  1281   001124                     u450:
  1282   001124  043B               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1283   001126  B4D8               	btfsc	status,2,c
  1284   001128  EF98  F008         	goto	u461
  1285   00112C  EF9A  F008         	goto	u460
  1286   001130                     u461:
  1287   001130  EFE2  F008         	goto	l1677
  1288   001134                     u460:
  1289   001134  503B               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1290   001136  B4D8               	btfsc	status,2,c
  1291   001138  EFA0  F008         	goto	u471
  1292   00113C  EFA2  F008         	goto	u470
  1293   001140                     u471:
  1294   001140  EFE2  F008         	goto	l1677
  1295   001144                     u470:
  1296   001144  EFF7  F008         	goto	l276
  1297   001148                     l1665:
  1298                           
  1299                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 218:                p_pin_config->logic = d_logic_desired;
  1300   001148  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1301   00114A  6ED9               	movwf	fsr2l,c
  1302   00114C  6ADA               	clrf	fsr2h,c
  1303   00114E  0E03               	movlw	3
  1304   001150  26D9               	addwf	fsr2l,f,c
  1305   001152  C03B  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1306   001156                     
  1307                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1308   001156  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1309   001158  6ED9               	movwf	fsr2l,c
  1310   00115A  6ADA               	clrf	fsr2h,c
  1311   00115C  50DF               	movf	indf2,w,c
  1312   00115E  0D02               	mullw	2
  1313   001160  50F3               	movf	243,w,c
  1314   001162  0F01               	addlw	low _LAT_REG_ADD_arr
  1315   001164  6ED9               	movwf	fsr2l,c
  1316   001166  6ADA               	clrf	fsr2h,c
  1317   001168  CFDE F035          	movff	postinc2,set_bit_uint8@p_reg
  1318   00116C  CFDD F036          	movff	postdec2,set_bit_uint8@p_reg+1
  1319   001170  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1320   001172  6ED9               	movwf	fsr2l,c
  1321   001174  6ADA               	clrf	fsr2h,c
  1322   001176  0E01               	movlw	1
  1323   001178  26D9               	addwf	fsr2l,f,c
  1324   00117A  50DF               	movf	indf2,w,c
  1325   00117C  6E37               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1326   00117E  ECF8  F008         	call	_set_bit_uint8	;wreg free
  1327                           
  1328                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                break;
  1329   001182  EFF7  F008         	goto	l276
  1330   001186                     l1669:
  1331                           
  1332                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 223:                p_pin_config->logic = d_logic_desired;
  1333   001186  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1334   001188  6ED9               	movwf	fsr2l,c
  1335   00118A  6ADA               	clrf	fsr2h,c
  1336   00118C  0E03               	movlw	3
  1337   00118E  26D9               	addwf	fsr2l,f,c
  1338   001190  C03B  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1339   001194                     
  1340                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1341   001194  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1342   001196  6ED9               	movwf	fsr2l,c
  1343   001198  6ADA               	clrf	fsr2h,c
  1344   00119A  50DF               	movf	indf2,w,c
  1345   00119C  0D02               	mullw	2
  1346   00119E  50F3               	movf	243,w,c
  1347   0011A0  0F01               	addlw	low _LAT_REG_ADD_arr
  1348   0011A2  6ED9               	movwf	fsr2l,c
  1349   0011A4  6ADA               	clrf	fsr2h,c
  1350   0011A6  CFDE F035          	movff	postinc2,clear_bit_uint8@p_reg
  1351   0011AA  CFDD F036          	movff	postdec2,clear_bit_uint8@p_reg+1
  1352   0011AE  503A               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1353   0011B0  6ED9               	movwf	fsr2l,c
  1354   0011B2  6ADA               	clrf	fsr2h,c
  1355   0011B4  0E01               	movlw	1
  1356   0011B6  26D9               	addwf	fsr2l,f,c
  1357   0011B8  50DF               	movf	indf2,w,c
  1358   0011BA  6E37               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1359   0011BC  EC71  F009         	call	_clear_bit_uint8	;wreg free
  1360                           
  1361                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                break;
  1362   0011C0  EFF7  F008         	goto	l276
  1363   0011C4                     l1677:
  1364   0011C4  503B               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1365   0011C6  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1366   0011C8  6A3D               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 1, Range of values is 0 to 0
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte            4     3 (average)
  1374                           ;	Chosen strategy is simple_byte
  1375   0011CA  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1376   0011CC  0A00               	xorlw	0	; case 0
  1377   0011CE  B4D8               	btfsc	status,2,c
  1378   0011D0  EFEC  F008         	goto	l1879
  1379   0011D4  EFF7  F008         	goto	l276
  1380   0011D8                     l1879:
  1381                           
  1382                           ; Switch size 1, requested type "simple"
  1383                           ; Number of cases is 2, Range of values is 0 to 1
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte            7     4 (average)
  1387                           ;	Chosen strategy is simple_byte
  1388   0011D8  503C               	movf	??_gpio_pin_write_logic^0,w,c
  1389   0011DA  0A00               	xorlw	0	; case 0
  1390   0011DC  B4D8               	btfsc	status,2,c
  1391   0011DE  EFC3  F008         	goto	l1669
  1392   0011E2  0A01               	xorlw	1	; case 1
  1393   0011E4  B4D8               	btfsc	status,2,c
  1394   0011E6  EFA4  F008         	goto	l1665
  1395   0011EA  EFF7  F008         	goto	l276
  1396   0011EE                     l276:
  1397   0011EE  0012               	return		;funcret
  1398   0011F0                     __end_of_gpio_pin_write_logic:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _gpio_pin_direction_initialize *****************
  1402 ;; Defined at:
  1403 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1406 ;;		 -> led_init@led_pin(5), push_btn_2$button_pin(5), push_btn_2(7), push_btn_1$button_pin(5), 
  1407 ;;		 -> push_btn_1(7), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      enum E2804
  1412 ;; Registers used:
  1413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        3 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 1
  1426 ;; This function calls:
  1427 ;;		_clear_bit_uint8
  1428 ;;		_set_bit_uint8
  1429 ;; This function is called by:
  1430 ;;		_push_button_init
  1431 ;;		_gpio_pin_initialize
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text9
  1436   0013D4                     __ptext9:
  1437                           	callstack 0
  1438   0013D4                     _gpio_pin_direction_initialize:
  1439                           	callstack 27
  1440   0013D4                     
  1441                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1)){
  1442   0013D4  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1443   0013D6  B4D8               	btfsc	status,2,c
  1444   0013D8  EFF0  F009         	goto	u421
  1445   0013DC  EFF2  F009         	goto	u420
  1446   0013E0                     u421:
  1447   0013E0  EF49  F00A         	goto	l264
  1448   0013E4                     u420:
  1449   0013E4  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1450   0013E6  6ED9               	movwf	fsr2l,c
  1451   0013E8  6ADA               	clrf	fsr2h,c
  1452   0013EA  0E04               	movlw	4
  1453   0013EC  64DF               	cpfsgt	indf2,c
  1454   0013EE  EFFB  F009         	goto	u431
  1455   0013F2  EFFD  F009         	goto	u430
  1456   0013F6                     u431:
  1457   0013F6  EF2F  F00A         	goto	l1649
  1458   0013FA                     u430:
  1459   0013FA  EF49  F00A         	goto	l264
  1460   0013FE                     l1641:
  1461                           
  1462                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 183:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1463   0013FE  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1464   001400  6ED9               	movwf	fsr2l,c
  1465   001402  6ADA               	clrf	fsr2h,c
  1466   001404  50DF               	movf	indf2,w,c
  1467   001406  0D02               	mullw	2
  1468   001408  50F3               	movf	243,w,c
  1469   00140A  0F15               	addlw	low _TRIS_REG_ADD_arr
  1470   00140C  6ED9               	movwf	fsr2l,c
  1471   00140E  6ADA               	clrf	fsr2h,c
  1472   001410  CFDE F035          	movff	postinc2,clear_bit_uint8@p_reg
  1473   001414  CFDD F036          	movff	postdec2,clear_bit_uint8@p_reg+1
  1474   001418  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1475   00141A  6ED9               	movwf	fsr2l,c
  1476   00141C  6ADA               	clrf	fsr2h,c
  1477   00141E  0E01               	movlw	1
  1478   001420  26D9               	addwf	fsr2l,f,c
  1479   001422  50DF               	movf	indf2,w,c
  1480   001424  6E37               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1481   001426  EC71  F009         	call	_clear_bit_uint8	;wreg free
  1482                           
  1483                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                break;
  1484   00142A  EF49  F00A         	goto	l264
  1485   00142E                     l1643:
  1486                           
  1487                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 187:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1488   00142E  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1489   001430  6ED9               	movwf	fsr2l,c
  1490   001432  6ADA               	clrf	fsr2h,c
  1491   001434  50DF               	movf	indf2,w,c
  1492   001436  0D02               	mullw	2
  1493   001438  50F3               	movf	243,w,c
  1494   00143A  0F15               	addlw	low _TRIS_REG_ADD_arr
  1495   00143C  6ED9               	movwf	fsr2l,c
  1496   00143E  6ADA               	clrf	fsr2h,c
  1497   001440  CFDE F035          	movff	postinc2,set_bit_uint8@p_reg
  1498   001444  CFDD F036          	movff	postdec2,set_bit_uint8@p_reg+1
  1499   001448  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1500   00144A  6ED9               	movwf	fsr2l,c
  1501   00144C  6ADA               	clrf	fsr2h,c
  1502   00144E  0E01               	movlw	1
  1503   001450  26D9               	addwf	fsr2l,f,c
  1504   001452  50DF               	movf	indf2,w,c
  1505   001454  6E37               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1506   001456  ECF8  F008         	call	_set_bit_uint8	;wreg free
  1507                           
  1508                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                break;
  1509   00145A  EF49  F00A         	goto	l264
  1510   00145E                     l1649:
  1511   00145E  503A               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1512   001460  6ED9               	movwf	fsr2l,c
  1513   001462  6ADA               	clrf	fsr2h,c
  1514   001464  0E02               	movlw	2
  1515   001466  26D9               	addwf	fsr2l,f,c
  1516   001468  50DF               	movf	indf2,w,c
  1517   00146A  6E3B               	movwf	??_gpio_pin_direction_initialize^0,c
  1518   00146C  6A3C               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1519                           
  1520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1521                           ; Switch size 1, requested type "simple"
  1522                           ; Number of cases is 1, Range of values is 0 to 0
  1523                           ; switch strategies available:
  1524                           ; Name         Instructions Cycles
  1525                           ; simple_byte            4     3 (average)
  1526                           ;	Chosen strategy is simple_byte
  1527   00146E  503C               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1528   001470  0A00               	xorlw	0	; case 0
  1529   001472  B4D8               	btfsc	status,2,c
  1530   001474  EF3E  F00A         	goto	l1881
  1531   001478  EF49  F00A         	goto	l264
  1532   00147C                     l1881:
  1533                           
  1534                           ; Switch size 1, requested type "simple"
  1535                           ; Number of cases is 2, Range of values is 0 to 1
  1536                           ; switch strategies available:
  1537                           ; Name         Instructions Cycles
  1538                           ; simple_byte            7     4 (average)
  1539                           ;	Chosen strategy is simple_byte
  1540   00147C  503B               	movf	??_gpio_pin_direction_initialize^0,w,c
  1541   00147E  0A00               	xorlw	0	; case 0
  1542   001480  B4D8               	btfsc	status,2,c
  1543   001482  EFFF  F009         	goto	l1641
  1544   001486  0A01               	xorlw	1	; case 1
  1545   001488  B4D8               	btfsc	status,2,c
  1546   00148A  EF17  F00A         	goto	l1643
  1547   00148E  EF49  F00A         	goto	l264
  1548   001492                     l264:
  1549   001492  0012               	return		;funcret
  1550   001494                     __end_of_gpio_pin_direction_initialize:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _set_bit_uint8 *****************
  1554 ;; Defined at:
  1555 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1558 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1559 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1560 ;;		 -> TRISB(1), TRISA(1), 
  1561 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      enum E2804
  1566 ;; Registers used:
  1567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1573 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;Total ram usage:        5 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_gpio_pin_direction_initialize
  1583 ;;		_gpio_pin_write_logic
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text10
  1588   0011F0                     __ptext10:
  1589                           	callstack 0
  1590   0011F0                     _set_bit_uint8:
  1591                           	callstack 28
  1592   0011F0                     
  1593                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1594   0011F0  5035               	movf	set_bit_uint8@p_reg^0,w,c
  1595   0011F2  1036               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1596   0011F4  A4D8               	btfss	status,2,c
  1597   0011F6  EFFF  F008         	goto	u401
  1598   0011FA  EF01  F009         	goto	u400
  1599   0011FE                     u401:
  1600   0011FE  EF43  F009         	goto	l1597
  1601   001202                     u400:
  1602   001202  EF70  F009         	goto	l214
  1603   001206                     l1577:
  1604                           
  1605                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1606   001206  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1607   00120A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1608   00120E  0E00               	movlw	0
  1609   001210  80DB               	bsf	plusw2,0,c
  1610                           
  1611                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1612   001212  EF70  F009         	goto	l214
  1613   001216                     l1579:
  1614                           
  1615                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1616   001216  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1617   00121A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1618   00121E  0E00               	movlw	0
  1619   001220  82DB               	bsf	plusw2,1,c
  1620                           
  1621                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1622   001222  EF70  F009         	goto	l214
  1623   001226                     l1581:
  1624                           
  1625                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1626   001226  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1627   00122A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1628   00122E  0E00               	movlw	0
  1629   001230  84DB               	bsf	plusw2,2,c
  1630                           
  1631                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1632   001232  EF70  F009         	goto	l214
  1633   001236                     l1583:
  1634                           
  1635                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1636   001236  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1637   00123A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1638   00123E  0E00               	movlw	0
  1639   001240  86DB               	bsf	plusw2,3,c
  1640                           
  1641                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1642   001242  EF70  F009         	goto	l214
  1643   001246                     l1585:
  1644                           
  1645                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1646   001246  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1647   00124A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1648   00124E  0E00               	movlw	0
  1649   001250  88DB               	bsf	plusw2,4,c
  1650                           
  1651                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1652   001252  EF70  F009         	goto	l214
  1653   001256                     l1587:
  1654                           
  1655                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1656   001256  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1657   00125A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1658   00125E  0E00               	movlw	0
  1659   001260  8ADB               	bsf	plusw2,5,c
  1660                           
  1661                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1662   001262  EF70  F009         	goto	l214
  1663   001266                     l1589:
  1664                           
  1665                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1666   001266  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1667   00126A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1668   00126E  0E00               	movlw	0
  1669   001270  8CDB               	bsf	plusw2,6,c
  1670                           
  1671                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1672   001272  EF70  F009         	goto	l214
  1673   001276                     l1591:
  1674                           
  1675                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1676   001276  C035  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1677   00127A  C036  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1678   00127E  0E00               	movlw	0
  1679   001280  8EDB               	bsf	plusw2,7,c
  1680                           
  1681                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1682   001282  EF70  F009         	goto	l214
  1683   001286                     l1597:
  1684   001286  5037               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1685   001288  6E38               	movwf	??_set_bit_uint8^0,c
  1686   00128A  6A39               	clrf	(??_set_bit_uint8+1)^0,c
  1687                           
  1688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 1, Range of values is 0 to 0
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            4     3 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695   00128C  5039               	movf	(??_set_bit_uint8+1)^0,w,c
  1696   00128E  0A00               	xorlw	0	; case 0
  1697   001290  B4D8               	btfsc	status,2,c
  1698   001292  EF4D  F009         	goto	l1883
  1699   001296  EF70  F009         	goto	l214
  1700   00129A                     l1883:
  1701                           
  1702                           ; Switch size 1, requested type "simple"
  1703                           ; Number of cases is 8, Range of values is 0 to 7
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte           25    13 (average)
  1707                           ;	Chosen strategy is simple_byte
  1708   00129A  5038               	movf	??_set_bit_uint8^0,w,c
  1709   00129C  0A00               	xorlw	0	; case 0
  1710   00129E  B4D8               	btfsc	status,2,c
  1711   0012A0  EF03  F009         	goto	l1577
  1712   0012A4  0A01               	xorlw	1	; case 1
  1713   0012A6  B4D8               	btfsc	status,2,c
  1714   0012A8  EF0B  F009         	goto	l1579
  1715   0012AC  0A03               	xorlw	3	; case 2
  1716   0012AE  B4D8               	btfsc	status,2,c
  1717   0012B0  EF13  F009         	goto	l1581
  1718   0012B4  0A01               	xorlw	1	; case 3
  1719   0012B6  B4D8               	btfsc	status,2,c
  1720   0012B8  EF1B  F009         	goto	l1583
  1721   0012BC  0A07               	xorlw	7	; case 4
  1722   0012BE  B4D8               	btfsc	status,2,c
  1723   0012C0  EF23  F009         	goto	l1585
  1724   0012C4  0A01               	xorlw	1	; case 5
  1725   0012C6  B4D8               	btfsc	status,2,c
  1726   0012C8  EF2B  F009         	goto	l1587
  1727   0012CC  0A03               	xorlw	3	; case 6
  1728   0012CE  B4D8               	btfsc	status,2,c
  1729   0012D0  EF33  F009         	goto	l1589
  1730   0012D4  0A01               	xorlw	1	; case 7
  1731   0012D6  B4D8               	btfsc	status,2,c
  1732   0012D8  EF3B  F009         	goto	l1591
  1733   0012DC  EF70  F009         	goto	l214
  1734   0012E0                     l214:
  1735   0012E0  0012               	return		;funcret
  1736   0012E2                     __end_of_set_bit_uint8:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _clear_bit_uint8 *****************
  1740 ;; Defined at:
  1741 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1744 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1745 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1746 ;;		 -> TRISB(1), TRISA(1), 
  1747 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      enum E2804
  1752 ;; Registers used:
  1753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;Total ram usage:        5 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_gpio_pin_direction_initialize
  1769 ;;		_gpio_pin_write_logic
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text11
  1774   0012E2                     __ptext11:
  1775                           	callstack 0
  1776   0012E2                     _clear_bit_uint8:
  1777                           	callstack 28
  1778   0012E2                     
  1779                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1780   0012E2  5035               	movf	clear_bit_uint8@p_reg^0,w,c
  1781   0012E4  1036               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1782   0012E6  A4D8               	btfss	status,2,c
  1783   0012E8  EF78  F009         	goto	u411
  1784   0012EC  EF7A  F009         	goto	u410
  1785   0012F0                     u411:
  1786   0012F0  EFBC  F009         	goto	l1629
  1787   0012F4                     u410:
  1788   0012F4  EFE9  F009         	goto	l230
  1789   0012F8                     l1609:
  1790                           
  1791                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  1792   0012F8  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1793   0012FC  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1794   001300  0EFE               	movlw	254
  1795   001302  16DF               	andwf	indf2,f,c
  1796                           
  1797                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1798   001304  EFE9  F009         	goto	l230
  1799   001308                     l1611:
  1800                           
  1801                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  1802   001308  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1803   00130C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1804   001310  0EFD               	movlw	253
  1805   001312  16DF               	andwf	indf2,f,c
  1806                           
  1807                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  1808   001314  EFE9  F009         	goto	l230
  1809   001318                     l1613:
  1810                           
  1811                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  1812   001318  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1813   00131C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1814   001320  0EFB               	movlw	251
  1815   001322  16DF               	andwf	indf2,f,c
  1816                           
  1817                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  1818   001324  EFE9  F009         	goto	l230
  1819   001328                     l1615:
  1820                           
  1821                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  1822   001328  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1823   00132C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1824   001330  0EF7               	movlw	247
  1825   001332  16DF               	andwf	indf2,f,c
  1826                           
  1827                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  1828   001334  EFE9  F009         	goto	l230
  1829   001338                     l1617:
  1830                           
  1831                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  1832   001338  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1833   00133C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1834   001340  0EEF               	movlw	239
  1835   001342  16DF               	andwf	indf2,f,c
  1836                           
  1837                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  1838   001344  EFE9  F009         	goto	l230
  1839   001348                     l1619:
  1840                           
  1841                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  1842   001348  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1843   00134C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1844   001350  0EDF               	movlw	223
  1845   001352  16DF               	andwf	indf2,f,c
  1846                           
  1847                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  1848   001354  EFE9  F009         	goto	l230
  1849   001358                     l1621:
  1850                           
  1851                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  1852   001358  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1853   00135C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1854   001360  0EBF               	movlw	191
  1855   001362  16DF               	andwf	indf2,f,c
  1856                           
  1857                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  1858   001364  EFE9  F009         	goto	l230
  1859   001368                     l1623:
  1860                           
  1861                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  1862   001368  C035  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1863   00136C  C036  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1864   001370  0E7F               	movlw	127
  1865   001372  16DF               	andwf	indf2,f,c
  1866                           
  1867                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  1868   001374  EFE9  F009         	goto	l230
  1869   001378                     l1629:
  1870   001378  5037               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1871   00137A  6E38               	movwf	??_clear_bit_uint8^0,c
  1872   00137C  6A39               	clrf	(??_clear_bit_uint8+1)^0,c
  1873                           
  1874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1875                           ; Switch size 1, requested type "simple"
  1876                           ; Number of cases is 1, Range of values is 0 to 0
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte            4     3 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881   00137E  5039               	movf	(??_clear_bit_uint8+1)^0,w,c
  1882   001380  0A00               	xorlw	0	; case 0
  1883   001382  B4D8               	btfsc	status,2,c
  1884   001384  EFC6  F009         	goto	l1885
  1885   001388  EFE9  F009         	goto	l230
  1886   00138C                     l1885:
  1887                           
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 8, Range of values is 0 to 7
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte           25    13 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894   00138C  5038               	movf	??_clear_bit_uint8^0,w,c
  1895   00138E  0A00               	xorlw	0	; case 0
  1896   001390  B4D8               	btfsc	status,2,c
  1897   001392  EF7C  F009         	goto	l1609
  1898   001396  0A01               	xorlw	1	; case 1
  1899   001398  B4D8               	btfsc	status,2,c
  1900   00139A  EF84  F009         	goto	l1611
  1901   00139E  0A03               	xorlw	3	; case 2
  1902   0013A0  B4D8               	btfsc	status,2,c
  1903   0013A2  EF8C  F009         	goto	l1613
  1904   0013A6  0A01               	xorlw	1	; case 3
  1905   0013A8  B4D8               	btfsc	status,2,c
  1906   0013AA  EF94  F009         	goto	l1615
  1907   0013AE  0A07               	xorlw	7	; case 4
  1908   0013B0  B4D8               	btfsc	status,2,c
  1909   0013B2  EF9C  F009         	goto	l1617
  1910   0013B6  0A01               	xorlw	1	; case 5
  1911   0013B8  B4D8               	btfsc	status,2,c
  1912   0013BA  EFA4  F009         	goto	l1619
  1913   0013BE  0A03               	xorlw	3	; case 6
  1914   0013C0  B4D8               	btfsc	status,2,c
  1915   0013C2  EFAC  F009         	goto	l1621
  1916   0013C6  0A01               	xorlw	1	; case 7
  1917   0013C8  B4D8               	btfsc	status,2,c
  1918   0013CA  EFB4  F009         	goto	l1623
  1919   0013CE  EFE9  F009         	goto	l230
  1920   0013D2                     l230:
  1921   0013D2  0012               	return		;funcret
  1922   0013D4                     __end_of_clear_bit_uint8:
  1923                           	callstack 0
  1924                           
  1925                           	psect	smallconst
  1926   001000                     __psmallconst:
  1927                           	callstack 0
  1928   001000  00                 	db	0
  1929   001001  00                 	db	0	; dummy byte at the end
  1930   000000                     
  1931                           	psect	rparam
  1932   000000                     
  1933                           	psect	config
  1934                           
  1935                           ; Padding undefined space
  1936   300000                     	org	3145728
  1937   300000  FF                 	db	255
  1938                           
  1939                           ;Config register CONFIG1H @ 0x300001
  1940                           ;	Oscillator Selection bits
  1941                           ;	OSC = HS, HS oscillator
  1942                           ;	Fail-Safe Clock Monitor Enable bit
  1943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1944                           ;	Internal/External Oscillator Switchover bit
  1945                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1946   300001                     	org	3145729
  1947   300001  02                 	db	2
  1948                           
  1949                           ;Config register CONFIG2L @ 0x300002
  1950                           ;	Power-up Timer Enable bit
  1951                           ;	PWRT = OFF, PWRT disabled
  1952                           ;	Brown-out Reset Enable bits
  1953                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1954                           ;	Brown Out Reset Voltage bits
  1955                           ;	BORV = 1, 
  1956   300002                     	org	3145730
  1957   300002  09                 	db	9
  1958                           
  1959                           ;Config register CONFIG2H @ 0x300003
  1960                           ;	Watchdog Timer Enable bit
  1961                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1962                           ;	Watchdog Timer Postscale Select bits
  1963                           ;	WDTPS = 32768, 1:32768
  1964   300003                     	org	3145731
  1965   300003  1E                 	db	30
  1966                           
  1967                           ; Padding undefined space
  1968   300004                     	org	3145732
  1969   300004  FF                 	db	255
  1970                           
  1971                           ;Config register CONFIG3H @ 0x300005
  1972                           ;	CCP2 MUX bit
  1973                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1974                           ;	PORTB A/D Enable bit
  1975                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1976                           ;	Low-Power Timer1 Oscillator Enable bit
  1977                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1978                           ;	MCLR Pin Enable bit
  1979                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1980   300005                     	org	3145733
  1981   300005  81                 	db	129
  1982                           
  1983                           ;Config register CONFIG4L @ 0x300006
  1984                           ;	Stack Full/Underflow Reset Enable bit
  1985                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1986                           ;	Single-Supply ICSP Enable bit
  1987                           ;	LVP = OFF, Single-Supply ICSP disabled
  1988                           ;	Extended Instruction Set Enable bit
  1989                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1990                           ;	Background Debugger Enable bit
  1991                           ;	DEBUG = 0x1, unprogrammed default
  1992   300006                     	org	3145734
  1993   300006  81                 	db	129
  1994                           
  1995                           ; Padding undefined space
  1996   300007                     	org	3145735
  1997   300007  FF                 	db	255
  1998                           
  1999                           ;Config register CONFIG5L @ 0x300008
  2000                           ;	Code Protection bit
  2001                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2002                           ;	Code Protection bit
  2003                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2004                           ;	Code Protection bit
  2005                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2006                           ;	Code Protection bit
  2007                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2008   300008                     	org	3145736
  2009   300008  0F                 	db	15
  2010                           
  2011                           ;Config register CONFIG5H @ 0x300009
  2012                           ;	Boot Block Code Protection bit
  2013                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2014                           ;	Data EEPROM Code Protection bit
  2015                           ;	CPD = OFF, Data EEPROM not code-protected
  2016   300009                     	org	3145737
  2017   300009  C0                 	db	192
  2018                           
  2019                           ;Config register CONFIG6L @ 0x30000A
  2020                           ;	Write Protection bit
  2021                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2022                           ;	Write Protection bit
  2023                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2024                           ;	Write Protection bit
  2025                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2026                           ;	Write Protection bit
  2027                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2028   30000A                     	org	3145738
  2029   30000A  0F                 	db	15
  2030                           
  2031                           ;Config register CONFIG6H @ 0x30000B
  2032                           ;	Configuration Register Write Protection bit
  2033                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2034                           ;	Boot Block Write Protection bit
  2035                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2036                           ;	Data EEPROM Write Protection bit
  2037                           ;	WRTD = OFF, Data EEPROM not write-protected
  2038   30000B                     	org	3145739
  2039   30000B  E0                 	db	224
  2040                           
  2041                           ;Config register CONFIG7L @ 0x30000C
  2042                           ;	Table Read Protection bit
  2043                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2044                           ;	Table Read Protection bit
  2045                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2046                           ;	Table Read Protection bit
  2047                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2048                           ;	Table Read Protection bit
  2049                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2050   30000C                     	org	3145740
  2051   30000C  0F                 	db	15
  2052                           
  2053                           ;Config register CONFIG7H @ 0x30000D
  2054                           ;	Boot Block Table Read Protection bit
  2055                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2056   30000D                     	org	3145741
  2057   30000D  40                 	db	64
  2058                           tosu	equ	0xFFF
  2059                           tosh	equ	0xFFE
  2060                           tosl	equ	0xFFD
  2061                           stkptr	equ	0xFFC
  2062                           pclatu	equ	0xFFB
  2063                           pclath	equ	0xFFA
  2064                           pcl	equ	0xFF9
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           indf0	equ	0xFEF
  2072                           postinc0	equ	0xFEE
  2073                           postdec0	equ	0xFED
  2074                           preinc0	equ	0xFEC
  2075                           plusw0	equ	0xFEB
  2076                           fsr0h	equ	0xFEA
  2077                           fsr0l	equ	0xFE9
  2078                           wreg	equ	0xFE8
  2079                           indf1	equ	0xFE7
  2080                           postinc1	equ	0xFE6
  2081                           postdec1	equ	0xFE5
  2082                           preinc1	equ	0xFE4
  2083                           plusw1	equ	0xFE3
  2084                           fsr1h	equ	0xFE2
  2085                           fsr1l	equ	0xFE1
  2086                           bsr	equ	0xFE0
  2087                           indf2	equ	0xFDF
  2088                           postinc2	equ	0xFDE
  2089                           postdec2	equ	0xFDD
  2090                           preinc2	equ	0xFDC
  2091                           plusw2	equ	0xFDB
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      86
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> led_init@led_pin(COMRAM[5]), push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), push_btn_2(COMRAM[7]), 
		 -> push_btn_2$button_pin(COMRAM[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_read_logic@p_logic	PTR enum E2821 size(1) Largest target is 1
		 -> push_button_read@btn_pin_logic(COMRAM[1]), 

    gpio_pin_read_logic@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), push_btn_2(COMRAM[7]), push_btn_2$button_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), led_2(COMRAM[3]), 

    led_on_off@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), led_2(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    push_button_init@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_2(COMRAM[7]), 

    push_button_read@p_button_state	PTR enum E2914 size(1) Largest target is 1
		 -> button_1_state(COMRAM[1]), button_2_state(COMRAM[1]), 

    push_button_read@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_2(COMRAM[7]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _push_button_read->_gpio_pin_read_logic
    _led_on_off->_gpio_pin_write_logic
    _app_init->_led_init
    _push_button_init->_gpio_pin_direction_initialize
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8558
                           _app_init
                         _led_on_off
                   _push_button_read
 ---------------------------------------------------------------------------------
 (1) _push_button_read                                     4     2      2     841
                                              5 COMRAM     4     2      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  5     3      2     293
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _led_on_off                                           7     5      2    2461
                                              9 COMRAM     7     5      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    5256
                           _led_init
                   _push_button_init
 ---------------------------------------------------------------------------------
 (2) _push_button_init                                     1     0      1    1626
                                              8 COMRAM     1     0      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _led_init                                             7     6      1    3630
                                             12 COMRAM     6     5      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    3276
                                              9 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 4     2      2    1638
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1430
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _led_init
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
           _clear_bit_uint8
           _set_bit_uint8
         _gpio_pin_write_logic
           _clear_bit_uint8
           _set_bit_uint8
     _push_button_init
       _gpio_pin_direction_initialize
   _led_on_off
     _gpio_pin_write_logic
   _push_button_read
     _gpio_pin_read_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      56       1       67.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      39        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 18 16:52:12 2023

                                       l55 17A0                                         l99 17BE  
      gpio_pin_write_logic@d_logic_desired 003B                                        l105 156C  
                                      l106 15EA                                        l230 13D2  
                                      l214 12E0                                        l302 1666  
                                      l312 10FC                                        l164 1714  
                                      l157 16C0                                        l264 1492  
                                      l424 1498                                        l276 11EE  
                                      u400 1202                                        u401 11FE  
                                      u410 12F4                                        u411 12F0  
                                      u420 13E4                                        u500 1678  
                                      u421 13E0                                        u501 1674  
                                      u430 13FA                                        u431 13F6  
                                      u511 1686                                        u440 110E  
                                      u520 1012                                        u600 15E6  
                                      u441 110A                                        u521 100E  
                                      u601 15E2                                        u450 1124  
                                      u610 16D2                                        u530 10F8  
                                      u451 1120                                        u611 16CE  
                                      u531 10F2                                        u460 1134  
                                      u540 10FA                                        u461 1130  
                                      u621 16E0                                        u470 1144  
                                      u550 1558                                        u630 14B4  
                                      u471 1140                                        u551 1554  
                                      u631 14B0                                        u480 15FC  
                                      u560 1568                                        u640 14C4  
                                      u481 15F8                                        u561 1564  
                                      u641 14C0                                        u490 17B2  
                                      u570 1596                                        u650 14E8  
                                      u491 17AE                                        u571 1592  
                                      u651 14E4                                        u580 15B0  
                                      u660 14F8                                        u581 15AC  
                                      u661 14F4                                        u590 15CC  
                                      u670 1524                                        u591 15C8  
                                      u671 1520             push_button_read@p_button_state 003B  
                                      wreg 0FE8            gpio_pin_read_logic@p_pin_config 0035  
                                     l1611 1308                                       l1603 12E2  
                                     l1621 1358                                       l1613 1318  
                                     l1623 1368                                       l1615 1328  
                                     l1703 1630                                       l1617 1338  
                                     l1609 12F8                                       l1641 13FE  
                                     l1705 1664                                       l1713 17A2  
                                     l1801 15BC                                       l1619 1348  
                                     l1571 11F0                                       l1643 142E  
                                     l1635 13D4                                       l1731 168E  
                                     l1723 1668                                       l1803 15CC  
                                     l1629 1378                                       l1581 1226  
                                     l1637 13E4                                       l1661 1134  
                                     l1733 1698                                       l1821 1704  
                                     l1813 16D6                                       l1591 1276  
                                     l1583 1236                                       l1671 1194  
                                     l1655 10FE                                       l1735 16A6  
                                     l1719 17B6                                       l1823 1708  
                                     l1815 16E8                                       l1807 16C2  
                                     l1751 101E                                       l1743 1002  
                                     l1831 14B4                                       l1585 1246  
                                     l1577 1206                                       l1649 145E  
                                     l1665 1148                                       l1657 110E  
                                     l1737 16AA                                       l1729 167C  
                                     l1817 16F2                                       l1761 1046  
                                     l1753 1026                                       l1841 14F8  
                                     l1833 14C4                                       l1587 1256  
                                     l1579 1216                                       l1667 1156  
                                     l1659 1124                                       l1691 1602  
                                     l1683 15EC                                       l1739 16B8  
                                     l1819 1700                                       l1763 104E  
                                     l1755 102E                                       l1771 10BA  
                                     l1843 1504                                       l1835 14D0  
                                     l1827 1494                                       l1589 1266  
                                     l1597 1286                                       l1669 1186  
                                     l1677 11C4                                       l1693 160E  
                                     l1685 15FC                                       l1781 1790  
                                     l1757 1036                                       l1749 1016  
                                     l1845 1508                                       l1837 14D8  
                                     l1829 14A4                                       l1783 1798  
                                     l1759 103E                                       l1791 1570  
                                     l1847 1524                                       l1839 14E8  
                                     l1881 147C                                       l1769 1056  
                                     l1793 157A                                       l1785 1548  
                                     l1849 1534                                       l1883 129A  
                                     l1779 1780                                       l1875 1074  
                                     l1795 1586                                       l1787 1558  
                                     l1885 138C                                       l1877 164E  
                                     l1797 1596                                       l1879 11D8  
                                     l1799 15B0                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _flag 0056                                       _main 1494  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     prodl 0FF3                                       start 0000  
                             ___param_bank 0000                       _gpio_pin_write_logic 10FE  
                                    ?_main 0035                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                                      _led_1 0030  
                                    _led_2 002D                                      tablat 0FF5  
                          led_on_off@F2938 004C                                      plusw1 0FE3  
                                    plusw2 0FDB                                      status 0FD8  
            push_button_init@p_push_button 003D             ?_gpio_pin_direction_initialize 003A  
                          __initialization 1716                               __end_of_main 1548  
                          led_on_off@p_led 003E                      ?_gpio_pin_write_logic 003A  
                                   ??_main 0047                              __activetblptr 0002  
                         __end_of_app_init 17A2              push_button_read@p_push_button 003A  
                         __end_of_led_init 16C2                                     clear_0 173C  
                                   isa$std 0001                              led_init@F2933 0051  
                        ?_push_button_init 003D                          ?_push_button_read 003A  
                             __pdataCOMRAM 0001                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                         ??_push_button_init 003E  
                       ??_push_button_read 003C                      __end_of_set_bit_uint8 12E2  
                            led_init@p_led 0041                                 __accesstop 0080  
                  __end_of__initialization 1742                              ___rparam_used 0001  
                   ??_gpio_pin_write_logic 003C                             __pcstackCOMRAM 0035  
                         _PORT_REG_ADD_arr 000B           gpio_pin_write_logic@p_pin_config 003A  
                          led_toggle@F2942 0047                 gpio_pin_read_logic@p_logic 0036  
                                ?_app_init 0035                            _LAT_REG_ADD_arr 0001  
                               _led_on_off 16C2                                  ?_led_init 0041  
                        ??_clear_bit_uint8 0038                                    __Hparam 0000  
                                  __Lparam 0000                        _gpio_pin_initialize 15EC  
                      _gpio_pin_read_logic 1002                               __psmallconst 1000  
                                  __pcinit 1716                       led_on_off@led_status 003F  
                                  __ramtop 1000                                    __ptext0 1494  
                                  __ptext1 1548                                    __ptext2 1002  
                                  __ptext3 16C2                                    __ptext4 1780  
                                  __ptext5 17A2                                    __ptext6 1668  
                                  __ptext7 15EC                                    __ptext8 10FE  
                                  __ptext9 13D4            ??_gpio_pin_direction_initialize 003B  
               clear_bit_uint8@d_IDX_BIT_X 0037                       ?_gpio_pin_initialize 003E  
                               ??_app_init 0047                       ?_gpio_pin_read_logic 0035  
                               ??_led_init 0042                       end_of_initialization 1742  
                            __Lmediumconst 0000                       clear_bit_uint8@p_reg 0035  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                      ??_gpio_pin_initialize 003F  
                    ??_gpio_pin_read_logic 0037                                 _push_btn_1 0026  
                               _push_btn_2 001F                                ?_led_on_off 003E  
                            __pidataCOMRAM 174C                          led_on_off@led_pin 0040  
                      start_initialization 1716      __end_of_gpio_pin_direction_initialize 1494  
            _gpio_pin_direction_initialize 13D4                             _button_1_state 0034  
                           _button_2_state 0033            gpio_pin_initialize@p_pin_config 003E  
                          _clear_bit_uint8 12E2                                __pbssCOMRAM 0047  
                              __smallconst 1000                              _set_bit_uint8 11F0  
              gpio_pin_read_logic@bit_mask 0039                           _push_button_init 17A2  
                         _push_button_read 1548                    __end_of_clear_bit_uint8 13D4  
            push_button_read@btn_pin_logic 003D                             ?_set_bit_uint8 0035  
                             ??_led_on_off 0040                                  copy_data0 172A  
                                 __Hrparam 0000                                   __Lrparam 0000  
                       __end_of_led_on_off 1716                __end_of_gpio_pin_initialize 1668  
              __end_of_gpio_pin_read_logic 10FE                   set_bit_uint8@d_IDX_BIT_X 0037  
                                 __ptext10 11F0                                   __ptext11 12E2  
                                 _app_init 1780                                   _led_init 1668  
                                 isa$xinst 0000                           ?_clear_bit_uint8 0035  
                       set_bit_uint8@p_reg 0035                            ??_set_bit_uint8 0038  
             __end_of_gpio_pin_write_logic 11F0  gpio_pin_direction_initialize@p_pin_config 003A  
                 __end_of_push_button_init 17C0                   __end_of_push_button_read 15EC  
                         _TRIS_REG_ADD_arr 0015                            led_init@led_pin 0042  
