

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 18 19:24:00 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 23/03/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   0018B6                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _LAT_REG_ADD_arr
    69   0018B6  89                 	db	137
    70   0018B7  0F                 	db	15
    71   0018B8  8A                 	db	138
    72   0018B9  0F                 	db	15
    73   0018BA  8B                 	db	139
    74   0018BB  0F                 	db	15
    75   0018BC  8C                 	db	140
    76   0018BD  0F                 	db	15
    77   0018BE  8D                 	db	141
    78   0018BF  0F                 	db	15
    79                           
    80                           ;initializer for _PORT_REG_ADD_arr
    81   0018C0  80                 	db	128
    82   0018C1  0F                 	db	15
    83   0018C2  81                 	db	129
    84   0018C3  0F                 	db	15
    85   0018C4  82                 	db	130
    86   0018C5  0F                 	db	15
    87   0018C6  83                 	db	131
    88   0018C7  0F                 	db	15
    89   0018C8  84                 	db	132
    90   0018C9  0F                 	db	15
    91                           
    92                           ;initializer for _TRIS_REG_ADD_arr
    93   0018CA  92                 	db	146
    94   0018CB  0F                 	db	15
    95   0018CC  93                 	db	147
    96   0018CD  0F                 	db	15
    97   0018CE  94                 	db	148
    98   0018CF  0F                 	db	15
    99   0018D0  95                 	db	149
   100   0018D1  0F                 	db	15
   101   0018D2  96                 	db	150
   102   0018D3  0F                 	db	15
   103                           
   104                           ;initializer for _button_2_state
   105   0018D4  01                 	db	1
   106                           
   107                           ;initializer for _push_btn_2
   108   0018D5  02                 	db	2
   109   0018D6  01                 	db	1
   110   0018D7  01                 	db	1
   111   0018D8  00                 	db	0
   112   0018D9  00                 	db	0
   113   0018DA  00                 	db	0
   114   0018DB  01                 	db	1
   115                           
   116                           ;initializer for _push_btn_1
   117   0018DC  02                 	db	2
   118   0018DD  00                 	db	0
   119   0018DE  01                 	db	1
   120   0018DF  01                 	db	1
   121   0018E0  01                 	db	1
   122   0018E1  01                 	db	1
   123   0018E2  00                 	db	0
   124                           
   125                           ;initializer for _led_2
   126   0018E3  02                 	db	2
   127   0018E4  03                 	db	3
   128   0018E5  00                 	db	0
   129                           
   130                           ;initializer for _led_1
   131   0018E6  02                 	db	2
   132   0018E7  02                 	db	2
   133   0018E8  00                 	db	0
   134                           
   135                           ;initializer for _button_1_state
   136   0018E9  01                 	db	1
   137   000000                     _LATA	set	3977
   138   000000                     _PORTE	set	3972
   139   000000                     _PORTD	set	3971
   140   000000                     _PORTC	set	3970
   141   000000                     _PORTB	set	3969
   142   000000                     _PORTA	set	3968
   143   000000                     _TRISA	set	3986
   144   000000                     _TRISE	set	3990
   145   000000                     _TRISD	set	3989
   146   000000                     _TRISC	set	3988
   147   000000                     _TRISB	set	3987
   148   000000                     _LATE	set	3981
   149   000000                     _LATD	set	3980
   150   000000                     _LATC	set	3979
   151   000000                     _LATB	set	3978
   152                           
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   001880                     __pcinit:
   157                           	callstack 0
   158   001880                     start_initialization:
   159                           	callstack 0
   160   001880                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (52 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165   001880  0EB6               	movlw	low __pidataCOMRAM
   166   001882  6EF6               	movwf	tblptrl,c
   167   001884  0E18               	movlw	high __pidataCOMRAM
   168   001886  6EF7               	movwf	tblptrh,c
   169   001888  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170   00188A  6EF8               	movwf	tblptru,c
   171   00188C  EE00  F001         	lfsr	0,__pdataCOMRAM
   172   001890  EE10 F034          	lfsr	1,52
   173   001894                     copy_data0:
   174   001894  0009               	tblrd		*+
   175   001896  CFF5 FFEE          	movff	tablat,postinc0
   176   00189A  50E5               	movf	postdec1,w,c
   177   00189C  50E1               	movf	fsr1l,w,c
   178   00189E  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to COMRAM (22 bytes)
   181   0018A0  EE00  F035         	lfsr	0,__pbssCOMRAM
   182   0018A4  0E16               	movlw	22
   183   0018A6                     clear_0:
   184   0018A6  6AEE               	clrf	postinc0,c
   185   0018A8  06E8               	decf	wreg,f,c
   186   0018AA  E1FD               	bnz	clear_0
   187   0018AC                     end_of_initialization:
   188                           	callstack 0
   189   0018AC                     __end_of__initialization:
   190                           	callstack 0
   191   0018AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192   0018AE  6EF8               	movwf	tblptru,c
   193   0018B0  0100               	movlb	0
   194   0018B2  EF95  F00C         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000035                     __pbssCOMRAM:
   198                           	callstack 0
   199   000035                     led_toggle@F2942:
   200                           	callstack 0
   201   000035                     	ds	5
   202   00003A                     led_on_off@F2938:
   203                           	callstack 0
   204   00003A                     	ds	5
   205   00003F                     led_init@F2933:
   206                           	callstack 0
   207   00003F                     	ds	5
   208   000044                     _btn_counter:
   209                           	callstack 0
   210   000044                     	ds	4
   211   000048                     _rise_edge:
   212                           	callstack 0
   213   000048                     	ds	1
   214   000049                     _btn_1_high_valid_state_previous:
   215                           	callstack 0
   216   000049                     	ds	1
   217   00004A                     _btn_1_high_valid_state:
   218                           	callstack 0
   219   00004A                     	ds	1
   220                           
   221                           	psect	dataCOMRAM
   222   000001                     __pdataCOMRAM:
   223                           	callstack 0
   224   000001                     _LAT_REG_ADD_arr:
   225                           	callstack 0
   226   000001                     	ds	10
   227   00000B                     _PORT_REG_ADD_arr:
   228                           	callstack 0
   229   00000B                     	ds	10
   230   000015                     _TRIS_REG_ADD_arr:
   231                           	callstack 0
   232   000015                     	ds	10
   233   00001F                     _button_2_state:
   234                           	callstack 0
   235   00001F                     	ds	1
   236   000020                     _push_btn_2:
   237                           	callstack 0
   238   000020                     	ds	7
   239   000027                     _push_btn_1:
   240                           	callstack 0
   241   000027                     	ds	7
   242   00002E                     _led_2:
   243                           	callstack 0
   244   00002E                     	ds	3
   245   000031                     _led_1:
   246                           	callstack 0
   247   000031                     	ds	3
   248   000034                     _button_1_state:
   249                           	callstack 0
   250   000034                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253   00004B                     __pcstackCOMRAM:
   254                           	callstack 0
   255   00004B                     gpio_pin_read_logic@p_pin_config:
   256                           	callstack 0
   257   00004B                     gpio_pin_toggle_logic@p_pin_config:
   258                           	callstack 0
   259   00004B                     set_bit_uint8@p_reg:
   260                           	callstack 0
   261   00004B                     clear_bit_uint8@p_reg:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x0
   265   00004B                     	ds	1
   266   00004C                     ??_gpio_pin_toggle_logic:
   267   00004C                     gpio_pin_read_logic@p_logic:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x1
   271   00004C                     	ds	1
   272   00004D                     ??_gpio_pin_read_logic:
   273   00004D                     set_bit_uint8@d_IDX_BIT_X:
   274                           	callstack 0
   275   00004D                     clear_bit_uint8@d_IDX_BIT_X:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x2
   279   00004D                     	ds	1
   280   00004E                     ??_set_bit_uint8:
   281   00004E                     ??_clear_bit_uint8:
   282   00004E                     gpio_pin_toggle_logic@bit_mask:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286   00004E                     	ds	1
   287   00004F                     led_toggle@p_led:
   288                           	callstack 0
   289   00004F                     gpio_pin_read_logic@bit_mask:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x4
   293   00004F                     	ds	1
   294   000050                     push_button_read@p_push_button:
   295                           	callstack 0
   296   000050                     gpio_pin_direction_initialize@p_pin_config:
   297                           	callstack 0
   298   000050                     gpio_pin_write_logic@p_pin_config:
   299                           	callstack 0
   300   000050                     led_toggle@led_pin:
   301                           	callstack 0
   302                           
   303                           ; 5 bytes @ 0x5
   304   000050                     	ds	1
   305   000051                     ??_gpio_pin_direction_initialize:
   306   000051                     push_button_read@p_button_state:
   307                           	callstack 0
   308   000051                     gpio_pin_write_logic@d_logic_desired:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x6
   312   000051                     	ds	1
   313   000052                     ??_gpio_pin_write_logic:
   314                           
   315                           ; 1 bytes @ 0x7
   316   000052                     	ds	1
   317   000053                     push_button_init@p_push_button:
   318                           	callstack 0
   319   000053                     push_button_read@btn_pin_logic:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x8
   323   000053                     	ds	1
   324   000054                     gpio_pin_initialize@p_pin_config:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x9
   328   000054                     	ds	1
   329   000055                     ??_gpio_pin_initialize:
   330   000055                     
   331                           ; 1 bytes @ 0xA
   332   000055                     	ds	2
   333   000057                     led_init@p_led:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xC
   337   000057                     	ds	1
   338   000058                     led_init@led_pin:
   339                           	callstack 0
   340                           
   341                           ; 5 bytes @ 0xD
   342   000058                     	ds	5
   343   00005D                     
   344                           ; 1 bytes @ 0x12
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 29 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  2  448[None  ] int 
   357 ;; Registers used:
   358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called: 5
   370 ;; This function calls:
   371 ;;		_app_init
   372 ;;		_magic_button
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379   00192A                     __ptext0:
   380                           	callstack 0
   381   00192A                     _main:
   382                           	callstack 26
   383   00192A                     
   384                           ;main.c: 31:     app_init();
   385   00192A  EC75  F00C         	call	_app_init	;wreg free
   386   00192E                     l449:
   387                           
   388                           ;main.c: 33:     {;main.c: 34:         magic_button();
   389   00192E  EC00  F00B         	call	_magic_button	;wreg free
   390                           
   391                           ;main.c: 35:     }
   392   001932  EF97  F00C         	goto	l449
   393   001936  EF00  F000         	goto	start
   394   00193A                     __end_of_main:
   395                           	callstack 0
   396                           
   397 ;; *************** function _magic_button *****************
   398 ;; Defined at:
   399 ;;		line 38 in file "_APP/application.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; Hardware stack levels required when called: 2
   420 ;; This function calls:
   421 ;;		_led_toggle
   422 ;;		_push_button_read
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text1
   429   001600                     __ptext1:
   430                           	callstack 0
   431   001600                     _magic_button:
   432                           	callstack 28
   433   001600                     
   434                           ;_APP/application.c: 40:     push_button_read(&push_btn_1, &button_1_state);
   435   001600  0E27               	movlw	low _push_btn_1
   436   001602  6E50               	movwf	push_button_read@p_push_button^0,c
   437   001604  0E34               	movlw	low _button_1_state
   438   001606  6E51               	movwf	push_button_read@p_button_state^0,c
   439   001608  EC5D  F00B         	call	_push_button_read	;wreg free
   440   00160C                     
   441                           ;_APP/application.c: 41:     if(BUTTON_PRESSED == button_1_state)
   442   00160C  5034               	movf	_button_1_state^0,w,c
   443   00160E  A4D8               	btfss	status,2,c
   444   001610  EF0C  F00B         	goto	u661
   445   001614  EF0E  F00B         	goto	u660
   446   001618                     u661:
   447   001618  EF2E  F00B         	goto	l1897
   448   00161C                     u660:
   449   00161C                     
   450                           ;_APP/application.c: 42:     {;_APP/application.c: 43:         btn_counter++;
   451   00161C  0E01               	movlw	1
   452   00161E  2644               	addwf	_btn_counter^0,f,c
   453   001620  0E00               	movlw	0
   454   001622  2245               	addwfc	(_btn_counter+1)^0,f,c
   455   001624  2246               	addwfc	(_btn_counter+2)^0,f,c
   456   001626  2247               	addwfc	(_btn_counter+3)^0,f,c
   457                           
   458                           ;_APP/application.c: 45:         if(btn_counter>=500)
   459   001628  5047               	movf	(_btn_counter+3)^0,w,c
   460   00162A  1046               	iorwf	(_btn_counter+2)^0,w,c
   461   00162C  E10B               	bnz	u670
   462   00162E  0EF4               	movlw	244
   463   001630  5C44               	subwf	_btn_counter^0,w,c
   464   001632  0E01               	movlw	1
   465   001634  5845               	subwfb	(_btn_counter+1)^0,w,c
   466   001636  A0D8               	btfss	status,0,c
   467   001638  EF20  F00B         	goto	u671
   468   00163C  EF22  F00B         	goto	u670
   469   001640                     u671:
   470   001640  EF38  F00B         	goto	l72
   471   001644                     u670:
   472   001644                     
   473                           ;_APP/application.c: 46:         {;_APP/application.c: 47:             btn_counter = 500
      +                          ;
   474   001644  0EF4               	movlw	244
   475   001646  6E44               	movwf	_btn_counter^0,c
   476   001648  0E01               	movlw	1
   477   00164A  6E45               	movwf	(_btn_counter+1)^0,c
   478   00164C  0E00               	movlw	0
   479   00164E  6E46               	movwf	(_btn_counter+2)^0,c
   480   001650  0E00               	movlw	0
   481   001652  6E47               	movwf	(_btn_counter+3)^0,c
   482                           
   483                           ;_APP/application.c: 48:             btn_1_high_valid_state = HIGH;
   484   001654  0E01               	movlw	1
   485   001656  6E4A               	movwf	_btn_1_high_valid_state^0,c
   486   001658  EF38  F00B         	goto	l72
   487   00165C                     l1897:
   488                           
   489                           ;_APP/application.c: 53:     {;_APP/application.c: 54:         btn_counter = 0;
   490   00165C  0E00               	movlw	0
   491   00165E  6E44               	movwf	_btn_counter^0,c
   492   001660  0E00               	movlw	0
   493   001662  6E45               	movwf	(_btn_counter+1)^0,c
   494   001664  0E00               	movlw	0
   495   001666  6E46               	movwf	(_btn_counter+2)^0,c
   496   001668  0E00               	movlw	0
   497   00166A  6E47               	movwf	(_btn_counter+3)^0,c
   498                           
   499                           ;_APP/application.c: 55:         btn_1_high_valid_state = LOW;
   500   00166C  0E00               	movlw	0
   501   00166E  6E4A               	movwf	_btn_1_high_valid_state^0,c
   502   001670                     l72:
   503                           
   504                           ;_APP/application.c: 58:     if ((LOW == btn_1_high_valid_state_previous) && (HIGH == bt
      +                          n_1_high_valid_state))
   505   001670  5049               	movf	_btn_1_high_valid_state_previous^0,w,c
   506   001672  A4D8               	btfss	status,2,c
   507   001674  EF3E  F00B         	goto	u681
   508   001678  EF40  F00B         	goto	u680
   509   00167C                     u681:
   510   00167C  EF4C  F00B         	goto	l1903
   511   001680                     u680:
   512   001680  044A               	decf	_btn_1_high_valid_state^0,w,c
   513   001682  A4D8               	btfss	status,2,c
   514   001684  EF46  F00B         	goto	u691
   515   001688  EF48  F00B         	goto	u690
   516   00168C                     u691:
   517   00168C  EF4C  F00B         	goto	l1903
   518   001690                     u690:
   519   001690                     
   520                           ;_APP/application.c: 59:     {;_APP/application.c: 60:         rise_edge = TRUE;
   521   001690  0E01               	movlw	1
   522   001692  6E48               	movwf	_rise_edge^0,c
   523                           
   524                           ;_APP/application.c: 61:     }
   525   001694  EF4E  F00B         	goto	l1905
   526   001698                     l1903:
   527                           
   528                           ;_APP/application.c: 63:     {;_APP/application.c: 64:         rise_edge = FALSE;
   529   001698  0E00               	movlw	0
   530   00169A  6E48               	movwf	_rise_edge^0,c
   531   00169C                     l1905:
   532                           
   533                           ;_APP/application.c: 67:     if (TRUE == rise_edge)
   534   00169C  0448               	decf	_rise_edge^0,w,c
   535   00169E  A4D8               	btfss	status,2,c
   536   0016A0  EF54  F00B         	goto	u701
   537   0016A4  EF56  F00B         	goto	u700
   538   0016A8                     u701:
   539   0016A8  EF5A  F00B         	goto	l1909
   540   0016AC                     u700:
   541   0016AC                     
   542                           ;_APP/application.c: 68:     {;_APP/application.c: 69:         led_toggle(&led_1);
   543   0016AC  0E31               	movlw	low _led_1
   544   0016AE  6E4F               	movwf	led_toggle@p_led^0,c
   545   0016B0  EC1A  F00C         	call	_led_toggle	;wreg free
   546   0016B4                     l1909:
   547                           
   548                           ;_APP/application.c: 72:     btn_1_high_valid_state_previous = btn_1_high_valid_state;
   549   0016B4  C04A  F049         	movff	_btn_1_high_valid_state,_btn_1_high_valid_state_previous
   550   0016B8  0012               	return		;funcret
   551   0016BA                     __end_of_magic_button:
   552                           	callstack 0
   553                           
   554 ;; *************** function _push_button_read *****************
   555 ;; Defined at:
   556 ;;		line 43 in file "_HAL/Drivers/button/button.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  p_push_butto    1    5[COMRAM] PTR struct .
   559 ;;		 -> push_btn_1(7), 
   560 ;;  p_button_sta    1    6[COMRAM] PTR enum E2914
   561 ;;		 -> button_1_state(1), 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  btn_pin_logi    1    8[COMRAM] enum E2821
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      enum E2804
   566 ;; Registers used:
   567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;Total ram usage:        4 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 1
   580 ;; This function calls:
   581 ;;		_gpio_pin_read_logic
   582 ;; This function is called by:
   583 ;;		_magic_button
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text2
   588   0016BA                     __ptext2:
   589                           	callstack 0
   590   0016BA                     _push_button_read:
   591                           	callstack 28
   592   0016BA                     
   593                           ;_HAL/Drivers/button/button.c: 43: std_return push_button_read(push_button_t * p_push_bu
      +                          tton, button_state_t * p_button_state);_HAL/Drivers/button/button.c: 44: {;_HAL/Drivers/
      +                          button/button.c: 45:   if(((void*)0) == p_push_button || ((void*)0) == p_button_state)
   594   0016BA  5050               	movf	push_button_read@p_push_button^0,w,c
   595   0016BC  B4D8               	btfsc	status,2,c
   596   0016BE  EF63  F00B         	goto	u581
   597   0016C2  EF65  F00B         	goto	u580
   598   0016C6                     u581:
   599   0016C6  EFAE  F00B         	goto	l127
   600   0016CA                     u580:
   601   0016CA  5051               	movf	push_button_read@p_button_state^0,w,c
   602   0016CC  A4D8               	btfss	status,2,c
   603   0016CE  EF6B  F00B         	goto	u591
   604   0016D2  EF6D  F00B         	goto	u590
   605   0016D6                     u591:
   606   0016D6  EF71  F00B         	goto	l1849
   607   0016DA                     u590:
   608   0016DA  EFAE  F00B         	goto	l127
   609   0016DE                     l126:
   610                           
   611                           ;_HAL/Drivers/button/button.c: 46:     {;_HAL/Drivers/button/button.c: 47:         retur
      +                          n EXCUTION_NOT_OK;;	Return value of _push_button_read is never used
   612   0016DE  EFAE  F00B         	goto	l127
   613   0016E2                     l1849:
   614                           
   615                           ;_HAL/Drivers/button/button.c: 50:     {;_HAL/Drivers/button/button.c: 51:       *p_butt
      +                          on_state = BUTTON_RELEASED;
   616   0016E2  5051               	movf	push_button_read@p_button_state^0,w,c
   617   0016E4  6ED9               	movwf	fsr2l,c
   618   0016E6  6ADA               	clrf	fsr2h,c
   619   0016E8  0E01               	movlw	1
   620   0016EA  6EDF               	movwf	indf2,c
   621   0016EC                     
   622                           ;_HAL/Drivers/button/button.c: 53:       LOGIC_t btn_pin_logic;;_HAL/Drivers/button/butt
      +                          on.c: 54:       gpio_pin_read_logic(&p_push_button->button_pin,&btn_pin_logic);
   623   0016EC  C050  F04B         	movff	push_button_read@p_push_button,gpio_pin_read_logic@p_pin_config
   624   0016F0  0E53               	movlw	low push_button_read@btn_pin_logic
   625   0016F2  6E4C               	movwf	gpio_pin_read_logic@p_logic^0,c
   626   0016F4  ECB7  F008         	call	_gpio_pin_read_logic	;wreg free
   627   0016F8                     
   628                           ;_HAL/Drivers/button/button.c: 56:       if((HIGH == btn_pin_logic) && (BUTTON_ACTIVE_HI
      +                          GH == p_push_button->button_active_state))
   629   0016F8  0453               	decf	push_button_read@btn_pin_logic^0,w,c
   630   0016FA  A4D8               	btfss	status,2,c
   631   0016FC  EF82  F00B         	goto	u601
   632   001700  EF84  F00B         	goto	u600
   633   001704                     u601:
   634   001704  EF97  F00B         	goto	l1859
   635   001708                     u600:
   636   001708  5050               	movf	push_button_read@p_push_button^0,w,c
   637   00170A  6ED9               	movwf	fsr2l,c
   638   00170C  6ADA               	clrf	fsr2h,c
   639   00170E  0E06               	movlw	6
   640   001710  26D9               	addwf	fsr2l,f,c
   641   001712  04DE               	decf	postinc2,w,c
   642   001714  A4D8               	btfss	status,2,c
   643   001716  EF8F  F00B         	goto	u611
   644   00171A  EF91  F00B         	goto	u610
   645   00171E                     u611:
   646   00171E  EF97  F00B         	goto	l1859
   647   001722                     u610:
   648   001722                     l1857:
   649                           
   650                           ;_HAL/Drivers/button/button.c: 57:       {;_HAL/Drivers/button/button.c: 58:           *
      +                          p_button_state = BUTTON_PRESSED;
   651   001722  5051               	movf	push_button_read@p_button_state^0,w,c
   652   001724  6ED9               	movwf	fsr2l,c
   653   001726  6ADA               	clrf	fsr2h,c
   654   001728  6ADF               	clrf	indf2,c
   655                           
   656                           ;_HAL/Drivers/button/button.c: 59:       }
   657   00172A  EFAE  F00B         	goto	l127
   658   00172E                     l1859:
   659   00172E  5053               	movf	push_button_read@btn_pin_logic^0,w,c
   660   001730  A4D8               	btfss	status,2,c
   661   001732  EF9D  F00B         	goto	u621
   662   001736  EF9F  F00B         	goto	u620
   663   00173A                     u621:
   664   00173A  EF6F  F00B         	goto	l126
   665   00173E                     u620:
   666   00173E  5050               	movf	push_button_read@p_push_button^0,w,c
   667   001740  6ED9               	movwf	fsr2l,c
   668   001742  6ADA               	clrf	fsr2h,c
   669   001744  0E06               	movlw	6
   670   001746  26D9               	addwf	fsr2l,f,c
   671   001748  50DF               	movf	indf2,w,c
   672   00174A  A4D8               	btfss	status,2,c
   673   00174C  EFAA  F00B         	goto	u631
   674   001750  EFAC  F00B         	goto	u630
   675   001754                     u631:
   676   001754  EF6F  F00B         	goto	l126
   677   001758                     u630:
   678   001758  EF91  F00B         	goto	l1857
   679   00175C                     l127:
   680   00175C  0012               	return		;funcret
   681   00175E                     __end_of_push_button_read:
   682                           	callstack 0
   683                           
   684 ;; *************** function _gpio_pin_read_logic *****************
   685 ;; Defined at:
   686 ;;		line 325 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  p_pin_config    1    0[COMRAM] PTR const struct .
   689 ;;		 -> push_btn_1$button_pin(5), push_btn_1(7), 
   690 ;;  p_logic         1    1[COMRAM] PTR enum E2821
   691 ;;		 -> push_button_read@btn_pin_logic(1), 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  bit_mask        1    4[COMRAM] enum E2825
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      enum E2804
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;Total ram usage:        5 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_push_button_read
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text3
   717   00116E                     __ptext3:
   718                           	callstack 0
   719   00116E                     _gpio_pin_read_logic:
   720                           	callstack 28
   721   00116E                     
   722                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 330:     if(((void*)0) == p_pin_config)
   723   00116E  504B               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   724   001170  A4D8               	btfss	status,2,c
   725   001172  EFBD  F008         	goto	u481
   726   001176  EFBF  F008         	goto	u480
   727   00117A                     u481:
   728   00117A  EFE1  F008         	goto	l1733
   729   00117E                     u480:
   730   00117E  EF34  F009         	goto	l333
   731   001182                     l1713:
   732                           
   733                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 340:                 bit_mask = MASK_BIT_0;
   734   001182  0E01               	movlw	1
   735   001184  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   736                           
   737                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 341:                 break;
   738   001186  EF13  F009         	goto	l1735
   739   00118A                     l1715:
   740                           
   741                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 343:                 bit_mask = MASK_BIT_1;
   742   00118A  0E02               	movlw	2
   743   00118C  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   744                           
   745                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 344:                 break;
   746   00118E  EF13  F009         	goto	l1735
   747   001192                     l1717:
   748                           
   749                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 346:                 bit_mask = MASK_BIT_2;
   750   001192  0E04               	movlw	4
   751   001194  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   752                           
   753                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 347:                 break;
   754   001196  EF13  F009         	goto	l1735
   755   00119A                     l1719:
   756                           
   757                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 349:                 bit_mask = MASK_BIT_3;
   758   00119A  0E08               	movlw	8
   759   00119C  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   760                           
   761                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 350:                 break;
   762   00119E  EF13  F009         	goto	l1735
   763   0011A2                     l1721:
   764                           
   765                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 352:                 bit_mask = MASK_BIT_4;
   766   0011A2  0E10               	movlw	16
   767   0011A4  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   768                           
   769                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 353:                 break;
   770   0011A6  EF13  F009         	goto	l1735
   771   0011AA                     l1723:
   772                           
   773                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 355:                 bit_mask = MASK_BIT_5;
   774   0011AA  0E20               	movlw	32
   775   0011AC  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   776                           
   777                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 356:                 break;
   778   0011AE  EF13  F009         	goto	l1735
   779   0011B2                     l1725:
   780                           
   781                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 358:                 bit_mask = MASK_BIT_6;
   782   0011B2  0E40               	movlw	64
   783   0011B4  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   784                           
   785                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 359:                 break;
   786   0011B6  EF13  F009         	goto	l1735
   787   0011BA                     l1727:
   788                           
   789                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 361:                 bit_mask = MASK_BIT_7;
   790   0011BA  0E80               	movlw	128
   791   0011BC  6E4F               	movwf	gpio_pin_read_logic@bit_mask^0,c
   792                           
   793                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 362:                 break;
   794   0011BE  EF13  F009         	goto	l1735
   795   0011C2                     l1733:
   796   0011C2  504B               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   797   0011C4  6ED9               	movwf	fsr2l,c
   798   0011C6  6ADA               	clrf	fsr2h,c
   799   0011C8  0E01               	movlw	1
   800   0011CA  26D9               	addwf	fsr2l,f,c
   801   0011CC  50DF               	movf	indf2,w,c
   802   0011CE  6E4D               	movwf	??_gpio_pin_read_logic^0,c
   803   0011D0  6A4E               	clrf	(??_gpio_pin_read_logic+1)^0,c
   804                           
   805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   806                           ; Switch size 1, requested type "simple"
   807                           ; Number of cases is 1, Range of values is 0 to 0
   808                           ; switch strategies available:
   809                           ; Name         Instructions Cycles
   810                           ; simple_byte            4     3 (average)
   811                           ;	Chosen strategy is simple_byte
   812   0011D2  504E               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   813   0011D4  0A00               	xorlw	0	; case 0
   814   0011D6  B4D8               	btfsc	status,2,c
   815   0011D8  EFF0  F008         	goto	l1961
   816   0011DC  EF34  F009         	goto	l333
   817   0011E0                     l1961:
   818                           
   819                           ; Switch size 1, requested type "simple"
   820                           ; Number of cases is 8, Range of values is 0 to 7
   821                           ; switch strategies available:
   822                           ; Name         Instructions Cycles
   823                           ; simple_byte           25    13 (average)
   824                           ;	Chosen strategy is simple_byte
   825   0011E0  504D               	movf	??_gpio_pin_read_logic^0,w,c
   826   0011E2  0A00               	xorlw	0	; case 0
   827   0011E4  B4D8               	btfsc	status,2,c
   828   0011E6  EFC1  F008         	goto	l1713
   829   0011EA  0A01               	xorlw	1	; case 1
   830   0011EC  B4D8               	btfsc	status,2,c
   831   0011EE  EFC5  F008         	goto	l1715
   832   0011F2  0A03               	xorlw	3	; case 2
   833   0011F4  B4D8               	btfsc	status,2,c
   834   0011F6  EFC9  F008         	goto	l1717
   835   0011FA  0A01               	xorlw	1	; case 3
   836   0011FC  B4D8               	btfsc	status,2,c
   837   0011FE  EFCD  F008         	goto	l1719
   838   001202  0A07               	xorlw	7	; case 4
   839   001204  B4D8               	btfsc	status,2,c
   840   001206  EFD1  F008         	goto	l1721
   841   00120A  0A01               	xorlw	1	; case 5
   842   00120C  B4D8               	btfsc	status,2,c
   843   00120E  EFD5  F008         	goto	l1723
   844   001212  0A03               	xorlw	3	; case 6
   845   001214  B4D8               	btfsc	status,2,c
   846   001216  EFD9  F008         	goto	l1725
   847   00121A  0A01               	xorlw	1	; case 7
   848   00121C  B4D8               	btfsc	status,2,c
   849   00121E  EFDD  F008         	goto	l1727
   850   001222  EF34  F009         	goto	l333
   851   001226                     l1735:
   852                           
   853                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 368:         *p_logic = ((*(PORT_REG_ADD_arr[p_pin_config->p
      +                          ort]) & bit_mask) == bit_mask);
   854   001226  504C               	movf	gpio_pin_read_logic@p_logic^0,w,c
   855   001228  6ED9               	movwf	fsr2l,c
   856   00122A  6ADA               	clrf	fsr2h,c
   857   00122C  504B               	movf	gpio_pin_read_logic@p_pin_config^0,w,c
   858   00122E  6EE1               	movwf	fsr1l,c
   859   001230  6AE2               	clrf	fsr1h,c
   860   001232  50E7               	movf	indf1,w,c
   861   001234  0D02               	mullw	2
   862   001236  50F3               	movf	243,w,c
   863   001238  0F0B               	addlw	low _PORT_REG_ADD_arr
   864   00123A  6EE1               	movwf	fsr1l,c
   865   00123C  6AE2               	clrf	fsr1h,c
   866   00123E  CFE6 F04D          	movff	postinc1,??_gpio_pin_read_logic
   867   001242  CFE5 F04E          	movff	postdec1,??_gpio_pin_read_logic+1
   868   001246  C04D  FFE1         	movff	??_gpio_pin_read_logic,fsr1l
   869   00124A  C04E  FFE2         	movff	??_gpio_pin_read_logic+1,fsr1h
   870   00124E  50E7               	movf	indf1,w,c
   871   001250  144F               	andwf	gpio_pin_read_logic@bit_mask^0,w,c	;volatile
   872   001252  184F               	xorwf	gpio_pin_read_logic@bit_mask^0,w,c
   873   001254  B4D8               	btfsc	status,2,c
   874   001256  EF2F  F009         	goto	u491
   875   00125A  EF32  F009         	goto	u490
   876   00125E                     u491:
   877   00125E  0E01               	movlw	1
   878   001260  EF33  F009         	goto	u500
   879   001264                     u490:
   880   001264  0E00               	movlw	0
   881   001266                     u500:
   882   001266  6EDF               	movwf	indf2,c
   883   001268                     l333:
   884   001268  0012               	return		;funcret
   885   00126A                     __end_of_gpio_pin_read_logic:
   886                           	callstack 0
   887                           
   888 ;; *************** function _led_toggle *****************
   889 ;; Defined at:
   890 ;;		line 70 in file "_HAL/Drivers/LED/LED.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  p_led           1    4[COMRAM] PTR struct .
   893 ;;		 -> led_1(3), 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  led_pin         5    5[COMRAM] struct .
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      enum E2804
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        6 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 1
   912 ;; This function calls:
   913 ;;		_gpio_pin_toggle_logic
   914 ;; This function is called by:
   915 ;;		_magic_button
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text4
   920   001834                     __ptext4:
   921                           	callstack 0
   922   001834                     _led_toggle:
   923                           	callstack 28
   924   001834                     
   925                           ;_HAL/Drivers/LED/LED.c: 70: std_return led_toggle(led_t * p_led);_HAL/Drivers/LED/LED.c
      +                          : 71: {;_HAL/Drivers/LED/LED.c: 72:     if(((void*)0) == p_led )
   926   001834  504F               	movf	led_toggle@p_led^0,w,c
   927   001836  A4D8               	btfss	status,2,c
   928   001838  EF20  F00C         	goto	u641
   929   00183C  EF22  F00C         	goto	u640
   930   001840                     u641:
   931   001840  EF24  F00C         	goto	l1871
   932   001844                     u640:
   933   001844  EF3F  F00C         	goto	l192
   934   001848                     l1871:
   935                           
   936                           ;_HAL/Drivers/LED/LED.c: 77:     {;_HAL/Drivers/LED/LED.c: 78:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
   937   001848  EE20  F035         	lfsr	2,led_toggle@F2942
   938   00184C  EE10  F050         	lfsr	1,led_toggle@led_pin
   939   001850  0E04               	movlw	4
   940   001852                     u651:
   941   001852  CFDB FFE3          	movff	plusw2,plusw1
   942   001856  06E8               	decf	wreg,f,c
   943   001858  E2FC               	bc	u651
   944   00185A  504F               	movf	led_toggle@p_led^0,w,c
   945   00185C  6ED9               	movwf	fsr2l,c
   946   00185E  6ADA               	clrf	fsr2h,c
   947   001860  50DF               	movf	indf2,w,c
   948   001862  6E50               	movwf	led_toggle@led_pin^0,c
   949   001864  504F               	movf	led_toggle@p_led^0,w,c
   950   001866  6ED9               	movwf	fsr2l,c
   951   001868  6ADA               	clrf	fsr2h,c
   952   00186A  0E01               	movlw	1
   953   00186C  26D9               	addwf	fsr2l,f,c
   954   00186E  50DF               	movf	indf2,w,c
   955   001870  6E51               	movwf	(led_toggle@led_pin+1)^0,c
   956   001872  0E00               	movlw	0
   957   001874  6E52               	movwf	(led_toggle@led_pin+2)^0,c
   958   001876                     
   959                           ;_HAL/Drivers/LED/LED.c: 82:        gpio_pin_toggle_logic(&led_pin);
   960   001876  0E50               	movlw	low led_toggle@led_pin
   961   001878  6E4B               	movwf	gpio_pin_toggle_logic@p_pin_config^0,c
   962   00187A  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
   963   00187E                     l192:
   964   00187E  0012               	return		;funcret
   965   001880                     __end_of_led_toggle:
   966                           	callstack 0
   967                           
   968 ;; *************** function _gpio_pin_toggle_logic *****************
   969 ;; Defined at:
   970 ;;		line 379 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  p_pin_config    1    0[COMRAM] PTR struct .
   973 ;;		 -> led_toggle@led_pin(5), 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  bit_mask        1    3[COMRAM] enum E2825
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      enum E2804
   978 ;; Registers used:
   979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        4 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_led_toggle
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text5
   999   001002                     __ptext5:
  1000                           	callstack 0
  1001   001002                     _gpio_pin_toggle_logic:
  1002                           	callstack 28
  1003   001002                     
  1004                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 383:     if(((void*)0) == p_pin_config)
  1005   001002  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1006   001004  A4D8               	btfss	status,2,c
  1007   001006  EF07  F008         	goto	u521
  1008   00100A  EF09  F008         	goto	u520
  1009   00100E                     u521:
  1010   00100E  EF2B  F008         	goto	l1799
  1011   001012                     u520:
  1012   001012  EFB6  F008         	goto	l349
  1013   001016                     l1779:
  1014                           
  1015                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 393:                 bit_mask = MASK_BIT_0;
  1016   001016  0E01               	movlw	1
  1017   001018  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1018                           
  1019                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 394:                 break;
  1020   00101A  EF5D  F008         	goto	l1801
  1021   00101E                     l1781:
  1022                           
  1023                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 396:                 bit_mask = MASK_BIT_1;
  1024   00101E  0E02               	movlw	2
  1025   001020  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1026                           
  1027                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 397:                 break;
  1028   001022  EF5D  F008         	goto	l1801
  1029   001026                     l1783:
  1030                           
  1031                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 399:                 bit_mask = MASK_BIT_2;
  1032   001026  0E04               	movlw	4
  1033   001028  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1034                           
  1035                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 400:                 break;
  1036   00102A  EF5D  F008         	goto	l1801
  1037   00102E                     l1785:
  1038                           
  1039                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 402:                 bit_mask = MASK_BIT_3;
  1040   00102E  0E08               	movlw	8
  1041   001030  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1042                           
  1043                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 403:                 break;
  1044   001032  EF5D  F008         	goto	l1801
  1045   001036                     l1787:
  1046                           
  1047                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 405:                 bit_mask = MASK_BIT_4;
  1048   001036  0E10               	movlw	16
  1049   001038  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1050                           
  1051                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 406:                 break;
  1052   00103A  EF5D  F008         	goto	l1801
  1053   00103E                     l1789:
  1054                           
  1055                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 408:                 bit_mask = MASK_BIT_5;
  1056   00103E  0E20               	movlw	32
  1057   001040  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1058                           
  1059                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 409:                 break;
  1060   001042  EF5D  F008         	goto	l1801
  1061   001046                     l1791:
  1062                           
  1063                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 411:                 bit_mask = MASK_BIT_6;
  1064   001046  0E40               	movlw	64
  1065   001048  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1066                           
  1067                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 412:                 break;
  1068   00104A  EF5D  F008         	goto	l1801
  1069   00104E                     l1793:
  1070                           
  1071                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 414:                 bit_mask = MASK_BIT_7;
  1072   00104E  0E80               	movlw	128
  1073   001050  6E4E               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
  1074                           
  1075                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 break;
  1076   001052  EF5D  F008         	goto	l1801
  1077   001056                     l1799:
  1078   001056  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1079   001058  6ED9               	movwf	fsr2l,c
  1080   00105A  6ADA               	clrf	fsr2h,c
  1081   00105C  0E01               	movlw	1
  1082   00105E  26D9               	addwf	fsr2l,f,c
  1083   001060  50DF               	movf	indf2,w,c
  1084   001062  6E4C               	movwf	??_gpio_pin_toggle_logic^0,c
  1085   001064  6A4D               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
  1086                           
  1087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1088                           ; Switch size 1, requested type "simple"
  1089                           ; Number of cases is 1, Range of values is 0 to 0
  1090                           ; switch strategies available:
  1091                           ; Name         Instructions Cycles
  1092                           ; simple_byte            4     3 (average)
  1093                           ;	Chosen strategy is simple_byte
  1094   001066  504D               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  1095   001068  0A00               	xorlw	0	; case 0
  1096   00106A  B4D8               	btfsc	status,2,c
  1097   00106C  EF3A  F008         	goto	l1963
  1098   001070  EFB6  F008         	goto	l349
  1099   001074                     l1963:
  1100                           
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 8, Range of values is 0 to 7
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte           25    13 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107   001074  504C               	movf	??_gpio_pin_toggle_logic^0,w,c
  1108   001076  0A00               	xorlw	0	; case 0
  1109   001078  B4D8               	btfsc	status,2,c
  1110   00107A  EF0B  F008         	goto	l1779
  1111   00107E  0A01               	xorlw	1	; case 1
  1112   001080  B4D8               	btfsc	status,2,c
  1113   001082  EF0F  F008         	goto	l1781
  1114   001086  0A03               	xorlw	3	; case 2
  1115   001088  B4D8               	btfsc	status,2,c
  1116   00108A  EF13  F008         	goto	l1783
  1117   00108E  0A01               	xorlw	1	; case 3
  1118   001090  B4D8               	btfsc	status,2,c
  1119   001092  EF17  F008         	goto	l1785
  1120   001096  0A07               	xorlw	7	; case 4
  1121   001098  B4D8               	btfsc	status,2,c
  1122   00109A  EF1B  F008         	goto	l1787
  1123   00109E  0A01               	xorlw	1	; case 5
  1124   0010A0  B4D8               	btfsc	status,2,c
  1125   0010A2  EF1F  F008         	goto	l1789
  1126   0010A6  0A03               	xorlw	3	; case 6
  1127   0010A8  B4D8               	btfsc	status,2,c
  1128   0010AA  EF23  F008         	goto	l1791
  1129   0010AE  0A01               	xorlw	1	; case 7
  1130   0010B0  B4D8               	btfsc	status,2,c
  1131   0010B2  EF27  F008         	goto	l1793
  1132   0010B6  EFB6  F008         	goto	l349
  1133   0010BA                     l1801:
  1134                           
  1135                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 421:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
  1136   0010BA  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1137   0010BC  6ED9               	movwf	fsr2l,c
  1138   0010BE  6ADA               	clrf	fsr2h,c
  1139   0010C0  50DF               	movf	indf2,w,c
  1140   0010C2  0D02               	mullw	2
  1141   0010C4  50F3               	movf	243,w,c
  1142   0010C6  0F01               	addlw	low _LAT_REG_ADD_arr
  1143   0010C8  6ED9               	movwf	fsr2l,c
  1144   0010CA  6ADA               	clrf	fsr2h,c
  1145   0010CC  CFDE F04C          	movff	postinc2,??_gpio_pin_toggle_logic
  1146   0010D0  CFDD F04D          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1147   0010D4  C04C  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1148   0010D8  C04D  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1149   0010DC  504E               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
  1150   0010DE  1ADF               	xorwf	indf2,f,c
  1151                           
  1152                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
  1153   0010E0  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1154   0010E2  6ED9               	movwf	fsr2l,c
  1155   0010E4  6ADA               	clrf	fsr2h,c
  1156   0010E6  50DF               	movf	indf2,w,c
  1157   0010E8  0D02               	mullw	2
  1158   0010EA  50F3               	movf	243,w,c
  1159   0010EC  0F01               	addlw	low _LAT_REG_ADD_arr
  1160   0010EE  6ED9               	movwf	fsr2l,c
  1161   0010F0  6ADA               	clrf	fsr2h,c
  1162   0010F2  CFDE F04C          	movff	postinc2,??_gpio_pin_toggle_logic
  1163   0010F6  CFDD F04D          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1164   0010FA  C04C  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1165   0010FE  C04D  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1166   001102  50DF               	movf	indf2,w,c
  1167   001104  144E               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  1168   001106  184E               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
  1169   001108  A4D8               	btfss	status,2,c
  1170   00110A  EF89  F008         	goto	u531
  1171   00110E  EF8B  F008         	goto	u530
  1172   001112                     u531:
  1173   001112  EF94  F008         	goto	l1805
  1174   001116                     u530:
  1175   001116                     
  1176                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:             p_pin_config->logic = LOGIC_ON;
  1177   001116  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1178   001118  6ED9               	movwf	fsr2l,c
  1179   00111A  6ADA               	clrf	fsr2h,c
  1180   00111C  0E03               	movlw	3
  1181   00111E  26D9               	addwf	fsr2l,f,c
  1182   001120  0E01               	movlw	1
  1183   001122  6EDF               	movwf	indf2,c
  1184   001124  EFB6  F008         	goto	l349
  1185   001128                     l1805:
  1186   001128  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1187   00112A  6ED9               	movwf	fsr2l,c
  1188   00112C  6ADA               	clrf	fsr2h,c
  1189   00112E  50DF               	movf	indf2,w,c
  1190   001130  0D02               	mullw	2
  1191   001132  50F3               	movf	243,w,c
  1192   001134  0F01               	addlw	low _LAT_REG_ADD_arr
  1193   001136  6ED9               	movwf	fsr2l,c
  1194   001138  6ADA               	clrf	fsr2h,c
  1195   00113A  CFDE F04C          	movff	postinc2,??_gpio_pin_toggle_logic
  1196   00113E  CFDD F04D          	movff	postdec2,??_gpio_pin_toggle_logic+1
  1197   001142  C04C  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
  1198   001146  C04D  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
  1199   00114A  50DF               	movf	indf2,w,c
  1200   00114C  144E               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
  1201   00114E  0900               	iorlw	0
  1202   001150  A4D8               	btfss	status,2,c
  1203   001152  EFAD  F008         	goto	u541
  1204   001156  EFAF  F008         	goto	u540
  1205   00115A                     u541:
  1206   00115A  EFB6  F008         	goto	l349
  1207   00115E                     u540:
  1208   00115E                     
  1209                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 425:             p_pin_config->logic = LOGIC_ON;
  1210   00115E  504B               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
  1211   001160  6ED9               	movwf	fsr2l,c
  1212   001162  6ADA               	clrf	fsr2h,c
  1213   001164  0E03               	movlw	3
  1214   001166  26D9               	addwf	fsr2l,f,c
  1215   001168  0E01               	movlw	1
  1216   00116A  6EDF               	movwf	indf2,c
  1217   00116C                     l349:
  1218   00116C  0012               	return		;funcret
  1219   00116E                     __end_of_gpio_pin_toggle_logic:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _app_init *****************
  1223 ;; Defined at:
  1224 ;;		line 29 in file "_APP/application.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 4
  1245 ;; This function calls:
  1246 ;;		_led_init
  1247 ;;		_push_button_init
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text6
  1254   0018EA                     __ptext6:
  1255                           	callstack 0
  1256   0018EA                     _app_init:
  1257                           	callstack 26
  1258   0018EA                     
  1259                           ;_APP/application.c: 30: push_button_init(&push_btn_1);
  1260   0018EA  0E27               	movlw	low _push_btn_1
  1261   0018EC  6E53               	movwf	push_button_init@p_push_button^0,c
  1262   0018EE  EC86  F00C         	call	_push_button_init	;wreg free
  1263                           
  1264                           ;_APP/application.c: 31: push_button_init(&push_btn_2);
  1265   0018F2  0E20               	movlw	low _push_btn_2
  1266   0018F4  6E53               	movwf	push_button_init@p_push_button^0,c
  1267   0018F6  EC86  F00C         	call	_push_button_init	;wreg free
  1268   0018FA                     
  1269                           ;_APP/application.c: 32: led_init(&led_1);
  1270   0018FA  0E31               	movlw	low _led_1
  1271   0018FC  6E57               	movwf	led_init@p_led^0,c
  1272   0018FE  ECED  F00B         	call	_led_init	;wreg free
  1273   001902                     
  1274                           ;_APP/application.c: 33: led_init(&led_2);
  1275   001902  0E2E               	movlw	low _led_2
  1276   001904  6E57               	movwf	led_init@p_led^0,c
  1277   001906  ECED  F00B         	call	_led_init	;wreg free
  1278   00190A  0012               	return		;funcret
  1279   00190C                     __end_of_app_init:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _push_button_init *****************
  1283 ;; Defined at:
  1284 ;;		line 28 in file "_HAL/Drivers/button/button.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  p_push_butto    1    8[COMRAM] PTR struct .
  1287 ;;		 -> push_btn_2(7), push_btn_1(7), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      enum E2804
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1299 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 2
  1306 ;; This function calls:
  1307 ;;		_gpio_pin_direction_initialize
  1308 ;; This function is called by:
  1309 ;;		_app_init
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text7
  1314   00190C                     __ptext7:
  1315                           	callstack 0
  1316   00190C                     _push_button_init:
  1317                           	callstack 27
  1318   00190C                     
  1319                           ;_HAL/Drivers/button/button.c: 28: std_return push_button_init(push_button_t * p_push_bu
      +                          tton);_HAL/Drivers/button/button.c: 29: {;_HAL/Drivers/button/button.c: 30:   if(((void*
      +                          )0) == p_push_button)
  1320   00190C  5053               	movf	push_button_init@p_push_button^0,w,c
  1321   00190E  A4D8               	btfss	status,2,c
  1322   001910  EF8C  F00C         	goto	u551
  1323   001914  EF8E  F00C         	goto	u550
  1324   001918                     u551:
  1325   001918  EF90  F00C         	goto	l1819
  1326   00191C                     u550:
  1327   00191C  EF94  F00C         	goto	l120
  1328   001920                     l1819:
  1329                           
  1330                           ;_HAL/Drivers/button/button.c: 35:     {;_HAL/Drivers/button/button.c: 36:        gpio_p
      +                          in_direction_initialize(&p_push_button->button_pin);
  1331   001920  C053  F050         	movff	push_button_init@p_push_button,gpio_pin_direction_initialize@p_pin_config
  1332   001924  ECA0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1333   001928                     l120:
  1334   001928  0012               	return		;funcret
  1335   00192A                     __end_of_push_button_init:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _led_init *****************
  1339 ;; Defined at:
  1340 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  p_led           1   12[COMRAM] PTR struct .
  1343 ;;		 -> led_2(3), led_1(3), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  led_pin         5   13[COMRAM] struct .
  1346 ;;  func_return     1    0        enum E2804
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      enum E2804
  1349 ;; Registers used:
  1350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;Total ram usage:        6 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 3
  1363 ;; This function calls:
  1364 ;;		_gpio_pin_initialize
  1365 ;; This function is called by:
  1366 ;;		_app_init
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text8
  1371   0017DA                     __ptext8:
  1372                           	callstack 0
  1373   0017DA                     _led_init:
  1374                           	callstack 26
  1375   0017DA                     
  1376                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
  1377   0017DA  5057               	movf	led_init@p_led^0,w,c
  1378   0017DC  A4D8               	btfss	status,2,c
  1379   0017DE  EFF3  F00B         	goto	u561
  1380   0017E2  EFF5  F00B         	goto	u560
  1381   0017E6                     u561:
  1382   0017E6  EFF7  F00B         	goto	l1829
  1383   0017EA                     u560:
  1384   0017EA  EF19  F00C         	goto	l178
  1385   0017EE                     l1829:
  1386                           
  1387                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
  1388   0017EE  EE20  F03F         	lfsr	2,led_init@F2933
  1389   0017F2  EE10  F058         	lfsr	1,led_init@led_pin
  1390   0017F6  0E04               	movlw	4
  1391   0017F8                     u571:
  1392   0017F8  CFDB FFE3          	movff	plusw2,plusw1
  1393   0017FC  06E8               	decf	wreg,f,c
  1394   0017FE  E2FC               	bc	u571
  1395   001800  5057               	movf	led_init@p_led^0,w,c
  1396   001802  6ED9               	movwf	fsr2l,c
  1397   001804  6ADA               	clrf	fsr2h,c
  1398   001806  50DF               	movf	indf2,w,c
  1399   001808  6E58               	movwf	led_init@led_pin^0,c
  1400   00180A  5057               	movf	led_init@p_led^0,w,c
  1401   00180C  6ED9               	movwf	fsr2l,c
  1402   00180E  6ADA               	clrf	fsr2h,c
  1403   001810  0E01               	movlw	1
  1404   001812  26D9               	addwf	fsr2l,f,c
  1405   001814  50DF               	movf	indf2,w,c
  1406   001816  6E59               	movwf	(led_init@led_pin+1)^0,c
  1407   001818  0E00               	movlw	0
  1408   00181A  6E5A               	movwf	(led_init@led_pin+2)^0,c
  1409   00181C  5057               	movf	led_init@p_led^0,w,c
  1410   00181E  6ED9               	movwf	fsr2l,c
  1411   001820  6ADA               	clrf	fsr2h,c
  1412   001822  0E02               	movlw	2
  1413   001824  26D9               	addwf	fsr2l,f,c
  1414   001826  50DF               	movf	indf2,w,c
  1415   001828  6E5B               	movwf	(led_init@led_pin+3)^0,c
  1416   00182A  0E58               	movlw	low led_init@led_pin
  1417   00182C  6E54               	movwf	gpio_pin_initialize@p_pin_config^0,c
  1418   00182E  ECAF  F00B         	call	_gpio_pin_initialize	;wreg free
  1419   001832                     l178:
  1420   001832  0012               	return		;funcret
  1421   001834                     __end_of_led_init:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _gpio_pin_initialize *****************
  1425 ;; Defined at:
  1426 ;;		line 293 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  p_pin_config    1    9[COMRAM] PTR struct .
  1429 ;;		 -> led_init@led_pin(5), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      enum E2804
  1434 ;; Registers used:
  1435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        3 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 2
  1448 ;; This function calls:
  1449 ;;		_gpio_pin_direction_initialize
  1450 ;;		_gpio_pin_write_logic
  1451 ;; This function is called by:
  1452 ;;		_led_init
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text9
  1457   00175E                     __ptext9:
  1458                           	callstack 0
  1459   00175E                     _gpio_pin_initialize:
  1460                           	callstack 26
  1461   00175E                     
  1462                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 293: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 294: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 297:     if(((void*)0)
      +                           == p_pin_config)
  1463   00175E  5054               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1464   001760  A4D8               	btfss	status,2,c
  1465   001762  EFB5  F00B         	goto	u511
  1466   001766  EFB7  F00B         	goto	u510
  1467   00176A                     u511:
  1468   00176A  EFD1  F00B         	goto	l1763
  1469   00176E                     u510:
  1470   00176E                     l1745:
  1471                           
  1472                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:         return EX
      +                          CUTION_NOT_OK;
  1473   00176E  0E01               	movlw	1
  1474   001770  EFEC  F00B         	goto	l323
  1475   001774                     l1751:
  1476                           
  1477                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 306:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1478   001774  C054  F050         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1479   001778  ECA0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1480                           
  1481                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 break;
  1482   00177C  EFEB  F00B         	goto	l1765
  1483   001780                     l1753:
  1484                           
  1485                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 309:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
  1486   001780  C054  F050         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
  1487   001784  ECA0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1488                           
  1489                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
  1490   001788  C054  F050         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
  1491   00178C  5054               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1492   00178E  6ED9               	movwf	fsr2l,c
  1493   001790  6ADA               	clrf	fsr2h,c
  1494   001792  0E03               	movlw	3
  1495   001794  26D9               	addwf	fsr2l,f,c
  1496   001796  50DF               	movf	indf2,w,c
  1497   001798  6E51               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  1498   00179A  EC35  F009         	call	_gpio_pin_write_logic	;wreg free
  1499                           
  1500                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 break;
  1501   00179E  EFEB  F00B         	goto	l1765
  1502   0017A2                     l1763:
  1503   0017A2  5054               	movf	gpio_pin_initialize@p_pin_config^0,w,c
  1504   0017A4  6ED9               	movwf	fsr2l,c
  1505   0017A6  6ADA               	clrf	fsr2h,c
  1506   0017A8  0E02               	movlw	2
  1507   0017AA  26D9               	addwf	fsr2l,f,c
  1508   0017AC  50DF               	movf	indf2,w,c
  1509   0017AE  6E55               	movwf	??_gpio_pin_initialize^0,c
  1510   0017B0  6A56               	clrf	(??_gpio_pin_initialize+1)^0,c
  1511                           
  1512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1513                           ; Switch size 1, requested type "simple"
  1514                           ; Number of cases is 1, Range of values is 0 to 0
  1515                           ; switch strategies available:
  1516                           ; Name         Instructions Cycles
  1517                           ; simple_byte            4     3 (average)
  1518                           ;	Chosen strategy is simple_byte
  1519   0017B2  5056               	movf	(??_gpio_pin_initialize+1)^0,w,c
  1520   0017B4  0A00               	xorlw	0	; case 0
  1521   0017B6  B4D8               	btfsc	status,2,c
  1522   0017B8  EFE0  F00B         	goto	l1965
  1523   0017BC  EFB7  F00B         	goto	l1745
  1524   0017C0                     l1965:
  1525                           
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 2, Range of values is 0 to 1
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            7     4 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532   0017C0  5055               	movf	??_gpio_pin_initialize^0,w,c
  1533   0017C2  0A00               	xorlw	0	; case 0
  1534   0017C4  B4D8               	btfsc	status,2,c
  1535   0017C6  EFC0  F00B         	goto	l1753
  1536   0017CA  0A01               	xorlw	1	; case 1
  1537   0017CC  B4D8               	btfsc	status,2,c
  1538   0017CE  EFBA  F00B         	goto	l1751
  1539   0017D2  EFB7  F00B         	goto	l1745
  1540   0017D6                     l1765:
  1541                           
  1542                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 317:     return EXCUTION_OK;
  1543   0017D6  0E00               	movlw	0
  1544   0017D8                     l323:
  1545   0017D8  0012               	return		;funcret
  1546   0017DA                     __end_of_gpio_pin_initialize:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _gpio_pin_write_logic *****************
  1550 ;; Defined at:
  1551 ;;		line 204 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  p_pin_config    1    5[COMRAM] PTR struct .
  1554 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), 
  1555 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      enum E2804
  1560 ;; Registers used:
  1561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:        4 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 1
  1574 ;; This function calls:
  1575 ;;		_clear_bit_uint8
  1576 ;;		_set_bit_uint8
  1577 ;; This function is called by:
  1578 ;;		_gpio_pin_initialize
  1579 ;;		_led_on_off
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text10
  1584   00126A                     __ptext10:
  1585                           	callstack 0
  1586   00126A                     _gpio_pin_write_logic:
  1587                           	callstack 26
  1588   00126A                     
  1589                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 204: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 205:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 206: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 207:     if(
      +                          (((void*)0) == p_pin_config) ||
  1590   00126A  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1591   00126C  B4D8               	btfsc	status,2,c
  1592   00126E  EF3B  F009         	goto	u441
  1593   001272  EF3D  F009         	goto	u440
  1594   001276                     u441:
  1595   001276  EFAD  F009         	goto	l297
  1596   00127A                     u440:
  1597   00127A  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1598   00127C  6ED9               	movwf	fsr2l,c
  1599   00127E  6ADA               	clrf	fsr2h,c
  1600   001280  0E05               	movlw	5
  1601   001282  60DF               	cpfslt	indf2,c
  1602   001284  EF46  F009         	goto	u451
  1603   001288  EF48  F009         	goto	u450
  1604   00128C                     u451:
  1605   00128C  EFAD  F009         	goto	l297
  1606   001290                     u450:
  1607   001290  0451               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1608   001292  B4D8               	btfsc	status,2,c
  1609   001294  EF4E  F009         	goto	u461
  1610   001298  EF50  F009         	goto	u460
  1611   00129C                     u461:
  1612   00129C  EF98  F009         	goto	l1701
  1613   0012A0                     u460:
  1614   0012A0  5051               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1615   0012A2  B4D8               	btfsc	status,2,c
  1616   0012A4  EF56  F009         	goto	u471
  1617   0012A8  EF58  F009         	goto	u470
  1618   0012AC                     u471:
  1619   0012AC  EF98  F009         	goto	l1701
  1620   0012B0                     u470:
  1621   0012B0  EFAD  F009         	goto	l297
  1622   0012B4                     l1689:
  1623                           
  1624                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 218:                p_pin_config->logic = d_logic_desired;
  1625   0012B4  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1626   0012B6  6ED9               	movwf	fsr2l,c
  1627   0012B8  6ADA               	clrf	fsr2h,c
  1628   0012BA  0E03               	movlw	3
  1629   0012BC  26D9               	addwf	fsr2l,f,c
  1630   0012BE  C051  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1631   0012C2                     
  1632                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1633   0012C2  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1634   0012C4  6ED9               	movwf	fsr2l,c
  1635   0012C6  6ADA               	clrf	fsr2h,c
  1636   0012C8  50DF               	movf	indf2,w,c
  1637   0012CA  0D02               	mullw	2
  1638   0012CC  50F3               	movf	243,w,c
  1639   0012CE  0F01               	addlw	low _LAT_REG_ADD_arr
  1640   0012D0  6ED9               	movwf	fsr2l,c
  1641   0012D2  6ADA               	clrf	fsr2h,c
  1642   0012D4  CFDE F04B          	movff	postinc2,set_bit_uint8@p_reg
  1643   0012D8  CFDD F04C          	movff	postdec2,set_bit_uint8@p_reg+1
  1644   0012DC  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1645   0012DE  6ED9               	movwf	fsr2l,c
  1646   0012E0  6ADA               	clrf	fsr2h,c
  1647   0012E2  0E01               	movlw	1
  1648   0012E4  26D9               	addwf	fsr2l,f,c
  1649   0012E6  50DF               	movf	indf2,w,c
  1650   0012E8  6E4D               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1651   0012EA  ECAE  F009         	call	_set_bit_uint8	;wreg free
  1652                           
  1653                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                break;
  1654   0012EE  EFAD  F009         	goto	l297
  1655   0012F2                     l1693:
  1656                           
  1657                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 223:                p_pin_config->logic = d_logic_desired;
  1658   0012F2  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1659   0012F4  6ED9               	movwf	fsr2l,c
  1660   0012F6  6ADA               	clrf	fsr2h,c
  1661   0012F8  0E03               	movlw	3
  1662   0012FA  26D9               	addwf	fsr2l,f,c
  1663   0012FC  C051  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1664   001300                     
  1665                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1666   001300  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1667   001302  6ED9               	movwf	fsr2l,c
  1668   001304  6ADA               	clrf	fsr2h,c
  1669   001306  50DF               	movf	indf2,w,c
  1670   001308  0D02               	mullw	2
  1671   00130A  50F3               	movf	243,w,c
  1672   00130C  0F01               	addlw	low _LAT_REG_ADD_arr
  1673   00130E  6ED9               	movwf	fsr2l,c
  1674   001310  6ADA               	clrf	fsr2h,c
  1675   001312  CFDE F04B          	movff	postinc2,clear_bit_uint8@p_reg
  1676   001316  CFDD F04C          	movff	postdec2,clear_bit_uint8@p_reg+1
  1677   00131A  5050               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1678   00131C  6ED9               	movwf	fsr2l,c
  1679   00131E  6ADA               	clrf	fsr2h,c
  1680   001320  0E01               	movlw	1
  1681   001322  26D9               	addwf	fsr2l,f,c
  1682   001324  50DF               	movf	indf2,w,c
  1683   001326  6E4D               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1684   001328  EC27  F00A         	call	_clear_bit_uint8	;wreg free
  1685                           
  1686                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                break;
  1687   00132C  EFAD  F009         	goto	l297
  1688   001330                     l1701:
  1689   001330  5051               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1690   001332  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1691   001334  6A53               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1692                           
  1693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1694                           ; Switch size 1, requested type "simple"
  1695                           ; Number of cases is 1, Range of values is 0 to 0
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte            4     3 (average)
  1699                           ;	Chosen strategy is simple_byte
  1700   001336  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1701   001338  0A00               	xorlw	0	; case 0
  1702   00133A  B4D8               	btfsc	status,2,c
  1703   00133C  EFA2  F009         	goto	l1967
  1704   001340  EFAD  F009         	goto	l297
  1705   001344                     l1967:
  1706                           
  1707                           ; Switch size 1, requested type "simple"
  1708                           ; Number of cases is 2, Range of values is 0 to 1
  1709                           ; switch strategies available:
  1710                           ; Name         Instructions Cycles
  1711                           ; simple_byte            7     4 (average)
  1712                           ;	Chosen strategy is simple_byte
  1713   001344  5052               	movf	??_gpio_pin_write_logic^0,w,c
  1714   001346  0A00               	xorlw	0	; case 0
  1715   001348  B4D8               	btfsc	status,2,c
  1716   00134A  EF79  F009         	goto	l1693
  1717   00134E  0A01               	xorlw	1	; case 1
  1718   001350  B4D8               	btfsc	status,2,c
  1719   001352  EF5A  F009         	goto	l1689
  1720   001356  EFAD  F009         	goto	l297
  1721   00135A                     l297:
  1722   00135A  0012               	return		;funcret
  1723   00135C                     __end_of_gpio_pin_write_logic:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _gpio_pin_direction_initialize *****************
  1727 ;; Defined at:
  1728 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1731 ;;		 -> led_init@led_pin(5), push_btn_2$button_pin(5), push_btn_2(7), push_btn_1$button_pin(5), 
  1732 ;;		 -> push_btn_1(7), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      enum E2804
  1737 ;; Registers used:
  1738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;Total ram usage:        3 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 1
  1751 ;; This function calls:
  1752 ;;		_clear_bit_uint8
  1753 ;;		_set_bit_uint8
  1754 ;; This function is called by:
  1755 ;;		_push_button_init
  1756 ;;		_gpio_pin_initialize
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text11
  1761   001540                     __ptext11:
  1762                           	callstack 0
  1763   001540                     _gpio_pin_direction_initialize:
  1764                           	callstack 27
  1765   001540                     
  1766                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1)){
  1767   001540  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1768   001542  B4D8               	btfsc	status,2,c
  1769   001544  EFA6  F00A         	goto	u421
  1770   001548  EFA8  F00A         	goto	u420
  1771   00154C                     u421:
  1772   00154C  EFFF  F00A         	goto	l285
  1773   001550                     u420:
  1774   001550  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1775   001552  6ED9               	movwf	fsr2l,c
  1776   001554  6ADA               	clrf	fsr2h,c
  1777   001556  0E04               	movlw	4
  1778   001558  64DF               	cpfsgt	indf2,c
  1779   00155A  EFB1  F00A         	goto	u431
  1780   00155E  EFB3  F00A         	goto	u430
  1781   001562                     u431:
  1782   001562  EFE5  F00A         	goto	l1673
  1783   001566                     u430:
  1784   001566  EFFF  F00A         	goto	l285
  1785   00156A                     l1665:
  1786                           
  1787                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 183:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1788   00156A  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1789   00156C  6ED9               	movwf	fsr2l,c
  1790   00156E  6ADA               	clrf	fsr2h,c
  1791   001570  50DF               	movf	indf2,w,c
  1792   001572  0D02               	mullw	2
  1793   001574  50F3               	movf	243,w,c
  1794   001576  0F15               	addlw	low _TRIS_REG_ADD_arr
  1795   001578  6ED9               	movwf	fsr2l,c
  1796   00157A  6ADA               	clrf	fsr2h,c
  1797   00157C  CFDE F04B          	movff	postinc2,clear_bit_uint8@p_reg
  1798   001580  CFDD F04C          	movff	postdec2,clear_bit_uint8@p_reg+1
  1799   001584  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1800   001586  6ED9               	movwf	fsr2l,c
  1801   001588  6ADA               	clrf	fsr2h,c
  1802   00158A  0E01               	movlw	1
  1803   00158C  26D9               	addwf	fsr2l,f,c
  1804   00158E  50DF               	movf	indf2,w,c
  1805   001590  6E4D               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1806   001592  EC27  F00A         	call	_clear_bit_uint8	;wreg free
  1807                           
  1808                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                break;
  1809   001596  EFFF  F00A         	goto	l285
  1810   00159A                     l1667:
  1811                           
  1812                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 187:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1813   00159A  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1814   00159C  6ED9               	movwf	fsr2l,c
  1815   00159E  6ADA               	clrf	fsr2h,c
  1816   0015A0  50DF               	movf	indf2,w,c
  1817   0015A2  0D02               	mullw	2
  1818   0015A4  50F3               	movf	243,w,c
  1819   0015A6  0F15               	addlw	low _TRIS_REG_ADD_arr
  1820   0015A8  6ED9               	movwf	fsr2l,c
  1821   0015AA  6ADA               	clrf	fsr2h,c
  1822   0015AC  CFDE F04B          	movff	postinc2,set_bit_uint8@p_reg
  1823   0015B0  CFDD F04C          	movff	postdec2,set_bit_uint8@p_reg+1
  1824   0015B4  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1825   0015B6  6ED9               	movwf	fsr2l,c
  1826   0015B8  6ADA               	clrf	fsr2h,c
  1827   0015BA  0E01               	movlw	1
  1828   0015BC  26D9               	addwf	fsr2l,f,c
  1829   0015BE  50DF               	movf	indf2,w,c
  1830   0015C0  6E4D               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1831   0015C2  ECAE  F009         	call	_set_bit_uint8	;wreg free
  1832                           
  1833                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                break;
  1834   0015C6  EFFF  F00A         	goto	l285
  1835   0015CA                     l1673:
  1836   0015CA  5050               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1837   0015CC  6ED9               	movwf	fsr2l,c
  1838   0015CE  6ADA               	clrf	fsr2h,c
  1839   0015D0  0E02               	movlw	2
  1840   0015D2  26D9               	addwf	fsr2l,f,c
  1841   0015D4  50DF               	movf	indf2,w,c
  1842   0015D6  6E51               	movwf	??_gpio_pin_direction_initialize^0,c
  1843   0015D8  6A52               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1844                           
  1845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 1, Range of values is 0 to 0
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte            4     3 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852   0015DA  5052               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1853   0015DC  0A00               	xorlw	0	; case 0
  1854   0015DE  B4D8               	btfsc	status,2,c
  1855   0015E0  EFF4  F00A         	goto	l1969
  1856   0015E4  EFFF  F00A         	goto	l285
  1857   0015E8                     l1969:
  1858                           
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 2, Range of values is 0 to 1
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte            7     4 (average)
  1864                           ;	Chosen strategy is simple_byte
  1865   0015E8  5051               	movf	??_gpio_pin_direction_initialize^0,w,c
  1866   0015EA  0A00               	xorlw	0	; case 0
  1867   0015EC  B4D8               	btfsc	status,2,c
  1868   0015EE  EFB5  F00A         	goto	l1665
  1869   0015F2  0A01               	xorlw	1	; case 1
  1870   0015F4  B4D8               	btfsc	status,2,c
  1871   0015F6  EFCD  F00A         	goto	l1667
  1872   0015FA  EFFF  F00A         	goto	l285
  1873   0015FE                     l285:
  1874   0015FE  0012               	return		;funcret
  1875   001600                     __end_of_gpio_pin_direction_initialize:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _set_bit_uint8 *****************
  1879 ;; Defined at:
  1880 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1883 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1884 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1885 ;;		 -> TRISB(1), TRISA(1), 
  1886 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      enum E2804
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        5 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_gpio_pin_direction_initialize
  1908 ;;		_gpio_pin_write_logic
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text12
  1913   00135C                     __ptext12:
  1914                           	callstack 0
  1915   00135C                     _set_bit_uint8:
  1916                           	callstack 27
  1917   00135C                     
  1918                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1919   00135C  504B               	movf	set_bit_uint8@p_reg^0,w,c
  1920   00135E  104C               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1921   001360  A4D8               	btfss	status,2,c
  1922   001362  EFB5  F009         	goto	u401
  1923   001366  EFB7  F009         	goto	u400
  1924   00136A                     u401:
  1925   00136A  EFF9  F009         	goto	l1621
  1926   00136E                     u400:
  1927   00136E  EF26  F00A         	goto	l235
  1928   001372                     l1601:
  1929                           
  1930                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1931   001372  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1932   001376  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1933   00137A  0E00               	movlw	0
  1934   00137C  80DB               	bsf	plusw2,0,c
  1935                           
  1936                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1937   00137E  EF26  F00A         	goto	l235
  1938   001382                     l1603:
  1939                           
  1940                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1941   001382  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1942   001386  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1943   00138A  0E00               	movlw	0
  1944   00138C  82DB               	bsf	plusw2,1,c
  1945                           
  1946                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1947   00138E  EF26  F00A         	goto	l235
  1948   001392                     l1605:
  1949                           
  1950                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1951   001392  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1952   001396  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1953   00139A  0E00               	movlw	0
  1954   00139C  84DB               	bsf	plusw2,2,c
  1955                           
  1956                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1957   00139E  EF26  F00A         	goto	l235
  1958   0013A2                     l1607:
  1959                           
  1960                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1961   0013A2  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1962   0013A6  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1963   0013AA  0E00               	movlw	0
  1964   0013AC  86DB               	bsf	plusw2,3,c
  1965                           
  1966                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1967   0013AE  EF26  F00A         	goto	l235
  1968   0013B2                     l1609:
  1969                           
  1970                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1971   0013B2  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1972   0013B6  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1973   0013BA  0E00               	movlw	0
  1974   0013BC  88DB               	bsf	plusw2,4,c
  1975                           
  1976                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1977   0013BE  EF26  F00A         	goto	l235
  1978   0013C2                     l1611:
  1979                           
  1980                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1981   0013C2  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1982   0013C6  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1983   0013CA  0E00               	movlw	0
  1984   0013CC  8ADB               	bsf	plusw2,5,c
  1985                           
  1986                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1987   0013CE  EF26  F00A         	goto	l235
  1988   0013D2                     l1613:
  1989                           
  1990                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1991   0013D2  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1992   0013D6  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1993   0013DA  0E00               	movlw	0
  1994   0013DC  8CDB               	bsf	plusw2,6,c
  1995                           
  1996                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1997   0013DE  EF26  F00A         	goto	l235
  1998   0013E2                     l1615:
  1999                           
  2000                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  2001   0013E2  C04B  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  2002   0013E6  C04C  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  2003   0013EA  0E00               	movlw	0
  2004   0013EC  8EDB               	bsf	plusw2,7,c
  2005                           
  2006                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  2007   0013EE  EF26  F00A         	goto	l235
  2008   0013F2                     l1621:
  2009   0013F2  504D               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  2010   0013F4  6E4E               	movwf	??_set_bit_uint8^0,c
  2011   0013F6  6A4F               	clrf	(??_set_bit_uint8+1)^0,c
  2012                           
  2013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2014                           ; Switch size 1, requested type "simple"
  2015                           ; Number of cases is 1, Range of values is 0 to 0
  2016                           ; switch strategies available:
  2017                           ; Name         Instructions Cycles
  2018                           ; simple_byte            4     3 (average)
  2019                           ;	Chosen strategy is simple_byte
  2020   0013F8  504F               	movf	(??_set_bit_uint8+1)^0,w,c
  2021   0013FA  0A00               	xorlw	0	; case 0
  2022   0013FC  B4D8               	btfsc	status,2,c
  2023   0013FE  EF03  F00A         	goto	l1971
  2024   001402  EF26  F00A         	goto	l235
  2025   001406                     l1971:
  2026                           
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 8, Range of values is 0 to 7
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte           25    13 (average)
  2032                           ;	Chosen strategy is simple_byte
  2033   001406  504E               	movf	??_set_bit_uint8^0,w,c
  2034   001408  0A00               	xorlw	0	; case 0
  2035   00140A  B4D8               	btfsc	status,2,c
  2036   00140C  EFB9  F009         	goto	l1601
  2037   001410  0A01               	xorlw	1	; case 1
  2038   001412  B4D8               	btfsc	status,2,c
  2039   001414  EFC1  F009         	goto	l1603
  2040   001418  0A03               	xorlw	3	; case 2
  2041   00141A  B4D8               	btfsc	status,2,c
  2042   00141C  EFC9  F009         	goto	l1605
  2043   001420  0A01               	xorlw	1	; case 3
  2044   001422  B4D8               	btfsc	status,2,c
  2045   001424  EFD1  F009         	goto	l1607
  2046   001428  0A07               	xorlw	7	; case 4
  2047   00142A  B4D8               	btfsc	status,2,c
  2048   00142C  EFD9  F009         	goto	l1609
  2049   001430  0A01               	xorlw	1	; case 5
  2050   001432  B4D8               	btfsc	status,2,c
  2051   001434  EFE1  F009         	goto	l1611
  2052   001438  0A03               	xorlw	3	; case 6
  2053   00143A  B4D8               	btfsc	status,2,c
  2054   00143C  EFE9  F009         	goto	l1613
  2055   001440  0A01               	xorlw	1	; case 7
  2056   001442  B4D8               	btfsc	status,2,c
  2057   001444  EFF1  F009         	goto	l1615
  2058   001448  EF26  F00A         	goto	l235
  2059   00144C                     l235:
  2060   00144C  0012               	return		;funcret
  2061   00144E                     __end_of_set_bit_uint8:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _clear_bit_uint8 *****************
  2065 ;; Defined at:
  2066 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  2069 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  2070 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  2071 ;;		 -> TRISB(1), TRISA(1), 
  2072 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      enum E2804
  2077 ;; Registers used:
  2078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2084 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;Total ram usage:        5 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_gpio_pin_direction_initialize
  2094 ;;		_gpio_pin_write_logic
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text13
  2099   00144E                     __ptext13:
  2100                           	callstack 0
  2101   00144E                     _clear_bit_uint8:
  2102                           	callstack 27
  2103   00144E                     
  2104                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  2105   00144E  504B               	movf	clear_bit_uint8@p_reg^0,w,c
  2106   001450  104C               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  2107   001452  A4D8               	btfss	status,2,c
  2108   001454  EF2E  F00A         	goto	u411
  2109   001458  EF30  F00A         	goto	u410
  2110   00145C                     u411:
  2111   00145C  EF72  F00A         	goto	l1653
  2112   001460                     u410:
  2113   001460  EF9F  F00A         	goto	l251
  2114   001464                     l1633:
  2115                           
  2116                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  2117   001464  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2118   001468  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2119   00146C  0EFE               	movlw	254
  2120   00146E  16DF               	andwf	indf2,f,c
  2121                           
  2122                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  2123   001470  EF9F  F00A         	goto	l251
  2124   001474                     l1635:
  2125                           
  2126                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  2127   001474  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2128   001478  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2129   00147C  0EFD               	movlw	253
  2130   00147E  16DF               	andwf	indf2,f,c
  2131                           
  2132                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  2133   001480  EF9F  F00A         	goto	l251
  2134   001484                     l1637:
  2135                           
  2136                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  2137   001484  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2138   001488  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2139   00148C  0EFB               	movlw	251
  2140   00148E  16DF               	andwf	indf2,f,c
  2141                           
  2142                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  2143   001490  EF9F  F00A         	goto	l251
  2144   001494                     l1639:
  2145                           
  2146                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  2147   001494  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2148   001498  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2149   00149C  0EF7               	movlw	247
  2150   00149E  16DF               	andwf	indf2,f,c
  2151                           
  2152                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  2153   0014A0  EF9F  F00A         	goto	l251
  2154   0014A4                     l1641:
  2155                           
  2156                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  2157   0014A4  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2158   0014A8  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2159   0014AC  0EEF               	movlw	239
  2160   0014AE  16DF               	andwf	indf2,f,c
  2161                           
  2162                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  2163   0014B0  EF9F  F00A         	goto	l251
  2164   0014B4                     l1643:
  2165                           
  2166                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  2167   0014B4  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2168   0014B8  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2169   0014BC  0EDF               	movlw	223
  2170   0014BE  16DF               	andwf	indf2,f,c
  2171                           
  2172                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  2173   0014C0  EF9F  F00A         	goto	l251
  2174   0014C4                     l1645:
  2175                           
  2176                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  2177   0014C4  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2178   0014C8  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2179   0014CC  0EBF               	movlw	191
  2180   0014CE  16DF               	andwf	indf2,f,c
  2181                           
  2182                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  2183   0014D0  EF9F  F00A         	goto	l251
  2184   0014D4                     l1647:
  2185                           
  2186                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  2187   0014D4  C04B  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  2188   0014D8  C04C  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  2189   0014DC  0E7F               	movlw	127
  2190   0014DE  16DF               	andwf	indf2,f,c
  2191                           
  2192                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  2193   0014E0  EF9F  F00A         	goto	l251
  2194   0014E4                     l1653:
  2195   0014E4  504D               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  2196   0014E6  6E4E               	movwf	??_clear_bit_uint8^0,c
  2197   0014E8  6A4F               	clrf	(??_clear_bit_uint8+1)^0,c
  2198                           
  2199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 1, Range of values is 0 to 0
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte            4     3 (average)
  2205                           ;	Chosen strategy is simple_byte
  2206   0014EA  504F               	movf	(??_clear_bit_uint8+1)^0,w,c
  2207   0014EC  0A00               	xorlw	0	; case 0
  2208   0014EE  B4D8               	btfsc	status,2,c
  2209   0014F0  EF7C  F00A         	goto	l1973
  2210   0014F4  EF9F  F00A         	goto	l251
  2211   0014F8                     l1973:
  2212                           
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 8, Range of values is 0 to 7
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte           25    13 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219   0014F8  504E               	movf	??_clear_bit_uint8^0,w,c
  2220   0014FA  0A00               	xorlw	0	; case 0
  2221   0014FC  B4D8               	btfsc	status,2,c
  2222   0014FE  EF32  F00A         	goto	l1633
  2223   001502  0A01               	xorlw	1	; case 1
  2224   001504  B4D8               	btfsc	status,2,c
  2225   001506  EF3A  F00A         	goto	l1635
  2226   00150A  0A03               	xorlw	3	; case 2
  2227   00150C  B4D8               	btfsc	status,2,c
  2228   00150E  EF42  F00A         	goto	l1637
  2229   001512  0A01               	xorlw	1	; case 3
  2230   001514  B4D8               	btfsc	status,2,c
  2231   001516  EF4A  F00A         	goto	l1639
  2232   00151A  0A07               	xorlw	7	; case 4
  2233   00151C  B4D8               	btfsc	status,2,c
  2234   00151E  EF52  F00A         	goto	l1641
  2235   001522  0A01               	xorlw	1	; case 5
  2236   001524  B4D8               	btfsc	status,2,c
  2237   001526  EF5A  F00A         	goto	l1643
  2238   00152A  0A03               	xorlw	3	; case 6
  2239   00152C  B4D8               	btfsc	status,2,c
  2240   00152E  EF62  F00A         	goto	l1645
  2241   001532  0A01               	xorlw	1	; case 7
  2242   001534  B4D8               	btfsc	status,2,c
  2243   001536  EF6A  F00A         	goto	l1647
  2244   00153A  EF9F  F00A         	goto	l251
  2245   00153E                     l251:
  2246   00153E  0012               	return		;funcret
  2247   001540                     __end_of_clear_bit_uint8:
  2248                           	callstack 0
  2249                           
  2250                           	psect	smallconst
  2251   001000                     __psmallconst:
  2252                           	callstack 0
  2253   001000  00                 	db	0
  2254   001001  00                 	db	0	; dummy byte at the end
  2255   000000                     
  2256                           	psect	rparam
  2257   000000                     
  2258                           	psect	config
  2259                           
  2260                           ; Padding undefined space
  2261   300000                     	org	3145728
  2262   300000  FF                 	db	255
  2263                           
  2264                           ;Config register CONFIG1H @ 0x300001
  2265                           ;	Oscillator Selection bits
  2266                           ;	OSC = HS, HS oscillator
  2267                           ;	Fail-Safe Clock Monitor Enable bit
  2268                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2269                           ;	Internal/External Oscillator Switchover bit
  2270                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2271   300001                     	org	3145729
  2272   300001  02                 	db	2
  2273                           
  2274                           ;Config register CONFIG2L @ 0x300002
  2275                           ;	Power-up Timer Enable bit
  2276                           ;	PWRT = OFF, PWRT disabled
  2277                           ;	Brown-out Reset Enable bits
  2278                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2279                           ;	Brown Out Reset Voltage bits
  2280                           ;	BORV = 1, 
  2281   300002                     	org	3145730
  2282   300002  09                 	db	9
  2283                           
  2284                           ;Config register CONFIG2H @ 0x300003
  2285                           ;	Watchdog Timer Enable bit
  2286                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2287                           ;	Watchdog Timer Postscale Select bits
  2288                           ;	WDTPS = 32768, 1:32768
  2289   300003                     	org	3145731
  2290   300003  1E                 	db	30
  2291                           
  2292                           ; Padding undefined space
  2293   300004                     	org	3145732
  2294   300004  FF                 	db	255
  2295                           
  2296                           ;Config register CONFIG3H @ 0x300005
  2297                           ;	CCP2 MUX bit
  2298                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2299                           ;	PORTB A/D Enable bit
  2300                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2301                           ;	Low-Power Timer1 Oscillator Enable bit
  2302                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2303                           ;	MCLR Pin Enable bit
  2304                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2305   300005                     	org	3145733
  2306   300005  81                 	db	129
  2307                           
  2308                           ;Config register CONFIG4L @ 0x300006
  2309                           ;	Stack Full/Underflow Reset Enable bit
  2310                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2311                           ;	Single-Supply ICSP Enable bit
  2312                           ;	LVP = OFF, Single-Supply ICSP disabled
  2313                           ;	Extended Instruction Set Enable bit
  2314                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2315                           ;	Background Debugger Enable bit
  2316                           ;	DEBUG = 0x1, unprogrammed default
  2317   300006                     	org	3145734
  2318   300006  81                 	db	129
  2319                           
  2320                           ; Padding undefined space
  2321   300007                     	org	3145735
  2322   300007  FF                 	db	255
  2323                           
  2324                           ;Config register CONFIG5L @ 0x300008
  2325                           ;	Code Protection bit
  2326                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2327                           ;	Code Protection bit
  2328                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2329                           ;	Code Protection bit
  2330                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2331                           ;	Code Protection bit
  2332                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2333   300008                     	org	3145736
  2334   300008  0F                 	db	15
  2335                           
  2336                           ;Config register CONFIG5H @ 0x300009
  2337                           ;	Boot Block Code Protection bit
  2338                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2339                           ;	Data EEPROM Code Protection bit
  2340                           ;	CPD = OFF, Data EEPROM not code-protected
  2341   300009                     	org	3145737
  2342   300009  C0                 	db	192
  2343                           
  2344                           ;Config register CONFIG6L @ 0x30000A
  2345                           ;	Write Protection bit
  2346                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2347                           ;	Write Protection bit
  2348                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2349                           ;	Write Protection bit
  2350                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2351                           ;	Write Protection bit
  2352                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2353   30000A                     	org	3145738
  2354   30000A  0F                 	db	15
  2355                           
  2356                           ;Config register CONFIG6H @ 0x30000B
  2357                           ;	Configuration Register Write Protection bit
  2358                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2359                           ;	Boot Block Write Protection bit
  2360                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2361                           ;	Data EEPROM Write Protection bit
  2362                           ;	WRTD = OFF, Data EEPROM not write-protected
  2363   30000B                     	org	3145739
  2364   30000B  E0                 	db	224
  2365                           
  2366                           ;Config register CONFIG7L @ 0x30000C
  2367                           ;	Table Read Protection bit
  2368                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2369                           ;	Table Read Protection bit
  2370                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2371                           ;	Table Read Protection bit
  2372                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2373                           ;	Table Read Protection bit
  2374                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2375   30000C                     	org	3145740
  2376   30000C  0F                 	db	15
  2377                           
  2378                           ;Config register CONFIG7H @ 0x30000D
  2379                           ;	Boot Block Table Read Protection bit
  2380                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2381   30000D                     	org	3145741
  2382   30000D  40                 	db	64
  2383                           tosu	equ	0xFFF
  2384                           tosh	equ	0xFFE
  2385                           tosl	equ	0xFFD
  2386                           stkptr	equ	0xFFC
  2387                           pclatu	equ	0xFFB
  2388                           pclath	equ	0xFFA
  2389                           pcl	equ	0xFF9
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           indf0	equ	0xFEF
  2397                           postinc0	equ	0xFEE
  2398                           postdec0	equ	0xFED
  2399                           preinc0	equ	0xFEC
  2400                           plusw0	equ	0xFEB
  2401                           fsr0h	equ	0xFEA
  2402                           fsr0l	equ	0xFE9
  2403                           wreg	equ	0xFE8
  2404                           indf1	equ	0xFE7
  2405                           postinc1	equ	0xFE6
  2406                           postdec1	equ	0xFE5
  2407                           preinc1	equ	0xFE4
  2408                           plusw1	equ	0xFE3
  2409                           fsr1h	equ	0xFE2
  2410                           fsr1l	equ	0xFE1
  2411                           bsr	equ	0xFE0
  2412                           indf2	equ	0xFDF
  2413                           postinc2	equ	0xFDE
  2414                           postdec2	equ	0xFDD
  2415                           preinc2	equ	0xFDC
  2416                           plusw2	equ	0xFDB
  2417                           fsr2h	equ	0xFDA
  2418                           fsr2l	equ	0xFD9
  2419                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      92
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> led_init@led_pin(COMRAM[5]), push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), push_btn_2(COMRAM[7]), 
		 -> push_btn_2$button_pin(COMRAM[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_read_logic@p_logic	PTR enum E2821 size(1) Largest target is 1
		 -> push_button_read@btn_pin_logic(COMRAM[1]), 

    gpio_pin_read_logic@p_pin_config	PTR const struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_1$button_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_toggle@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), led_2(COMRAM[3]), 

    led_toggle@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    push_button_init@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), push_btn_2(COMRAM[7]), 

    push_button_read@p_button_state	PTR enum E2914 size(1) Largest target is 1
		 -> button_1_state(COMRAM[1]), 

    push_button_read@p_push_button	PTR struct . size(1) Largest target is 7
		 -> push_btn_1(COMRAM[7]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _magic_button->_led_toggle
    _push_button_read->_gpio_pin_read_logic
    _led_toggle->_gpio_pin_toggle_logic
    _app_init->_led_init
    _push_button_init->_gpio_pin_direction_initialize
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6494
                           _app_init
                       _magic_button
 ---------------------------------------------------------------------------------
 (1) _magic_button                                         0     0      0    1238
                         _led_toggle
                   _push_button_read
 ---------------------------------------------------------------------------------
 (2) _push_button_read                                     4     2      2     689
                                              5 COMRAM     4     2      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  5     3      2     293
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _led_toggle                                           6     5      1     549
                                              4 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_toggle_logic                                4     3      1     327
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    5256
                           _led_init
                   _push_button_init
 ---------------------------------------------------------------------------------
 (2) _push_button_init                                     1     0      1    1626
                                              8 COMRAM     1     0      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _led_init                                             7     6      1    3630
                                             12 COMRAM     6     5      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    3276
                                              9 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 4     2      2    1638
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1430
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _led_init
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
           _clear_bit_uint8
           _set_bit_uint8
         _gpio_pin_write_logic
           _clear_bit_uint8
           _set_bit_uint8
     _push_button_init
       _gpio_pin_direction_initialize
   _magic_button
     _led_toggle
       _gpio_pin_toggle_logic
     _push_button_read
       _gpio_pin_read_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      5C       1       72.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      39        0.0%
DATA                 0      0      5C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 18 19:24:00 2023

                                       l72 1670                                         l67 190A  
                                       l76 16B8        gpio_pin_write_logic@d_logic_desired 0051  
                                      l120 1928                                        l126 16DE  
                                      l127 175C                                        l251 153E  
                                      l235 144C                                        l323 17D8  
                                      l333 1268                                        l192 187E  
                                      l178 1832                                        l285 15FE  
                                      l349 116C                                        l297 135A  
                                      l449 192E                                        u400 136E  
                                      u401 136A                                        u410 1460  
                                      u411 145C                                        u420 1550  
                                      u500 1266                                        u421 154C  
                                      u430 1566                                        u510 176E  
                                      u431 1562                                        u511 176A  
                                      u440 127A                                        u520 1012  
                                      u600 1708                                        u441 1276  
                                      u521 100E                                        u601 1704  
                                      u450 1290                                        u530 1116  
                                      u610 1722                                        u451 128C  
                                      u531 1112                                        u611 171E  
                                      u460 12A0                                        u540 115E  
                                      u620 173E                                        u700 16AC  
                                      u461 129C                                        u541 115A  
                                      u621 173A                                        u701 16A8  
                                      u470 12B0                                        u550 191C  
                                      u630 1758                                        u471 12AC  
                                      u551 1918                                        u631 1754  
                                      u560 17EA                                        u640 1844  
                                      u480 117E                                        u561 17E6  
                                      u641 1840                                        u481 117A  
                                      u490 1264                                        u571 17F8  
                                      u651 1852                                        u491 125E  
                                      u580 16CA                                        u660 161C  
                                      u581 16C6                                        u661 1618  
                                      u590 16DA                                        u670 1644  
                                      u591 16D6                                        u671 1640  
                                      u680 1680                                        u681 167C  
                                      u690 1690                                        u691 168C  
           push_button_read@p_button_state 0051                                        wreg 0FE8  
                            ?_magic_button 004B            gpio_pin_read_logic@p_pin_config 004B  
                                     l1601 1372                                       l1611 13C2  
                                     l1603 1382                                       l1613 13D2  
                                     l1605 1392                                       l1621 13F2  
                                     l1701 1330                                       l1615 13E2  
                                     l1607 13A2                                       l1641 14A4  
                                     l1633 1464                                       l1609 13B2  
                                     l1801 10BA                                       l1721 11A2  
                                     l1713 1182                                       l1643 14B4  
                                     l1635 1474                                       l1627 144E  
                                     l1803 1116                                       l1723 11AA  
                                     l1715 118A                                       l1707 116E  
                                     l1645 14C4                                       l1637 1484  
                                     l1653 14E4                                       l1661 1550  
                                     l1813 190C                                       l1805 1128  
                                     l1725 11B2                                       l1717 1192  
                                     l1733 11C2                                       l1901 1690  
                                     l1647 14D4                                       l1639 1494  
                                     l1751 1774                                       l1743 175E  
                                     l1831 1800                                       l1823 17DA  
                                     l1807 115E                                       l1727 11BA  
                                     l1719 119A                                       l1735 1226  
                                     l1903 1698                                       l1665 156A  
                                     l1673 15CA                                       l1681 127A  
                                     l1753 1780                                       l1745 176E  
                                     l1833 180A                                       l1905 169C  
                                     l1595 135C                                       l1667 159A  
                                     l1659 1540                                       l1691 12C2  
                                     l1683 1290                                       l1763 17A2  
                                     l1835 1818                                       l1819 1920  
                                     l1851 16EC                                       l1843 16BA  
                                     l1907 16AC                                       l1931 192A  
                                     l1693 12F2                                       l1685 12A0  
                                     l1765 17D6                                       l1837 181C  
                                     l1829 17EE                                       l1781 101E  
                                     l1773 1002                                       l1861 173E  
                                     l1853 16F8                                       l1845 16CA  
                                     l1909 16B4                                       l1695 1300  
                                     l1679 126A                                       l1839 182A  
                                     l1791 1046                                       l1783 1026  
                                     l1871 1848                                       l1855 1708  
                                     l1689 12B4                                       l1793 104E  
                                     l1785 102E                                       l1873 185A  
                                     l1865 1834                                       l1961 11E0  
                                     l1857 1722                                       l1849 16E2  
                                     l1971 1406                                       l1883 18EA  
                                     l1963 1074                                       l1787 1036  
                                     l1779 1016                                       l1875 1864  
                                     l1859 172E                                       l1891 160C  
                                     l1973 14F8                                       l1965 17C0  
                                     l1885 18FA                                       l1789 103E  
                                     l1877 1872                                       l1893 161C  
                                     l1967 1344                                       l1887 1902  
                                     l1799 1056                                       l1879 1876  
                                     l1895 1644                                       l1969 15E8  
                                     l1897 165C                                       l1889 1600  
                                     l1899 1680                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _main 192A                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                   ?_gpio_pin_toggle_logic 004B                       _gpio_pin_write_logic 126A  
                                    ?_main 004B                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                             ??_magic_button 0055  
                                    _led_1 0031                                      _led_2 002E  
                                    tablat 0FF5                            led_on_off@F2938 003A  
                                    plusw1 0FE3                                      plusw2 0FDB  
                                    status 0FD8              push_button_init@p_push_button 0053  
           ?_gpio_pin_direction_initialize 0050                            __initialization 1880  
                             __end_of_main 193A                      ?_gpio_pin_write_logic 0050  
                                   ??_main 005D                              __activetblptr 0002  
                         __end_of_app_init 190C              push_button_read@p_push_button 0050  
                         __end_of_led_init 1834                                     clear_0 18A6  
                                   isa$std 0001                              led_init@F2933 003F  
                        ?_push_button_init 0053                          ?_push_button_read 0050  
                             __pdataCOMRAM 0001                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                         ??_push_button_init 0054  
                       ??_push_button_read 0052                      __end_of_set_bit_uint8 144E  
                            led_init@p_led 0057                                 __accesstop 0080  
                  __end_of__initialization 18AC                              ___rparam_used 0001  
                   ??_gpio_pin_write_logic 0052                       __end_of_magic_button 16BA  
                           __pcstackCOMRAM 004B                           _PORT_REG_ADD_arr 000B  
         gpio_pin_write_logic@p_pin_config 0050          gpio_pin_toggle_logic@p_pin_config 004B  
                  ??_gpio_pin_toggle_logic 004C                            led_toggle@F2942 0035  
               gpio_pin_read_logic@p_logic 004C                            led_toggle@p_led 004F  
                                ?_app_init 004B                            _LAT_REG_ADD_arr 0001  
                                ?_led_init 0057                          ??_clear_bit_uint8 004E  
                               _led_toggle 1834                                    __Hparam 0000  
                                  __Lparam 0000                        _gpio_pin_initialize 175E  
                      _gpio_pin_read_logic 116E                               __psmallconst 1000  
                                  __pcinit 1880                                    __ramtop 1000  
                                  __ptext0 192A                                    __ptext1 1600  
                                  __ptext2 16BA                                    __ptext3 116E  
                                  __ptext4 1834                                    __ptext5 1002  
                                  __ptext6 18EA                                    __ptext7 190C  
                                  __ptext8 17DA                                    __ptext9 175E  
          ??_gpio_pin_direction_initialize 0051                 clear_bit_uint8@d_IDX_BIT_X 004D  
                     ?_gpio_pin_initialize 0054                                 ??_app_init 005D  
                     ?_gpio_pin_read_logic 004B                                 ??_led_init 0058  
                     end_of_initialization 18AC                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 004B                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                        led_toggle@led_pin 0050                      ??_gpio_pin_initialize 0055  
                    ??_gpio_pin_read_logic 004D                               _magic_button 1600  
                               _push_btn_1 0027                                 _push_btn_2 0020  
                              ?_led_toggle 004F                              __pidataCOMRAM 18B6  
            gpio_pin_toggle_logic@bit_mask 004E                        start_initialization 1880  
    __end_of_gpio_pin_direction_initialize 1600              _gpio_pin_direction_initialize 1540  
                           _button_1_state 0034                             _button_2_state 001F  
          gpio_pin_initialize@p_pin_config 0054              __end_of_gpio_pin_toggle_logic 116E  
                          _clear_bit_uint8 144E                                __pbssCOMRAM 0035  
                              __smallconst 1000                              _set_bit_uint8 135C  
              gpio_pin_read_logic@bit_mask 004F                           _push_button_init 190C  
                         _push_button_read 16BA                                  _rise_edge 0048  
                  __end_of_clear_bit_uint8 1540              push_button_read@btn_pin_logic 0053  
                              _btn_counter 0044            _btn_1_high_valid_state_previous 0049  
                           ?_set_bit_uint8 004B                                  copy_data0 1894  
                             ??_led_toggle 0050                                   __Hrparam 0000  
                                 __Lrparam 0000                __end_of_gpio_pin_initialize 17DA  
                       __end_of_led_toggle 1880                __end_of_gpio_pin_read_logic 126A  
                 set_bit_uint8@d_IDX_BIT_X 004D                                   __ptext10 126A  
                                 __ptext11 1540                                   __ptext12 135C  
                                 __ptext13 144E                                   _app_init 18EA  
                   _btn_1_high_valid_state 004A                                   _led_init 17DA  
                                 isa$xinst 0000                           ?_clear_bit_uint8 004B  
                       set_bit_uint8@p_reg 004B                            ??_set_bit_uint8 004E  
             __end_of_gpio_pin_write_logic 135C  gpio_pin_direction_initialize@p_pin_config 0050  
                    _gpio_pin_toggle_logic 1002                   __end_of_push_button_init 192A  
                 __end_of_push_button_read 175E                           _TRIS_REG_ADD_arr 0015  
                          led_init@led_pin 0058  
