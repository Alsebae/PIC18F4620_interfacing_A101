

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 20:26:13 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 23/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   001552                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _LAT_REG_ADD_arr
    66   001552  89                 	db	137
    67   001553  0F                 	db	15
    68   001554  8A                 	db	138
    69   001555  0F                 	db	15
    70   001556  8B                 	db	139
    71   001557  0F                 	db	15
    72   001558  8C                 	db	140
    73   001559  0F                 	db	15
    74   00155A  8D                 	db	141
    75   00155B  0F                 	db	15
    76                           
    77                           ;initializer for _PORT_REG_ADD_arr
    78   00155C  80                 	db	128
    79   00155D  0F                 	db	15
    80   00155E  81                 	db	129
    81   00155F  0F                 	db	15
    82   001560  82                 	db	130
    83   001561  0F                 	db	15
    84   001562  83                 	db	131
    85   001563  0F                 	db	15
    86   001564  84                 	db	132
    87   001565  0F                 	db	15
    88                           
    89                           ;initializer for _TRIS_REG_ADD_arr
    90   001566  92                 	db	146
    91   001567  0F                 	db	15
    92   001568  93                 	db	147
    93   001569  0F                 	db	15
    94   00156A  94                 	db	148
    95   00156B  0F                 	db	15
    96   00156C  95                 	db	149
    97   00156D  0F                 	db	15
    98   00156E  96                 	db	150
    99   00156F  0F                 	db	15
   100                           
   101                           ;initializer for _push_btn_2
   102   001570  02                 	db	2
   103   001571  03                 	db	3
   104   001572  01                 	db	1
   105   001573  00                 	db	0
   106   001574  00                 	db	0
   107   001575  00                 	db	0
   108   001576  01                 	db	1
   109                           
   110                           ;initializer for _push_btn_1
   111   001577  02                 	db	2
   112   001578  02                 	db	2
   113   001579  01                 	db	1
   114   00157A  01                 	db	1
   115   00157B  01                 	db	1
   116   00157C  01                 	db	1
   117   00157D  00                 	db	0
   118                           
   119                           ;initializer for _pinpin
   120   00157E  00                 	db	0
   121   00157F  01                 	db	1
   122   001580  00                 	db	0
   123   001581  01                 	db	1
   124   001582  01                 	db	1
   125                           
   126                           ;initializer for _led_2
   127   001583  02                 	db	2
   128   001584  05                 	db	5
   129   001585  00                 	db	0
   130                           
   131                           ;initializer for _led_1
   132   001586  02                 	db	2
   133   001587  04                 	db	4
   134   001588  00                 	db	0
   135                           
   136                           ;initializer for _button_2_state
   137   001589  01                 	db	1
   138                           
   139                           ;initializer for _button_1_state
   140   00158A  01                 	db	1
   141                           
   142                           ;initializer for _relay_2
   143   00158B  02                 	db	2
   144   00158C  01                 	db	1
   145   00158D  00                 	db	0
   146   00158E  00                 	db	0
   147   00158F  00                 	db	0
   148   001590  01                 	db	1
   149                           
   150                           ;initializer for _relay_1
   151   001591  02                 	db	2
   152   001592  00                 	db	0
   153   001593  00                 	db	0
   154   001594  00                 	db	0
   155   001595  00                 	db	0
   156   001596  01                 	db	1
   157   000000                     _LATA	set	3977
   158   000000                     _PORTE	set	3972
   159   000000                     _PORTD	set	3971
   160   000000                     _PORTC	set	3970
   161   000000                     _PORTB	set	3969
   162   000000                     _PORTA	set	3968
   163   000000                     _TRISA	set	3986
   164   000000                     _TRISE	set	3990
   165   000000                     _TRISD	set	3989
   166   000000                     _TRISC	set	3988
   167   000000                     _TRISB	set	3987
   168   000000                     _LATE	set	3981
   169   000000                     _LATD	set	3980
   170   000000                     _LATC	set	3979
   171   000000                     _LATB	set	3978
   172                           
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   0015D4                     __pcinit:
   177                           	callstack 0
   178   0015D4                     start_initialization:
   179                           	callstack 0
   180   0015D4                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to COMRAM (69 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185   0015D4  0E52               	movlw	low __pidataCOMRAM
   186   0015D6  6EF6               	movwf	tblptrl,c
   187   0015D8  0E15               	movlw	high __pidataCOMRAM
   188   0015DA  6EF7               	movwf	tblptrh,c
   189   0015DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190   0015DE  6EF8               	movwf	tblptru,c
   191   0015E0  EE00  F001         	lfsr	0,__pdataCOMRAM
   192   0015E4  EE10 F045          	lfsr	1,69
   193   0015E8                     copy_data0:
   194   0015E8  0009               	tblrd		*+
   195   0015EA  CFF5 FFEE          	movff	tablat,postinc0
   196   0015EE  50E5               	movf	postdec1,w,c
   197   0015F0  50E1               	movf	fsr1l,w,c
   198   0015F2  E1FA               	bnz	copy_data0
   199                           
   200                           ; Clear objects allocated to COMRAM (27 bytes)
   201   0015F4  EE00  F046         	lfsr	0,__pbssCOMRAM
   202   0015F8  0E1B               	movlw	27
   203   0015FA                     clear_0:
   204   0015FA  6AEE               	clrf	postinc0,c
   205   0015FC  06E8               	decf	wreg,f,c
   206   0015FE  E1FD               	bnz	clear_0
   207   001600                     end_of_initialization:
   208                           	callstack 0
   209   001600                     __end_of__initialization:
   210                           	callstack 0
   211   001600  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212   001602  6EF8               	movwf	tblptru,c
   213   001604  0100               	movlb	0
   214   001606  EF2E  F00B         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217   000046                     __pbssCOMRAM:
   218                           	callstack 0
   219   000046                     led_toggle@F2942:
   220                           	callstack 0
   221   000046                     	ds	5
   222   00004B                     led_on_off@F2938:
   223                           	callstack 0
   224   00004B                     	ds	5
   225   000050                     led_init@F2933:
   226                           	callstack 0
   227   000050                     	ds	5
   228   000055                     _btn_counter:
   229                           	callstack 0
   230   000055                     	ds	4
   231   000059                     _program_step_counter:
   232                           	callstack 0
   233   000059                     	ds	4
   234   00005D                     _rise_edge:
   235                           	callstack 0
   236   00005D                     	ds	1
   237   00005E                     _btn_1_high_valid_state_previous:
   238                           	callstack 0
   239   00005E                     	ds	1
   240   00005F                     _btn_1_high_valid_state:
   241                           	callstack 0
   242   00005F                     	ds	1
   243   000060                     _program_counter:
   244                           	callstack 0
   245   000060                     	ds	1
   246                           
   247                           	psect	dataCOMRAM
   248   000001                     __pdataCOMRAM:
   249                           	callstack 0
   250   000001                     _LAT_REG_ADD_arr:
   251                           	callstack 0
   252   000001                     	ds	10
   253   00000B                     _PORT_REG_ADD_arr:
   254                           	callstack 0
   255   00000B                     	ds	10
   256   000015                     _TRIS_REG_ADD_arr:
   257                           	callstack 0
   258   000015                     	ds	10
   259   00001F                     _push_btn_2:
   260                           	callstack 0
   261   00001F                     	ds	7
   262   000026                     _push_btn_1:
   263                           	callstack 0
   264   000026                     	ds	7
   265   00002D                     _pinpin:
   266                           	callstack 0
   267   00002D                     	ds	5
   268   000032                     _led_2:
   269                           	callstack 0
   270   000032                     	ds	3
   271   000035                     _led_1:
   272                           	callstack 0
   273   000035                     	ds	3
   274   000038                     _button_2_state:
   275                           	callstack 0
   276   000038                     	ds	1
   277   000039                     _button_1_state:
   278                           	callstack 0
   279   000039                     	ds	1
   280   00003A                     _relay_2:
   281                           	callstack 0
   282   00003A                     	ds	6
   283   000040                     _relay_1:
   284                           	callstack 0
   285   000040                     	ds	6
   286                           
   287                           	psect	cstackCOMRAM
   288   000061                     __pcstackCOMRAM:
   289                           	callstack 0
   290   000061                     gpio_pin_toggle_logic@p_pin_config:
   291                           	callstack 0
   292   000061                     set_bit_uint8@p_reg:
   293                           	callstack 0
   294   000061                     clear_bit_uint8@p_reg:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x0
   298   000061                     	ds	1
   299   000062                     ??_gpio_pin_toggle_logic:
   300                           
   301                           ; 1 bytes @ 0x1
   302   000062                     	ds	1
   303   000063                     set_bit_uint8@d_IDX_BIT_X:
   304                           	callstack 0
   305   000063                     clear_bit_uint8@d_IDX_BIT_X:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x2
   309   000063                     	ds	1
   310   000064                     ??_set_bit_uint8:
   311   000064                     ??_clear_bit_uint8:
   312   000064                     gpio_pin_toggle_logic@bit_mask:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x3
   316   000064                     	ds	1
   317   000065                     relay_toggle@p_relay:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x4
   321   000065                     	ds	1
   322   000066                     ??_two_reverse_relay_5s:
   323   000066                     gpio_pin_direction_initialize@p_pin_config:
   324                           	callstack 0
   325   000066                     gpio_pin_write_logic@p_pin_config:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x5
   329   000066                     	ds	1
   330   000067                     ??_gpio_pin_direction_initialize:
   331   000067                     gpio_pin_write_logic@d_logic_desired:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x6
   335   000067                     	ds	1
   336   000068                     ??_gpio_pin_write_logic:
   337                           
   338                           ; 1 bytes @ 0x7
   339   000068                     	ds	2
   340   00006A                     relay_init@p_relay:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x9
   344   00006A                     	ds	1
   345   00006B                     
   346                           ; 1 bytes @ 0xA
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 34 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2  525[None  ] int 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels required when called: 4
   372 ;; This function calls:
   373 ;;		_app_init
   374 ;;		_calculate_step_counter
   375 ;;		_two_reverse_relay_5s
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text0
   382   00165C                     __ptext0:
   383                           	callstack 0
   384   00165C                     _main:
   385                           	callstack 27
   386   00165C                     
   387                           ;main.c: 36:     app_init();
   388   00165C  EC38  F00B         	call	_app_init	;wreg free
   389   001660                     l1994:
   390                           
   391                           ;main.c: 38:     {;main.c: 39:         calculate_step_counter() ;
   392   001660  ECCC  F00A         	call	_calculate_step_counter	;wreg free
   393   001664                     
   394                           ;main.c: 41:         two_reverse_relay_5s() ;
   395   001664  EC82  F00A         	call	_two_reverse_relay_5s	;wreg free
   396                           
   397                           ;main.c: 42:     }
   398   001668  EF30  F00B         	goto	l1994
   399   00166C  EF00  F000         	goto	start
   400   001670                     __end_of_main:
   401                           	callstack 0
   402                           
   403 ;; *************** function _two_reverse_relay_5s *****************
   404 ;; Defined at:
   405 ;;		line 174 in file "_APP/application.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 2
   426 ;; This function calls:
   427 ;;		_relay_toggle
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434   001504                     __ptext1:
   435                           	callstack 0
   436   001504                     _two_reverse_relay_5s:
   437                           	callstack 28
   438   001504                     
   439                           ;_APP/application.c: 191:     relay_toggle(&relay_1);
   440   001504  0E40               	movlw	low _relay_1
   441   001506  6E65               	movwf	relay_toggle@p_relay^0,c
   442   001508  EC1F  F00B         	call	_relay_toggle	;wreg free
   443   00150C                     
   444                           ;_APP/application.c: 192:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   445   00150C  0E0B               	movlw	11
   446   00150E  6E67               	movwf	(??_two_reverse_relay_5s+1)^0,c
   447   001510  0E26               	movlw	38
   448   001512  6E66               	movwf	??_two_reverse_relay_5s^0,c
   449   001514  0E5E               	movlw	94
   450   001516                     u667:
   451   001516  2EE8               	decfsz	wreg,f,c
   452   001518  D7FE               	bra	u667
   453   00151A  2E66               	decfsz	??_two_reverse_relay_5s^0,f,c
   454   00151C  D7FC               	bra	u667
   455   00151E  2E67               	decfsz	(??_two_reverse_relay_5s+1)^0,f,c
   456   001520  D7FA               	bra	u667
   457   001522                     
   458                           ;_APP/application.c: 193:     relay_toggle(&relay_1);
   459   001522  0E40               	movlw	low _relay_1
   460   001524  6E65               	movwf	relay_toggle@p_relay^0,c
   461   001526  EC1F  F00B         	call	_relay_toggle	;wreg free
   462   00152A                     
   463                           ;_APP/application.c: 194:     relay_toggle(&relay_2);
   464   00152A  0E3A               	movlw	low _relay_2
   465   00152C  6E65               	movwf	relay_toggle@p_relay^0,c
   466   00152E  EC1F  F00B         	call	_relay_toggle	;wreg free
   467   001532                     
   468                           ;_APP/application.c: 195:     _delay((unsigned long)((1000)*((8000000UL)/4000.0)));
   469   001532  0E0B               	movlw	11
   470   001534  6E67               	movwf	(??_two_reverse_relay_5s+1)^0,c
   471   001536  0E26               	movlw	38
   472   001538  6E66               	movwf	??_two_reverse_relay_5s^0,c
   473   00153A  0E5E               	movlw	94
   474   00153C                     u677:
   475   00153C  2EE8               	decfsz	wreg,f,c
   476   00153E  D7FE               	bra	u677
   477   001540  2E66               	decfsz	??_two_reverse_relay_5s^0,f,c
   478   001542  D7FC               	bra	u677
   479   001544  2E67               	decfsz	(??_two_reverse_relay_5s+1)^0,f,c
   480   001546  D7FA               	bra	u677
   481                           
   482                           ;_APP/application.c: 196:     relay_toggle(&relay_2);
   483   001548  0E3A               	movlw	low _relay_2
   484   00154A  6E65               	movwf	relay_toggle@p_relay^0,c
   485   00154C  EC1F  F00B         	call	_relay_toggle	;wreg free
   486   001550  0012               	return		;funcret
   487   001552                     __end_of_two_reverse_relay_5s:
   488                           	callstack 0
   489                           
   490 ;; *************** function _relay_toggle *****************
   491 ;; Defined at:
   492 ;;		line 59 in file "_HAL/Drivers/relay/relay.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  p_relay         1    4[COMRAM] PTR struct .
   495 ;;		 -> relay_2(6), relay_1(6), 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      enum E2804
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        1 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 1
   514 ;; This function calls:
   515 ;;		_gpio_pin_toggle_logic
   516 ;; This function is called by:
   517 ;;		_two_reverse_relay_5s
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text2
   522   00163E                     __ptext2:
   523                           	callstack 0
   524   00163E                     _relay_toggle:
   525                           	callstack 28
   526   00163E                     
   527                           ;_HAL/Drivers/relay/relay.c: 59: std_return relay_toggle(relay_t * p_relay);_HAL/Drivers
      +                          /relay/relay.c: 60: {;_HAL/Drivers/relay/relay.c: 61:     if(((void*)0) == p_relay)
   528   00163E  5065               	movf	relay_toggle@p_relay^0,w,c
   529   001640  A4D8               	btfss	status,2,c
   530   001642  EF25  F00B         	goto	u531
   531   001646  EF27  F00B         	goto	u530
   532   00164A                     u531:
   533   00164A  EF29  F00B         	goto	l1860
   534   00164E                     u530:
   535   00164E  EF2D  F00B         	goto	l259
   536   001652                     l1860:
   537                           
   538                           ;_HAL/Drivers/relay/relay.c: 66:     {;_HAL/Drivers/relay/relay.c: 74:         gpio_pin_
      +                          toggle_logic(&p_relay->relay_pin);
   539   001652  C065  F061         	movff	relay_toggle@p_relay,gpio_pin_toggle_logic@p_pin_config
   540   001656  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
   541   00165A                     l259:
   542   00165A  0012               	return		;funcret
   543   00165C                     __end_of_relay_toggle:
   544                           	callstack 0
   545                           
   546 ;; *************** function _gpio_pin_toggle_logic *****************
   547 ;; Defined at:
   548 ;;		line 380 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  p_pin_config    1    0[COMRAM] PTR struct .
   551 ;;		 -> led_toggle@led_pin(5), relay_2(6), relay_1(6), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  bit_mask        1    3[COMRAM] enum E2825
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      enum E2804
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        4 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_relay_toggle
   573 ;;		_led_toggle
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text3
   578   001002                     __ptext3:
   579                           	callstack 0
   580   001002                     _gpio_pin_toggle_logic:
   581                           	callstack 28
   582   001002                     
   583                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 384:     if(((void*)0) == p_pin_config)
   584   001002  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   585   001004  A4D8               	btfss	status,2,c
   586   001006  EF07  F008         	goto	u491
   587   00100A  EF09  F008         	goto	u490
   588   00100E                     u491:
   589   00100E  EF2B  F008         	goto	l1830
   590   001012                     u490:
   591   001012  EFB6  F008         	goto	l414
   592   001016                     l1810:
   593                           
   594                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 394:                 bit_mask = MASK_BIT_0;
   595   001016  0E01               	movlw	1
   596   001018  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   597                           
   598                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 395:                 break;
   599   00101A  EF5D  F008         	goto	l1832
   600   00101E                     l1812:
   601                           
   602                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 397:                 bit_mask = MASK_BIT_1;
   603   00101E  0E02               	movlw	2
   604   001020  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   605                           
   606                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 398:                 break;
   607   001022  EF5D  F008         	goto	l1832
   608   001026                     l1814:
   609                           
   610                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 400:                 bit_mask = MASK_BIT_2;
   611   001026  0E04               	movlw	4
   612   001028  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   613                           
   614                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 401:                 break;
   615   00102A  EF5D  F008         	goto	l1832
   616   00102E                     l1816:
   617                           
   618                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 403:                 bit_mask = MASK_BIT_3;
   619   00102E  0E08               	movlw	8
   620   001030  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   621                           
   622                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 404:                 break;
   623   001032  EF5D  F008         	goto	l1832
   624   001036                     l1818:
   625                           
   626                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 406:                 bit_mask = MASK_BIT_4;
   627   001036  0E10               	movlw	16
   628   001038  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   629                           
   630                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 407:                 break;
   631   00103A  EF5D  F008         	goto	l1832
   632   00103E                     l1820:
   633                           
   634                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 409:                 bit_mask = MASK_BIT_5;
   635   00103E  0E20               	movlw	32
   636   001040  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   637                           
   638                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 410:                 break;
   639   001042  EF5D  F008         	goto	l1832
   640   001046                     l1822:
   641                           
   642                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 412:                 bit_mask = MASK_BIT_6;
   643   001046  0E40               	movlw	64
   644   001048  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   645                           
   646                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 413:                 break;
   647   00104A  EF5D  F008         	goto	l1832
   648   00104E                     l1824:
   649                           
   650                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 bit_mask = MASK_BIT_7;
   651   00104E  0E80               	movlw	128
   652   001050  6E64               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   653                           
   654                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 416:                 break;
   655   001052  EF5D  F008         	goto	l1832
   656   001056                     l1830:
   657   001056  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   658   001058  6ED9               	movwf	fsr2l,c
   659   00105A  6ADA               	clrf	fsr2h,c
   660   00105C  0E01               	movlw	1
   661   00105E  26D9               	addwf	fsr2l,f,c
   662   001060  50DF               	movf	indf2,w,c
   663   001062  6E62               	movwf	??_gpio_pin_toggle_logic^0,c
   664   001064  6A63               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
   665                           
   666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   667                           ; Switch size 1, requested type "simple"
   668                           ; Number of cases is 1, Range of values is 0 to 0
   669                           ; switch strategies available:
   670                           ; Name         Instructions Cycles
   671                           ; simple_byte            4     3 (average)
   672                           ;	Chosen strategy is simple_byte
   673   001066  5063               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
   674   001068  0A00               	xorlw	0	; case 0
   675   00106A  B4D8               	btfsc	status,2,c
   676   00106C  EF3A  F008         	goto	l2018
   677   001070  EFB6  F008         	goto	l414
   678   001074                     l2018:
   679                           
   680                           ; Switch size 1, requested type "simple"
   681                           ; Number of cases is 8, Range of values is 0 to 7
   682                           ; switch strategies available:
   683                           ; Name         Instructions Cycles
   684                           ; simple_byte           25    13 (average)
   685                           ;	Chosen strategy is simple_byte
   686   001074  5062               	movf	??_gpio_pin_toggle_logic^0,w,c
   687   001076  0A00               	xorlw	0	; case 0
   688   001078  B4D8               	btfsc	status,2,c
   689   00107A  EF0B  F008         	goto	l1810
   690   00107E  0A01               	xorlw	1	; case 1
   691   001080  B4D8               	btfsc	status,2,c
   692   001082  EF0F  F008         	goto	l1812
   693   001086  0A03               	xorlw	3	; case 2
   694   001088  B4D8               	btfsc	status,2,c
   695   00108A  EF13  F008         	goto	l1814
   696   00108E  0A01               	xorlw	1	; case 3
   697   001090  B4D8               	btfsc	status,2,c
   698   001092  EF17  F008         	goto	l1816
   699   001096  0A07               	xorlw	7	; case 4
   700   001098  B4D8               	btfsc	status,2,c
   701   00109A  EF1B  F008         	goto	l1818
   702   00109E  0A01               	xorlw	1	; case 5
   703   0010A0  B4D8               	btfsc	status,2,c
   704   0010A2  EF1F  F008         	goto	l1820
   705   0010A6  0A03               	xorlw	3	; case 6
   706   0010A8  B4D8               	btfsc	status,2,c
   707   0010AA  EF23  F008         	goto	l1822
   708   0010AE  0A01               	xorlw	1	; case 7
   709   0010B0  B4D8               	btfsc	status,2,c
   710   0010B2  EF27  F008         	goto	l1824
   711   0010B6  EFB6  F008         	goto	l414
   712   0010BA                     l1832:
   713                           
   714                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
   715   0010BA  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   716   0010BC  6ED9               	movwf	fsr2l,c
   717   0010BE  6ADA               	clrf	fsr2h,c
   718   0010C0  50DF               	movf	indf2,w,c
   719   0010C2  0D02               	mullw	2
   720   0010C4  50F3               	movf	243,w,c
   721   0010C6  0F01               	addlw	low _LAT_REG_ADD_arr
   722   0010C8  6ED9               	movwf	fsr2l,c
   723   0010CA  6ADA               	clrf	fsr2h,c
   724   0010CC  CFDE F062          	movff	postinc2,??_gpio_pin_toggle_logic
   725   0010D0  CFDD F063          	movff	postdec2,??_gpio_pin_toggle_logic+1
   726   0010D4  C062  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   727   0010D8  C063  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   728   0010DC  5064               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
   729   0010DE  1ADF               	xorwf	indf2,f,c
   730                           
   731                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
   732   0010E0  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   733   0010E2  6ED9               	movwf	fsr2l,c
   734   0010E4  6ADA               	clrf	fsr2h,c
   735   0010E6  50DF               	movf	indf2,w,c
   736   0010E8  0D02               	mullw	2
   737   0010EA  50F3               	movf	243,w,c
   738   0010EC  0F01               	addlw	low _LAT_REG_ADD_arr
   739   0010EE  6ED9               	movwf	fsr2l,c
   740   0010F0  6ADA               	clrf	fsr2h,c
   741   0010F2  CFDE F062          	movff	postinc2,??_gpio_pin_toggle_logic
   742   0010F6  CFDD F063          	movff	postdec2,??_gpio_pin_toggle_logic+1
   743   0010FA  C062  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   744   0010FE  C063  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   745   001102  50DF               	movf	indf2,w,c
   746   001104  1464               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   747   001106  1864               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
   748   001108  A4D8               	btfss	status,2,c
   749   00110A  EF89  F008         	goto	u501
   750   00110E  EF8B  F008         	goto	u500
   751   001112                     u501:
   752   001112  EF94  F008         	goto	l1836
   753   001116                     u500:
   754   001116                     
   755                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 424:             p_pin_config->logic = LOGIC_ON;
   756   001116  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   757   001118  6ED9               	movwf	fsr2l,c
   758   00111A  6ADA               	clrf	fsr2h,c
   759   00111C  0E03               	movlw	3
   760   00111E  26D9               	addwf	fsr2l,f,c
   761   001120  0E01               	movlw	1
   762   001122  6EDF               	movwf	indf2,c
   763   001124  EFB6  F008         	goto	l414
   764   001128                     l1836:
   765   001128  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   766   00112A  6ED9               	movwf	fsr2l,c
   767   00112C  6ADA               	clrf	fsr2h,c
   768   00112E  50DF               	movf	indf2,w,c
   769   001130  0D02               	mullw	2
   770   001132  50F3               	movf	243,w,c
   771   001134  0F01               	addlw	low _LAT_REG_ADD_arr
   772   001136  6ED9               	movwf	fsr2l,c
   773   001138  6ADA               	clrf	fsr2h,c
   774   00113A  CFDE F062          	movff	postinc2,??_gpio_pin_toggle_logic
   775   00113E  CFDD F063          	movff	postdec2,??_gpio_pin_toggle_logic+1
   776   001142  C062  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   777   001146  C063  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   778   00114A  50DF               	movf	indf2,w,c
   779   00114C  1464               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   780   00114E  0900               	iorlw	0
   781   001150  A4D8               	btfss	status,2,c
   782   001152  EFAD  F008         	goto	u511
   783   001156  EFAF  F008         	goto	u510
   784   00115A                     u511:
   785   00115A  EFB6  F008         	goto	l414
   786   00115E                     u510:
   787   00115E                     
   788                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 426:             p_pin_config->logic = LOGIC_ON;
   789   00115E  5061               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   790   001160  6ED9               	movwf	fsr2l,c
   791   001162  6ADA               	clrf	fsr2h,c
   792   001164  0E03               	movlw	3
   793   001166  26D9               	addwf	fsr2l,f,c
   794   001168  0E01               	movlw	1
   795   00116A  6EDF               	movwf	indf2,c
   796   00116C                     l414:
   797   00116C  0012               	return		;funcret
   798   00116E                     __end_of_gpio_pin_toggle_logic:
   799                           	callstack 0
   800                           
   801 ;; *************** function _calculate_step_counter *****************
   802 ;; Defined at:
   803 ;;		line 29 in file "_APP/application.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text4
   831   001598                     __ptext4:
   832                           	callstack 0
   833   001598                     _calculate_step_counter:
   834                           	callstack 30
   835   001598                     
   836                           ;_APP/application.c: 31:     program_step_counter++;
   837   001598  0E01               	movlw	1
   838   00159A  2659               	addwf	_program_step_counter^0,f,c
   839   00159C  0E00               	movlw	0
   840   00159E  225A               	addwfc	(_program_step_counter+1)^0,f,c
   841   0015A0  225B               	addwfc	(_program_step_counter+2)^0,f,c
   842   0015A2  225C               	addwfc	(_program_step_counter+3)^0,f,c
   843                           
   844                           ;_APP/application.c: 32:     if (0xFFFFFFFE == program_step_counter)
   845   0015A4  0EFE               	movlw	254
   846   0015A6  1859               	xorwf	_program_step_counter^0,w,c
   847   0015A8  E10A               	bnz	u541
   848   0015AA  285A               	incf	(_program_step_counter+1)^0,w,c
   849   0015AC  E108               	bnz	u541
   850   0015AE  285B               	incf	(_program_step_counter+2)^0,w,c
   851   0015B0  E106               	bnz	u541
   852   0015B2  285C               	incf	(_program_step_counter+3)^0,w,c
   853   0015B4  A4D8               	btfss	status,2,c
   854   0015B6  EFDF  F00A         	goto	u541
   855   0015BA  EFE1  F00A         	goto	u540
   856   0015BE                     u541:
   857   0015BE  EFE9  F00A         	goto	l74
   858   0015C2                     u540:
   859   0015C2                     
   860                           ;_APP/application.c: 33:     {;_APP/application.c: 34:         program_step_counter = 0;
   861   0015C2  0E00               	movlw	0
   862   0015C4  6E59               	movwf	_program_step_counter^0,c
   863   0015C6  0E00               	movlw	0
   864   0015C8  6E5A               	movwf	(_program_step_counter+1)^0,c
   865   0015CA  0E00               	movlw	0
   866   0015CC  6E5B               	movwf	(_program_step_counter+2)^0,c
   867   0015CE  0E00               	movlw	0
   868   0015D0  6E5C               	movwf	(_program_step_counter+3)^0,c
   869   0015D2                     l74:
   870   0015D2  0012               	return		;funcret
   871   0015D4                     __end_of_calculate_step_counter:
   872                           	callstack 0
   873                           
   874 ;; *************** function _app_init *****************
   875 ;; Defined at:
   876 ;;		line 40 in file "_APP/application.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 3
   897 ;; This function calls:
   898 ;;		_relay_init
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text5
   905   001670                     __ptext5:
   906                           	callstack 0
   907   001670                     _app_init:
   908                           	callstack 27
   909   001670                     
   910                           ;_APP/application.c: 44:     relay_init(&relay_1);
   911   001670  0E40               	movlw	low _relay_1
   912   001672  6E6A               	movwf	relay_init@p_relay^0,c
   913   001674  EC05  F00B         	call	_relay_init	;wreg free
   914                           
   915                           ;_APP/application.c: 45:     relay_init(&relay_2);
   916   001678  0E3A               	movlw	low _relay_2
   917   00167A  6E6A               	movwf	relay_init@p_relay^0,c
   918   00167C  EC05  F00B         	call	_relay_init	;wreg free
   919   001680  0012               	return		;funcret
   920   001682                     __end_of_app_init:
   921                           	callstack 0
   922                           
   923 ;; *************** function _relay_init *****************
   924 ;; Defined at:
   925 ;;		line 5 in file "_HAL/Drivers/relay/relay.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  p_relay         1    9[COMRAM] PTR struct .
   928 ;;		 -> relay_2(6), relay_1(6), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      enum E2804
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   940 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;Total ram usage:        1 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 2
   947 ;; This function calls:
   948 ;;		_gpio_pin_direction_initialize
   949 ;;		_gpio_pin_write_logic
   950 ;; This function is called by:
   951 ;;		_app_init
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text6
   956   00160A                     __ptext6:
   957                           	callstack 0
   958   00160A                     _relay_init:
   959                           	callstack 27
   960   00160A                     
   961                           ;_HAL/Drivers/relay/relay.c: 5: std_return relay_init(relay_t * p_relay);_HAL/Drivers/re
      +                          lay/relay.c: 6: {;_HAL/Drivers/relay/relay.c: 7:     if(((void*)0) == p_relay)
   962   00160A  506A               	movf	relay_init@p_relay^0,w,c
   963   00160C  A4D8               	btfss	status,2,c
   964   00160E  EF0B  F00B         	goto	u521
   965   001612  EF0D  F00B         	goto	u520
   966   001616                     u521:
   967   001616  EF0F  F00B         	goto	l1850
   968   00161A                     u520:
   969   00161A  EF1E  F00B         	goto	l245
   970   00161E                     l1850:
   971                           
   972                           ;_HAL/Drivers/relay/relay.c: 12:     {;_HAL/Drivers/relay/relay.c: 20:         gpio_pin_
      +                          direction_initialize(&p_relay->relay_pin);
   973   00161E  C06A  F066         	movff	relay_init@p_relay,gpio_pin_direction_initialize@p_pin_config
   974   001622  EC22  F00A         	call	_gpio_pin_direction_initialize	;wreg free
   975                           
   976                           ;_HAL/Drivers/relay/relay.c: 21:         gpio_pin_write_logic(&p_relay->relay_pin,p_rela
      +                          y->relay_pin.logic);
   977   001626  C06A  F066         	movff	relay_init@p_relay,gpio_pin_write_logic@p_pin_config
   978   00162A  506A               	movf	relay_init@p_relay^0,w,c
   979   00162C  6ED9               	movwf	fsr2l,c
   980   00162E  6ADA               	clrf	fsr2h,c
   981   001630  0E03               	movlw	3
   982   001632  26D9               	addwf	fsr2l,f,c
   983   001634  50DF               	movf	indf2,w,c
   984   001636  6E67               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   985   001638  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
   986   00163C                     l245:
   987   00163C  0012               	return		;funcret
   988   00163E                     __end_of_relay_init:
   989                           	callstack 0
   990                           
   991 ;; *************** function _gpio_pin_write_logic *****************
   992 ;; Defined at:
   993 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  p_pin_config    1    5[COMRAM] PTR struct .
   996 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), relay_2(6), relay_1(6), 
   997 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      enum E2804
  1002 ;; Registers used:
  1003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 1
  1016 ;; This function calls:
  1017 ;;		_clear_bit_uint8
  1018 ;;		_set_bit_uint8
  1019 ;; This function is called by:
  1020 ;;		_relay_init
  1021 ;;		_led_on_off
  1022 ;;		_relay_on_off
  1023 ;;		_gpio_pin_initialize
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text7
  1028   00116E                     __ptext7:
  1029                           	callstack 0
  1030   00116E                     _gpio_pin_write_logic:
  1031                           	callstack 27
  1032   00116E                     
  1033                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
  1034   00116E  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1035   001170  B4D8               	btfsc	status,2,c
  1036   001172  EFBD  F008         	goto	u451
  1037   001176  EFBF  F008         	goto	u450
  1038   00117A                     u451:
  1039   00117A  EF2F  F009         	goto	l362
  1040   00117E                     u450:
  1041   00117E  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1042   001180  6ED9               	movwf	fsr2l,c
  1043   001182  6ADA               	clrf	fsr2h,c
  1044   001184  0E05               	movlw	5
  1045   001186  60DF               	cpfslt	indf2,c
  1046   001188  EFC8  F008         	goto	u461
  1047   00118C  EFCA  F008         	goto	u460
  1048   001190                     u461:
  1049   001190  EF2F  F009         	goto	l362
  1050   001194                     u460:
  1051   001194  0467               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1052   001196  B4D8               	btfsc	status,2,c
  1053   001198  EFD0  F008         	goto	u471
  1054   00119C  EFD2  F008         	goto	u470
  1055   0011A0                     u471:
  1056   0011A0  EF1A  F009         	goto	l1798
  1057   0011A4                     u470:
  1058   0011A4  5067               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1059   0011A6  B4D8               	btfsc	status,2,c
  1060   0011A8  EFD8  F008         	goto	u481
  1061   0011AC  EFDA  F008         	goto	u480
  1062   0011B0                     u481:
  1063   0011B0  EF1A  F009         	goto	l1798
  1064   0011B4                     u480:
  1065   0011B4  EF2F  F009         	goto	l362
  1066   0011B8                     l1786:
  1067                           
  1068                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
  1069   0011B8  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1070   0011BA  6ED9               	movwf	fsr2l,c
  1071   0011BC  6ADA               	clrf	fsr2h,c
  1072   0011BE  0E03               	movlw	3
  1073   0011C0  26D9               	addwf	fsr2l,f,c
  1074   0011C2  C067  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1075   0011C6                     
  1076                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1077   0011C6  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1078   0011C8  6ED9               	movwf	fsr2l,c
  1079   0011CA  6ADA               	clrf	fsr2h,c
  1080   0011CC  50DF               	movf	indf2,w,c
  1081   0011CE  0D02               	mullw	2
  1082   0011D0  50F3               	movf	243,w,c
  1083   0011D2  0F01               	addlw	low _LAT_REG_ADD_arr
  1084   0011D4  6ED9               	movwf	fsr2l,c
  1085   0011D6  6ADA               	clrf	fsr2h,c
  1086   0011D8  CFDE F061          	movff	postinc2,set_bit_uint8@p_reg
  1087   0011DC  CFDD F062          	movff	postdec2,set_bit_uint8@p_reg+1
  1088   0011E0  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1089   0011E2  6ED9               	movwf	fsr2l,c
  1090   0011E4  6ADA               	clrf	fsr2h,c
  1091   0011E6  0E01               	movlw	1
  1092   0011E8  26D9               	addwf	fsr2l,f,c
  1093   0011EA  50DF               	movf	indf2,w,c
  1094   0011EC  6E63               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1095   0011EE  EC30  F009         	call	_set_bit_uint8	;wreg free
  1096                           
  1097                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  1098   0011F2  EF2F  F009         	goto	l362
  1099   0011F6                     l1790:
  1100                           
  1101                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  1102   0011F6  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1103   0011F8  6ED9               	movwf	fsr2l,c
  1104   0011FA  6ADA               	clrf	fsr2h,c
  1105   0011FC  0E03               	movlw	3
  1106   0011FE  26D9               	addwf	fsr2l,f,c
  1107   001200  C067  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  1108   001204                     
  1109                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1110   001204  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1111   001206  6ED9               	movwf	fsr2l,c
  1112   001208  6ADA               	clrf	fsr2h,c
  1113   00120A  50DF               	movf	indf2,w,c
  1114   00120C  0D02               	mullw	2
  1115   00120E  50F3               	movf	243,w,c
  1116   001210  0F01               	addlw	low _LAT_REG_ADD_arr
  1117   001212  6ED9               	movwf	fsr2l,c
  1118   001214  6ADA               	clrf	fsr2h,c
  1119   001216  CFDE F061          	movff	postinc2,clear_bit_uint8@p_reg
  1120   00121A  CFDD F062          	movff	postdec2,clear_bit_uint8@p_reg+1
  1121   00121E  5066               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  1122   001220  6ED9               	movwf	fsr2l,c
  1123   001222  6ADA               	clrf	fsr2h,c
  1124   001224  0E01               	movlw	1
  1125   001226  26D9               	addwf	fsr2l,f,c
  1126   001228  50DF               	movf	indf2,w,c
  1127   00122A  6E63               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1128   00122C  ECA9  F009         	call	_clear_bit_uint8	;wreg free
  1129                           
  1130                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  1131   001230  EF2F  F009         	goto	l362
  1132   001234                     l1798:
  1133   001234  5067               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  1134   001236  6E68               	movwf	??_gpio_pin_write_logic^0,c
  1135   001238  6A69               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1136                           
  1137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 1, Range of values is 0 to 0
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte            4     3 (average)
  1143                           ;	Chosen strategy is simple_byte
  1144   00123A  5069               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1145   00123C  0A00               	xorlw	0	; case 0
  1146   00123E  B4D8               	btfsc	status,2,c
  1147   001240  EF24  F009         	goto	l2020
  1148   001244  EF2F  F009         	goto	l362
  1149   001248                     l2020:
  1150                           
  1151                           ; Switch size 1, requested type "simple"
  1152                           ; Number of cases is 2, Range of values is 0 to 1
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte            7     4 (average)
  1156                           ;	Chosen strategy is simple_byte
  1157   001248  5068               	movf	??_gpio_pin_write_logic^0,w,c
  1158   00124A  0A00               	xorlw	0	; case 0
  1159   00124C  B4D8               	btfsc	status,2,c
  1160   00124E  EFFB  F008         	goto	l1790
  1161   001252  0A01               	xorlw	1	; case 1
  1162   001254  B4D8               	btfsc	status,2,c
  1163   001256  EFDC  F008         	goto	l1786
  1164   00125A  EF2F  F009         	goto	l362
  1165   00125E                     l362:
  1166   00125E  0012               	return		;funcret
  1167   001260                     __end_of_gpio_pin_write_logic:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _gpio_pin_direction_initialize *****************
  1171 ;; Defined at:
  1172 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1175 ;;		 -> led_init@led_pin(5), relay_2$relay_pin(5), relay_2(6), relay_1$relay_pin(5), 
  1176 ;;		 -> relay_1(6), 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      enum E2804
  1181 ;; Registers used:
  1182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;Total ram usage:        3 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 1
  1195 ;; This function calls:
  1196 ;;		_clear_bit_uint8
  1197 ;;		_set_bit_uint8
  1198 ;; This function is called by:
  1199 ;;		_relay_init
  1200 ;;		_push_button_init
  1201 ;;		_gpio_pin_initialize
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text8
  1206   001444                     __ptext8:
  1207                           	callstack 0
  1208   001444                     _gpio_pin_direction_initialize:
  1209                           	callstack 27
  1210   001444                     
  1211                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  1212   001444  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1213   001446  B4D8               	btfsc	status,2,c
  1214   001448  EF28  F00A         	goto	u431
  1215   00144C  EF2A  F00A         	goto	u430
  1216   001450                     u431:
  1217   001450  EF81  F00A         	goto	l350
  1218   001454                     u430:
  1219   001454  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1220   001456  6ED9               	movwf	fsr2l,c
  1221   001458  6ADA               	clrf	fsr2h,c
  1222   00145A  0E04               	movlw	4
  1223   00145C  64DF               	cpfsgt	indf2,c
  1224   00145E  EF33  F00A         	goto	u441
  1225   001462  EF35  F00A         	goto	u440
  1226   001466                     u441:
  1227   001466  EF67  F00A         	goto	l1770
  1228   00146A                     u440:
  1229   00146A  EF81  F00A         	goto	l350
  1230   00146E                     l1762:
  1231                           
  1232                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1233   00146E  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1234   001470  6ED9               	movwf	fsr2l,c
  1235   001472  6ADA               	clrf	fsr2h,c
  1236   001474  50DF               	movf	indf2,w,c
  1237   001476  0D02               	mullw	2
  1238   001478  50F3               	movf	243,w,c
  1239   00147A  0F15               	addlw	low _TRIS_REG_ADD_arr
  1240   00147C  6ED9               	movwf	fsr2l,c
  1241   00147E  6ADA               	clrf	fsr2h,c
  1242   001480  CFDE F061          	movff	postinc2,clear_bit_uint8@p_reg
  1243   001484  CFDD F062          	movff	postdec2,clear_bit_uint8@p_reg+1
  1244   001488  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1245   00148A  6ED9               	movwf	fsr2l,c
  1246   00148C  6ADA               	clrf	fsr2h,c
  1247   00148E  0E01               	movlw	1
  1248   001490  26D9               	addwf	fsr2l,f,c
  1249   001492  50DF               	movf	indf2,w,c
  1250   001494  6E63               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1251   001496  ECA9  F009         	call	_clear_bit_uint8	;wreg free
  1252                           
  1253                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  1254   00149A  EF81  F00A         	goto	l350
  1255   00149E                     l1764:
  1256                           
  1257                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1258   00149E  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1259   0014A0  6ED9               	movwf	fsr2l,c
  1260   0014A2  6ADA               	clrf	fsr2h,c
  1261   0014A4  50DF               	movf	indf2,w,c
  1262   0014A6  0D02               	mullw	2
  1263   0014A8  50F3               	movf	243,w,c
  1264   0014AA  0F15               	addlw	low _TRIS_REG_ADD_arr
  1265   0014AC  6ED9               	movwf	fsr2l,c
  1266   0014AE  6ADA               	clrf	fsr2h,c
  1267   0014B0  CFDE F061          	movff	postinc2,set_bit_uint8@p_reg
  1268   0014B4  CFDD F062          	movff	postdec2,set_bit_uint8@p_reg+1
  1269   0014B8  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1270   0014BA  6ED9               	movwf	fsr2l,c
  1271   0014BC  6ADA               	clrf	fsr2h,c
  1272   0014BE  0E01               	movlw	1
  1273   0014C0  26D9               	addwf	fsr2l,f,c
  1274   0014C2  50DF               	movf	indf2,w,c
  1275   0014C4  6E63               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1276   0014C6  EC30  F009         	call	_set_bit_uint8	;wreg free
  1277                           
  1278                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  1279   0014CA  EF81  F00A         	goto	l350
  1280   0014CE                     l1770:
  1281   0014CE  5066               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1282   0014D0  6ED9               	movwf	fsr2l,c
  1283   0014D2  6ADA               	clrf	fsr2h,c
  1284   0014D4  0E02               	movlw	2
  1285   0014D6  26D9               	addwf	fsr2l,f,c
  1286   0014D8  50DF               	movf	indf2,w,c
  1287   0014DA  6E67               	movwf	??_gpio_pin_direction_initialize^0,c
  1288   0014DC  6A68               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1289                           
  1290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 1, Range of values is 0 to 0
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte            4     3 (average)
  1296                           ;	Chosen strategy is simple_byte
  1297   0014DE  5068               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1298   0014E0  0A00               	xorlw	0	; case 0
  1299   0014E2  B4D8               	btfsc	status,2,c
  1300   0014E4  EF76  F00A         	goto	l2022
  1301   0014E8  EF81  F00A         	goto	l350
  1302   0014EC                     l2022:
  1303                           
  1304                           ; Switch size 1, requested type "simple"
  1305                           ; Number of cases is 2, Range of values is 0 to 1
  1306                           ; switch strategies available:
  1307                           ; Name         Instructions Cycles
  1308                           ; simple_byte            7     4 (average)
  1309                           ;	Chosen strategy is simple_byte
  1310   0014EC  5067               	movf	??_gpio_pin_direction_initialize^0,w,c
  1311   0014EE  0A00               	xorlw	0	; case 0
  1312   0014F0  B4D8               	btfsc	status,2,c
  1313   0014F2  EF37  F00A         	goto	l1762
  1314   0014F6  0A01               	xorlw	1	; case 1
  1315   0014F8  B4D8               	btfsc	status,2,c
  1316   0014FA  EF4F  F00A         	goto	l1764
  1317   0014FE  EF81  F00A         	goto	l350
  1318   001502                     l350:
  1319   001502  0012               	return		;funcret
  1320   001504                     __end_of_gpio_pin_direction_initialize:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _set_bit_uint8 *****************
  1324 ;; Defined at:
  1325 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1328 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1329 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1330 ;;		 -> TRISB(1), TRISA(1), 
  1331 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      enum E2804
  1336 ;; Registers used:
  1337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1343 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;Total ram usage:        5 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_gpio_pin_direction_initialize
  1353 ;;		_gpio_pin_write_logic
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text9
  1358   001260                     __ptext9:
  1359                           	callstack 0
  1360   001260                     _set_bit_uint8:
  1361                           	callstack 27
  1362   001260                     
  1363                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1364   001260  5061               	movf	set_bit_uint8@p_reg^0,w,c
  1365   001262  1062               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1366   001264  A4D8               	btfss	status,2,c
  1367   001266  EF37  F009         	goto	u411
  1368   00126A  EF39  F009         	goto	u410
  1369   00126E                     u411:
  1370   00126E  EF7B  F009         	goto	l1718
  1371   001272                     u410:
  1372   001272  EFA8  F009         	goto	l300
  1373   001276                     l1698:
  1374                           
  1375                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1376   001276  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1377   00127A  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1378   00127E  0E00               	movlw	0
  1379   001280  80DB               	bsf	plusw2,0,c
  1380                           
  1381                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1382   001282  EFA8  F009         	goto	l300
  1383   001286                     l1700:
  1384                           
  1385                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1386   001286  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1387   00128A  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1388   00128E  0E00               	movlw	0
  1389   001290  82DB               	bsf	plusw2,1,c
  1390                           
  1391                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1392   001292  EFA8  F009         	goto	l300
  1393   001296                     l1702:
  1394                           
  1395                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1396   001296  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1397   00129A  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1398   00129E  0E00               	movlw	0
  1399   0012A0  84DB               	bsf	plusw2,2,c
  1400                           
  1401                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1402   0012A2  EFA8  F009         	goto	l300
  1403   0012A6                     l1704:
  1404                           
  1405                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1406   0012A6  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1407   0012AA  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1408   0012AE  0E00               	movlw	0
  1409   0012B0  86DB               	bsf	plusw2,3,c
  1410                           
  1411                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1412   0012B2  EFA8  F009         	goto	l300
  1413   0012B6                     l1706:
  1414                           
  1415                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1416   0012B6  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1417   0012BA  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1418   0012BE  0E00               	movlw	0
  1419   0012C0  88DB               	bsf	plusw2,4,c
  1420                           
  1421                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1422   0012C2  EFA8  F009         	goto	l300
  1423   0012C6                     l1708:
  1424                           
  1425                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1426   0012C6  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1427   0012CA  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1428   0012CE  0E00               	movlw	0
  1429   0012D0  8ADB               	bsf	plusw2,5,c
  1430                           
  1431                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1432   0012D2  EFA8  F009         	goto	l300
  1433   0012D6                     l1710:
  1434                           
  1435                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1436   0012D6  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1437   0012DA  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1438   0012DE  0E00               	movlw	0
  1439   0012E0  8CDB               	bsf	plusw2,6,c
  1440                           
  1441                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1442   0012E2  EFA8  F009         	goto	l300
  1443   0012E6                     l1712:
  1444                           
  1445                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1446   0012E6  C061  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1447   0012EA  C062  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1448   0012EE  0E00               	movlw	0
  1449   0012F0  8EDB               	bsf	plusw2,7,c
  1450                           
  1451                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1452   0012F2  EFA8  F009         	goto	l300
  1453   0012F6                     l1718:
  1454   0012F6  5063               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1455   0012F8  6E64               	movwf	??_set_bit_uint8^0,c
  1456   0012FA  6A65               	clrf	(??_set_bit_uint8+1)^0,c
  1457                           
  1458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1459                           ; Switch size 1, requested type "simple"
  1460                           ; Number of cases is 1, Range of values is 0 to 0
  1461                           ; switch strategies available:
  1462                           ; Name         Instructions Cycles
  1463                           ; simple_byte            4     3 (average)
  1464                           ;	Chosen strategy is simple_byte
  1465   0012FC  5065               	movf	(??_set_bit_uint8+1)^0,w,c
  1466   0012FE  0A00               	xorlw	0	; case 0
  1467   001300  B4D8               	btfsc	status,2,c
  1468   001302  EF85  F009         	goto	l2024
  1469   001306  EFA8  F009         	goto	l300
  1470   00130A                     l2024:
  1471                           
  1472                           ; Switch size 1, requested type "simple"
  1473                           ; Number of cases is 8, Range of values is 0 to 7
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte           25    13 (average)
  1477                           ;	Chosen strategy is simple_byte
  1478   00130A  5064               	movf	??_set_bit_uint8^0,w,c
  1479   00130C  0A00               	xorlw	0	; case 0
  1480   00130E  B4D8               	btfsc	status,2,c
  1481   001310  EF3B  F009         	goto	l1698
  1482   001314  0A01               	xorlw	1	; case 1
  1483   001316  B4D8               	btfsc	status,2,c
  1484   001318  EF43  F009         	goto	l1700
  1485   00131C  0A03               	xorlw	3	; case 2
  1486   00131E  B4D8               	btfsc	status,2,c
  1487   001320  EF4B  F009         	goto	l1702
  1488   001324  0A01               	xorlw	1	; case 3
  1489   001326  B4D8               	btfsc	status,2,c
  1490   001328  EF53  F009         	goto	l1704
  1491   00132C  0A07               	xorlw	7	; case 4
  1492   00132E  B4D8               	btfsc	status,2,c
  1493   001330  EF5B  F009         	goto	l1706
  1494   001334  0A01               	xorlw	1	; case 5
  1495   001336  B4D8               	btfsc	status,2,c
  1496   001338  EF63  F009         	goto	l1708
  1497   00133C  0A03               	xorlw	3	; case 6
  1498   00133E  B4D8               	btfsc	status,2,c
  1499   001340  EF6B  F009         	goto	l1710
  1500   001344  0A01               	xorlw	1	; case 7
  1501   001346  B4D8               	btfsc	status,2,c
  1502   001348  EF73  F009         	goto	l1712
  1503   00134C  EFA8  F009         	goto	l300
  1504   001350                     l300:
  1505   001350  0012               	return		;funcret
  1506   001352                     __end_of_set_bit_uint8:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _clear_bit_uint8 *****************
  1510 ;; Defined at:
  1511 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1514 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1515 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1516 ;;		 -> TRISB(1), TRISA(1), 
  1517 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      enum E2804
  1522 ;; Registers used:
  1523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        5 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_gpio_pin_direction_initialize
  1539 ;;		_gpio_pin_write_logic
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text10
  1544   001352                     __ptext10:
  1545                           	callstack 0
  1546   001352                     _clear_bit_uint8:
  1547                           	callstack 27
  1548   001352                     
  1549                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1550   001352  5061               	movf	clear_bit_uint8@p_reg^0,w,c
  1551   001354  1062               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1552   001356  A4D8               	btfss	status,2,c
  1553   001358  EFB0  F009         	goto	u421
  1554   00135C  EFB2  F009         	goto	u420
  1555   001360                     u421:
  1556   001360  EFF4  F009         	goto	l1750
  1557   001364                     u420:
  1558   001364  EF21  F00A         	goto	l316
  1559   001368                     l1730:
  1560                           
  1561                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  1562   001368  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1563   00136C  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1564   001370  0EFE               	movlw	254
  1565   001372  16DF               	andwf	indf2,f,c
  1566                           
  1567                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1568   001374  EF21  F00A         	goto	l316
  1569   001378                     l1732:
  1570                           
  1571                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  1572   001378  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1573   00137C  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1574   001380  0EFD               	movlw	253
  1575   001382  16DF               	andwf	indf2,f,c
  1576                           
  1577                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  1578   001384  EF21  F00A         	goto	l316
  1579   001388                     l1734:
  1580                           
  1581                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  1582   001388  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1583   00138C  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1584   001390  0EFB               	movlw	251
  1585   001392  16DF               	andwf	indf2,f,c
  1586                           
  1587                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  1588   001394  EF21  F00A         	goto	l316
  1589   001398                     l1736:
  1590                           
  1591                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  1592   001398  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1593   00139C  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1594   0013A0  0EF7               	movlw	247
  1595   0013A2  16DF               	andwf	indf2,f,c
  1596                           
  1597                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  1598   0013A4  EF21  F00A         	goto	l316
  1599   0013A8                     l1738:
  1600                           
  1601                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  1602   0013A8  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1603   0013AC  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1604   0013B0  0EEF               	movlw	239
  1605   0013B2  16DF               	andwf	indf2,f,c
  1606                           
  1607                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  1608   0013B4  EF21  F00A         	goto	l316
  1609   0013B8                     l1740:
  1610                           
  1611                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  1612   0013B8  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1613   0013BC  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1614   0013C0  0EDF               	movlw	223
  1615   0013C2  16DF               	andwf	indf2,f,c
  1616                           
  1617                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  1618   0013C4  EF21  F00A         	goto	l316
  1619   0013C8                     l1742:
  1620                           
  1621                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  1622   0013C8  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1623   0013CC  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1624   0013D0  0EBF               	movlw	191
  1625   0013D2  16DF               	andwf	indf2,f,c
  1626                           
  1627                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  1628   0013D4  EF21  F00A         	goto	l316
  1629   0013D8                     l1744:
  1630                           
  1631                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  1632   0013D8  C061  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1633   0013DC  C062  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1634   0013E0  0E7F               	movlw	127
  1635   0013E2  16DF               	andwf	indf2,f,c
  1636                           
  1637                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  1638   0013E4  EF21  F00A         	goto	l316
  1639   0013E8                     l1750:
  1640   0013E8  5063               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1641   0013EA  6E64               	movwf	??_clear_bit_uint8^0,c
  1642   0013EC  6A65               	clrf	(??_clear_bit_uint8+1)^0,c
  1643                           
  1644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1645                           ; Switch size 1, requested type "simple"
  1646                           ; Number of cases is 1, Range of values is 0 to 0
  1647                           ; switch strategies available:
  1648                           ; Name         Instructions Cycles
  1649                           ; simple_byte            4     3 (average)
  1650                           ;	Chosen strategy is simple_byte
  1651   0013EE  5065               	movf	(??_clear_bit_uint8+1)^0,w,c
  1652   0013F0  0A00               	xorlw	0	; case 0
  1653   0013F2  B4D8               	btfsc	status,2,c
  1654   0013F4  EFFE  F009         	goto	l2026
  1655   0013F8  EF21  F00A         	goto	l316
  1656   0013FC                     l2026:
  1657                           
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 8, Range of values is 0 to 7
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte           25    13 (average)
  1663                           ;	Chosen strategy is simple_byte
  1664   0013FC  5064               	movf	??_clear_bit_uint8^0,w,c
  1665   0013FE  0A00               	xorlw	0	; case 0
  1666   001400  B4D8               	btfsc	status,2,c
  1667   001402  EFB4  F009         	goto	l1730
  1668   001406  0A01               	xorlw	1	; case 1
  1669   001408  B4D8               	btfsc	status,2,c
  1670   00140A  EFBC  F009         	goto	l1732
  1671   00140E  0A03               	xorlw	3	; case 2
  1672   001410  B4D8               	btfsc	status,2,c
  1673   001412  EFC4  F009         	goto	l1734
  1674   001416  0A01               	xorlw	1	; case 3
  1675   001418  B4D8               	btfsc	status,2,c
  1676   00141A  EFCC  F009         	goto	l1736
  1677   00141E  0A07               	xorlw	7	; case 4
  1678   001420  B4D8               	btfsc	status,2,c
  1679   001422  EFD4  F009         	goto	l1738
  1680   001426  0A01               	xorlw	1	; case 5
  1681   001428  B4D8               	btfsc	status,2,c
  1682   00142A  EFDC  F009         	goto	l1740
  1683   00142E  0A03               	xorlw	3	; case 6
  1684   001430  B4D8               	btfsc	status,2,c
  1685   001432  EFE4  F009         	goto	l1742
  1686   001436  0A01               	xorlw	1	; case 7
  1687   001438  B4D8               	btfsc	status,2,c
  1688   00143A  EFEC  F009         	goto	l1744
  1689   00143E  EF21  F00A         	goto	l316
  1690   001442                     l316:
  1691   001442  0012               	return		;funcret
  1692   001444                     __end_of_clear_bit_uint8:
  1693                           	callstack 0
  1694                           
  1695                           	psect	smallconst
  1696   001000                     __psmallconst:
  1697                           	callstack 0
  1698   001000  00                 	db	0
  1699   001001  00                 	db	0	; dummy byte at the end
  1700   000000                     
  1701                           	psect	rparam
  1702   000000                     
  1703                           	psect	config
  1704                           
  1705                           ; Padding undefined space
  1706   300000                     	org	3145728
  1707   300000  FF                 	db	255
  1708                           
  1709                           ;Config register CONFIG1H @ 0x300001
  1710                           ;	Oscillator Selection bits
  1711                           ;	OSC = HS, HS oscillator
  1712                           ;	Fail-Safe Clock Monitor Enable bit
  1713                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1714                           ;	Internal/External Oscillator Switchover bit
  1715                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1716   300001                     	org	3145729
  1717   300001  02                 	db	2
  1718                           
  1719                           ;Config register CONFIG2L @ 0x300002
  1720                           ;	Power-up Timer Enable bit
  1721                           ;	PWRT = OFF, PWRT disabled
  1722                           ;	Brown-out Reset Enable bits
  1723                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1724                           ;	Brown Out Reset Voltage bits
  1725                           ;	BORV = 1, 
  1726   300002                     	org	3145730
  1727   300002  09                 	db	9
  1728                           
  1729                           ;Config register CONFIG2H @ 0x300003
  1730                           ;	Watchdog Timer Enable bit
  1731                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1732                           ;	Watchdog Timer Postscale Select bits
  1733                           ;	WDTPS = 32768, 1:32768
  1734   300003                     	org	3145731
  1735   300003  1E                 	db	30
  1736                           
  1737                           ; Padding undefined space
  1738   300004                     	org	3145732
  1739   300004  FF                 	db	255
  1740                           
  1741                           ;Config register CONFIG3H @ 0x300005
  1742                           ;	CCP2 MUX bit
  1743                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1744                           ;	PORTB A/D Enable bit
  1745                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1746                           ;	Low-Power Timer1 Oscillator Enable bit
  1747                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1748                           ;	MCLR Pin Enable bit
  1749                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1750   300005                     	org	3145733
  1751   300005  81                 	db	129
  1752                           
  1753                           ;Config register CONFIG4L @ 0x300006
  1754                           ;	Stack Full/Underflow Reset Enable bit
  1755                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1756                           ;	Single-Supply ICSP Enable bit
  1757                           ;	LVP = OFF, Single-Supply ICSP disabled
  1758                           ;	Extended Instruction Set Enable bit
  1759                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1760                           ;	Background Debugger Enable bit
  1761                           ;	DEBUG = 0x1, unprogrammed default
  1762   300006                     	org	3145734
  1763   300006  81                 	db	129
  1764                           
  1765                           ; Padding undefined space
  1766   300007                     	org	3145735
  1767   300007  FF                 	db	255
  1768                           
  1769                           ;Config register CONFIG5L @ 0x300008
  1770                           ;	Code Protection bit
  1771                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1772                           ;	Code Protection bit
  1773                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1774                           ;	Code Protection bit
  1775                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1776                           ;	Code Protection bit
  1777                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1778   300008                     	org	3145736
  1779   300008  0F                 	db	15
  1780                           
  1781                           ;Config register CONFIG5H @ 0x300009
  1782                           ;	Boot Block Code Protection bit
  1783                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1784                           ;	Data EEPROM Code Protection bit
  1785                           ;	CPD = OFF, Data EEPROM not code-protected
  1786   300009                     	org	3145737
  1787   300009  C0                 	db	192
  1788                           
  1789                           ;Config register CONFIG6L @ 0x30000A
  1790                           ;	Write Protection bit
  1791                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1792                           ;	Write Protection bit
  1793                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1794                           ;	Write Protection bit
  1795                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1796                           ;	Write Protection bit
  1797                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1798   30000A                     	org	3145738
  1799   30000A  0F                 	db	15
  1800                           
  1801                           ;Config register CONFIG6H @ 0x30000B
  1802                           ;	Configuration Register Write Protection bit
  1803                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1804                           ;	Boot Block Write Protection bit
  1805                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1806                           ;	Data EEPROM Write Protection bit
  1807                           ;	WRTD = OFF, Data EEPROM not write-protected
  1808   30000B                     	org	3145739
  1809   30000B  E0                 	db	224
  1810                           
  1811                           ;Config register CONFIG7L @ 0x30000C
  1812                           ;	Table Read Protection bit
  1813                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1814                           ;	Table Read Protection bit
  1815                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1816                           ;	Table Read Protection bit
  1817                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1818                           ;	Table Read Protection bit
  1819                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1820   30000C                     	org	3145740
  1821   30000C  0F                 	db	15
  1822                           
  1823                           ;Config register CONFIG7H @ 0x30000D
  1824                           ;	Boot Block Table Read Protection bit
  1825                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1826   30000D                     	org	3145741
  1827   30000D  40                 	db	64
  1828                           tosu	equ	0xFFF
  1829                           tosh	equ	0xFFE
  1830                           tosl	equ	0xFFD
  1831                           stkptr	equ	0xFFC
  1832                           pclatu	equ	0xFFB
  1833                           pclath	equ	0xFFA
  1834                           pcl	equ	0xFF9
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           indf0	equ	0xFEF
  1842                           postinc0	equ	0xFEE
  1843                           postdec0	equ	0xFED
  1844                           preinc0	equ	0xFEC
  1845                           plusw0	equ	0xFEB
  1846                           fsr0h	equ	0xFEA
  1847                           fsr0l	equ	0xFE9
  1848                           wreg	equ	0xFE8
  1849                           indf1	equ	0xFE7
  1850                           postinc1	equ	0xFE6
  1851                           postdec1	equ	0xFE5
  1852                           preinc1	equ	0xFE4
  1853                           plusw1	equ	0xFE3
  1854                           fsr1h	equ	0xFE2
  1855                           fsr1l	equ	0xFE1
  1856                           bsr	equ	0xFE0
  1857                           indf2	equ	0xFDF
  1858                           postinc2	equ	0xFDE
  1859                           postdec2	equ	0xFDD
  1860                           preinc2	equ	0xFDC
  1861                           plusw2	equ	0xFDB
  1862                           fsr2h	equ	0xFDA
  1863                           fsr2l	equ	0xFD9
  1864                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        69
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10     106
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 6
		 -> led_init@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_1$relay_pin(COMRAM[5]), relay_2(COMRAM[6]), 
		 -> relay_2$relay_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 6
		 -> led_toggle@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 6
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    relay_init@p_relay	PTR struct . size(1) Largest target is 6
		 -> relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    relay_toggle@p_relay	PTR struct . size(1) Largest target is 6
		 -> relay_1(COMRAM[6]), relay_2(COMRAM[6]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _two_reverse_relay_5s->_relay_toggle
    _relay_toggle->_gpio_pin_toggle_logic
    _app_init->_relay_init
    _relay_init->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4591
                           _app_init
             _calculate_step_counter
               _two_reverse_relay_5s
 ---------------------------------------------------------------------------------
 (1) _two_reverse_relay_5s                                 2     2      0     751
                                              5 COMRAM     2     2      0
                       _relay_toggle
 ---------------------------------------------------------------------------------
 (2) _relay_toggle                                         1     0      1     751
                                              4 COMRAM     1     0      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_toggle_logic                                4     3      1     403
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _calculate_step_counter                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    3840
                         _relay_init
 ---------------------------------------------------------------------------------
 (2) _relay_init                                           1     0      1    3840
                                              9 COMRAM     1     0      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 4     2      2    2094
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1506
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _relay_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
   _calculate_step_counter
   _two_reverse_relay_5s
     _relay_toggle
       _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A      6A       1       83.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      39        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 20:26:13 2023

                                       l80 1550                                         l74 15D2  
                                       l77 1680        gpio_pin_write_logic@d_logic_desired 0067  
                                      l300 1350                                        l316 1442  
                                      l245 163C                                        l350 1502  
                                      l414 116C                                        l362 125E  
                                      l259 165A                                        u410 1272  
                                      u411 126E                                        u420 1364  
                                      u500 1116                                        u421 1360  
                                      u501 1112                                        u430 1454  
                                      u510 115E                                        u431 1450  
                                      u511 115A                                        u440 146A  
                                      u520 161A                                        u441 1466  
                                      u521 1616                                        u450 117E  
                                      u530 164E                                        u451 117A  
                                      u531 164A                                        u460 1194  
                                      u540 15C2                                        u461 1190  
                                      u541 15BE                                        u470 11A4  
                                      u471 11A0                                        u480 11B4  
                                      u481 11B0                                        u490 1012  
                                      u491 100E                                        u667 1516  
                                      u677 153C                                        wreg 0FE8  
                                     l2020 1248                                       l2022 14EC  
                                     l2024 130A                                       l2026 13FC  
                                     l2018 1074                                       l1700 1286  
                                     l1710 12D6                                       l1702 1296  
                                     l1712 12E6                                       l1704 12A6  
                                     l1730 1368                                       l1706 12B6  
                                     l1810 1016                                       l1740 13B8  
                                     l1732 1378                                       l1724 1352  
                                     l1708 12C6                                       l1820 103E  
                                     l1812 101E                                       l1804 1002  
                                     l1742 13C8                                       l1734 1388  
                                     l1750 13E8                                       l1718 12F6  
                                     l1822 1046                                       l1814 1026  
                                     l1830 1056                                       l1744 13D8  
                                     l1736 1398                                       l1824 104E  
                                     l1816 102E                                       l1832 10BA  
                                     l1738 13A8                                       l1762 146E  
                                     l1770 14CE                                       l1850 161E  
                                     l1834 1116                                       l1818 1036  
                                     l1692 1260                                       l1764 149E  
                                     l1756 1444                                       l1780 1194  
                                     l1844 160A                                       l1836 1128  
                                     l1860 1652                                       l1758 1454  
                                     l1790 11F6                                       l1782 11A4  
                                     l1838 115E                                       l1854 163E  
                                     l1870 1504                                       l1792 1204  
                                     l1776 116E                                       l1864 1598  
                                     l1872 150C                                       l1698 1276  
                                     l1786 11B8                                       l1778 117E  
                                     l1866 15C2                                       l1874 1522  
                                     l1788 11C6                                       l1868 1670  
                                     l1876 152A                                       l1798 1234  
                                     l1878 1532                                       l1992 165C  
                                     l1994 1660                                       l1996 1664  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _LATD 0F8C  
                                     _LATE 0F8D                                       _main 165C  
                                     fsr2h 0FDA                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     prodl 0FF3                                       start 0000  
                             ___param_bank 0000                     ?_gpio_pin_toggle_logic 0061  
                     _gpio_pin_write_logic 116E                                      ?_main 0061  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                                      _PORTD 0F83  
                                    _PORTE 0F84                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                                    _led_1 0035                                      _led_2 0032  
                                    tablat 0FF5                            led_on_off@F2938 004B  
                                    plusw2 0FDB                                      status 0FD8  
           ?_gpio_pin_direction_initialize 0066                            __initialization 15D4  
                             __end_of_main 1670                      ?_gpio_pin_write_logic 0066  
                                   ??_main 006B                              __activetblptr 0002  
                        relay_init@p_relay 006A                           __end_of_app_init 1682  
                                   clear_0 15FA                                     _pinpin 002D  
                                   isa$std 0001                              led_init@F2933 0050  
                             __pdataCOMRAM 0001                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                        relay_toggle@p_relay 0065  
                    __end_of_set_bit_uint8 1352                                 __accesstop 0080  
                  __end_of__initialization 1600                              ___rparam_used 0001  
                   ??_gpio_pin_write_logic 0068                             __pcstackCOMRAM 0061  
                         _PORT_REG_ADD_arr 000B           gpio_pin_write_logic@p_pin_config 0066  
        gpio_pin_toggle_logic@p_pin_config 0061                    ??_gpio_pin_toggle_logic 0062  
                            ?_relay_toggle 0065                   ??_calculate_step_counter 0061  
                     _program_step_counter 0059                            led_toggle@F2942 0046  
                                ?_app_init 0061                            _LAT_REG_ADD_arr 0001  
                        ??_clear_bit_uint8 0064                             ??_relay_toggle 0066  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 1000                                    __pcinit 15D4  
                                  __ramtop 1000                                    __ptext0 165C  
                                  __ptext1 1504                                    __ptext2 163E  
                                  __ptext3 1002                                    __ptext4 1598  
                                  __ptext5 1670                                    __ptext6 160A  
                                  __ptext7 116E                                    __ptext8 1444  
                                  __ptext9 1260            ??_gpio_pin_direction_initialize 0067  
               clear_bit_uint8@d_IDX_BIT_X 0063                                    _relay_1 0040  
                                  _relay_2 003A                                 ??_app_init 006B  
                     end_of_initialization 1600                                 _relay_init 160A  
                            __Lmediumconst 0000                       clear_bit_uint8@p_reg 0061  
             __end_of_two_reverse_relay_5s 1552                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc2 0FDE                                 _push_btn_1 0026  
                               _push_btn_2 001F                              __pidataCOMRAM 1552  
            gpio_pin_toggle_logic@bit_mask 0064                        start_initialization 15D4  
                     __end_of_relay_toggle 165C      __end_of_gpio_pin_direction_initialize 1504  
            _gpio_pin_direction_initialize 1444                     _calculate_step_counter 1598  
                           _button_1_state 0039                                ?_relay_init 006A  
                           _button_2_state 0038              __end_of_gpio_pin_toggle_logic 116E  
                          _clear_bit_uint8 1352                                __pbssCOMRAM 0046  
                     _two_reverse_relay_5s 1504                                __smallconst 1000  
                    ?_two_reverse_relay_5s 0061                              _set_bit_uint8 1260  
                                _rise_edge 005D                    __end_of_clear_bit_uint8 1444  
                              _btn_counter 0055            _btn_1_high_valid_state_previous 005E  
                           ?_set_bit_uint8 0061                                  copy_data0 15E8  
                                 __Hrparam 0000                                   __Lrparam 0000  
                             _relay_toggle 163E                     ??_two_reverse_relay_5s 0066  
                 set_bit_uint8@d_IDX_BIT_X 0063                    ?_calculate_step_counter 0061  
                                 __ptext10 1352                                   _app_init 1670  
                   _btn_1_high_valid_state 005F                               ??_relay_init 006B  
                                 isa$xinst 0000                            _program_counter 0060  
                         ?_clear_bit_uint8 0061                         set_bit_uint8@p_reg 0061  
           __end_of_calculate_step_counter 15D4                         __end_of_relay_init 163E  
                          ??_set_bit_uint8 0064               __end_of_gpio_pin_write_logic 1260  
gpio_pin_direction_initialize@p_pin_config 0066                      _gpio_pin_toggle_logic 1002  
                         _TRIS_REG_ADD_arr 0015  
