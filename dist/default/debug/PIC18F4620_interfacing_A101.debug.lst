

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 02:25:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 23/03/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4620 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   00272E                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _LAT_REG_ADD_arr
    92   00272E  89                 	db	137
    93   00272F  0F                 	db	15
    94   002730  8A                 	db	138
    95   002731  0F                 	db	15
    96   002732  8B                 	db	139
    97   002733  0F                 	db	15
    98   002734  8C                 	db	140
    99   002735  0F                 	db	15
   100   002736  8D                 	db	141
   101   002737  0F                 	db	15
   102                           
   103                           ;initializer for _TRIS_REG_ADD_arr
   104   002738  92                 	db	146
   105   002739  0F                 	db	15
   106   00273A  93                 	db	147
   107   00273B  0F                 	db	15
   108   00273C  94                 	db	148
   109   00273D  0F                 	db	15
   110   00273E  95                 	db	149
   111   00273F  0F                 	db	15
   112   002740  96                 	db	150
   113   002741  0F                 	db	15
   114                           
   115                           	psect	idataBANK0
   116   0023A6                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for init_msg_lcd@F3289
   120   0023A6  20                 	db	32
   121   0023A7  20                 	db	32
   122   0023A8  20                 	db	32
   123   0023A9  20                 	db	32
   124   0023AA  20                 	db	32
   125   0023AB  20                 	db	32
   126   0023AC  20                 	db	32
   127   0023AD  20                 	db	32
   128   0023AE  20                 	db	32
   129   0023AF  20                 	db	32
   130   0023B0  20                 	db	32
   131   0023B1  20                 	db	32
   132   0023B2  20                 	db	32
   133   0023B3  20                 	db	32
   134   0023B4  20                 	db	32
   135   0023B5  20                 	db	32
   136   0023B6  00                 	db	0
   137                           
   138                           ;initializer for init_msg_lcd@F3285
   139   0023B7  20                 	db	32
   140   0023B8  20                 	db	32
   141   0023B9  20                 	db	32
   142   0023BA  20                 	db	32
   143   0023BB  20                 	db	32
   144   0023BC  20                 	db	32
   145   0023BD  20                 	db	32
   146   0023BE  20                 	db	32
   147   0023BF  20                 	db	32
   148   0023C0  20                 	db	32
   149   0023C1  20                 	db	32
   150   0023C2  20                 	db	32
   151   0023C3  20                 	db	32
   152   0023C4  20                 	db	32
   153   0023C5  20                 	db	32
   154   0023C6  20                 	db	32
   155   0023C7  00                 	db	0
   156                           
   157                           ;initializer for _keypad_key_values_arr
   158   0023C8  31                 	db	49
   159   0023C9  32                 	db	50
   160   0023CA  33                 	db	51
   161   0023CB  41                 	db	65
   162   0023CC  34                 	db	52
   163   0023CD  35                 	db	53
   164   0023CE  36                 	db	54
   165   0023CF  42                 	db	66
   166   0023D0  37                 	db	55
   167   0023D1  38                 	db	56
   168   0023D2  39                 	db	57
   169   0023D3  43                 	db	67
   170   0023D4  2A                 	db	42
   171   0023D5  30                 	db	48
   172   0023D6  23                 	db	35
   173   0023D7  44                 	db	68
   174                           
   175                           ;initializer for _PORT_REG_ADD_arr
   176   0023D8  80                 	db	128
   177   0023D9  0F                 	db	15
   178   0023DA  81                 	db	129
   179   0023DB  0F                 	db	15
   180   0023DC  82                 	db	130
   181   0023DD  0F                 	db	15
   182   0023DE  83                 	db	131
   183   0023DF  0F                 	db	15
   184   0023E0  84                 	db	132
   185   0023E1  0F                 	db	15
   186                           
   187                           ;initializer for _lcd_2_8bit
   188   0023E2  02                 	db	2
   189   0023E3  06                 	db	6
   190   0023E4  00                 	db	0
   191   0023E5  00                 	db	0
   192   0023E6  00                 	db	0
   193   0023E7  02                 	db	2
   194   0023E8  07                 	db	7
   195   0023E9  00                 	db	0
   196   0023EA  00                 	db	0
   197   0023EB  00                 	db	0
   198   0023EC  03                 	db	3
   199   0023ED  00                 	db	0
   200   0023EE  00                 	db	0
   201   0023EF  00                 	db	0
   202   0023F0  00                 	db	0
   203   0023F1  03                 	db	3
   204   0023F2  01                 	db	1
   205   0023F3  00                 	db	0
   206   0023F4  00                 	db	0
   207   0023F5  00                 	db	0
   208   0023F6  03                 	db	3
   209   0023F7  02                 	db	2
   210   0023F8  00                 	db	0
   211   0023F9  00                 	db	0
   212   0023FA  00                 	db	0
   213   0023FB  03                 	db	3
   214   0023FC  03                 	db	3
   215   0023FD  00                 	db	0
   216   0023FE  00                 	db	0
   217   0023FF  00                 	db	0
   218   002400  03                 	db	3
   219   002401  04                 	db	4
   220   002402  00                 	db	0
   221   002403  00                 	db	0
   222   002404  00                 	db	0
   223   002405  03                 	db	3
   224   002406  05                 	db	5
   225   002407  00                 	db	0
   226   002408  00                 	db	0
   227   002409  00                 	db	0
   228   00240A  03                 	db	3
   229   00240B  06                 	db	6
   230   00240C  00                 	db	0
   231   00240D  00                 	db	0
   232   00240E  00                 	db	0
   233   00240F  03                 	db	3
   234   002410  07                 	db	7
   235   002411  00                 	db	0
   236   002412  00                 	db	0
   237   002413  00                 	db	0
   238                           
   239                           ;initializer for __car_char_arr
   240   002414  00                 	db	0
   241   002415  0A                 	db	10
   242   002416  0A                 	db	10
   243   002417  0A                 	db	10
   244   002418  00                 	db	0
   245   002419  1F                 	db	31
   246   00241A  11                 	db	17
   247   00241B  0E                 	db	14
   248                           
   249                           	psect	idataBANK1
   250   00274C                     __pidataBANK1:
   251                           	callstack 0
   252                           
   253                           ;initializer for __musicNote_char_arr
   254   00274C  04                 	db	4
   255   00274D  06                 	db	6
   256   00274E  05                 	db	5
   257   00274F  05                 	db	5
   258   002750  0D                 	db	13
   259   002751  1C                 	db	28
   260   002752  18                 	db	24
   261   002753  00                 	db	0
   262                           
   263                           	psect	idataBANK2
   264   001A46                     __pidataBANK2:
   265                           	callstack 0
   266                           
   267                           ;initializer for init_msg_lcd@F3303
   268   001A46  6C                 	db	108
   269   001A47  6F                 	db	111
   270   001A48  61                 	db	97
   271   001A49  64                 	db	100
   272   001A4A  69                 	db	105
   273   001A4B  6E                 	db	110
   274   001A4C  67                 	db	103
   275   001A4D  2E                 	db	46
   276   001A4E  2E                 	db	46
   277   001A4F  2E                 	db	46
   278   001A50  2E                 	db	46
   279   001A51  2E                 	db	46
   280   001A52  2E                 	db	46
   281   001A53  2E                 	db	46
   282   001A54  2E                 	db	46
   283   001A55  2E                 	db	46
   284   001A56  2E                 	db	46
   285   001A57  00                 	db	0
   286                           
   287                           ;initializer for init_msg_lcd@F3299
   288   001A58  6C                 	db	108
   289   001A59  6F                 	db	111
   290   001A5A  61                 	db	97
   291   001A5B  64                 	db	100
   292   001A5C  69                 	db	105
   293   001A5D  6E                 	db	110
   294   001A5E  67                 	db	103
   295   001A5F  2E                 	db	46
   296   001A60  2E                 	db	46
   297   001A61  2E                 	db	46
   298   001A62  2E                 	db	46
   299   001A63  2E                 	db	46
   300   001A64  2E                 	db	46
   301   001A65  2E                 	db	46
   302   001A66  2E                 	db	46
   303   001A67  20                 	db	32
   304   001A68  20                 	db	32
   305   001A69  00                 	db	0
   306                           
   307                           ;initializer for init_msg_lcd@F3295
   308   001A6A  6C                 	db	108
   309   001A6B  6F                 	db	111
   310   001A6C  61                 	db	97
   311   001A6D  64                 	db	100
   312   001A6E  69                 	db	105
   313   001A6F  6E                 	db	110
   314   001A70  67                 	db	103
   315   001A71  2E                 	db	46
   316   001A72  2E                 	db	46
   317   001A73  2E                 	db	46
   318   001A74  2E                 	db	46
   319   001A75  2E                 	db	46
   320   001A76  2E                 	db	46
   321   001A77  20                 	db	32
   322   001A78  20                 	db	32
   323   001A79  20                 	db	32
   324   001A7A  20                 	db	32
   325   001A7B  00                 	db	0
   326                           
   327                           ;initializer for init_msg_lcd@F3291
   328   001A7C  6C                 	db	108
   329   001A7D  6F                 	db	111
   330   001A7E  61                 	db	97
   331   001A7F  64                 	db	100
   332   001A80  69                 	db	105
   333   001A81  6E                 	db	110
   334   001A82  67                 	db	103
   335   001A83  2E                 	db	46
   336   001A84  2E                 	db	46
   337   001A85  2E                 	db	46
   338   001A86  2E                 	db	46
   339   001A87  20                 	db	32
   340   001A88  20                 	db	32
   341   001A89  20                 	db	32
   342   001A8A  20                 	db	32
   343   001A8B  20                 	db	32
   344   001A8C  20                 	db	32
   345   001A8D  00                 	db	0
   346                           
   347                           ;initializer for init_msg_lcd@F3287
   348   001A8E  6C                 	db	108
   349   001A8F  6F                 	db	111
   350   001A90  61                 	db	97
   351   001A91  64                 	db	100
   352   001A92  69                 	db	105
   353   001A93  6E                 	db	110
   354   001A94  67                 	db	103
   355   001A95  2E                 	db	46
   356   001A96  2E                 	db	46
   357   001A97  20                 	db	32
   358   001A98  20                 	db	32
   359   001A99  20                 	db	32
   360   001A9A  20                 	db	32
   361   001A9B  20                 	db	32
   362   001A9C  20                 	db	32
   363   001A9D  20                 	db	32
   364   001A9E  20                 	db	32
   365   001A9F  00                 	db	0
   366                           
   367                           ;initializer for init_msg_lcd@F3283
   368   001AA0  6C                 	db	108
   369   001AA1  6F                 	db	111
   370   001AA2  61                 	db	97
   371   001AA3  64                 	db	100
   372   001AA4  69                 	db	105
   373   001AA5  6E                 	db	110
   374   001AA6  67                 	db	103
   375   001AA7  20                 	db	32
   376   001AA8  20                 	db	32
   377   001AA9  20                 	db	32
   378   001AAA  20                 	db	32
   379   001AAB  20                 	db	32
   380   001AAC  20                 	db	32
   381   001AAD  20                 	db	32
   382   001AAE  20                 	db	32
   383   001AAF  20                 	db	32
   384   001AB0  20                 	db	32
   385   001AB1  00                 	db	0
   386                           
   387                           ;initializer for init_msg_lcd@F3281
   388   001AB2  20                 	db	32
   389   001AB3  50                 	db	80
   390   001AB4  4C                 	db	76
   391   001AB5  45                 	db	69
   392   001AB6  41                 	db	65
   393   001AB7  53                 	db	83
   394   001AB8  45                 	db	69
   395   001AB9  20                 	db	32
   396   001ABA  57                 	db	87
   397   001ABB  41                 	db	65
   398   001ABC  49                 	db	73
   399   001ABD  54                 	db	84
   400   001ABE  20                 	db	32
   401   001ABF  3D                 	db	61
   402   001AC0  29                 	db	41
   403   001AC1  20                 	db	32
   404   001AC2  20                 	db	32
   405   001AC3  00                 	db	0
   406                           
   407                           ;initializer for main@F3282
   408   001AC4  20                 	db	32
   409   001AC5  20                 	db	32
   410   001AC6  20                 	db	32
   411   001AC7  20                 	db	32
   412   001AC8  20                 	db	32
   413   001AC9  20                 	db	32
   414   001ACA  20                 	db	32
   415   001ACB  20                 	db	32
   416   001ACC  20                 	db	32
   417   001ACD  20                 	db	32
   418   001ACE  20                 	db	32
   419   001ACF  20                 	db	32
   420   001AD0  20                 	db	32
   421   001AD1  20                 	db	32
   422   001AD2  20                 	db	32
   423   001AD3  20                 	db	32
   424   001AD4  00                 	db	0
   425                           
   426                           ;initializer for main@F3280
   427   001AD5  2A                 	db	42
   428   001AD6  2A                 	db	42
   429   001AD7  2A                 	db	42
   430   001AD8  2A                 	db	42
   431   001AD9  42                 	db	66
   432   001ADA  4F                 	db	79
   433   001ADB  4F                 	db	79
   434   001ADC  4F                 	db	79
   435   001ADD  4F                 	db	79
   436   001ADE  4F                 	db	79
   437   001ADF  4F                 	db	79
   438   001AE0  4D                 	db	77
   439   001AE1  2A                 	db	42
   440   001AE2  2A                 	db	42
   441   001AE3  2A                 	db	42
   442   001AE4  2A                 	db	42
   443   001AE5  00                 	db	0
   444                           
   445                           ;initializer for init_msg_lcd@F3307
   446   001AE6  20                 	db	32
   447   001AE7  20                 	db	32
   448   001AE8  20                 	db	32
   449   001AE9  20                 	db	32
   450   001AEA  20                 	db	32
   451   001AEB  20                 	db	32
   452   001AEC  20                 	db	32
   453   001AED  20                 	db	32
   454   001AEE  20                 	db	32
   455   001AEF  20                 	db	32
   456   001AF0  20                 	db	32
   457   001AF1  20                 	db	32
   458   001AF2  20                 	db	32
   459   001AF3  20                 	db	32
   460   001AF4  20                 	db	32
   461   001AF5  20                 	db	32
   462   001AF6  00                 	db	0
   463                           
   464                           ;initializer for init_msg_lcd@F3305
   465   001AF7  20                 	db	32
   466   001AF8  20                 	db	32
   467   001AF9  20                 	db	32
   468   001AFA  20                 	db	32
   469   001AFB  20                 	db	32
   470   001AFC  20                 	db	32
   471   001AFD  20                 	db	32
   472   001AFE  20                 	db	32
   473   001AFF  20                 	db	32
   474   001B00  20                 	db	32
   475   001B01  20                 	db	32
   476   001B02  20                 	db	32
   477   001B03  20                 	db	32
   478   001B04  20                 	db	32
   479   001B05  20                 	db	32
   480   001B06  20                 	db	32
   481   001B07  00                 	db	0
   482                           
   483                           ;initializer for init_msg_lcd@F3301
   484   001B08  20                 	db	32
   485   001B09  20                 	db	32
   486   001B0A  20                 	db	32
   487   001B0B  20                 	db	32
   488   001B0C  20                 	db	32
   489   001B0D  20                 	db	32
   490   001B0E  20                 	db	32
   491   001B0F  20                 	db	32
   492   001B10  20                 	db	32
   493   001B11  20                 	db	32
   494   001B12  20                 	db	32
   495   001B13  20                 	db	32
   496   001B14  20                 	db	32
   497   001B15  20                 	db	32
   498   001B16  20                 	db	32
   499   001B17  20                 	db	32
   500   001B18  00                 	db	0
   501                           
   502                           ;initializer for init_msg_lcd@F3297
   503   001B19  20                 	db	32
   504   001B1A  20                 	db	32
   505   001B1B  20                 	db	32
   506   001B1C  20                 	db	32
   507   001B1D  20                 	db	32
   508   001B1E  20                 	db	32
   509   001B1F  20                 	db	32
   510   001B20  20                 	db	32
   511   001B21  20                 	db	32
   512   001B22  20                 	db	32
   513   001B23  20                 	db	32
   514   001B24  20                 	db	32
   515   001B25  20                 	db	32
   516   001B26  20                 	db	32
   517   001B27  20                 	db	32
   518   001B28  20                 	db	32
   519   001B29  00                 	db	0
   520                           
   521                           ;initializer for init_msg_lcd@F3293
   522   001B2A  20                 	db	32
   523   001B2B  20                 	db	32
   524   001B2C  20                 	db	32
   525   001B2D  20                 	db	32
   526   001B2E  20                 	db	32
   527   001B2F  20                 	db	32
   528   001B30  20                 	db	32
   529   001B31  20                 	db	32
   530   001B32  20                 	db	32
   531   001B33  20                 	db	32
   532   001B34  20                 	db	32
   533   001B35  20                 	db	32
   534   001B36  20                 	db	32
   535   001B37  20                 	db	32
   536   001B38  20                 	db	32
   537   001B39  20                 	db	32
   538   001B3A  00                 	db	0
   539   000000                     _LATA	set	3977
   540   000000                     _PORTE	set	3972
   541   000000                     _PORTD	set	3971
   542   000000                     _PORTC	set	3970
   543   000000                     _PORTB	set	3969
   544   000000                     _PORTA	set	3968
   545   000000                     _TRISA	set	3986
   546   000000                     _TRISE	set	3990
   547   000000                     _TRISD	set	3989
   548   000000                     _TRISC	set	3988
   549   000000                     _TRISB	set	3987
   550   000000                     _LATE	set	3981
   551   000000                     _LATD	set	3980
   552   000000                     _LATC	set	3979
   553   000000                     _LATB	set	3978
   554                           
   555                           	psect	smallconst
   556   001000                     __psmallconst:
   557                           	callstack 0
   558   001000  00                 	db	0
   559   001001                     STR_10:
   560   001001  20                 	db	32
   561   001002  20                 	db	32
   562   001003  20                 	db	32
   563   001004  20                 	db	32
   564   001005  20                 	db	32
   565   001006  20                 	db	32
   566   001007  20                 	db	32
   567   001008  20                 	db	32
   568   001009  20                 	db	32
   569   00100A  20                 	db	32
   570   00100B  20                 	db	32
   571   00100C  20                 	db	32
   572   00100D  20                 	db	32
   573   00100E  20                 	db	32
   574   00100F  20                 	db	32
   575   001010  20                 	db	32
   576   001011  00                 	db	0
   577   001012                     STR_9:
   578   001012  5F                 	db	95	;'_'
   579   001013  49                 	db	73	;'I'
   580   001014  4E                 	db	78	;'N'
   581   001015  49                 	db	73	;'I'
   582   001016  54                 	db	84	;'T'
   583   001017  49                 	db	73	;'I'
   584   001018  41                 	db	65	;'A'
   585   001019  4C                 	db	76	;'L'
   586   00101A  49                 	db	73	;'I'
   587   00101B  5A                 	db	90	;'Z'
   588   00101C  41                 	db	65	;'A'
   589   00101D  54                 	db	84	;'T'
   590   00101E  49                 	db	73	;'I'
   591   00101F  4F                 	db	79	;'O'
   592   001020  4E                 	db	78	;'N'
   593   001021  5F                 	db	95	;'_'
   594   001022  00                 	db	0
   595   001023                     STR_2:
   596   001023  5F                 	db	95	;'_'
   597   001024  57                 	db	87	;'W'
   598   001025  4F                 	db	79	;'O'
   599   001026  52                 	db	82	;'R'
   600   001027  4C                 	db	76	;'L'
   601   001028  44                 	db	68	;'D'
   602   001029  5F                 	db	95	;'_'
   603   00102A  00                 	db	0
   604   00102B                     STR_1:
   605   00102B  5F                 	db	95	;'_'
   606   00102C  48                 	db	72	;'H'
   607   00102D  45                 	db	69	;'E'
   608   00102E  4C                 	db	76	;'L'
   609   00102F  4C                 	db	76	;'L'
   610   001030  4F                 	db	79	;'O'
   611   001031  5F                 	db	95	;'_'
   612   001032  00                 	db	0
   613   001033                     STR_11:
   614   001033  25                 	db	37
   615   001034  69                 	db	105	;'i'
   616   001035  00                 	db	0
   617   001036                     STR_12:
   618   001036  25                 	db	37
   619   001037  75                 	db	117	;'u'
   620   001038  00                 	db	0
   621   001039  00                 	db	0	; dummy byte at the end
   622   000000                     
   623                           ; #config settings
   624                           
   625                           	psect	cinit
   626   0021C2                     __pcinit:
   627                           	callstack 0
   628   0021C2                     start_initialization:
   629                           	callstack 0
   630   0021C2                     __initialization:
   631                           	callstack 0
   632                           
   633                           ; Initialize objects allocated to BANK2 (245 bytes)
   634                           ; load TBLPTR registers with __pidataBANK2
   635   0021C2  0E46               	movlw	low __pidataBANK2
   636   0021C4  6EF6               	movwf	tblptrl,c
   637   0021C6  0E1A               	movlw	high __pidataBANK2
   638   0021C8  6EF7               	movwf	tblptrh,c
   639   0021CA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   640   0021CC  6EF8               	movwf	tblptru,c
   641   0021CE  EE02  F000         	lfsr	0,__pdataBANK2
   642   0021D2  EE10 F0F5          	lfsr	1,245
   643   0021D6                     copy_data0:
   644   0021D6  0009               	tblrd		*+
   645   0021D8  CFF5 FFEE          	movff	tablat,postinc0
   646   0021DC  50E5               	movf	postdec1,w,c
   647   0021DE  50E1               	movf	fsr1l,w,c
   648   0021E0  E1FA               	bnz	copy_data0
   649                           
   650                           ; Initialize objects allocated to BANK1 (8 bytes)
   651                           ; load TBLPTR registers with __pidataBANK1
   652   0021E2  0E4C               	movlw	low __pidataBANK1
   653   0021E4  6EF6               	movwf	tblptrl,c
   654   0021E6  0E27               	movlw	high __pidataBANK1
   655   0021E8  6EF7               	movwf	tblptrh,c
   656   0021EA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   657   0021EC  6EF8               	movwf	tblptru,c
   658   0021EE  EE01  F0F5         	lfsr	0,__pdataBANK1
   659   0021F2  EE10 F008          	lfsr	1,8
   660   0021F6                     copy_data1:
   661   0021F6  0009               	tblrd		*+
   662   0021F8  CFF5 FFEE          	movff	tablat,postinc0
   663   0021FC  50E5               	movf	postdec1,w,c
   664   0021FE  50E1               	movf	fsr1l,w,c
   665   002200  E1FA               	bnz	copy_data1
   666                           
   667                           ; Initialize objects allocated to BANK0 (118 bytes)
   668                           ; load TBLPTR registers with __pidataBANK0
   669   002202  0EA6               	movlw	low __pidataBANK0
   670   002204  6EF6               	movwf	tblptrl,c
   671   002206  0E23               	movlw	high __pidataBANK0
   672   002208  6EF7               	movwf	tblptrh,c
   673   00220A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   674   00220C  6EF8               	movwf	tblptru,c
   675   00220E  EE00  F080         	lfsr	0,__pdataBANK0
   676   002212  EE10 F076          	lfsr	1,118
   677   002216                     copy_data2:
   678   002216  0009               	tblrd		*+
   679   002218  CFF5 FFEE          	movff	tablat,postinc0
   680   00221C  50E5               	movf	postdec1,w,c
   681   00221E  50E1               	movf	fsr1l,w,c
   682   002220  E1FA               	bnz	copy_data2
   683                           
   684                           ; Initialize objects allocated to COMRAM (20 bytes)
   685                           ; load TBLPTR registers with __pidataCOMRAM
   686   002222  0E2E               	movlw	low __pidataCOMRAM
   687   002224  6EF6               	movwf	tblptrl,c
   688   002226  0E27               	movlw	high __pidataCOMRAM
   689   002228  6EF7               	movwf	tblptrh,c
   690   00222A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   691   00222C  6EF8               	movwf	tblptru,c
   692   00222E  EE00  F059         	lfsr	0,__pdataCOMRAM
   693   002232  EE10 F014          	lfsr	1,20
   694   002236                     copy_data3:
   695   002236  0009               	tblrd		*+
   696   002238  CFF5 FFEE          	movff	tablat,postinc0
   697   00223C  50E5               	movf	postdec1,w,c
   698   00223E  50E1               	movf	fsr1l,w,c
   699   002240  E1FA               	bnz	copy_data3
   700                           
   701                           ; Clear objects allocated to BANK3 (32 bytes)
   702   002242  EE03  F000         	lfsr	0,__pbssBANK3
   703   002246  0E20               	movlw	32
   704   002248                     clear_0:
   705   002248  6AEE               	clrf	postinc0,c
   706   00224A  06E8               	decf	wreg,f,c
   707   00224C  E1FD               	bnz	clear_0
   708                           
   709                           ; Clear objects allocated to BANK0 (5 bytes)
   710   00224E  0100               	movlb	0
   711   002250  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
   712   002252  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
   713   002254  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
   714   002256  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
   715   002258  6BF6               	clrf	__pbssBANK0& (0+255),b
   716                           
   717                           ; Clear objects allocated to COMRAM (19 bytes)
   718   00225A  EE00  F06D         	lfsr	0,__pbssCOMRAM
   719   00225E  0E13               	movlw	19
   720   002260                     clear_1:
   721   002260  6AEE               	clrf	postinc0,c
   722   002262  06E8               	decf	wreg,f,c
   723   002264  E1FD               	bnz	clear_1
   724   002266                     end_of_initialization:
   725                           	callstack 0
   726   002266                     __end_of__initialization:
   727                           	callstack 0
   728   002266  0E00               	movlw	low (__Lmediumconst shr (0+16))
   729   002268  6EF8               	movwf	tblptru,c
   730   00226A  0100               	movlb	0
   731   00226C  EF19  F00B         	goto	_main	;jump to C main() function
   732                           
   733                           	psect	bssCOMRAM
   734   00006D                     __pbssCOMRAM:
   735                           	callstack 0
   736   00006D                     led_on_off@F3109:
   737                           	callstack 0
   738   00006D                     	ds	5
   739   000072                     led_init@F3104:
   740                           	callstack 0
   741   000072                     	ds	5
   742   000077                     _program_step_counter:
   743                           	callstack 0
   744   000077                     	ds	4
   745   00007B                     _width:
   746                           	callstack 0
   747   00007B                     	ds	2
   748   00007D                     _prec:
   749                           	callstack 0
   750   00007D                     	ds	2
   751   00007F                     _flags:
   752                           	callstack 0
   753   00007F                     	ds	1
   754                           
   755                           	psect	dataCOMRAM
   756   000059                     __pdataCOMRAM:
   757                           	callstack 0
   758   000059                     _LAT_REG_ADD_arr:
   759                           	callstack 0
   760   000059                     	ds	10
   761   000063                     _TRIS_REG_ADD_arr:
   762                           	callstack 0
   763   000063                     	ds	10
   764                           
   765                           	psect	bssBANK0
   766   0000F6                     __pbssBANK0:
   767                           	callstack 0
   768   0000F6                     led_toggle@F3113:
   769                           	callstack 0
   770   0000F6                     	ds	5
   771                           
   772                           	psect	dataBANK0
   773   000080                     __pdataBANK0:
   774                           	callstack 0
   775   000080                     init_msg_lcd@F3289:
   776                           	callstack 0
   777   000080                     	ds	17
   778   000091                     init_msg_lcd@F3285:
   779                           	callstack 0
   780   000091                     	ds	17
   781   0000A2                     _keypad_key_values_arr:
   782                           	callstack 0
   783   0000A2                     	ds	16
   784   0000B2                     _PORT_REG_ADD_arr:
   785                           	callstack 0
   786   0000B2                     	ds	10
   787   0000BC                     _lcd_2_8bit:
   788                           	callstack 0
   789   0000BC                     	ds	50
   790   0000EE                     __car_char_arr:
   791                           	callstack 0
   792   0000EE                     	ds	8
   793                           
   794                           	psect	dataBANK1
   795   0001F5                     __pdataBANK1:
   796                           	callstack 0
   797   0001F5                     __musicNote_char_arr:
   798                           	callstack 0
   799   0001F5                     	ds	8
   800                           
   801                           	psect	dataBANK2
   802   000200                     __pdataBANK2:
   803                           	callstack 0
   804   000200                     init_msg_lcd@F3303:
   805                           	callstack 0
   806   000200                     	ds	18
   807   000212                     init_msg_lcd@F3299:
   808                           	callstack 0
   809   000212                     	ds	18
   810   000224                     init_msg_lcd@F3295:
   811                           	callstack 0
   812   000224                     	ds	18
   813   000236                     init_msg_lcd@F3291:
   814                           	callstack 0
   815   000236                     	ds	18
   816   000248                     init_msg_lcd@F3287:
   817                           	callstack 0
   818   000248                     	ds	18
   819   00025A                     init_msg_lcd@F3283:
   820                           	callstack 0
   821   00025A                     	ds	18
   822   00026C                     init_msg_lcd@F3281:
   823                           	callstack 0
   824   00026C                     	ds	18
   825   00027E                     main@F3282:
   826                           	callstack 0
   827   00027E                     	ds	17
   828   00028F                     main@F3280:
   829                           	callstack 0
   830   00028F                     	ds	17
   831   0002A0                     init_msg_lcd@F3307:
   832                           	callstack 0
   833   0002A0                     	ds	17
   834   0002B1                     init_msg_lcd@F3305:
   835                           	callstack 0
   836   0002B1                     	ds	17
   837   0002C2                     init_msg_lcd@F3301:
   838                           	callstack 0
   839   0002C2                     	ds	17
   840   0002D3                     init_msg_lcd@F3297:
   841                           	callstack 0
   842   0002D3                     	ds	17
   843   0002E4                     init_msg_lcd@F3293:
   844                           	callstack 0
   845   0002E4                     	ds	17
   846                           
   847                           	psect	bssBANK3
   848   000300                     __pbssBANK3:
   849                           	callstack 0
   850   000300                     _dbuf:
   851                           	callstack 0
   852   000300                     	ds	32
   853                           
   854                           	psect	cstackBANK1
   855   000100                     __pcstackBANK1:
   856                           	callstack 0
   857   000100                     init_msg_lcd@msg1:
   858                           	callstack 0
   859                           
   860                           ; 18 bytes @ 0x0
   861   000100                     	ds	18
   862   000112                     init_msg_lcd@msg2:
   863                           	callstack 0
   864                           
   865                           ; 18 bytes @ 0x12
   866   000112                     	ds	18
   867   000124                     init_msg_lcd@msg4:
   868                           	callstack 0
   869                           
   870                           ; 18 bytes @ 0x24
   871   000124                     	ds	18
   872   000136                     init_msg_lcd@msg6:
   873                           	callstack 0
   874                           
   875                           ; 18 bytes @ 0x36
   876   000136                     	ds	18
   877   000148                     init_msg_lcd@msg8:
   878                           	callstack 0
   879                           
   880                           ; 18 bytes @ 0x48
   881   000148                     	ds	18
   882   00015A                     init_msg_lcd@msg10:
   883                           	callstack 0
   884                           
   885                           ; 18 bytes @ 0x5A
   886   00015A                     	ds	18
   887   00016C                     init_msg_lcd@msg12:
   888                           	callstack 0
   889                           
   890                           ; 18 bytes @ 0x6C
   891   00016C                     	ds	18
   892   00017E                     init_msg_lcd@msg3:
   893                           	callstack 0
   894                           
   895                           ; 17 bytes @ 0x7E
   896   00017E                     	ds	17
   897   00018F                     init_msg_lcd@msg5:
   898                           	callstack 0
   899                           
   900                           ; 17 bytes @ 0x8F
   901   00018F                     	ds	17
   902   0001A0                     init_msg_lcd@msg7:
   903                           	callstack 0
   904                           
   905                           ; 17 bytes @ 0xA0
   906   0001A0                     	ds	17
   907   0001B1                     init_msg_lcd@msg9:
   908                           	callstack 0
   909                           
   910                           ; 17 bytes @ 0xB1
   911   0001B1                     	ds	17
   912   0001C2                     init_msg_lcd@msg11:
   913                           	callstack 0
   914                           
   915                           ; 17 bytes @ 0xC2
   916   0001C2                     	ds	17
   917   0001D3                     init_msg_lcd@msg13:
   918                           	callstack 0
   919                           
   920                           ; 17 bytes @ 0xD3
   921   0001D3                     	ds	17
   922   0001E4                     init_msg_lcd@msg14:
   923                           	callstack 0
   924                           
   925                           ; 17 bytes @ 0xE4
   926   0001E4                     	ds	17
   927                           
   928                           	psect	cstackCOMRAM
   929   000001                     __pcstackCOMRAM:
   930                           	callstack 0
   931   000001                     ?___awdiv:
   932                           	callstack 0
   933   000001                     ?___awmod:
   934                           	callstack 0
   935   000001                     ?___lwdiv:
   936                           	callstack 0
   937   000001                     ?___lwmod:
   938                           	callstack 0
   939   000001                     memset@dest:
   940                           	callstack 0
   941   000001                     set_bit_uint8@p_reg:
   942                           	callstack 0
   943   000001                     clear_bit_uint8@p_reg:
   944                           	callstack 0
   945   000001                     ___awdiv@dividend:
   946                           	callstack 0
   947   000001                     ___awmod@dividend:
   948                           	callstack 0
   949   000001                     ___lwdiv@dividend:
   950                           	callstack 0
   951   000001                     ___lwmod@dividend:
   952                           	callstack 0
   953   000001                     fputc@c:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x0
   957   000001                     	ds	1
   958   000002                     memset@c:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x1
   962   000002                     	ds	1
   963   000003                     set_bit_uint8@d_IDX_BIT_X:
   964                           	callstack 0
   965   000003                     clear_bit_uint8@d_IDX_BIT_X:
   966                           	callstack 0
   967   000003                     fputc@fp:
   968                           	callstack 0
   969   000003                     ___awdiv@divisor:
   970                           	callstack 0
   971   000003                     ___awmod@divisor:
   972                           	callstack 0
   973   000003                     ___lwdiv@divisor:
   974                           	callstack 0
   975   000003                     ___lwmod@divisor:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x2
   979   000003                     	ds	1
   980   000004                     ??_fputc:
   981   000004                     ??_set_bit_uint8:
   982   000004                     ??_clear_bit_uint8:
   983   000004                     memset@n:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x3
   987   000004                     	ds	1
   988   000005                     ___awdiv@counter:
   989                           	callstack 0
   990   000005                     ___awmod@counter:
   991                           	callstack 0
   992   000005                     ___lwmod@counter:
   993                           	callstack 0
   994   000005                     ___lwdiv@quotient:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x4
   998   000005                     	ds	1
   999   000006                     gpio_pin_direction_initialize@p_pin_config:
  1000                           	callstack 0
  1001   000006                     gpio_pin_write_logic@p_pin_config:
  1002                           	callstack 0
  1003   000006                     ___awdiv@sign:
  1004                           	callstack 0
  1005   000006                     ___awmod@sign:
  1006                           	callstack 0
  1007   000006                     memset@p:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x5
  1011   000006                     	ds	1
  1012   000007                     ??_gpio_pin_direction_initialize:
  1013   000007                     ?_abs:
  1014                           	callstack 0
  1015   000007                     gpio_pin_write_logic@d_logic_desired:
  1016                           	callstack 0
  1017   000007                     ___lwdiv@counter:
  1018                           	callstack 0
  1019   000007                     ___awdiv@quotient:
  1020                           	callstack 0
  1021   000007                     abs@a:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x6
  1025   000007                     	ds	1
  1026   000008                     ??_gpio_pin_write_logic:
  1027                           
  1028                           ; 1 bytes @ 0x7
  1029   000008                     	ds	1
  1030   000009                     ??_abs:
  1031                           
  1032                           ; 1 bytes @ 0x8
  1033   000009                     	ds	1
  1034   00000A                     lcd_8bit_send_enable@p_lcd:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x9
  1038   00000A                     	ds	1
  1039   00000B                     lcd_8bit_send_cmd@p_lcd:
  1040                           	callstack 0
  1041   00000B                     lcd_8bit_send_char@p_lcd:
  1042                           	callstack 0
  1043   00000B                     vfpfcnvrt@fp:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0xA
  1047   00000B                     	ds	1
  1048   00000C                     lcd_8bit_send_cmd@d_cmd:
  1049                           	callstack 0
  1050   00000C                     lcd_8bit_send_char@d_data:
  1051                           	callstack 0
  1052   00000C                     vfpfcnvrt@fmt:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0xB
  1056   00000C                     	ds	1
  1057   00000D                     lcd_8bit_init@p_lcd:
  1058                           	callstack 0
  1059   00000D                     lcd_8bit_set_cursor@p_lcd:
  1060                           	callstack 0
  1061   00000D                     vfpfcnvrt@ap:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0xC
  1065   00000D                     	ds	1
  1066   00000E                     ??_lcd_8bit_init:
  1067   00000E                     ??_vfpfcnvrt:
  1068   00000E                     lcd_8bit_set_cursor@d_row:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xD
  1072   00000E                     	ds	1
  1073   00000F                     lcd_8bit_init@idx:
  1074                           	callstack 0
  1075   00000F                     lcd_8bit_set_cursor@d_column:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079   00000F                     	ds	1
  1080   000010                     ??_lcd_8bit_set_cursor:
  1081   000010                     vfpfcnvrt@done:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0xF
  1085   000010                     	ds	1
  1086   000011                     vfpfcnvrt@cp:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x10
  1090   000011                     	ds	1
  1091   000012                     lcd_8bit_send_char_pos@p_lcd:
  1092                           	callstack 0
  1093   000012                     lcd_8bit_send_strng_pos@p_lcd:
  1094                           	callstack 0
  1095   000012                     vfpfcnvrt@convarg:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x11
  1099   000012                     	ds	1
  1100   000013                     lcd_8bit_send_char_pos@d_row:
  1101                           	callstack 0
  1102   000013                     lcd_8bit_send_strng_pos@d_row:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x12
  1106   000013                     	ds	1
  1107   000014                     lcd_8bit_send_char_pos@d_column:
  1108                           	callstack 0
  1109   000014                     lcd_8bit_send_strng_pos@d_column:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x13
  1113   000014                     	ds	1
  1114   000015                     lcd_8bit_send_char_pos@d_data:
  1115                           	callstack 0
  1116   000015                     lcd_8bit_send_strng_pos@p_strng:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x14
  1120   000015                     	ds	1
  1121   000016                     lcd_8bit_send_custom_char_pos@p_lcd:
  1122                           	callstack 0
  1123   000016                     vfpfcnvrt@c:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x15
  1127   000016                     	ds	1
  1128   000017                     ??_hello_world_lcd:
  1129   000017                     ??_init_msg_lcd:
  1130   000017                     ?_vfprintf:
  1131                           	callstack 0
  1132   000017                     lcd_8bit_send_custom_char_pos@d_row:
  1133                           	callstack 0
  1134   000017                     vfprintf@fp:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x16
  1138   000017                     	ds	1
  1139   000018                     lcd_8bit_send_custom_char_pos@d_column:
  1140                           	callstack 0
  1141   000018                     vfprintf@fmt:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x17
  1145   000018                     	ds	1
  1146   000019                     hello_world_lcd@idx:
  1147                           	callstack 0
  1148   000019                     vfprintf@ap:
  1149                           	callstack 0
  1150   000019                     lcd_8bit_send_custom_char_pos@_char:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x18
  1154   000019                     	ds	1
  1155   00001A                     hello_world_lcd@idx2:
  1156                           	callstack 0
  1157   00001A                     vfprintf@cfmt:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x19
  1161   00001A                     	ds	1
  1162   00001B                     ?_sprintf:
  1163                           	callstack 0
  1164   00001B                     lcd_8bit_send_custom_char_pos@mem_pos:
  1165                           	callstack 0
  1166   00001B                     sprintf@s:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1A
  1170   00001B                     	ds	1
  1171   00001C                     lcd_8bit_send_custom_char_pos@idx:
  1172                           	callstack 0
  1173   00001C                     sprintf@fmt:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x1B
  1177   00001C                     	ds	5
  1178   000021                     sprintf@ap:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x20
  1182   000021                     	ds	1
  1183   000022                     sprintf@f:
  1184                           	callstack 0
  1185                           
  1186                           ; 12 bytes @ 0x21
  1187   000022                     	ds	12
  1188   00002E                     convert_uint8_to_strng@d_strng:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x2D
  1192   00002E                     	ds	1
  1193   00002F                     convert_uint8_to_strng@d_input:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x2E
  1197   00002F                     	ds	1
  1198   000030                     ??_main:
  1199                           
  1200                           ; 1 bytes @ 0x2F
  1201   000030                     	ds	2
  1202   000032                     main@msg_boom:
  1203                           	callstack 0
  1204                           
  1205                           ; 17 bytes @ 0x31
  1206   000032                     	ds	17
  1207   000043                     main@msg_space:
  1208                           	callstack 0
  1209                           
  1210                           ; 17 bytes @ 0x42
  1211   000043                     	ds	17
  1212   000054                     main@msg_X:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x53
  1216   000054                     	ds	4
  1217   000058                     main@X:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x57
  1221   000058                     	ds	1
  1222                           
  1223 ;;
  1224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1225 ;;
  1226 ;; *************** function _main *****************
  1227 ;; Defined at:
  1228 ;;		line 32 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  msg_space      17   66[COMRAM] unsigned char [17]
  1233 ;;  msg_boom       17   49[COMRAM] unsigned char [17]
  1234 ;;  msg_X           4   83[COMRAM] unsigned char [4]
  1235 ;;  X               1   87[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2  841[None  ] int 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:       41 bytes
  1250 ;; Hardware stack levels required when called: 7
  1251 ;; This function calls:
  1252 ;;		_app_init
  1253 ;;		_convert_uint8_to_strng
  1254 ;;		_hello_world_lcd
  1255 ;;		_init_msg_lcd
  1256 ;;		_lcd_8bit_send_custom_char_pos
  1257 ;;		_lcd_8bit_send_strng_pos
  1258 ;;		_memset
  1259 ;; This function is called by:
  1260 ;;		Startup code after reset
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text0
  1265   001632                     __ptext0:
  1266                           	callstack 0
  1267   001632                     _main:
  1268                           	callstack 24
  1269   001632                     
  1270                           ;main.c: 34:     app_init();
  1271   001632  ECA1  F013         	call	_app_init	;wreg free
  1272   001636                     
  1273                           ;main.c: 35:     init_msg_lcd();
  1274   001636  EC1D  F008         	call	_init_msg_lcd	;wreg free
  1275   00163A                     
  1276                           ;main.c: 36:     hello_world_lcd();
  1277   00163A  ECE9  F00B         	call	_hello_world_lcd	;wreg free
  1278   00163E                     
  1279                           ;main.c: 37:     uint8_t msg_X[4];;main.c: 38:     uint8_t X = 0;
  1280   00163E  0E00               	movlw	0
  1281   001640  6E58               	movwf	main@X^0,c
  1282   001642                     
  1283                           ;main.c: 39:     uint8_t msg_boom[17] = "****BOOOOOOM****";
  1284   001642  EE22  F08F         	lfsr	2,main@F3280
  1285   001646  EE10  F032         	lfsr	1,main@msg_boom
  1286   00164A  0E10               	movlw	16
  1287   00164C                     u3081:
  1288   00164C  CFDB FFE3          	movff	plusw2,plusw1
  1289   001650  06E8               	decf	wreg,f,c
  1290   001652  E2FC               	bc	u3081
  1291   001654                     
  1292                           ;main.c: 40:     uint8_t msg_space[17]= "                ";
  1293   001654  EE22  F07E         	lfsr	2,main@F3282
  1294   001658  EE10  F043         	lfsr	1,main@msg_space
  1295   00165C  0E10               	movlw	16
  1296   00165E                     u3091:
  1297   00165E  CFDB FFE3          	movff	plusw2,plusw1
  1298   001662  06E8               	decf	wreg,f,c
  1299   001664  E2FC               	bc	u3091
  1300   001666                     l4639:
  1301                           
  1302                           ;main.c: 42:     {;main.c: 44:         convert_uint8_to_strng(X,msg_X);
  1303   001666  0E54               	movlw	low main@msg_X
  1304   001668  6E2E               	movwf	convert_uint8_to_strng@d_strng^0,c
  1305   00166A  5058               	movf	main@X^0,w,c
  1306   00166C  ECDF  F012         	call	_convert_uint8_to_strng
  1307   001670                     
  1308                           ;main.c: 45:         lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg_X);
  1309   001670  0EBC               	movlw	low _lcd_2_8bit
  1310   001672  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1311   001674  0E01               	movlw	1
  1312   001676  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1313   001678  0E01               	movlw	1
  1314   00167A  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1315   00167C  0E54               	movlw	low main@msg_X
  1316   00167E  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1317   001680  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1318   001682  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1319   001686                     
  1320                           ;main.c: 46:         lcd_8bit_send_custom_char_pos( &lcd_2_8bit, 2, 1, _musicNote_char_a
      +                          rr, 1);
  1321   001686  0EBC               	movlw	low _lcd_2_8bit
  1322   001688  6E16               	movwf	lcd_8bit_send_custom_char_pos@p_lcd^0,c
  1323   00168A  0E02               	movlw	2
  1324   00168C  6E17               	movwf	lcd_8bit_send_custom_char_pos@d_row^0,c
  1325   00168E  0E01               	movlw	1
  1326   001690  6E18               	movwf	lcd_8bit_send_custom_char_pos@d_column^0,c
  1327   001692  0EF5               	movlw	low __musicNote_char_arr
  1328   001694  6E19               	movwf	lcd_8bit_send_custom_char_pos@_char^0,c
  1329   001696  0E01               	movlw	high __musicNote_char_arr
  1330   001698  6E1A               	movwf	(lcd_8bit_send_custom_char_pos@_char+1)^0,c
  1331   00169A  0E01               	movlw	1
  1332   00169C  6E1B               	movwf	lcd_8bit_send_custom_char_pos@mem_pos^0,c
  1333   00169E  EC48  F012         	call	_lcd_8bit_send_custom_char_pos	;wreg free
  1334   0016A2                     
  1335                           ;main.c: 47:         lcd_8bit_send_custom_char_pos( &lcd_2_8bit, 2, 2, _car_char_arr, 0)
      +                          ;
  1336   0016A2  0EBC               	movlw	low _lcd_2_8bit
  1337   0016A4  6E16               	movwf	lcd_8bit_send_custom_char_pos@p_lcd^0,c
  1338   0016A6  0E02               	movlw	2
  1339   0016A8  6E17               	movwf	lcd_8bit_send_custom_char_pos@d_row^0,c
  1340   0016AA  0E02               	movlw	2
  1341   0016AC  6E18               	movwf	lcd_8bit_send_custom_char_pos@d_column^0,c
  1342   0016AE  0EEE               	movlw	low __car_char_arr
  1343   0016B0  6E19               	movwf	lcd_8bit_send_custom_char_pos@_char^0,c
  1344   0016B2  6A1A               	clrf	(lcd_8bit_send_custom_char_pos@_char+1)^0,c
  1345   0016B4  0E00               	movlw	0
  1346   0016B6  6E1B               	movwf	lcd_8bit_send_custom_char_pos@mem_pos^0,c
  1347   0016B8  EC48  F012         	call	_lcd_8bit_send_custom_char_pos	;wreg free
  1348   0016BC                     
  1349                           ;main.c: 48:         lcd_8bit_send_custom_char_pos( &lcd_2_8bit, 2, 3, _musicNote_char_a
      +                          rr, 1);
  1350   0016BC  0EBC               	movlw	low _lcd_2_8bit
  1351   0016BE  6E16               	movwf	lcd_8bit_send_custom_char_pos@p_lcd^0,c
  1352   0016C0  0E02               	movlw	2
  1353   0016C2  6E17               	movwf	lcd_8bit_send_custom_char_pos@d_row^0,c
  1354   0016C4  0E03               	movlw	3
  1355   0016C6  6E18               	movwf	lcd_8bit_send_custom_char_pos@d_column^0,c
  1356   0016C8  0EF5               	movlw	low __musicNote_char_arr
  1357   0016CA  6E19               	movwf	lcd_8bit_send_custom_char_pos@_char^0,c
  1358   0016CC  0E01               	movlw	high __musicNote_char_arr
  1359   0016CE  6E1A               	movwf	(lcd_8bit_send_custom_char_pos@_char+1)^0,c
  1360   0016D0  0E01               	movlw	1
  1361   0016D2  6E1B               	movwf	lcd_8bit_send_custom_char_pos@mem_pos^0,c
  1362   0016D4  EC48  F012         	call	_lcd_8bit_send_custom_char_pos	;wreg free
  1363   0016D8                     
  1364                           ;main.c: 49:         X++;
  1365   0016D8  2A58               	incf	main@X^0,f,c
  1366   0016DA                     
  1367                           ;main.c: 50:         _delay((unsigned long)((50)*((8000000UL)/4000.0)));
  1368   0016DA  0E82               	movlw	130
  1369   0016DC  6E30               	movwf	??_main^0,c
  1370   0016DE  0EDE               	movlw	222
  1371   0016E0                     u3117:
  1372   0016E0  2EE8               	decfsz	wreg,f,c
  1373   0016E2  D7FE               	bra	u3117
  1374   0016E4  2E30               	decfsz	??_main^0,f,c
  1375   0016E6  D7FC               	bra	u3117
  1376   0016E8                     
  1377                           ;main.c: 51:         memset(msg_X, '\0', 4);
  1378   0016E8  0E54               	movlw	low main@msg_X
  1379   0016EA  6E01               	movwf	memset@dest^0,c
  1380   0016EC  0E00               	movlw	0
  1381   0016EE  6E03               	movwf	(memset@c+1)^0,c
  1382   0016F0  0E00               	movlw	0
  1383   0016F2  6E02               	movwf	memset@c^0,c
  1384   0016F4  0E00               	movlw	0
  1385   0016F6  6E05               	movwf	(memset@n+1)^0,c
  1386   0016F8  0E04               	movlw	4
  1387   0016FA  6E04               	movwf	memset@n^0,c
  1388   0016FC  EC6C  F013         	call	_memset	;wreg free
  1389   001700                     
  1390                           ;main.c: 52:         memset(msg_X, ' ', 3);
  1391   001700  0E54               	movlw	low main@msg_X
  1392   001702  6E01               	movwf	memset@dest^0,c
  1393   001704  0E00               	movlw	0
  1394   001706  6E03               	movwf	(memset@c+1)^0,c
  1395   001708  0E20               	movlw	32
  1396   00170A  6E02               	movwf	memset@c^0,c
  1397   00170C  0E00               	movlw	0
  1398   00170E  6E05               	movwf	(memset@n+1)^0,c
  1399   001710  0E03               	movlw	3
  1400   001712  6E04               	movwf	memset@n^0,c
  1401   001714  EC6C  F013         	call	_memset	;wreg free
  1402   001718                     
  1403                           ;main.c: 53:         lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg_X);
  1404   001718  0EBC               	movlw	low _lcd_2_8bit
  1405   00171A  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1406   00171C  0E01               	movlw	1
  1407   00171E  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1408   001720  0E01               	movlw	1
  1409   001722  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1410   001724  0E54               	movlw	low main@msg_X
  1411   001726  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1412   001728  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1413   00172A  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1414   00172E                     
  1415                           ;main.c: 54:         if(60==X)
  1416   00172E  0E3C               	movlw	60
  1417   001730  1858               	xorwf	main@X^0,w,c
  1418   001732  A4D8               	btfss	status,2,c
  1419   001734  EF9E  F00B         	goto	u3101
  1420   001738  EFA0  F00B         	goto	u3100
  1421   00173C                     u3101:
  1422   00173C  EF33  F00B         	goto	l4639
  1423   001740                     u3100:
  1424   001740                     
  1425                           ;main.c: 55:         {;main.c: 56:            X=0;
  1426   001740  0E00               	movlw	0
  1427   001742  6E58               	movwf	main@X^0,c
  1428   001744                     
  1429                           ;main.c: 57:            lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1,msg_space);
  1430   001744  0EBC               	movlw	low _lcd_2_8bit
  1431   001746  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1432   001748  0E01               	movlw	1
  1433   00174A  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1434   00174C  0E01               	movlw	1
  1435   00174E  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1436   001750  0E43               	movlw	low main@msg_space
  1437   001752  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1438   001754  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1439   001756  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1440   00175A                     
  1441                           ;main.c: 58:            lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1,msg_space);
  1442   00175A  0EBC               	movlw	low _lcd_2_8bit
  1443   00175C  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1444   00175E  0E02               	movlw	2
  1445   001760  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1446   001762  0E01               	movlw	1
  1447   001764  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1448   001766  0E43               	movlw	low main@msg_space
  1449   001768  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1450   00176A  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1451   00176C  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1452   001770                     
  1453                           ;main.c: 59:            lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1,msg_boom );
  1454   001770  0EBC               	movlw	low _lcd_2_8bit
  1455   001772  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1456   001774  0E01               	movlw	1
  1457   001776  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1458   001778  0E01               	movlw	1
  1459   00177A  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1460   00177C  0E32               	movlw	low main@msg_boom
  1461   00177E  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1462   001780  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1463   001782  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1464   001786                     
  1465                           ;main.c: 60:            _delay((unsigned long)((2000)*((8000000UL)/4000.0)));
  1466   001786  0E15               	movlw	21
  1467   001788  6E31               	movwf	(??_main+1)^0,c
  1468   00178A  0E4B               	movlw	75
  1469   00178C  6E30               	movwf	??_main^0,c
  1470   00178E  0EBE               	movlw	190
  1471   001790                     u3127:
  1472   001790  2EE8               	decfsz	wreg,f,c
  1473   001792  D7FE               	bra	u3127
  1474   001794  2E30               	decfsz	??_main^0,f,c
  1475   001796  D7FC               	bra	u3127
  1476   001798  2E31               	decfsz	(??_main+1)^0,f,c
  1477   00179A  D7FA               	bra	u3127
  1478   00179C  D000               	nop2	
  1479   00179E                     
  1480                           ;main.c: 61:            lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1,msg_space);
  1481   00179E  0EBC               	movlw	low _lcd_2_8bit
  1482   0017A0  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1483   0017A2  0E01               	movlw	1
  1484   0017A4  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1485   0017A6  0E01               	movlw	1
  1486   0017A8  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1487   0017AA  0E43               	movlw	low main@msg_space
  1488   0017AC  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1489   0017AE  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1490   0017B0  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1491   0017B4                     
  1492                           ;main.c: 62:            lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1,msg_space);
  1493   0017B4  0EBC               	movlw	low _lcd_2_8bit
  1494   0017B6  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1495   0017B8  0E02               	movlw	2
  1496   0017BA  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1497   0017BC  0E01               	movlw	1
  1498   0017BE  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1499   0017C0  0E43               	movlw	low main@msg_space
  1500   0017C2  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1501   0017C4  6A16               	clrf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1502   0017C6  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1503   0017CA  EF33  F00B         	goto	l4639
  1504   0017CE  EF00  F000         	goto	start
  1505   0017D2                     __end_of_main:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _lcd_8bit_send_custom_char_pos *****************
  1509 ;; Defined at:
  1510 ;;		line 375 in file "_HAL/Drivers/LCD/LCD.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  p_lcd           1   21[COMRAM] PTR struct .
  1513 ;;		 -> lcd_2_8bit(50), 
  1514 ;;  d_row           1   22[COMRAM] const unsigned char 
  1515 ;;  d_column        1   23[COMRAM] const unsigned char 
  1516 ;;  _char           2   24[COMRAM] PTR const unsigned char 
  1517 ;;		 -> _car_char_arr(8), _musicNote_char_arr(8), 
  1518 ;;  mem_pos         1   26[COMRAM] unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  idx             1   27[COMRAM] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      enum E2975
  1523 ;; Registers used:
  1524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;Total ram usage:        7 bytes
  1535 ;; Hardware stack levels used: 1
  1536 ;; Hardware stack levels required when called: 6
  1537 ;; This function calls:
  1538 ;;		_lcd_8bit_send_char
  1539 ;;		_lcd_8bit_send_char_pos
  1540 ;;		_lcd_8bit_send_cmd
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text1
  1547   002490                     __ptext1:
  1548                           	callstack 0
  1549   002490                     _lcd_8bit_send_custom_char_pos:
  1550                           	callstack 24
  1551   002490                     
  1552                           ;_HAL/Drivers/LCD/LCD.c: 375: std_return lcd_8bit_send_custom_char_pos( lcd_8bit_t * p_l
      +                          cd, const uint8_t d_row, const uint8_t d_column, const uint8_t *_char, uint8_t mem_pos);
      +                          _HAL/Drivers/LCD/LCD.c: 376: {;_HAL/Drivers/LCD/LCD.c: 377:     if (((void*)0) == p_lcd)
  1553   002490  5016               	movf	lcd_8bit_send_custom_char_pos@p_lcd^0,w,c
  1554   002492  A4D8               	btfss	status,2,c
  1555   002494  EF4E  F012         	goto	u2821
  1556   002498  EF50  F012         	goto	u2820
  1557   00249C                     u2821:
  1558   00249C  EF52  F012         	goto	l4323
  1559   0024A0                     u2820:
  1560   0024A0  EF7C  F012         	goto	l413
  1561   0024A4                     l4323:
  1562                           
  1563                           ;_HAL/Drivers/LCD/LCD.c: 382:     {;_HAL/Drivers/LCD/LCD.c: 383:         lcd_8bit_send_c
      +                          md( p_lcd, (0x40 + mem_pos*8) );
  1564   0024A4  C016  F00B         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_cmd@p_lcd
  1565   0024A8  501B               	movf	lcd_8bit_send_custom_char_pos@mem_pos^0,w,c
  1566   0024AA  0D08               	mullw	8
  1567   0024AC  50F3               	movf	243,w,c
  1568   0024AE  0F40               	addlw	64
  1569   0024B0  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  1570   0024B2  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  1571   0024B6                     
  1572                           ;_HAL/Drivers/LCD/LCD.c: 385:         for(idx=0; idx<8; idx++)
  1573   0024B6  0E00               	movlw	0
  1574   0024B8  6E1C               	movwf	lcd_8bit_send_custom_char_pos@idx^0,c
  1575   0024BA                     l4333:
  1576                           
  1577                           ;_HAL/Drivers/LCD/LCD.c: 386:         {;_HAL/Drivers/LCD/LCD.c: 387:             lcd_8bi
      +                          t_send_char( p_lcd, _char[idx]);
  1578   0024BA  C016  F00B         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_char@p_lcd
  1579   0024BE  501C               	movf	lcd_8bit_send_custom_char_pos@idx^0,w,c
  1580   0024C0  2419               	addwf	lcd_8bit_send_custom_char_pos@_char^0,w,c
  1581   0024C2  6ED9               	movwf	fsr2l,c
  1582   0024C4  0E00               	movlw	0
  1583   0024C6  201A               	addwfc	(lcd_8bit_send_custom_char_pos@_char+1)^0,w,c
  1584   0024C8  6EDA               	movwf	fsr2h,c
  1585   0024CA  50DF               	movf	indf2,w,c
  1586   0024CC  6E0C               	movwf	lcd_8bit_send_char@d_data^0,c
  1587   0024CE  ECCB  F00F         	call	_lcd_8bit_send_char	;wreg free
  1588   0024D2                     
  1589                           ;_HAL/Drivers/LCD/LCD.c: 388:         }
  1590   0024D2  2A1C               	incf	lcd_8bit_send_custom_char_pos@idx^0,f,c
  1591   0024D4  0E07               	movlw	7
  1592   0024D6  641C               	cpfsgt	lcd_8bit_send_custom_char_pos@idx^0,c
  1593   0024D8  EF70  F012         	goto	u2831
  1594   0024DC  EF72  F012         	goto	u2830
  1595   0024E0                     u2831:
  1596   0024E0  EF5D  F012         	goto	l4333
  1597   0024E4                     u2830:
  1598   0024E4                     
  1599                           ;_HAL/Drivers/LCD/LCD.c: 389:         lcd_8bit_send_char_pos( p_lcd, d_row, d_column, me
      +                          m_pos );
  1600   0024E4  C016  F012         	movff	lcd_8bit_send_custom_char_pos@p_lcd,lcd_8bit_send_char_pos@p_lcd
  1601   0024E8  C017  F013         	movff	lcd_8bit_send_custom_char_pos@d_row,lcd_8bit_send_char_pos@d_row
  1602   0024EC  C018  F014         	movff	lcd_8bit_send_custom_char_pos@d_column,lcd_8bit_send_char_pos@d_column
  1603   0024F0  C01B  F015         	movff	lcd_8bit_send_custom_char_pos@mem_pos,lcd_8bit_send_char_pos@d_data
  1604   0024F4  EC53  F013         	call	_lcd_8bit_send_char_pos	;wreg free
  1605   0024F8                     l413:
  1606   0024F8  0012               	return		;funcret
  1607   0024FA                     __end_of_lcd_8bit_send_custom_char_pos:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _lcd_8bit_send_char_pos *****************
  1611 ;; Defined at:
  1612 ;;		line 323 in file "_HAL/Drivers/LCD/LCD.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  p_lcd           1   17[COMRAM] PTR struct .
  1615 ;;		 -> lcd_2_8bit(50), 
  1616 ;;  d_row           1   18[COMRAM] const unsigned char 
  1617 ;;  d_column        1   19[COMRAM] const unsigned char 
  1618 ;;  d_data          1   20[COMRAM] const unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      enum E2975
  1623 ;; Registers used:
  1624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 5
  1637 ;; This function calls:
  1638 ;;		_lcd_8bit_send_char
  1639 ;;		_lcd_8bit_set_cursor
  1640 ;; This function is called by:
  1641 ;;		_lcd_8bit_send_custom_char_pos
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text2
  1646   0026A6                     __ptext2:
  1647                           	callstack 0
  1648   0026A6                     _lcd_8bit_send_char_pos:
  1649                           	callstack 24
  1650   0026A6                     
  1651                           ;_HAL/Drivers/LCD/LCD.c: 323: std_return lcd_8bit_send_char_pos( lcd_8bit_t * p_lcd, con
      +                          st uint8_t d_row, const uint8_t d_column,const uint8_t d_data);_HAL/Drivers/LCD/LCD.c: 3
      +                          24: {;_HAL/Drivers/LCD/LCD.c: 325:     if (((void*)0) == p_lcd)
  1652   0026A6  5012               	movf	lcd_8bit_send_char_pos@p_lcd^0,w,c
  1653   0026A8  A4D8               	btfss	status,2,c
  1654   0026AA  EF59  F013         	goto	u2631
  1655   0026AE  EF5B  F013         	goto	u2630
  1656   0026B2                     u2631:
  1657   0026B2  EF5D  F013         	goto	l4195
  1658   0026B6                     u2630:
  1659   0026B6  EF6B  F013         	goto	l392
  1660   0026BA                     l4195:
  1661                           
  1662                           ;_HAL/Drivers/LCD/LCD.c: 330:     {;_HAL/Drivers/LCD/LCD.c: 331:         lcd_8bit_set_cu
      +                          rsor(p_lcd, d_row, d_column);
  1663   0026BA  C012  F00D         	movff	lcd_8bit_send_char_pos@p_lcd,lcd_8bit_set_cursor@p_lcd
  1664   0026BE  C013  F00E         	movff	lcd_8bit_send_char_pos@d_row,lcd_8bit_set_cursor@d_row
  1665   0026C2  C014  F00F         	movff	lcd_8bit_send_char_pos@d_column,lcd_8bit_set_cursor@d_column
  1666   0026C6  ECAF  F012         	call	_lcd_8bit_set_cursor	;wreg free
  1667                           
  1668                           ;_HAL/Drivers/LCD/LCD.c: 332:         lcd_8bit_send_char(p_lcd, d_data);
  1669   0026CA  C012  F00B         	movff	lcd_8bit_send_char_pos@p_lcd,lcd_8bit_send_char@p_lcd
  1670   0026CE  C015  F00C         	movff	lcd_8bit_send_char_pos@d_data,lcd_8bit_send_char@d_data
  1671   0026D2  ECCB  F00F         	call	_lcd_8bit_send_char	;wreg free
  1672   0026D6                     l392:
  1673   0026D6  0012               	return		;funcret
  1674   0026D8                     __end_of_lcd_8bit_send_char_pos:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _init_msg_lcd *****************
  1678 ;; Defined at:
  1679 ;;		line 254 in file "_APP/application.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  msg12          18  108[BANK1 ] unsigned char [18]
  1684 ;;  msg10          18   90[BANK1 ] unsigned char [18]
  1685 ;;  msg8           18   72[BANK1 ] unsigned char [18]
  1686 ;;  msg6           18   54[BANK1 ] unsigned char [18]
  1687 ;;  msg4           18   36[BANK1 ] unsigned char [18]
  1688 ;;  msg2           18   18[BANK1 ] unsigned char [18]
  1689 ;;  msg1           18    0[BANK1 ] unsigned char [18]
  1690 ;;  msg14          17  228[BANK1 ] unsigned char [17]
  1691 ;;  msg13          17  211[BANK1 ] unsigned char [17]
  1692 ;;  msg11          17  194[BANK1 ] unsigned char [17]
  1693 ;;  msg9           17  177[BANK1 ] unsigned char [17]
  1694 ;;  msg7           17  160[BANK1 ] unsigned char [17]
  1695 ;;  msg5           17  143[BANK1 ] unsigned char [17]
  1696 ;;  msg3           17  126[BANK1 ] unsigned char [17]
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Locals:         0       0     245       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Totals:         2       0     245       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;Total ram usage:      247 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 6
  1713 ;; This function calls:
  1714 ;;		_lcd_8bit_send_strng_pos
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text3
  1721   00103A                     __ptext3:
  1722                           	callstack 0
  1723   00103A                     _init_msg_lcd:
  1724                           	callstack 24
  1725   00103A                     
  1726                           ;_APP/application.c: 256:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, "_INITIALIZATI
      +                          ON_");
  1727   00103A  0EBC               	movlw	low _lcd_2_8bit
  1728   00103C  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1729   00103E  0E01               	movlw	1
  1730   001040  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1731   001042  0E01               	movlw	1
  1732   001044  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1733   001046  0E12               	movlw	low STR_9
  1734   001048  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1735   00104A  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  1736   00104C  A4D8               	btfss	status,2,c
  1737   00104E  0E10               	movlw	high __smallconst
  1738   001050  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1739   001052  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1740   001056                     
  1741                           ;_APP/application.c: 257:     _delay((unsigned long)((3000)*((8000000UL)/4000.0)));
  1742   001056  0E1F               	movlw	31
  1743   001058  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  1744   00105A  0E71               	movlw	113
  1745   00105C  6E17               	movwf	??_init_msg_lcd^0,c
  1746   00105E  0E1E               	movlw	30
  1747   001060                     u3137:
  1748   001060  2EE8               	decfsz	wreg,f,c
  1749   001062  D7FE               	bra	u3137
  1750   001064  2E17               	decfsz	??_init_msg_lcd^0,f,c
  1751   001066  D7FC               	bra	u3137
  1752   001068  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  1753   00106A  D7FA               	bra	u3137
  1754   00106C  D000               	nop2	
  1755   00106E                     
  1756                           ;_APP/application.c: 258:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, "             
      +                             ");
  1757   00106E  0EBC               	movlw	low _lcd_2_8bit
  1758   001070  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1759   001072  0E01               	movlw	1
  1760   001074  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1761   001076  0E01               	movlw	1
  1762   001078  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1763   00107A  0E01               	movlw	low STR_10
  1764   00107C  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1765   00107E  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  1766   001080  A4D8               	btfss	status,2,c
  1767   001082  0E10               	movlw	high __smallconst
  1768   001084  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1769   001086  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1770   00108A                     
  1771                           ;_APP/application.c: 259:     uint8_t msg1[] = " PLEASE WAIT =)  ";
  1772   00108A  EE22  F06C         	lfsr	2,init_msg_lcd@F3281
  1773   00108E  EE11  F000         	lfsr	1,init_msg_lcd@msg1
  1774   001092  0E11               	movlw	17
  1775   001094                     u2661:
  1776   001094  CFDB FFE3          	movff	plusw2,plusw1
  1777   001098  06E8               	decf	wreg,f,c
  1778   00109A  E2FC               	bc	u2661
  1779   00109C                     
  1780                           ;_APP/application.c: 260:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg1);
  1781   00109C  0EBC               	movlw	low _lcd_2_8bit
  1782   00109E  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1783   0010A0  0E01               	movlw	1
  1784   0010A2  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1785   0010A4  0E01               	movlw	1
  1786   0010A6  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1787   0010A8  0E00               	movlw	low init_msg_lcd@msg1
  1788   0010AA  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1789   0010AC  0E01               	movlw	high init_msg_lcd@msg1
  1790   0010AE  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1791   0010B0  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1792   0010B4                     
  1793                           ;_APP/application.c: 261:     uint8_t msg2[] = "loading          ";
  1794   0010B4  EE22  F05A         	lfsr	2,init_msg_lcd@F3283
  1795   0010B8  EE11  F012         	lfsr	1,init_msg_lcd@msg2
  1796   0010BC  0E11               	movlw	17
  1797   0010BE                     u2671:
  1798   0010BE  CFDB FFE3          	movff	plusw2,plusw1
  1799   0010C2  06E8               	decf	wreg,f,c
  1800   0010C4  E2FC               	bc	u2671
  1801   0010C6                     
  1802                           ;_APP/application.c: 262:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg2);
  1803   0010C6  0EBC               	movlw	low _lcd_2_8bit
  1804   0010C8  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1805   0010CA  0E02               	movlw	2
  1806   0010CC  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1807   0010CE  0E01               	movlw	1
  1808   0010D0  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1809   0010D2  0E12               	movlw	low init_msg_lcd@msg2
  1810   0010D4  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1811   0010D6  0E01               	movlw	high init_msg_lcd@msg2
  1812   0010D8  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1813   0010DA  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1814                           
  1815                           ;_APP/application.c: 263:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  1816   0010DE  0E06               	movlw	6
  1817   0010E0  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  1818   0010E2  0E13               	movlw	19
  1819   0010E4  6E17               	movwf	??_init_msg_lcd^0,c
  1820   0010E6  0EAE               	movlw	174
  1821   0010E8                     u3147:
  1822   0010E8  2EE8               	decfsz	wreg,f,c
  1823   0010EA  D7FE               	bra	u3147
  1824   0010EC  2E17               	decfsz	??_init_msg_lcd^0,f,c
  1825   0010EE  D7FC               	bra	u3147
  1826   0010F0  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  1827   0010F2  D7FA               	bra	u3147
  1828   0010F4                     
  1829                           ;_APP/application.c: 264:     uint8_t msg3[] = "                ";
  1830   0010F4  EE20  F091         	lfsr	2,init_msg_lcd@F3285
  1831   0010F8  EE11  F07E         	lfsr	1,init_msg_lcd@msg3
  1832   0010FC  0E10               	movlw	16
  1833   0010FE                     u2681:
  1834   0010FE  CFDB FFE3          	movff	plusw2,plusw1
  1835   001102  06E8               	decf	wreg,f,c
  1836   001104  E2FC               	bc	u2681
  1837   001106                     
  1838                           ;_APP/application.c: 265:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg3);
  1839   001106  0EBC               	movlw	low _lcd_2_8bit
  1840   001108  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1841   00110A  0E02               	movlw	2
  1842   00110C  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1843   00110E  0E01               	movlw	1
  1844   001110  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1845   001112  0E7E               	movlw	low init_msg_lcd@msg3
  1846   001114  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1847   001116  0E01               	movlw	high init_msg_lcd@msg3
  1848   001118  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1849   00111A  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1850   00111E                     
  1851                           ;_APP/application.c: 266:     uint8_t msg4[] = "loading..        ";
  1852   00111E  EE22  F048         	lfsr	2,init_msg_lcd@F3287
  1853   001122  EE11  F024         	lfsr	1,init_msg_lcd@msg4
  1854   001126  0E11               	movlw	17
  1855   001128                     u2691:
  1856   001128  CFDB FFE3          	movff	plusw2,plusw1
  1857   00112C  06E8               	decf	wreg,f,c
  1858   00112E  E2FC               	bc	u2691
  1859   001130                     
  1860                           ;_APP/application.c: 267:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg4);
  1861   001130  0EBC               	movlw	low _lcd_2_8bit
  1862   001132  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1863   001134  0E02               	movlw	2
  1864   001136  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1865   001138  0E01               	movlw	1
  1866   00113A  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1867   00113C  0E24               	movlw	low init_msg_lcd@msg4
  1868   00113E  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1869   001140  0E01               	movlw	high init_msg_lcd@msg4
  1870   001142  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1871   001144  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1872                           
  1873                           ;_APP/application.c: 268:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  1874   001148  0E06               	movlw	6
  1875   00114A  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  1876   00114C  0E13               	movlw	19
  1877   00114E  6E17               	movwf	??_init_msg_lcd^0,c
  1878   001150  0EAE               	movlw	174
  1879   001152                     u3157:
  1880   001152  2EE8               	decfsz	wreg,f,c
  1881   001154  D7FE               	bra	u3157
  1882   001156  2E17               	decfsz	??_init_msg_lcd^0,f,c
  1883   001158  D7FC               	bra	u3157
  1884   00115A  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  1885   00115C  D7FA               	bra	u3157
  1886   00115E                     
  1887                           ;_APP/application.c: 269:     uint8_t msg5[] = "                ";
  1888   00115E  EE20  F080         	lfsr	2,init_msg_lcd@F3289
  1889   001162  EE11  F08F         	lfsr	1,init_msg_lcd@msg5
  1890   001166  0E10               	movlw	16
  1891   001168                     u2701:
  1892   001168  CFDB FFE3          	movff	plusw2,plusw1
  1893   00116C  06E8               	decf	wreg,f,c
  1894   00116E  E2FC               	bc	u2701
  1895   001170                     
  1896                           ;_APP/application.c: 270:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg5);
  1897   001170  0EBC               	movlw	low _lcd_2_8bit
  1898   001172  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1899   001174  0E02               	movlw	2
  1900   001176  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1901   001178  0E01               	movlw	1
  1902   00117A  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1903   00117C  0E8F               	movlw	low init_msg_lcd@msg5
  1904   00117E  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1905   001180  0E01               	movlw	high init_msg_lcd@msg5
  1906   001182  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1907   001184  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1908   001188                     
  1909                           ;_APP/application.c: 271:     uint8_t msg6[] = "loading....      ";
  1910   001188  EE22  F036         	lfsr	2,init_msg_lcd@F3291
  1911   00118C  EE11  F036         	lfsr	1,init_msg_lcd@msg6
  1912   001190  0E11               	movlw	17
  1913   001192                     u2711:
  1914   001192  CFDB FFE3          	movff	plusw2,plusw1
  1915   001196  06E8               	decf	wreg,f,c
  1916   001198  E2FC               	bc	u2711
  1917   00119A                     
  1918                           ;_APP/application.c: 272:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg6);
  1919   00119A  0EBC               	movlw	low _lcd_2_8bit
  1920   00119C  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1921   00119E  0E02               	movlw	2
  1922   0011A0  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1923   0011A2  0E01               	movlw	1
  1924   0011A4  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1925   0011A6  0E36               	movlw	low init_msg_lcd@msg6
  1926   0011A8  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1927   0011AA  0E01               	movlw	high init_msg_lcd@msg6
  1928   0011AC  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1929   0011AE  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1930                           
  1931                           ;_APP/application.c: 273:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  1932   0011B2  0E06               	movlw	6
  1933   0011B4  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  1934   0011B6  0E13               	movlw	19
  1935   0011B8  6E17               	movwf	??_init_msg_lcd^0,c
  1936   0011BA  0EAE               	movlw	174
  1937   0011BC                     u3167:
  1938   0011BC  2EE8               	decfsz	wreg,f,c
  1939   0011BE  D7FE               	bra	u3167
  1940   0011C0  2E17               	decfsz	??_init_msg_lcd^0,f,c
  1941   0011C2  D7FC               	bra	u3167
  1942   0011C4  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  1943   0011C6  D7FA               	bra	u3167
  1944   0011C8                     
  1945                           ;_APP/application.c: 274:     uint8_t msg7[] = "                ";
  1946   0011C8  EE22  F0E4         	lfsr	2,init_msg_lcd@F3293
  1947   0011CC  EE11  F0A0         	lfsr	1,init_msg_lcd@msg7
  1948   0011D0  0E10               	movlw	16
  1949   0011D2                     u2721:
  1950   0011D2  CFDB FFE3          	movff	plusw2,plusw1
  1951   0011D6  06E8               	decf	wreg,f,c
  1952   0011D8  E2FC               	bc	u2721
  1953   0011DA                     
  1954                           ;_APP/application.c: 275:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg7);
  1955   0011DA  0EBC               	movlw	low _lcd_2_8bit
  1956   0011DC  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1957   0011DE  0E02               	movlw	2
  1958   0011E0  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1959   0011E2  0E01               	movlw	1
  1960   0011E4  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1961   0011E6  0EA0               	movlw	low init_msg_lcd@msg7
  1962   0011E8  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1963   0011EA  0E01               	movlw	high init_msg_lcd@msg7
  1964   0011EC  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1965   0011EE  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1966   0011F2                     
  1967                           ;_APP/application.c: 276:     uint8_t msg8[] = "loading......    ";
  1968   0011F2  EE22  F024         	lfsr	2,init_msg_lcd@F3295
  1969   0011F6  EE11  F048         	lfsr	1,init_msg_lcd@msg8
  1970   0011FA  0E11               	movlw	17
  1971   0011FC                     u2731:
  1972   0011FC  CFDB FFE3          	movff	plusw2,plusw1
  1973   001200  06E8               	decf	wreg,f,c
  1974   001202  E2FC               	bc	u2731
  1975   001204                     
  1976                           ;_APP/application.c: 277:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg8);
  1977   001204  0EBC               	movlw	low _lcd_2_8bit
  1978   001206  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  1979   001208  0E02               	movlw	2
  1980   00120A  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  1981   00120C  0E01               	movlw	1
  1982   00120E  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  1983   001210  0E48               	movlw	low init_msg_lcd@msg8
  1984   001212  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  1985   001214  0E01               	movlw	high init_msg_lcd@msg8
  1986   001216  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  1987   001218  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  1988                           
  1989                           ;_APP/application.c: 278:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  1990   00121C  0E06               	movlw	6
  1991   00121E  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  1992   001220  0E13               	movlw	19
  1993   001222  6E17               	movwf	??_init_msg_lcd^0,c
  1994   001224  0EAE               	movlw	174
  1995   001226                     u3177:
  1996   001226  2EE8               	decfsz	wreg,f,c
  1997   001228  D7FE               	bra	u3177
  1998   00122A  2E17               	decfsz	??_init_msg_lcd^0,f,c
  1999   00122C  D7FC               	bra	u3177
  2000   00122E  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  2001   001230  D7FA               	bra	u3177
  2002   001232                     
  2003                           ;_APP/application.c: 279:     uint8_t msg9[] = "                ";
  2004   001232  EE22  F0D3         	lfsr	2,init_msg_lcd@F3297
  2005   001236  EE11  F0B1         	lfsr	1,init_msg_lcd@msg9
  2006   00123A  0E10               	movlw	16
  2007   00123C                     u2741:
  2008   00123C  CFDB FFE3          	movff	plusw2,plusw1
  2009   001240  06E8               	decf	wreg,f,c
  2010   001242  E2FC               	bc	u2741
  2011   001244                     
  2012                           ;_APP/application.c: 280:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg9);
  2013   001244  0EBC               	movlw	low _lcd_2_8bit
  2014   001246  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2015   001248  0E02               	movlw	2
  2016   00124A  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2017   00124C  0E01               	movlw	1
  2018   00124E  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2019   001250  0EB1               	movlw	low init_msg_lcd@msg9
  2020   001252  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2021   001254  0E01               	movlw	high init_msg_lcd@msg9
  2022   001256  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2023   001258  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2024   00125C                     
  2025                           ;_APP/application.c: 281:     uint8_t msg10[] = "loading........  ";
  2026   00125C  EE22  F012         	lfsr	2,init_msg_lcd@F3299
  2027   001260  EE11  F05A         	lfsr	1,init_msg_lcd@msg10
  2028   001264  0E11               	movlw	17
  2029   001266                     u2751:
  2030   001266  CFDB FFE3          	movff	plusw2,plusw1
  2031   00126A  06E8               	decf	wreg,f,c
  2032   00126C  E2FC               	bc	u2751
  2033   00126E                     
  2034                           ;_APP/application.c: 282:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg10);
  2035   00126E  0EBC               	movlw	low _lcd_2_8bit
  2036   001270  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2037   001272  0E02               	movlw	2
  2038   001274  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2039   001276  0E01               	movlw	1
  2040   001278  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2041   00127A  0E5A               	movlw	low init_msg_lcd@msg10
  2042   00127C  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2043   00127E  0E01               	movlw	high init_msg_lcd@msg10
  2044   001280  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2045   001282  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2046                           
  2047                           ;_APP/application.c: 283:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  2048   001286  0E06               	movlw	6
  2049   001288  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  2050   00128A  0E13               	movlw	19
  2051   00128C  6E17               	movwf	??_init_msg_lcd^0,c
  2052   00128E  0EAE               	movlw	174
  2053   001290                     u3187:
  2054   001290  2EE8               	decfsz	wreg,f,c
  2055   001292  D7FE               	bra	u3187
  2056   001294  2E17               	decfsz	??_init_msg_lcd^0,f,c
  2057   001296  D7FC               	bra	u3187
  2058   001298  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  2059   00129A  D7FA               	bra	u3187
  2060   00129C                     
  2061                           ;_APP/application.c: 284:     uint8_t msg11[] = "                ";
  2062   00129C  EE22  F0C2         	lfsr	2,init_msg_lcd@F3301
  2063   0012A0  EE11  F0C2         	lfsr	1,init_msg_lcd@msg11
  2064   0012A4  0E10               	movlw	16
  2065   0012A6                     u2761:
  2066   0012A6  CFDB FFE3          	movff	plusw2,plusw1
  2067   0012AA  06E8               	decf	wreg,f,c
  2068   0012AC  E2FC               	bc	u2761
  2069   0012AE                     
  2070                           ;_APP/application.c: 285:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg11);
  2071   0012AE  0EBC               	movlw	low _lcd_2_8bit
  2072   0012B0  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2073   0012B2  0E02               	movlw	2
  2074   0012B4  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2075   0012B6  0E01               	movlw	1
  2076   0012B8  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2077   0012BA  0EC2               	movlw	low init_msg_lcd@msg11
  2078   0012BC  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2079   0012BE  0E01               	movlw	high init_msg_lcd@msg11
  2080   0012C0  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2081   0012C2  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2082   0012C6                     
  2083                           ;_APP/application.c: 286:     uint8_t msg12[] = "loading..........";
  2084   0012C6  EE22  F000         	lfsr	2,init_msg_lcd@F3303
  2085   0012CA  EE11  F06C         	lfsr	1,init_msg_lcd@msg12
  2086   0012CE  0E11               	movlw	17
  2087   0012D0                     u2771:
  2088   0012D0  CFDB FFE3          	movff	plusw2,plusw1
  2089   0012D4  06E8               	decf	wreg,f,c
  2090   0012D6  E2FC               	bc	u2771
  2091   0012D8                     
  2092                           ;_APP/application.c: 287:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg12);
  2093   0012D8  0EBC               	movlw	low _lcd_2_8bit
  2094   0012DA  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2095   0012DC  0E02               	movlw	2
  2096   0012DE  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2097   0012E0  0E01               	movlw	1
  2098   0012E2  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2099   0012E4  0E6C               	movlw	low init_msg_lcd@msg12
  2100   0012E6  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2101   0012E8  0E01               	movlw	high init_msg_lcd@msg12
  2102   0012EA  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2103   0012EC  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2104                           
  2105                           ;_APP/application.c: 288:     _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  2106   0012F0  0E06               	movlw	6
  2107   0012F2  6E18               	movwf	(??_init_msg_lcd+1)^0,c
  2108   0012F4  0E13               	movlw	19
  2109   0012F6  6E17               	movwf	??_init_msg_lcd^0,c
  2110   0012F8  0EAE               	movlw	174
  2111   0012FA                     u3197:
  2112   0012FA  2EE8               	decfsz	wreg,f,c
  2113   0012FC  D7FE               	bra	u3197
  2114   0012FE  2E17               	decfsz	??_init_msg_lcd^0,f,c
  2115   001300  D7FC               	bra	u3197
  2116   001302  2E18               	decfsz	(??_init_msg_lcd+1)^0,f,c
  2117   001304  D7FA               	bra	u3197
  2118   001306                     
  2119                           ;_APP/application.c: 289:     uint8_t msg13[] = "                ";
  2120   001306  EE22  F0B1         	lfsr	2,init_msg_lcd@F3305
  2121   00130A  EE11  F0D3         	lfsr	1,init_msg_lcd@msg13
  2122   00130E  0E10               	movlw	16
  2123   001310                     u2781:
  2124   001310  CFDB FFE3          	movff	plusw2,plusw1
  2125   001314  06E8               	decf	wreg,f,c
  2126   001316  E2FC               	bc	u2781
  2127   001318                     
  2128                           ;_APP/application.c: 290:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 1, msg13);
  2129   001318  0EBC               	movlw	low _lcd_2_8bit
  2130   00131A  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2131   00131C  0E02               	movlw	2
  2132   00131E  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2133   001320  0E01               	movlw	1
  2134   001322  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2135   001324  0ED3               	movlw	low init_msg_lcd@msg13
  2136   001326  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2137   001328  0E01               	movlw	high init_msg_lcd@msg13
  2138   00132A  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2139   00132C  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2140   001330                     
  2141                           ;_APP/application.c: 291:     uint8_t msg14[] = "                ";
  2142   001330  EE22  F0A0         	lfsr	2,init_msg_lcd@F3307
  2143   001334  EE11  F0E4         	lfsr	1,init_msg_lcd@msg14
  2144   001338  0E10               	movlw	16
  2145   00133A                     u2791:
  2146   00133A  CFDB FFE3          	movff	plusw2,plusw1
  2147   00133E  06E8               	decf	wreg,f,c
  2148   001340  E2FC               	bc	u2791
  2149   001342                     
  2150                           ;_APP/application.c: 292:     lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 1, msg14);
  2151   001342  0EBC               	movlw	low _lcd_2_8bit
  2152   001344  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2153   001346  0E01               	movlw	1
  2154   001348  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2155   00134A  0E01               	movlw	1
  2156   00134C  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2157   00134E  0EE4               	movlw	low init_msg_lcd@msg14
  2158   001350  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2159   001352  0E01               	movlw	high init_msg_lcd@msg14
  2160   001354  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2161   001356  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2162   00135A  0012               	return		;funcret
  2163   00135C                     __end_of_init_msg_lcd:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _hello_world_lcd *****************
  2167 ;; Defined at:
  2168 ;;		line 228 in file "_APP/application.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  idx2            1   25[COMRAM] unsigned char 
  2173 ;;  idx             1   24[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 6
  2190 ;; This function calls:
  2191 ;;		_lcd_8bit_send_strng_pos
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text4
  2198   0017D2                     __ptext4:
  2199                           	callstack 0
  2200   0017D2                     _hello_world_lcd:
  2201                           	callstack 24
  2202   0017D2                     
  2203                           ;_APP/application.c: 230:     uint8_t idx = 0,idx2 = 0;
  2204   0017D2  0E00               	movlw	0
  2205   0017D4  6E19               	movwf	hello_world_lcd@idx^0,c
  2206                           
  2207                           ;_APP/application.c: 233:     for(idx=0; idx<3; idx++)
  2208   0017D6  0E00               	movlw	0
  2209   0017D8  6E19               	movwf	hello_world_lcd@idx^0,c
  2210   0017DA                     l4207:
  2211                           
  2212                           ;_APP/application.c: 234:         {;_APP/application.c: 235:             lcd_8bit_send_s
      +                          trng_pos( &lcd_2_8bit, 1, 5+idx, "_HELLO_");
  2213   0017DA  0EBC               	movlw	low _lcd_2_8bit
  2214   0017DC  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2215   0017DE  0E01               	movlw	1
  2216   0017E0  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2217   0017E2  5019               	movf	hello_world_lcd@idx^0,w,c
  2218   0017E4  0F05               	addlw	5
  2219   0017E6  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2220   0017E8  0E2B               	movlw	low STR_1
  2221   0017EA  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2222   0017EC  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2223   0017EE  A4D8               	btfss	status,2,c
  2224   0017F0  0E10               	movlw	high __smallconst
  2225   0017F2  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2226   0017F4  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2227                           
  2228                           ;_APP/application.c: 236:             lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 5+idx, "_
      +                          WORLD_");
  2229   0017F8  0EBC               	movlw	low _lcd_2_8bit
  2230   0017FA  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2231   0017FC  0E02               	movlw	2
  2232   0017FE  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2233   001800  5019               	movf	hello_world_lcd@idx^0,w,c
  2234   001802  0F05               	addlw	5
  2235   001804  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2236   001806  0E23               	movlw	low STR_2
  2237   001808  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2238   00180A  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2239   00180C  A4D8               	btfss	status,2,c
  2240   00180E  0E10               	movlw	high __smallconst
  2241   001810  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2242   001812  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2243   001816                     
  2244                           ;_APP/application.c: 237:              _delay((unsigned long)((500)*((8000000UL)/4000.0)
      +                          ));
  2245   001816  0E06               	movlw	6
  2246   001818  6E18               	movwf	(??_hello_world_lcd+1)^0,c
  2247   00181A  0E13               	movlw	19
  2248   00181C  6E17               	movwf	??_hello_world_lcd^0,c
  2249   00181E  0EAE               	movlw	174
  2250   001820                     u3207:
  2251   001820  2EE8               	decfsz	wreg,f,c
  2252   001822  D7FE               	bra	u3207
  2253   001824  2E17               	decfsz	??_hello_world_lcd^0,f,c
  2254   001826  D7FC               	bra	u3207
  2255   001828  2E18               	decfsz	(??_hello_world_lcd+1)^0,f,c
  2256   00182A  D7FA               	bra	u3207
  2257   00182C                     
  2258                           ;_APP/application.c: 238:             lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 5, "     
      +                               ");
  2259   00182C  0EBC               	movlw	low _lcd_2_8bit
  2260   00182E  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2261   001830  0E01               	movlw	1
  2262   001832  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2263   001834  0E05               	movlw	5
  2264   001836  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2265   001838  0E07               	movlw	low (STR_10+6)
  2266   00183A  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2267   00183C  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2268   00183E  A4D8               	btfss	status,2,c
  2269   001840  0E10               	movlw	high __smallconst
  2270   001842  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2271   001844  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2272   001848                     
  2273                           ;_APP/application.c: 239:             lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 5, "     
      +                               ");
  2274   001848  0EBC               	movlw	low _lcd_2_8bit
  2275   00184A  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2276   00184C  0E02               	movlw	2
  2277   00184E  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2278   001850  0E05               	movlw	5
  2279   001852  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2280   001854  0E07               	movlw	low (STR_10+6)
  2281   001856  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2282   001858  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2283   00185A  A4D8               	btfss	status,2,c
  2284   00185C  0E10               	movlw	high __smallconst
  2285   00185E  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2286   001860  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2287   001864                     
  2288                           ;_APP/application.c: 240:         }
  2289   001864  2A19               	incf	hello_world_lcd@idx^0,f,c
  2290   001866  0E02               	movlw	2
  2291   001868  6419               	cpfsgt	hello_world_lcd@idx^0,c
  2292   00186A  EF39  F00C         	goto	u2641
  2293   00186E  EF3B  F00C         	goto	u2640
  2294   001872                     u2641:
  2295   001872  EFED  F00B         	goto	l4207
  2296   001876                     u2640:
  2297   001876                     
  2298                           ;_APP/application.c: 242:          for(idx2=3 ; idx2!=0; idx2--)
  2299   001876  0E03               	movlw	3
  2300   001878  6E1A               	movwf	hello_world_lcd@idx2^0,c
  2301   00187A                     l4223:
  2302                           
  2303                           ;_APP/application.c: 243:         {;_APP/application.c: 244:           lcd_8bit_send_str
      +                          ng_pos( &lcd_2_8bit, 1, 5+idx2-1, "_HELLO_");
  2304   00187A  0EBC               	movlw	low _lcd_2_8bit
  2305   00187C  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2306   00187E  0E01               	movlw	1
  2307   001880  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2308   001882  501A               	movf	hello_world_lcd@idx2^0,w,c
  2309   001884  0F04               	addlw	4
  2310   001886  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2311   001888  0E2B               	movlw	low STR_1
  2312   00188A  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2313   00188C  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2314   00188E  A4D8               	btfss	status,2,c
  2315   001890  0E10               	movlw	high __smallconst
  2316   001892  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2317   001894  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2318                           
  2319                           ;_APP/application.c: 245:           lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 5+idx2-1, "
      +                          _WORLD_");
  2320   001898  0EBC               	movlw	low _lcd_2_8bit
  2321   00189A  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2322   00189C  0E02               	movlw	2
  2323   00189E  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2324   0018A0  501A               	movf	hello_world_lcd@idx2^0,w,c
  2325   0018A2  0F04               	addlw	4
  2326   0018A4  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2327   0018A6  0E23               	movlw	low STR_2
  2328   0018A8  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2329   0018AA  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2330   0018AC  A4D8               	btfss	status,2,c
  2331   0018AE  0E10               	movlw	high __smallconst
  2332   0018B0  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2333   0018B2  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2334   0018B6                     
  2335                           ;_APP/application.c: 246:           _delay((unsigned long)((500)*((8000000UL)/4000.0)));
  2336   0018B6  0E06               	movlw	6
  2337   0018B8  6E18               	movwf	(??_hello_world_lcd+1)^0,c
  2338   0018BA  0E13               	movlw	19
  2339   0018BC  6E17               	movwf	??_hello_world_lcd^0,c
  2340   0018BE  0EAE               	movlw	174
  2341   0018C0                     u3217:
  2342   0018C0  2EE8               	decfsz	wreg,f,c
  2343   0018C2  D7FE               	bra	u3217
  2344   0018C4  2E17               	decfsz	??_hello_world_lcd^0,f,c
  2345   0018C6  D7FC               	bra	u3217
  2346   0018C8  2E18               	decfsz	(??_hello_world_lcd+1)^0,f,c
  2347   0018CA  D7FA               	bra	u3217
  2348   0018CC                     
  2349                           ;_APP/application.c: 247:           lcd_8bit_send_strng_pos( &lcd_2_8bit, 1, 5, "       
      +                             ");
  2350   0018CC  0EBC               	movlw	low _lcd_2_8bit
  2351   0018CE  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2352   0018D0  0E01               	movlw	1
  2353   0018D2  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2354   0018D4  0E05               	movlw	5
  2355   0018D6  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2356   0018D8  0E07               	movlw	low (STR_10+6)
  2357   0018DA  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2358   0018DC  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2359   0018DE  A4D8               	btfss	status,2,c
  2360   0018E0  0E10               	movlw	high __smallconst
  2361   0018E2  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2362   0018E4  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2363   0018E8                     
  2364                           ;_APP/application.c: 248:           lcd_8bit_send_strng_pos( &lcd_2_8bit, 2, 5, "       
      +                             ");
  2365   0018E8  0EBC               	movlw	low _lcd_2_8bit
  2366   0018EA  6E12               	movwf	lcd_8bit_send_strng_pos@p_lcd^0,c
  2367   0018EC  0E02               	movlw	2
  2368   0018EE  6E13               	movwf	lcd_8bit_send_strng_pos@d_row^0,c
  2369   0018F0  0E05               	movlw	5
  2370   0018F2  6E14               	movwf	lcd_8bit_send_strng_pos@d_column^0,c
  2371   0018F4  0E07               	movlw	low (STR_10+6)
  2372   0018F6  6E15               	movwf	lcd_8bit_send_strng_pos@p_strng^0,c
  2373   0018F8  5015               	movf	lcd_8bit_send_strng_pos@p_strng^0,w,c
  2374   0018FA  A4D8               	btfss	status,2,c
  2375   0018FC  0E10               	movlw	high __smallconst
  2376   0018FE  6E16               	movwf	(lcd_8bit_send_strng_pos@p_strng+1)^0,c
  2377   001900  EC8D  F011         	call	_lcd_8bit_send_strng_pos	;wreg free
  2378   001904                     
  2379                           ;_APP/application.c: 250:         }
  2380   001904  061A               	decf	hello_world_lcd@idx2^0,f,c
  2381   001906  501A               	movf	hello_world_lcd@idx2^0,w,c
  2382   001908  A4D8               	btfss	status,2,c
  2383   00190A  EF89  F00C         	goto	u2651
  2384   00190E  EF8B  F00C         	goto	u2650
  2385   001912                     u2651:
  2386   001912  EF3D  F00C         	goto	l4223
  2387   001916                     u2650:
  2388   001916  0012               	return		;funcret
  2389   001918                     __end_of_hello_world_lcd:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _lcd_8bit_send_strng_pos *****************
  2393 ;; Defined at:
  2394 ;;		line 356 in file "_HAL/Drivers/LCD/LCD.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  p_lcd           1   17[COMRAM] PTR struct .
  2397 ;;		 -> lcd_2_8bit(50), 
  2398 ;;  d_row           1   18[COMRAM] const unsigned char 
  2399 ;;  d_column        1   19[COMRAM] const unsigned char 
  2400 ;;  p_strng         2   20[COMRAM] PTR const unsigned char 
  2401 ;;		 -> main@msg_X(4), main@msg_space(17), main@msg_boom(17), init_msg_lcd@msg14(17), 
  2402 ;;		 -> init_msg_lcd@msg13(17), init_msg_lcd@msg12(18), init_msg_lcd@msg11(17), init_msg_lcd@msg10(18), 
  2403 ;;		 -> init_msg_lcd@msg9(17), init_msg_lcd@msg8(18), init_msg_lcd@msg7(17), init_msg_lcd@msg6(18), 
  2404 ;;		 -> init_msg_lcd@msg5(17), init_msg_lcd@msg4(18), init_msg_lcd@msg3(17), init_msg_lcd@msg2(18), 
  2405 ;;		 -> init_msg_lcd@msg1(18), STR_10(17), STR_9(17), STR_8(11), 
  2406 ;;		 -> STR_7(11), STR_6(8), STR_5(8), STR_4(11), 
  2407 ;;		 -> STR_3(11), STR_2(8), STR_1(8), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      enum E2975
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2419 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;Total ram usage:        5 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 5
  2426 ;; This function calls:
  2427 ;;		_lcd_8bit_send_char
  2428 ;;		_lcd_8bit_set_cursor
  2429 ;; This function is called by:
  2430 ;;		_hello_world_lcd
  2431 ;;		_init_msg_lcd
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text5
  2437   00231A                     __ptext5:
  2438                           	callstack 0
  2439   00231A                     _lcd_8bit_send_strng_pos:
  2440                           	callstack 25
  2441   00231A                     
  2442                           ;_HAL/Drivers/LCD/LCD.c: 356: std_return lcd_8bit_send_strng_pos( lcd_8bit_t * p_lcd, co
      +                          nst uint8_t d_row, const uint8_t d_column, const uint8_t * p_strng);_HAL/Drivers/LCD/LCD
      +                          .c: 357: {;_HAL/Drivers/LCD/LCD.c: 358:     if (((void*)0) == p_lcd)
  2443   00231A  5012               	movf	lcd_8bit_send_strng_pos@p_lcd^0,w,c
  2444   00231C  A4D8               	btfss	status,2,c
  2445   00231E  EF93  F011         	goto	u2591
  2446   002322  EF95  F011         	goto	u2590
  2447   002326                     u2591:
  2448   002326  EF97  F011         	goto	l4181
  2449   00232A                     u2590:
  2450   00232A  EFD2  F011         	goto	l405
  2451   00232E                     l4181:
  2452                           
  2453                           ;_HAL/Drivers/LCD/LCD.c: 363:     {;_HAL/Drivers/LCD/LCD.c: 364:         lcd_8bit_set_cu
      +                          rsor(p_lcd, d_row, d_column);
  2454   00232E  C012  F00D         	movff	lcd_8bit_send_strng_pos@p_lcd,lcd_8bit_set_cursor@p_lcd
  2455   002332  C013  F00E         	movff	lcd_8bit_send_strng_pos@d_row,lcd_8bit_set_cursor@d_row
  2456   002336  C014  F00F         	movff	lcd_8bit_send_strng_pos@d_column,lcd_8bit_set_cursor@d_column
  2457   00233A  ECAF  F012         	call	_lcd_8bit_set_cursor	;wreg free
  2458                           
  2459                           ;_HAL/Drivers/LCD/LCD.c: 365:         while( '\0' != *p_strng)
  2460   00233E  EFB9  F011         	goto	l4187
  2461   002342                     l4183:
  2462                           
  2463                           ;_HAL/Drivers/LCD/LCD.c: 366:         {;_HAL/Drivers/LCD/LCD.c: 367:         lcd_8bit_se
      +                          nd_char(p_lcd, *p_strng);
  2464   002342  C012  F00B         	movff	lcd_8bit_send_strng_pos@p_lcd,lcd_8bit_send_char@p_lcd
  2465   002346  C015  FFF6         	movff	lcd_8bit_send_strng_pos@p_strng,tblptrl
  2466   00234A  C016  FFF7         	movff	lcd_8bit_send_strng_pos@p_strng+1,tblptrh
  2467   00234E  0E00               	movlw	low (__smallconst shr (0+16))
  2468   002350  6EF8               	movwf	tblptru,c
  2469   002352  0E0F               	movlw	(high __ramtop+-1)
  2470   002354  64F7               	cpfsgt	tblptrh,c
  2471   002356  D003               	bra	u2607
  2472   002358  0008               	tblrd		*
  2473   00235A  50F5               	movf	tablat,w,c
  2474   00235C  D005               	bra	u2600
  2475   00235E                     u2607:
  2476   00235E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2477   002362  CFF7 FFEA          	movff	tblptrh,fsr0h
  2478   002366  50EF               	movf	indf0,w,c
  2479   002368                     u2600:
  2480   002368  6E0C               	movwf	lcd_8bit_send_char@d_data^0,c
  2481   00236A  ECCB  F00F         	call	_lcd_8bit_send_char	;wreg free
  2482   00236E                     
  2483                           ;_HAL/Drivers/LCD/LCD.c: 368:         p_strng++;
  2484   00236E  4A15               	infsnz	lcd_8bit_send_strng_pos@p_strng^0,f,c
  2485   002370  2A16               	incf	(lcd_8bit_send_strng_pos@p_strng+1)^0,f,c
  2486   002372                     l4187:
  2487                           
  2488                           ;_HAL/Drivers/LCD/LCD.c: 365:         while( '\0' != *p_strng)
  2489   002372  C015  FFF6         	movff	lcd_8bit_send_strng_pos@p_strng,tblptrl
  2490   002376  C016  FFF7         	movff	lcd_8bit_send_strng_pos@p_strng+1,tblptrh
  2491   00237A  0E00               	movlw	low (__smallconst shr (0+16))
  2492   00237C  6EF8               	movwf	tblptru,c
  2493   00237E  0E0F               	movlw	(high __ramtop+-1)
  2494   002380  64F7               	cpfsgt	tblptrh,c
  2495   002382  D003               	bra	u2617
  2496   002384  0008               	tblrd		*
  2497   002386  50F5               	movf	tablat,w,c
  2498   002388  D005               	bra	u2610
  2499   00238A                     u2617:
  2500   00238A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2501   00238E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2502   002392  50EF               	movf	indf0,w,c
  2503   002394                     u2610:
  2504   002394  0900               	iorlw	0
  2505   002396  A4D8               	btfss	status,2,c
  2506   002398  EFD0  F011         	goto	u2621
  2507   00239C  EFD2  F011         	goto	u2620
  2508   0023A0                     u2621:
  2509   0023A0  EFA1  F011         	goto	l4183
  2510   0023A4                     u2620:
  2511   0023A4                     l405:
  2512   0023A4  0012               	return		;funcret
  2513   0023A6                     __end_of_lcd_8bit_send_strng_pos:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _lcd_8bit_set_cursor *****************
  2517 ;; Defined at:
  2518 ;;		line 452 in file "_HAL/Drivers/LCD/LCD.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  p_lcd           1   12[COMRAM] PTR struct .
  2521 ;;		 -> lcd_2_8bit(50), 
  2522 ;;  d_row           1   13[COMRAM] const unsigned char 
  2523 ;;  d_column        1   14[COMRAM] const unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      enum E2975
  2528 ;; Registers used:
  2529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        5 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 4
  2542 ;; This function calls:
  2543 ;;		_lcd_8bit_send_cmd
  2544 ;; This function is called by:
  2545 ;;		_lcd_8bit_send_char_pos
  2546 ;;		_lcd_8bit_send_strng_pos
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text6
  2551   00255E                     __ptext6:
  2552                           	callstack 0
  2553   00255E                     _lcd_8bit_set_cursor:
  2554                           	callstack 25
  2555   00255E                     
  2556                           ;_HAL/Drivers/LCD/LCD.c: 452: std_return lcd_8bit_set_cursor( lcd_8bit_t * p_lcd, const 
      +                          uint8_t d_row, const uint8_t d_column);_HAL/Drivers/LCD/LCD.c: 453: {;_HAL/Drivers/LCD/L
      +                          CD.c: 454:     lcd_8bit_send_cmd(p_lcd, 0x80);
  2557   00255E  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  2558   002562  0E80               	movlw	128
  2559   002564  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  2560   002566  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  2561                           
  2562                           ;_HAL/Drivers/LCD/LCD.c: 456:     switch (d_row)
  2563   00256A  EFC9  F012         	goto	l4119
  2564   00256E                     l4113:
  2565   00256E  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  2566   002572  500F               	movf	lcd_8bit_set_cursor@d_column^0,w,c
  2567   002574  0F7F               	addlw	127
  2568   002576  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  2569   002578  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  2570   00257C  EFDE  F012         	goto	l447
  2571   002580                     l4115:
  2572   002580  C00D  F00B         	movff	lcd_8bit_set_cursor@p_lcd,lcd_8bit_send_cmd@p_lcd
  2573   002584  500F               	movf	lcd_8bit_set_cursor@d_column^0,w,c
  2574   002586  0FBF               	addlw	191
  2575   002588  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  2576   00258A  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  2577   00258E  EFDE  F012         	goto	l447
  2578   002592                     l4119:
  2579   002592  500E               	movf	lcd_8bit_set_cursor@d_row^0,w,c
  2580   002594  6E10               	movwf	??_lcd_8bit_set_cursor^0,c
  2581   002596  6A11               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  2582                           
  2583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 1, Range of values is 0 to 0
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte            4     3 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590   002598  5011               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  2591   00259A  0A00               	xorlw	0	; case 0
  2592   00259C  B4D8               	btfsc	status,2,c
  2593   00259E  EFD3  F012         	goto	l4699
  2594   0025A2  EFDE  F012         	goto	l447
  2595   0025A6                     l4699:
  2596                           
  2597                           ; Switch size 1, requested type "simple"
  2598                           ; Number of cases is 2, Range of values is 1 to 2
  2599                           ; switch strategies available:
  2600                           ; Name         Instructions Cycles
  2601                           ; simple_byte            7     4 (average)
  2602                           ;	Chosen strategy is simple_byte
  2603   0025A6  5010               	movf	??_lcd_8bit_set_cursor^0,w,c
  2604   0025A8  0A01               	xorlw	1	; case 1
  2605   0025AA  B4D8               	btfsc	status,2,c
  2606   0025AC  EFB7  F012         	goto	l4113
  2607   0025B0  0A03               	xorlw	3	; case 2
  2608   0025B2  B4D8               	btfsc	status,2,c
  2609   0025B4  EFC0  F012         	goto	l4115
  2610   0025B8  EFDE  F012         	goto	l447
  2611   0025BC                     l447:
  2612   0025BC  0012               	return		;funcret
  2613   0025BE                     __end_of_lcd_8bit_set_cursor:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _lcd_8bit_send_char *****************
  2617 ;; Defined at:
  2618 ;;		line 299 in file "_HAL/Drivers/LCD/LCD.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  p_lcd           1   10[COMRAM] PTR struct .
  2621 ;;		 -> lcd_2_8bit(50), 
  2622 ;;  d_data          1   11[COMRAM] const unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      enum E2975
  2627 ;; Registers used:
  2628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 3
  2641 ;; This function calls:
  2642 ;;		_gpio_pin_write_logic
  2643 ;;		_lcd_8bit_send_enable
  2644 ;; This function is called by:
  2645 ;;		_lcd_8bit_send_char_pos
  2646 ;;		_lcd_8bit_send_strng_pos
  2647 ;;		_lcd_8bit_send_custom_char_pos
  2648 ;;		_lcd_8bit_send_strng
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text7
  2653   001F96                     __ptext7:
  2654                           	callstack 0
  2655   001F96                     _lcd_8bit_send_char:
  2656                           	callstack 26
  2657   001F96                     
  2658                           ;_HAL/Drivers/LCD/LCD.c: 299: std_return lcd_8bit_send_char( lcd_8bit_t * p_lcd, const u
      +                          int8_t d_data);_HAL/Drivers/LCD/LCD.c: 300: {;_HAL/Drivers/LCD/LCD.c: 301:     if (((voi
      +                          d*)0) == p_lcd)
  2659   001F96  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2660   001F98  A4D8               	btfss	status,2,c
  2661   001F9A  EFD1  F00F         	goto	u2561
  2662   001F9E  EFD3  F00F         	goto	u2560
  2663   001FA2                     u2561:
  2664   001FA2  EFD5  F00F         	goto	l4107
  2665   001FA6                     u2560:
  2666   001FA6  EF29  F010         	goto	l387
  2667   001FAA                     l4107:
  2668                           
  2669                           ;_HAL/Drivers/LCD/LCD.c: 306:     {;_HAL/Drivers/LCD/LCD.c: 307:         gpio_pin_write_
      +                          logic(&(p_lcd->lcd_reg_select_pin),LOGIC_ON);
  2670   001FAA  C00B  F006         	movff	lcd_8bit_send_char@p_lcd,gpio_pin_write_logic@p_pin_config
  2671   001FAE  0E01               	movlw	1
  2672   001FB0  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2673   001FB2  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2674                           
  2675                           ;_HAL/Drivers/LCD/LCD.c: 309:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[0]), ((
      +                          d_data >> 0) & 0x01) );
  2676   001FB6  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2677   001FB8  0F0A               	addlw	10
  2678   001FBA  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2679   001FBC  500C               	movf	lcd_8bit_send_char@d_data^0,w,c
  2680   001FBE  0B01               	andlw	1
  2681   001FC0  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2682   001FC2  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2683                           
  2684                           ;_HAL/Drivers/LCD/LCD.c: 310:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[1]), ((
      +                          d_data >> 1) & 0x01) );
  2685   001FC6  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2686   001FC8  0F0F               	addlw	15
  2687   001FCA  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2688   001FCC  90D8               	bcf	status,0,c
  2689   001FCE  300C               	rrcf	lcd_8bit_send_char@d_data^0,w,c
  2690   001FD0  0B01               	andlw	1
  2691   001FD2  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2692   001FD4  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2693                           
  2694                           ;_HAL/Drivers/LCD/LCD.c: 311:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[2]), ((
      +                          d_data >> 2) & 0x01) );
  2695   001FD8  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2696   001FDA  0F14               	addlw	20
  2697   001FDC  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2698   001FDE  400C               	rrncf	lcd_8bit_send_char@d_data^0,w,c
  2699   001FE0  42E8               	rrncf	wreg,f,c
  2700   001FE2  0B3F               	andlw	63
  2701   001FE4  0B01               	andlw	1
  2702   001FE6  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2703   001FE8  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2704                           
  2705                           ;_HAL/Drivers/LCD/LCD.c: 312:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[3]), ((
      +                          d_data >> 3) & 0x01) );
  2706   001FEC  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2707   001FEE  0F19               	addlw	25
  2708   001FF0  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2709   001FF2  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  2710   001FF4  46E8               	rlncf	wreg,f,c
  2711   001FF6  0B1F               	andlw	31
  2712   001FF8  0B01               	andlw	1
  2713   001FFA  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2714   001FFC  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2715                           
  2716                           ;_HAL/Drivers/LCD/LCD.c: 313:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[4]), ((
      +                          d_data >> 4) & 0x01) );
  2717   002000  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2718   002002  0F1E               	addlw	30
  2719   002004  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2720   002006  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  2721   002008  0B0F               	andlw	15
  2722   00200A  0B01               	andlw	1
  2723   00200C  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2724   00200E  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2725                           
  2726                           ;_HAL/Drivers/LCD/LCD.c: 314:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[5]), ((
      +                          d_data >> 5) & 0x01) );
  2727   002012  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2728   002014  0F23               	addlw	35
  2729   002016  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2730   002018  380C               	swapf	lcd_8bit_send_char@d_data^0,w,c
  2731   00201A  42E8               	rrncf	wreg,f,c
  2732   00201C  0B07               	andlw	7
  2733   00201E  0B01               	andlw	1
  2734   002020  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2735   002022  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2736                           
  2737                           ;_HAL/Drivers/LCD/LCD.c: 315:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[6]), ((
      +                          d_data >> 6) & 0x01) );
  2738   002026  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2739   002028  0F28               	addlw	40
  2740   00202A  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2741   00202C  440C               	rlncf	lcd_8bit_send_char@d_data^0,w,c
  2742   00202E  46E8               	rlncf	wreg,f,c
  2743   002030  0B03               	andlw	3
  2744   002032  0B01               	andlw	1
  2745   002034  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2746   002036  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2747                           
  2748                           ;_HAL/Drivers/LCD/LCD.c: 316:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[7]), ((
      +                          d_data >> 7) & 0x01) );
  2749   00203A  500B               	movf	lcd_8bit_send_char@p_lcd^0,w,c
  2750   00203C  0F2D               	addlw	45
  2751   00203E  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  2752   002040  440C               	rlncf	lcd_8bit_send_char@d_data^0,w,c
  2753   002042  0B01               	andlw	1
  2754   002044  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  2755   002046  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  2756                           
  2757                           ;_HAL/Drivers/LCD/LCD.c: 317:         lcd_8bit_send_enable(p_lcd);
  2758   00204A  C00B  F00A         	movff	lcd_8bit_send_char@p_lcd,lcd_8bit_send_enable@p_lcd
  2759   00204E  EC84  F013         	call	_lcd_8bit_send_enable	;wreg free
  2760   002052                     l387:
  2761   002052  0012               	return		;funcret
  2762   002054                     __end_of_lcd_8bit_send_char:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _convert_uint8_to_strng *****************
  2766 ;; Defined at:
  2767 ;;		line 397 in file "_HAL/Drivers/LCD/LCD.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  d_input         1    wreg     unsigned char 
  2770 ;;  d_strng         1   45[COMRAM] PTR unsigned char 
  2771 ;;		 -> main@msg_X(4), 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  d_input         1   46[COMRAM] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      enum E2975
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 5
  2790 ;; This function calls:
  2791 ;;		_memset
  2792 ;;		_sprintf
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text8
  2799   0025BE                     __ptext8:
  2800                           	callstack 0
  2801   0025BE                     _convert_uint8_to_strng:
  2802                           	callstack 25
  2803                           
  2804                           ;incstack = 0
  2805                           ;convert_uint8_to_strng@d_input stored from wreg
  2806   0025BE  6E2F               	movwf	convert_uint8_to_strng@d_input^0,c
  2807   0025C0                     
  2808                           ;_HAL/Drivers/LCD/LCD.c: 397: std_return convert_uint8_to_strng(uint8_t d_input, uint8_t
      +                           * d_strng);_HAL/Drivers/LCD/LCD.c: 398: {;_HAL/Drivers/LCD/LCD.c: 399:     if (((void*)
      +                          0) == d_strng)
  2809   0025C0  502E               	movf	convert_uint8_to_strng@d_strng^0,w,c
  2810   0025C2  A4D8               	btfss	status,2,c
  2811   0025C4  EFE6  F012         	goto	u2041
  2812   0025C8  EFE8  F012         	goto	u2040
  2813   0025CC                     u2041:
  2814   0025CC  EFEA  F012         	goto	l3525
  2815   0025D0                     u2040:
  2816   0025D0  EFFF  F012         	goto	l420
  2817   0025D4                     l3525:
  2818                           
  2819                           ;_HAL/Drivers/LCD/LCD.c: 404:     {;_HAL/Drivers/LCD/LCD.c: 405:         memset(d_strng,
      +                           '\0', 4);
  2820   0025D4  C02E  F001         	movff	convert_uint8_to_strng@d_strng,memset@dest
  2821   0025D8  0E00               	movlw	0
  2822   0025DA  6E03               	movwf	(memset@c+1)^0,c
  2823   0025DC  0E00               	movlw	0
  2824   0025DE  6E02               	movwf	memset@c^0,c
  2825   0025E0  0E00               	movlw	0
  2826   0025E2  6E05               	movwf	(memset@n+1)^0,c
  2827   0025E4  0E04               	movlw	4
  2828   0025E6  6E04               	movwf	memset@n^0,c
  2829   0025E8  EC6C  F013         	call	_memset	;wreg free
  2830   0025EC                     
  2831                           ;_HAL/Drivers/LCD/LCD.c: 406:         sprintf(d_strng, "%i", d_input);
  2832   0025EC  C02E  F01B         	movff	convert_uint8_to_strng@d_strng,sprintf@s
  2833   0025F0  0E33               	movlw	low STR_11
  2834   0025F2  6E1C               	movwf	sprintf@fmt^0,c
  2835   0025F4  C02F  F01D         	movff	convert_uint8_to_strng@d_input,?_sprintf+2
  2836   0025F8  6A1E               	clrf	(?_sprintf+3)^0,c
  2837   0025FA  EC1F  F013         	call	_sprintf	;wreg free
  2838   0025FE                     l420:
  2839   0025FE  0012               	return		;funcret
  2840   002600                     __end_of_convert_uint8_to_strng:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _sprintf *****************
  2844 ;; Defined at:
  2845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  s               1   26[COMRAM] PTR unsigned char 
  2848 ;;		 -> main@msg_X(4), 
  2849 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  2850 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  f              12   33[COMRAM] struct _IO_FILE
  2853 ;;  ret             2    0        int 
  2854 ;;  ap              1   32[COMRAM] PTR void [1]
  2855 ;;		 -> ?_sprintf(2), 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   26[COMRAM] int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:       19 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 4
  2872 ;; This function calls:
  2873 ;;		_vfprintf
  2874 ;; This function is called by:
  2875 ;;		_convert_uint8_to_strng
  2876 ;;		_convert_uint16_to_strng
  2877 ;;		_convert_uint32_to_strng
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text9
  2882   00263E                     __ptext9:
  2883                           	callstack 0
  2884   00263E                     _sprintf:
  2885                           	callstack 25
  2886   00263E  0E1D               	movlw	low (?_sprintf+2)
  2887   002640  6E21               	movwf	sprintf@ap^0,c
  2888   002642  C01B  F022         	movff	sprintf@s,sprintf@f
  2889   002646  0E00               	movlw	0
  2890   002648  6E26               	movwf	(sprintf@f+4)^0,c
  2891   00264A  0E00               	movlw	0
  2892   00264C  6E25               	movwf	(sprintf@f+3)^0,c
  2893   00264E  0E00               	movlw	0
  2894   002650  6E2D               	movwf	(sprintf@f+11)^0,c
  2895   002652  0E00               	movlw	0
  2896   002654  6E2C               	movwf	(sprintf@f+10)^0,c
  2897   002656  0E22               	movlw	low sprintf@f
  2898   002658  6E17               	movwf	vfprintf@fp^0,c
  2899   00265A  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
  2900   00265E  0E21               	movlw	low sprintf@ap
  2901   002660  6E19               	movwf	vfprintf@ap^0,c
  2902   002662  EC00  F013         	call	_vfprintf	;wreg free
  2903   002666  501B               	movf	sprintf@s^0,w,c
  2904   002668  2425               	addwf	(sprintf@f+3)^0,w,c
  2905   00266A  6ED9               	movwf	fsr2l,c
  2906   00266C  6ADA               	clrf	fsr2h,c
  2907   00266E  6ADF               	clrf	indf2,c
  2908   002670  0012               	return		;funcret
  2909   002672                     __end_of_sprintf:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _vfprintf *****************
  2913 ;; Defined at:
  2914 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2917 ;;		 -> sprintf@f(12), 
  2918 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  2919 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  2920 ;;  ap              1   24[COMRAM] PTR PTR void 
  2921 ;;		 -> sprintf@ap(1), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  2924 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2   22[COMRAM] int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        4 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; Hardware stack levels required when called: 3
  2941 ;; This function calls:
  2942 ;;		_vfpfcnvrt
  2943 ;; This function is called by:
  2944 ;;		_sprintf
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text10
  2949   002600                     __ptext10:
  2950                           	callstack 0
  2951   002600                     _vfprintf:
  2952                           	callstack 25
  2953   002600                     
  2954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2955   002600  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2958   002604  EF0C  F013         	goto	l3275
  2959   002608                     l3273:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2962   002608  C017  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2963   00260C  0E1A               	movlw	low vfprintf@cfmt
  2964   00260E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2965   002610  C019  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2966   002614  ECAE  F009         	call	_vfpfcnvrt	;wreg free
  2967   002618                     l3275:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2970   002618  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2971   00261C                     	if	1	;There is more than 1 active tblptr byte
  2972   00261C  0E10               	movlw	high __smallconst
  2973   00261E  6EF7               	movwf	tblptrh,c
  2974   002620                     	endif
  2975   002620                     	if	0	;tblptru may be non-zero
  2976   002620                     	endif
  2977   002620                     	if	0	;tblptru may be non-zero
  2978   002620                     	endif
  2979   002620  0008               	tblrd		*
  2980   002622  50F5               	movf	tablat,w,c
  2981   002624  0900               	iorlw	0
  2982   002626  A4D8               	btfss	status,2,c
  2983   002628  EF18  F013         	goto	u1751
  2984   00262C  EF1A  F013         	goto	u1750
  2985   002630                     u1751:
  2986   002630  EF04  F013         	goto	l3273
  2987   002634                     u1750:
  2988   002634                     
  2989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2990   002634  0E00               	movlw	0
  2991   002636  6E18               	movwf	(?_vfprintf+1)^0,c
  2992   002638  0E00               	movlw	0
  2993   00263A  6E17               	movwf	?_vfprintf^0,c
  2994   00263C  0012               	return		;funcret
  2995   00263E                     __end_of_vfprintf:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _vfpfcnvrt *****************
  2999 ;; Defined at:
  3000 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3003 ;;		 -> sprintf@f(12), 
  3004 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  3005 ;;		 -> vfprintf@cfmt(1), 
  3006 ;;  ap              1   12[COMRAM] PTR PTR void 
  3007 ;;		 -> sprintf@ap(1), 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  convarg         4   17[COMRAM] struct .
  3010 ;;  c               1   21[COMRAM] unsigned char 
  3011 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3012 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  3013 ;;  done            1   15[COMRAM] _Bool 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:       12 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 2
  3030 ;; This function calls:
  3031 ;;		___awdiv
  3032 ;;		___awmod
  3033 ;;		___lwdiv
  3034 ;;		___lwmod
  3035 ;;		_abs
  3036 ;;		_fputc
  3037 ;; This function is called by:
  3038 ;;		_vfprintf
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text11
  3043   00135C                     __ptext11:
  3044                           	callstack 0
  3045   00135C                     _vfpfcnvrt:
  3046                           	callstack 25
  3047   00135C                     
  3048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3049   00135C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3050   00135E  6ED9               	movwf	fsr2l,c
  3051   001360  6ADA               	clrf	fsr2h,c
  3052   001362  CFDF FFF6          	movff	indf2,tblptrl
  3053   001366                     	if	1	;There is more than 1 active tblptr byte
  3054   001366  0E10               	movlw	high __smallconst
  3055   001368  6EF7               	movwf	tblptrh,c
  3056   00136A                     	endif
  3057   00136A                     	if	0	;tblptru may be non-zero
  3058   00136A                     	endif
  3059   00136A                     	if	0	;tblptru may be non-zero
  3060   00136A                     	endif
  3061   00136A  0008               	tblrd		*
  3062   00136C  50F5               	movf	tablat,w,c
  3063   00136E  0A25               	xorlw	37
  3064   001370  A4D8               	btfss	status,2,c
  3065   001372  EFBD  F009         	goto	u1581
  3066   001376  EFBF  F009         	goto	u1580
  3067   00137A                     u1581:
  3068   00137A  EF07  F00B         	goto	l3217
  3069   00137E                     u1580:
  3070   00137E                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3072   00137E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3073   001380  6ED9               	movwf	fsr2l,c
  3074   001382  6ADA               	clrf	fsr2h,c
  3075   001384  2ADF               	incf	indf2,f,c
  3076   001386                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3078   001386  0E00               	movlw	0
  3079   001388  6E7C               	movwf	(_width+1)^0,c
  3080   00138A  0E00               	movlw	0
  3081   00138C  6E7B               	movwf	_width^0,c
  3082   00138E  C07B  F07F         	movff	_width,_flags
  3083   001392                     
  3084                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3085   001392  687D               	setf	_prec^0,c
  3086   001394  687E               	setf	(_prec+1)^0,c
  3087   001396                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3089   001396  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3090   001398  6ED9               	movwf	fsr2l,c
  3091   00139A  6ADA               	clrf	fsr2h,c
  3092   00139C  50DF               	movf	indf2,w,c
  3093   00139E  6E11               	movwf	vfpfcnvrt@cp^0,c
  3094   0013A0                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3096   0013A0  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3097   0013A4                     	if	1	;There is more than 1 active tblptr byte
  3098   0013A4  0E10               	movlw	high __smallconst
  3099   0013A6  6EF7               	movwf	tblptrh,c
  3100   0013A8                     	endif
  3101   0013A8                     	if	0	;tblptru may be non-zero
  3102   0013A8                     	endif
  3103   0013A8                     	if	0	;tblptru may be non-zero
  3104   0013A8                     	endif
  3105   0013A8  0008               	tblrd		*
  3106   0013AA  50F5               	movf	tablat,w,c
  3107   0013AC  0A64               	xorlw	100
  3108   0013AE  B4D8               	btfsc	status,2,c
  3109   0013B0  EFDC  F009         	goto	u1591
  3110   0013B4  EFDE  F009         	goto	u1590
  3111   0013B8                     u1591:
  3112   0013B8  EFEC  F009         	goto	l3161
  3113   0013BC                     u1590:
  3114   0013BC  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3115   0013C0                     	if	1	;There is more than 1 active tblptr byte
  3116   0013C0  0E10               	movlw	high __smallconst
  3117   0013C2  6EF7               	movwf	tblptrh,c
  3118   0013C4                     	endif
  3119   0013C4                     	if	0	;tblptru may be non-zero
  3120   0013C4                     	endif
  3121   0013C4                     	if	0	;tblptru may be non-zero
  3122   0013C4                     	endif
  3123   0013C4  0008               	tblrd		*
  3124   0013C6  50F5               	movf	tablat,w,c
  3125   0013C8  0A69               	xorlw	105
  3126   0013CA  A4D8               	btfss	status,2,c
  3127   0013CC  EFEA  F009         	goto	u1601
  3128   0013D0  EFEC  F009         	goto	u1600
  3129   0013D4                     u1601:
  3130   0013D4  EF78  F00A         	goto	l3187
  3131   0013D8                     u1600:
  3132   0013D8                     l3161:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3135   0013D8  500D               	movf	vfpfcnvrt@ap^0,w,c
  3136   0013DA  6ED9               	movwf	fsr2l,c
  3137   0013DC  6ADA               	clrf	fsr2h,c
  3138   0013DE  0E02               	movlw	2
  3139   0013E0  26DF               	addwf	indf2,f,c
  3140   0013E2  5CDF               	subwf	indf2,w,c
  3141   0013E4  6ED9               	movwf	fsr2l,c
  3142   0013E6  6ADA               	clrf	fsr2h,c
  3143   0013E8  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3144   0013EC  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3145   0013F0                     
  3146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3147   0013F0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3148   0013F2  6ED9               	movwf	fsr2l,c
  3149   0013F4  6ADA               	clrf	fsr2h,c
  3150   0013F6  2811               	incf	vfpfcnvrt@cp^0,w,c
  3151   0013F8  6EDF               	movwf	indf2,c
  3152   0013FA                     
  3153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3154   0013FA  0E20               	movlw	32
  3155   0013FC  6E16               	movwf	vfpfcnvrt@c^0,c
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3158   0013FE  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3159   001400  EF04  F00A         	goto	u1611
  3160   001404  EF07  F00A         	goto	u1610
  3161   001408                     u1611:
  3162   001408  0E01               	movlw	1
  3163   00140A  EF08  F00A         	goto	u1620
  3164   00140E                     u1610:
  3165   00140E  0E00               	movlw	0
  3166   001410                     u1620:
  3167   001410  6E10               	movwf	vfpfcnvrt@done^0,c
  3168   001412                     l3167:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3171   001412  0616               	decf	vfpfcnvrt@c^0,f,c
  3172   001414  0E00               	movlw	low _dbuf
  3173   001416  2416               	addwf	vfpfcnvrt@c^0,w,c
  3174   001418  6ED9               	movwf	fsr2l,c
  3175   00141A  6ADA               	clrf	fsr2h,c
  3176   00141C  0E03               	movlw	high _dbuf
  3177   00141E  22DA               	addwfc	fsr2h,f,c
  3178   001420  C012  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3179   001424  C013  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3180   001428  0E00               	movlw	0
  3181   00142A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3182   00142C  0E0A               	movlw	10
  3183   00142E  6E03               	movwf	___awmod@divisor^0,c
  3184   001430  EC89  F010         	call	___awmod	;wreg free
  3185   001434  C001  F007         	movff	?___awmod,abs@a
  3186   001438  C002  F008         	movff	?___awmod+1,abs@a+1
  3187   00143C  EC39  F013         	call	_abs	;wreg free
  3188   001440  5007               	movf	?_abs^0,w,c
  3189   001442  0F30               	addlw	48
  3190   001444  6EDF               	movwf	indf2,c
  3191   001446                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3193   001446  C012  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3194   00144A  C013  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3195   00144E  0E00               	movlw	0
  3196   001450  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3197   001452  0E0A               	movlw	10
  3198   001454  6E03               	movwf	___awdiv@divisor^0,c
  3199   001456  EC09  F00F         	call	___awdiv	;wreg free
  3200   00145A  C001  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3201   00145E  C002  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3202   001462                     
  3203                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3204   001462  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3205   001464  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3206   001466  B4D8               	btfsc	status,2,c
  3207   001468  EF38  F00A         	goto	u1631
  3208   00146C  EF3A  F00A         	goto	u1630
  3209   001470                     u1631:
  3210   001470  EF42  F00A         	goto	l3175
  3211   001474                     u1630:
  3212   001474  5016               	movf	vfpfcnvrt@c^0,w,c
  3213   001476  A4D8               	btfss	status,2,c
  3214   001478  EF40  F00A         	goto	u1641
  3215   00147C  EF42  F00A         	goto	u1640
  3216   001480                     u1641:
  3217   001480  EF09  F00A         	goto	l3167
  3218   001484                     u1640:
  3219   001484                     l3175:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3222   001484  5016               	movf	vfpfcnvrt@c^0,w,c
  3223   001486  B4D8               	btfsc	status,2,c
  3224   001488  EF48  F00A         	goto	u1651
  3225   00148C  EF4A  F00A         	goto	u1650
  3226   001490                     u1651:
  3227   001490  EF6D  F00A         	goto	l3185
  3228   001494                     u1650:
  3229   001494  5010               	movf	vfpfcnvrt@done^0,w,c
  3230   001496  B4D8               	btfsc	status,2,c
  3231   001498  EF50  F00A         	goto	u1661
  3232   00149C  EF52  F00A         	goto	u1660
  3233   0014A0                     u1661:
  3234   0014A0  EF6D  F00A         	goto	l3185
  3235   0014A4                     u1660:
  3236   0014A4                     
  3237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3238   0014A4  0616               	decf	vfpfcnvrt@c^0,f,c
  3239   0014A6  0E00               	movlw	low _dbuf
  3240   0014A8  2416               	addwf	vfpfcnvrt@c^0,w,c
  3241   0014AA  6ED9               	movwf	fsr2l,c
  3242   0014AC  6ADA               	clrf	fsr2h,c
  3243   0014AE  0E03               	movlw	high _dbuf
  3244   0014B0  22DA               	addwfc	fsr2h,f,c
  3245   0014B2  0E2D               	movlw	45
  3246   0014B4  6EDF               	movwf	indf2,c
  3247   0014B6  EF6D  F00A         	goto	l3185
  3248   0014BA                     l3181:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3251   0014BA  0E00               	movlw	low _dbuf
  3252   0014BC  2416               	addwf	vfpfcnvrt@c^0,w,c
  3253   0014BE  6ED9               	movwf	fsr2l,c
  3254   0014C0  6ADA               	clrf	fsr2h,c
  3255   0014C2  0E03               	movlw	high _dbuf
  3256   0014C4  22DA               	addwfc	fsr2h,f,c
  3257   0014C6  50DF               	movf	indf2,w,c
  3258   0014C8  6E0E               	movwf	??_vfpfcnvrt^0,c
  3259   0014CA  500E               	movf	??_vfpfcnvrt^0,w,c
  3260   0014CC  6E01               	movwf	fputc@c^0,c
  3261   0014CE  6A02               	clrf	(fputc@c+1)^0,c
  3262   0014D0  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3263   0014D4  EC38  F011         	call	_fputc	;wreg free
  3264   0014D8  2A16               	incf	vfpfcnvrt@c^0,f,c
  3265   0014DA                     l3185:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3268   0014DA  0E20               	movlw	32
  3269   0014DC  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3270   0014DE  A4D8               	btfss	status,2,c
  3271   0014E0  EF74  F00A         	goto	u1671
  3272   0014E4  EF76  F00A         	goto	u1670
  3273   0014E8                     u1671:
  3274   0014E8  EF5D  F00A         	goto	l3181
  3275   0014EC                     u1670:
  3276   0014EC  EF18  F00B         	goto	l1574
  3277   0014F0                     l3187:
  3278   0014F0  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3279   0014F4                     	if	1	;There is more than 1 active tblptr byte
  3280   0014F4  0E10               	movlw	high __smallconst
  3281   0014F6  6EF7               	movwf	tblptrh,c
  3282   0014F8                     	endif
  3283   0014F8                     	if	0	;tblptru may be non-zero
  3284   0014F8                     	endif
  3285   0014F8                     	if	0	;tblptru may be non-zero
  3286   0014F8                     	endif
  3287   0014F8  0008               	tblrd		*
  3288   0014FA  50F5               	movf	tablat,w,c
  3289   0014FC  0A75               	xorlw	117
  3290   0014FE  A4D8               	btfss	status,2,c
  3291   001500  EF84  F00A         	goto	u1681
  3292   001504  EF86  F00A         	goto	u1680
  3293   001508                     u1681:
  3294   001508  EF01  F00B         	goto	l3213
  3295   00150C                     u1680:
  3296   00150C                     
  3297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  3298   00150C  500D               	movf	vfpfcnvrt@ap^0,w,c
  3299   00150E  6ED9               	movwf	fsr2l,c
  3300   001510  6ADA               	clrf	fsr2h,c
  3301   001512  0E02               	movlw	2
  3302   001514  26DF               	addwf	indf2,f,c
  3303   001516  5CDF               	subwf	indf2,w,c
  3304   001518  6ED9               	movwf	fsr2l,c
  3305   00151A  6ADA               	clrf	fsr2h,c
  3306   00151C  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3307   001520  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3308   001524                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3310   001524  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3311   001526  6ED9               	movwf	fsr2l,c
  3312   001528  6ADA               	clrf	fsr2h,c
  3313   00152A  2811               	incf	vfpfcnvrt@cp^0,w,c
  3314   00152C  6EDF               	movwf	indf2,c
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3317   00152E  EFEB  F00A         	goto	l3211
  3318   001532                     l3193:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3321   001532  0E20               	movlw	32
  3322   001534  6E16               	movwf	vfpfcnvrt@c^0,c
  3323   001536                     l3195:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3326   001536  0616               	decf	vfpfcnvrt@c^0,f,c
  3327   001538  0E00               	movlw	low _dbuf
  3328   00153A  2416               	addwf	vfpfcnvrt@c^0,w,c
  3329   00153C  6ED9               	movwf	fsr2l,c
  3330   00153E  6ADA               	clrf	fsr2h,c
  3331   001540  0E03               	movlw	high _dbuf
  3332   001542  22DA               	addwfc	fsr2h,f,c
  3333   001544  C012  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3334   001548  C013  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3335   00154C  0E00               	movlw	0
  3336   00154E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3337   001550  0E0A               	movlw	10
  3338   001552  6E03               	movwf	___lwmod@divisor^0,c
  3339   001554  EC7D  F012         	call	___lwmod	;wreg free
  3340   001558  5001               	movf	?___lwmod^0,w,c
  3341   00155A  0F30               	addlw	48
  3342   00155C  6EDF               	movwf	indf2,c
  3343   00155E                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3345   00155E  C012  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3346   001562  C013  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3347   001566  0E00               	movlw	0
  3348   001568  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3349   00156A  0E0A               	movlw	10
  3350   00156C  6E03               	movwf	___lwdiv@divisor^0,c
  3351   00156E  EC0E  F012         	call	___lwdiv	;wreg free
  3352   001572  C001  F012         	movff	?___lwdiv,vfpfcnvrt@convarg
  3353   001576  C002  F013         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3354   00157A                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3356   00157A  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3357   00157C  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3358   00157E  B4D8               	btfsc	status,2,c
  3359   001580  EFC4  F00A         	goto	u1691
  3360   001584  EFC6  F00A         	goto	u1690
  3361   001588                     u1691:
  3362   001588  EFE0  F00A         	goto	l3207
  3363   00158C                     u1690:
  3364   00158C  5016               	movf	vfpfcnvrt@c^0,w,c
  3365   00158E  A4D8               	btfss	status,2,c
  3366   001590  EFCC  F00A         	goto	u1701
  3367   001594  EFCE  F00A         	goto	u1700
  3368   001598                     u1701:
  3369   001598  EF9B  F00A         	goto	l3195
  3370   00159C                     u1700:
  3371   00159C  EFE0  F00A         	goto	l3207
  3372   0015A0                     l3203:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3375   0015A0  0E00               	movlw	low _dbuf
  3376   0015A2  2416               	addwf	vfpfcnvrt@c^0,w,c
  3377   0015A4  6ED9               	movwf	fsr2l,c
  3378   0015A6  6ADA               	clrf	fsr2h,c
  3379   0015A8  0E03               	movlw	high _dbuf
  3380   0015AA  22DA               	addwfc	fsr2h,f,c
  3381   0015AC  50DF               	movf	indf2,w,c
  3382   0015AE  6E0E               	movwf	??_vfpfcnvrt^0,c
  3383   0015B0  500E               	movf	??_vfpfcnvrt^0,w,c
  3384   0015B2  6E01               	movwf	fputc@c^0,c
  3385   0015B4  6A02               	clrf	(fputc@c+1)^0,c
  3386   0015B6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3387   0015BA  EC38  F011         	call	_fputc	;wreg free
  3388   0015BE  2A16               	incf	vfpfcnvrt@c^0,f,c
  3389   0015C0                     l3207:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3392   0015C0  0E20               	movlw	32
  3393   0015C2  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3394   0015C4  A4D8               	btfss	status,2,c
  3395   0015C6  EFE7  F00A         	goto	u1711
  3396   0015CA  EFE9  F00A         	goto	u1710
  3397   0015CE                     u1711:
  3398   0015CE  EFD0  F00A         	goto	l3203
  3399   0015D2                     u1710:
  3400   0015D2  EF18  F00B         	goto	l1574
  3401   0015D6                     l3211:
  3402   0015D6  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3403   0015DA                     	if	1	;There is more than 1 active tblptr byte
  3404   0015DA  0E10               	movlw	high __smallconst
  3405   0015DC  6EF7               	movwf	tblptrh,c
  3406   0015DE                     	endif
  3407   0015DE                     	if	0	;tblptru may be non-zero
  3408   0015DE                     	endif
  3409   0015DE                     	if	0	;tblptru may be non-zero
  3410   0015DE                     	endif
  3411   0015DE  0008               	tblrd		*
  3412   0015E0  50F5               	movf	tablat,w,c
  3413   0015E2  6E0E               	movwf	??_vfpfcnvrt^0,c
  3414   0015E4  6A0F               	clrf	(??_vfpfcnvrt+1)^0,c
  3415                           
  3416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3417                           ; Switch size 1, requested type "simple"
  3418                           ; Number of cases is 1, Range of values is 0 to 0
  3419                           ; switch strategies available:
  3420                           ; Name         Instructions Cycles
  3421                           ; simple_byte            4     3 (average)
  3422                           ;	Chosen strategy is simple_byte
  3423   0015E6  500F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3424   0015E8  0A00               	xorlw	0	; case 0
  3425   0015EA  B4D8               	btfsc	status,2,c
  3426   0015EC  EFFA  F00A         	goto	l4701
  3427   0015F0  EF01  F00B         	goto	l3213
  3428   0015F4                     l4701:
  3429                           
  3430                           ; Switch size 1, requested type "simple"
  3431                           ; Number of cases is 1, Range of values is 117 to 117
  3432                           ; switch strategies available:
  3433                           ; Name         Instructions Cycles
  3434                           ; simple_byte            4     3 (average)
  3435                           ;	Chosen strategy is simple_byte
  3436   0015F4  500E               	movf	??_vfpfcnvrt^0,w,c
  3437   0015F6  0A75               	xorlw	117	; case 117
  3438   0015F8  B4D8               	btfsc	status,2,c
  3439   0015FA  EF99  F00A         	goto	l3193
  3440   0015FE  EF01  F00B         	goto	l3213
  3441   001602                     l3213:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3444   001602  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3445   001604  6ED9               	movwf	fsr2l,c
  3446   001606  6ADA               	clrf	fsr2h,c
  3447   001608  2ADF               	incf	indf2,f,c
  3448   00160A  EF18  F00B         	goto	l1574
  3449   00160E                     l3217:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3452   00160E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  3453   001610  6ED9               	movwf	fsr2l,c
  3454   001612  6ADA               	clrf	fsr2h,c
  3455   001614  CFDF FFF6          	movff	indf2,tblptrl
  3456   001618                     	if	1	;There is more than 1 active tblptr byte
  3457   001618  0E10               	movlw	high __smallconst
  3458   00161A  6EF7               	movwf	tblptrh,c
  3459   00161C                     	endif
  3460   00161C                     	if	0	;tblptru may be non-zero
  3461   00161C                     	endif
  3462   00161C                     	if	0	;tblptru may be non-zero
  3463   00161C                     	endif
  3464   00161C  0008               	tblrd		*
  3465   00161E  50F5               	movf	tablat,w,c
  3466   001620  6E01               	movwf	fputc@c^0,c
  3467   001622  6A02               	clrf	(fputc@c+1)^0,c
  3468   001624  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3469   001628  EC38  F011         	call	_fputc	;wreg free
  3470   00162C  EF01  F00B         	goto	l3213
  3471   001630                     l1574:
  3472   001630  0012               	return		;funcret
  3473   001632                     __end_of_vfpfcnvrt:
  3474                           	callstack 0
  3475                           
  3476 ;; *************** function _fputc *****************
  3477 ;; Defined at:
  3478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  c               2    0[COMRAM] int 
  3481 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3482 ;;		 -> sprintf@f(12), 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  2    0[COMRAM] int 
  3487 ;; Registers used:
  3488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        8 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 1
  3501 ;; This function calls:
  3502 ;;		_putch
  3503 ;; This function is called by:
  3504 ;;		_vfpfcnvrt
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text12
  3509   002270                     __ptext12:
  3510                           	callstack 0
  3511   002270                     _fputc:
  3512                           	callstack 25
  3513   002270  5003               	movf	fputc@fp^0,w,c
  3514   002272  B4D8               	btfsc	status,2,c
  3515   002274  EF3E  F011         	goto	u1521
  3516   002278  EF40  F011         	goto	u1520
  3517   00227C                     u1521:
  3518   00227C  EF48  F011         	goto	l3123
  3519   002280                     u1520:
  3520   002280  5003               	movf	fputc@fp^0,w,c
  3521   002282  A4D8               	btfss	status,2,c
  3522   002284  EF46  F011         	goto	u1531
  3523   002288  EF48  F011         	goto	u1530
  3524   00228C                     u1531:
  3525   00228C  EF4D  F011         	goto	l3125
  3526   002290                     u1530:
  3527   002290                     l3123:
  3528   002290  5001               	movf	fputc@c^0,w,c
  3529   002292  ECAA  F013         	call	_putch
  3530   002296  EF8C  F011         	goto	l1612
  3531   00229A                     l3125:
  3532   00229A  5003               	movf	fputc@fp^0,w,c
  3533   00229C  6ED9               	movwf	fsr2l,c
  3534   00229E  6ADA               	clrf	fsr2h,c
  3535   0022A0  0E0A               	movlw	10
  3536   0022A2  26D9               	addwf	fsr2l,f,c
  3537   0022A4  50DE               	movf	postinc2,w,c
  3538   0022A6  10DE               	iorwf	postinc2,w,c
  3539   0022A8  B4D8               	btfsc	status,2,c
  3540   0022AA  EF59  F011         	goto	u1541
  3541   0022AE  EF5B  F011         	goto	u1540
  3542   0022B2                     u1541:
  3543   0022B2  EF74  F011         	goto	l3129
  3544   0022B6                     u1540:
  3545   0022B6  5003               	movf	fputc@fp^0,w,c
  3546   0022B8  6ED9               	movwf	fsr2l,c
  3547   0022BA  6ADA               	clrf	fsr2h,c
  3548   0022BC  0E0A               	movlw	10
  3549   0022BE  26D9               	addwf	fsr2l,f,c
  3550   0022C0  5003               	movf	fputc@fp^0,w,c
  3551   0022C2  6EE1               	movwf	fsr1l,c
  3552   0022C4  6AE2               	clrf	fsr1h,c
  3553   0022C6  0E03               	movlw	3
  3554   0022C8  26E1               	addwf	fsr1l,f,c
  3555   0022CA  50DE               	movf	postinc2,w,c
  3556   0022CC  5CE6               	subwf	postinc1,w,c
  3557   0022CE  50E6               	movf	postinc1,w,c
  3558   0022D0  0A80               	xorlw	128
  3559   0022D2  6E08               	movwf	(??_fputc+4)^0,c
  3560   0022D4  50DE               	movf	postinc2,w,c
  3561   0022D6  0A80               	xorlw	128
  3562   0022D8  5808               	subwfb	(??_fputc+4)^0,w,c
  3563   0022DA  B0D8               	btfsc	status,0,c
  3564   0022DC  EF72  F011         	goto	u1551
  3565   0022E0  EF74  F011         	goto	u1550
  3566   0022E4                     u1551:
  3567   0022E4  EF8C  F011         	goto	l1612
  3568   0022E8                     u1550:
  3569   0022E8                     l3129:
  3570   0022E8  5003               	movf	fputc@fp^0,w,c
  3571   0022EA  6ED9               	movwf	fsr2l,c
  3572   0022EC  6ADA               	clrf	fsr2h,c
  3573   0022EE  0E03               	movlw	3
  3574   0022F0  26D9               	addwf	fsr2l,f,c
  3575   0022F2  50DF               	movf	indf2,w,c
  3576   0022F4  6E04               	movwf	??_fputc^0,c
  3577   0022F6  5003               	movf	fputc@fp^0,w,c
  3578   0022F8  6ED9               	movwf	fsr2l,c
  3579   0022FA  6ADA               	clrf	fsr2h,c
  3580   0022FC  50DF               	movf	indf2,w,c
  3581   0022FE  2404               	addwf	??_fputc^0,w,c
  3582   002300  6ED9               	movwf	fsr2l,c
  3583   002302  6ADA               	clrf	fsr2h,c
  3584   002304  C001  FFDF         	movff	fputc@c,indf2
  3585   002308  5003               	movf	fputc@fp^0,w,c
  3586   00230A  6ED9               	movwf	fsr2l,c
  3587   00230C  6ADA               	clrf	fsr2h,c
  3588   00230E  0E03               	movlw	3
  3589   002310  26D9               	addwf	fsr2l,f,c
  3590   002312  2ADE               	incf	postinc2,f,c
  3591   002314  0E00               	movlw	0
  3592   002316  22DD               	addwfc	postdec2,f,c
  3593   002318                     l1612:
  3594   002318  0012               	return		;funcret
  3595   00231A                     __end_of_fputc:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _putch *****************
  3599 ;; Defined at:
  3600 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  c               1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  c               1    0[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_fputc
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text13
  3628   002754                     __ptext13:
  3629                           	callstack 0
  3630   002754                     _putch:
  3631                           	callstack 25
  3632   002754  0012               	return		;funcret
  3633   002756                     __end_of_putch:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _abs *****************
  3637 ;; Defined at:
  3638 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  a               2    6[COMRAM] int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    6[COMRAM] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        4 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_vfpfcnvrt
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text14
  3666   002672                     __ptext14:
  3667                           	callstack 0
  3668   002672                     _abs:
  3669                           	callstack 26
  3670   002672  BE08               	btfsc	(abs@a+1)^0,7,c
  3671   002674  EF3E  F013         	goto	u1561
  3672   002678  EF40  F013         	goto	u1560
  3673   00267C                     u1561:
  3674   00267C  EF46  F013         	goto	l1597
  3675   002680                     u1560:
  3676   002680  C007  F007         	movff	abs@a,?_abs
  3677   002684  C008  F008         	movff	abs@a+1,?_abs+1
  3678   002688  EF52  F013         	goto	l1600
  3679   00268C                     l1597:
  3680   00268C  C007  F009         	movff	abs@a,??_abs
  3681   002690  C008  F00A         	movff	abs@a+1,??_abs+1
  3682   002694  1E09               	comf	??_abs^0,f,c
  3683   002696  1E0A               	comf	(??_abs+1)^0,f,c
  3684   002698  4A09               	infsnz	??_abs^0,f,c
  3685   00269A  2A0A               	incf	(??_abs+1)^0,f,c
  3686   00269C  C009  F007         	movff	??_abs,?_abs
  3687   0026A0  C00A  F008         	movff	??_abs+1,?_abs+1
  3688   0026A4                     l1600:
  3689   0026A4  0012               	return		;funcret
  3690   0026A6                     __end_of_abs:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function ___lwmod *****************
  3694 ;; Defined at:
  3695 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  dividend        2    0[COMRAM] unsigned int 
  3698 ;;  divisor         2    2[COMRAM] unsigned int 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  counter         1    4[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2    0[COMRAM] unsigned int 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        5 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_vfpfcnvrt
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text15
  3724   0024FA                     __ptext15:
  3725                           	callstack 0
  3726   0024FA                     ___lwmod:
  3727                           	callstack 26
  3728   0024FA  5003               	movf	___lwmod@divisor^0,w,c
  3729   0024FC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3730   0024FE  B4D8               	btfsc	status,2,c
  3731   002500  EF84  F012         	goto	u1491
  3732   002504  EF86  F012         	goto	u1490
  3733   002508                     u1491:
  3734   002508  EFAA  F012         	goto	l1353
  3735   00250C                     u1490:
  3736   00250C  0E01               	movlw	1
  3737   00250E  6E05               	movwf	___lwmod@counter^0,c
  3738   002510  EF8E  F012         	goto	l3109
  3739   002514                     l3107:
  3740   002514  90D8               	bcf	status,0,c
  3741   002516  3603               	rlcf	___lwmod@divisor^0,f,c
  3742   002518  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3743   00251A  2A05               	incf	___lwmod@counter^0,f,c
  3744   00251C                     l3109:
  3745   00251C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3746   00251E  EF93  F012         	goto	u1501
  3747   002522  EF95  F012         	goto	u1500
  3748   002526                     u1501:
  3749   002526  EF8A  F012         	goto	l3107
  3750   00252A                     u1500:
  3751   00252A                     l3111:
  3752   00252A  5003               	movf	___lwmod@divisor^0,w,c
  3753   00252C  5C01               	subwf	___lwmod@dividend^0,w,c
  3754   00252E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3755   002530  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3756   002532  A0D8               	btfss	status,0,c
  3757   002534  EF9E  F012         	goto	u1511
  3758   002538  EFA0  F012         	goto	u1510
  3759   00253C                     u1511:
  3760   00253C  EFA4  F012         	goto	l3115
  3761   002540                     u1510:
  3762   002540  5003               	movf	___lwmod@divisor^0,w,c
  3763   002542  5E01               	subwf	___lwmod@dividend^0,f,c
  3764   002544  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3765   002546  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3766   002548                     l3115:
  3767   002548  90D8               	bcf	status,0,c
  3768   00254A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3769   00254C  3203               	rrcf	___lwmod@divisor^0,f,c
  3770   00254E  2E05               	decfsz	___lwmod@counter^0,f,c
  3771   002550  EF95  F012         	goto	l3111
  3772   002554                     l1353:
  3773   002554  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3774   002558  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3775   00255C  0012               	return		;funcret
  3776   00255E                     __end_of___lwmod:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function ___lwdiv *****************
  3780 ;; Defined at:
  3781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  dividend        2    0[COMRAM] unsigned int 
  3784 ;;  divisor         2    2[COMRAM] unsigned int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  quotient        2    4[COMRAM] unsigned int 
  3787 ;;  counter         1    6[COMRAM] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  2    0[COMRAM] unsigned int 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;Total ram usage:        7 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_vfpfcnvrt
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text16
  3811   00241C                     __ptext16:
  3812                           	callstack 0
  3813   00241C                     ___lwdiv:
  3814                           	callstack 26
  3815   00241C  0E00               	movlw	0
  3816   00241E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3817   002420  0E00               	movlw	0
  3818   002422  6E05               	movwf	___lwdiv@quotient^0,c
  3819   002424  5003               	movf	___lwdiv@divisor^0,w,c
  3820   002426  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3821   002428  B4D8               	btfsc	status,2,c
  3822   00242A  EF19  F012         	goto	u1461
  3823   00242E  EF1B  F012         	goto	u1460
  3824   002432                     u1461:
  3825   002432  EF43  F012         	goto	l1343
  3826   002436                     u1460:
  3827   002436  0E01               	movlw	1
  3828   002438  6E07               	movwf	___lwdiv@counter^0,c
  3829   00243A  EF23  F012         	goto	l3089
  3830   00243E                     l3087:
  3831   00243E  90D8               	bcf	status,0,c
  3832   002440  3603               	rlcf	___lwdiv@divisor^0,f,c
  3833   002442  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3834   002444  2A07               	incf	___lwdiv@counter^0,f,c
  3835   002446                     l3089:
  3836   002446  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3837   002448  EF28  F012         	goto	u1471
  3838   00244C  EF2A  F012         	goto	u1470
  3839   002450                     u1471:
  3840   002450  EF1F  F012         	goto	l3087
  3841   002454                     u1470:
  3842   002454                     l3091:
  3843   002454  90D8               	bcf	status,0,c
  3844   002456  3605               	rlcf	___lwdiv@quotient^0,f,c
  3845   002458  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3846   00245A  5003               	movf	___lwdiv@divisor^0,w,c
  3847   00245C  5C01               	subwf	___lwdiv@dividend^0,w,c
  3848   00245E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3849   002460  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3850   002462  A0D8               	btfss	status,0,c
  3851   002464  EF36  F012         	goto	u1481
  3852   002468  EF38  F012         	goto	u1480
  3853   00246C                     u1481:
  3854   00246C  EF3D  F012         	goto	l3099
  3855   002470                     u1480:
  3856   002470  5003               	movf	___lwdiv@divisor^0,w,c
  3857   002472  5E01               	subwf	___lwdiv@dividend^0,f,c
  3858   002474  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3859   002476  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3860   002478  8005               	bsf	___lwdiv@quotient^0,0,c
  3861   00247A                     l3099:
  3862   00247A  90D8               	bcf	status,0,c
  3863   00247C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3864   00247E  3203               	rrcf	___lwdiv@divisor^0,f,c
  3865   002480  2E07               	decfsz	___lwdiv@counter^0,f,c
  3866   002482  EF2A  F012         	goto	l3091
  3867   002486                     l1343:
  3868   002486  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3869   00248A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3870   00248E  0012               	return		;funcret
  3871   002490                     __end_of___lwdiv:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function ___awmod *****************
  3875 ;; Defined at:
  3876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  dividend        2    0[COMRAM] int 
  3879 ;;  divisor         2    2[COMRAM] int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  sign            1    5[COMRAM] unsigned char 
  3882 ;;  counter         1    4[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2    0[COMRAM] int 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        6 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_vfpfcnvrt
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text17
  3906   002112                     __ptext17:
  3907                           	callstack 0
  3908   002112                     ___awmod:
  3909                           	callstack 26
  3910   002112  0E00               	movlw	0
  3911   002114  6E06               	movwf	___awmod@sign^0,c
  3912   002116  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3913   002118  EF92  F010         	goto	u1400
  3914   00211C  EF90  F010         	goto	u1401
  3915   002120                     u1401:
  3916   002120  EF98  F010         	goto	l3053
  3917   002124                     u1400:
  3918   002124  6C01               	negf	___awmod@dividend^0,c
  3919   002126  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3920   002128  B0D8               	btfsc	status,0,c
  3921   00212A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3922   00212C  0E01               	movlw	1
  3923   00212E  6E06               	movwf	___awmod@sign^0,c
  3924   002130                     l3053:
  3925   002130  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3926   002132  EF9F  F010         	goto	u1410
  3927   002136  EF9D  F010         	goto	u1411
  3928   00213A                     u1411:
  3929   00213A  EFA3  F010         	goto	l3057
  3930   00213E                     u1410:
  3931   00213E  6C03               	negf	___awmod@divisor^0,c
  3932   002140  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3933   002142  B0D8               	btfsc	status,0,c
  3934   002144  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3935   002146                     l3057:
  3936   002146  5003               	movf	___awmod@divisor^0,w,c
  3937   002148  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3938   00214A  B4D8               	btfsc	status,2,c
  3939   00214C  EFAA  F010         	goto	u1421
  3940   002150  EFAC  F010         	goto	u1420
  3941   002154                     u1421:
  3942   002154  EFD0  F010         	goto	l3073
  3943   002158                     u1420:
  3944   002158  0E01               	movlw	1
  3945   00215A  6E05               	movwf	___awmod@counter^0,c
  3946   00215C  EFB4  F010         	goto	l3063
  3947   002160                     l3061:
  3948   002160  90D8               	bcf	status,0,c
  3949   002162  3603               	rlcf	___awmod@divisor^0,f,c
  3950   002164  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3951   002166  2A05               	incf	___awmod@counter^0,f,c
  3952   002168                     l3063:
  3953   002168  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3954   00216A  EFB9  F010         	goto	u1431
  3955   00216E  EFBB  F010         	goto	u1430
  3956   002172                     u1431:
  3957   002172  EFB0  F010         	goto	l3061
  3958   002176                     u1430:
  3959   002176                     l3065:
  3960   002176  5003               	movf	___awmod@divisor^0,w,c
  3961   002178  5C01               	subwf	___awmod@dividend^0,w,c
  3962   00217A  5004               	movf	(___awmod@divisor+1)^0,w,c
  3963   00217C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3964   00217E  A0D8               	btfss	status,0,c
  3965   002180  EFC4  F010         	goto	u1441
  3966   002184  EFC6  F010         	goto	u1440
  3967   002188                     u1441:
  3968   002188  EFCA  F010         	goto	l3069
  3969   00218C                     u1440:
  3970   00218C  5003               	movf	___awmod@divisor^0,w,c
  3971   00218E  5E01               	subwf	___awmod@dividend^0,f,c
  3972   002190  5004               	movf	(___awmod@divisor+1)^0,w,c
  3973   002192  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3974   002194                     l3069:
  3975   002194  90D8               	bcf	status,0,c
  3976   002196  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3977   002198  3203               	rrcf	___awmod@divisor^0,f,c
  3978   00219A  2E05               	decfsz	___awmod@counter^0,f,c
  3979   00219C  EFBB  F010         	goto	l3065
  3980   0021A0                     l3073:
  3981   0021A0  5006               	movf	___awmod@sign^0,w,c
  3982   0021A2  B4D8               	btfsc	status,2,c
  3983   0021A4  EFD6  F010         	goto	u1451
  3984   0021A8  EFD8  F010         	goto	u1450
  3985   0021AC                     u1451:
  3986   0021AC  EFDC  F010         	goto	l3077
  3987   0021B0                     u1450:
  3988   0021B0  6C01               	negf	___awmod@dividend^0,c
  3989   0021B2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3990   0021B4  B0D8               	btfsc	status,0,c
  3991   0021B6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3992   0021B8                     l3077:
  3993   0021B8  C001  F001         	movff	___awmod@dividend,?___awmod
  3994   0021BC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3995   0021C0  0012               	return		;funcret
  3996   0021C2                     __end_of___awmod:
  3997                           	callstack 0
  3998                           
  3999 ;; *************** function ___awdiv *****************
  4000 ;; Defined at:
  4001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  dividend        2    0[COMRAM] int 
  4004 ;;  divisor         2    2[COMRAM] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  quotient        2    6[COMRAM] int 
  4007 ;;  sign            1    5[COMRAM] unsigned char 
  4008 ;;  counter         1    4[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2    0[COMRAM] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        8 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_vfpfcnvrt
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text18
  4032   001E12                     __ptext18:
  4033                           	callstack 0
  4034   001E12                     ___awdiv:
  4035                           	callstack 26
  4036   001E12  0E00               	movlw	0
  4037   001E14  6E06               	movwf	___awdiv@sign^0,c
  4038   001E16  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4039   001E18  EF12  F00F         	goto	u1340
  4040   001E1C  EF10  F00F         	goto	u1341
  4041   001E20                     u1341:
  4042   001E20  EF18  F00F         	goto	l3009
  4043   001E24                     u1340:
  4044   001E24  6C03               	negf	___awdiv@divisor^0,c
  4045   001E26  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4046   001E28  B0D8               	btfsc	status,0,c
  4047   001E2A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4048   001E2C  0E01               	movlw	1
  4049   001E2E  6E06               	movwf	___awdiv@sign^0,c
  4050   001E30                     l3009:
  4051   001E30  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4052   001E32  EF1F  F00F         	goto	u1350
  4053   001E36  EF1D  F00F         	goto	u1351
  4054   001E3A                     u1351:
  4055   001E3A  EF25  F00F         	goto	l3015
  4056   001E3E                     u1350:
  4057   001E3E  6C01               	negf	___awdiv@dividend^0,c
  4058   001E40  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4059   001E42  B0D8               	btfsc	status,0,c
  4060   001E44  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4061   001E46  0E01               	movlw	1
  4062   001E48  1A06               	xorwf	___awdiv@sign^0,f,c
  4063   001E4A                     l3015:
  4064   001E4A  0E00               	movlw	0
  4065   001E4C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4066   001E4E  0E00               	movlw	0
  4067   001E50  6E07               	movwf	___awdiv@quotient^0,c
  4068   001E52  5003               	movf	___awdiv@divisor^0,w,c
  4069   001E54  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4070   001E56  B4D8               	btfsc	status,2,c
  4071   001E58  EF30  F00F         	goto	u1361
  4072   001E5C  EF32  F00F         	goto	u1360
  4073   001E60                     u1361:
  4074   001E60  EF5A  F00F         	goto	l3037
  4075   001E64                     u1360:
  4076   001E64  0E01               	movlw	1
  4077   001E66  6E05               	movwf	___awdiv@counter^0,c
  4078   001E68  EF3A  F00F         	goto	l3023
  4079   001E6C                     l3021:
  4080   001E6C  90D8               	bcf	status,0,c
  4081   001E6E  3603               	rlcf	___awdiv@divisor^0,f,c
  4082   001E70  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4083   001E72  2A05               	incf	___awdiv@counter^0,f,c
  4084   001E74                     l3023:
  4085   001E74  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4086   001E76  EF3F  F00F         	goto	u1371
  4087   001E7A  EF41  F00F         	goto	u1370
  4088   001E7E                     u1371:
  4089   001E7E  EF36  F00F         	goto	l3021
  4090   001E82                     u1370:
  4091   001E82                     l3025:
  4092   001E82  90D8               	bcf	status,0,c
  4093   001E84  3607               	rlcf	___awdiv@quotient^0,f,c
  4094   001E86  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4095   001E88  5003               	movf	___awdiv@divisor^0,w,c
  4096   001E8A  5C01               	subwf	___awdiv@dividend^0,w,c
  4097   001E8C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4098   001E8E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4099   001E90  A0D8               	btfss	status,0,c
  4100   001E92  EF4D  F00F         	goto	u1381
  4101   001E96  EF4F  F00F         	goto	u1380
  4102   001E9A                     u1381:
  4103   001E9A  EF54  F00F         	goto	l3033
  4104   001E9E                     u1380:
  4105   001E9E  5003               	movf	___awdiv@divisor^0,w,c
  4106   001EA0  5E01               	subwf	___awdiv@dividend^0,f,c
  4107   001EA2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4108   001EA4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4109   001EA6  8007               	bsf	___awdiv@quotient^0,0,c
  4110   001EA8                     l3033:
  4111   001EA8  90D8               	bcf	status,0,c
  4112   001EAA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4113   001EAC  3203               	rrcf	___awdiv@divisor^0,f,c
  4114   001EAE  2E05               	decfsz	___awdiv@counter^0,f,c
  4115   001EB0  EF41  F00F         	goto	l3025
  4116   001EB4                     l3037:
  4117   001EB4  5006               	movf	___awdiv@sign^0,w,c
  4118   001EB6  B4D8               	btfsc	status,2,c
  4119   001EB8  EF60  F00F         	goto	u1391
  4120   001EBC  EF62  F00F         	goto	u1390
  4121   001EC0                     u1391:
  4122   001EC0  EF66  F00F         	goto	l3041
  4123   001EC4                     u1390:
  4124   001EC4  6C07               	negf	___awdiv@quotient^0,c
  4125   001EC6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4126   001EC8  B0D8               	btfsc	status,0,c
  4127   001ECA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4128   001ECC                     l3041:
  4129   001ECC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4130   001ED0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4131   001ED4  0012               	return		;funcret
  4132   001ED6                     __end_of___awdiv:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _memset *****************
  4136 ;; Defined at:
  4137 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  dest            1    0[COMRAM] PTR void 
  4140 ;;		 -> main@msg_X(4), 
  4141 ;;  c               2    1[COMRAM] int 
  4142 ;;  n               2    3[COMRAM] unsigned int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  p               1    5[COMRAM] PTR unsigned char 
  4145 ;;		 -> main@msg_X(4), 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      PTR void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        6 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_convert_uint8_to_strng
  4165 ;;		_main
  4166 ;;		_convert_uint16_to_strng
  4167 ;;		_convert_uint32_to_strng
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text19
  4172   0026D8                     __ptext19:
  4173                           	callstack 0
  4174   0026D8                     _memset:
  4175                           	callstack 30
  4176   0026D8  C001  F006         	movff	memset@dest,memset@p
  4177   0026DC  EF76  F013         	goto	l3361
  4178   0026E0                     l3357:
  4179   0026E0  5006               	movf	memset@p^0,w,c
  4180   0026E2  6ED9               	movwf	fsr2l,c
  4181   0026E4  6ADA               	clrf	fsr2h,c
  4182   0026E6  C002  FFDF         	movff	memset@c,indf2
  4183   0026EA  2A06               	incf	memset@p^0,f,c
  4184   0026EC                     l3361:
  4185   0026EC  0604               	decf	memset@n^0,f,c
  4186   0026EE  A0D8               	btfss	status,0,c
  4187   0026F0  0605               	decf	(memset@n+1)^0,f,c
  4188   0026F2  2804               	incf	memset@n^0,w,c
  4189   0026F4  E106               	bnz	u1831
  4190   0026F6  2805               	incf	(memset@n+1)^0,w,c
  4191   0026F8  A4D8               	btfss	status,2,c
  4192   0026FA  EF81  F013         	goto	u1831
  4193   0026FE  EF83  F013         	goto	u1830
  4194   002702                     u1831:
  4195   002702  EF70  F013         	goto	l3357
  4196   002706                     u1830:
  4197   002706  0012               	return		;funcret
  4198   002708                     __end_of_memset:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _app_init *****************
  4202 ;; Defined at:
  4203 ;;		line 41 in file "_APP/application.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 5
  4224 ;; This function calls:
  4225 ;;		_lcd_8bit_init
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text20
  4232   002742                     __ptext20:
  4233                           	callstack 0
  4234   002742                     _app_init:
  4235                           	callstack 25
  4236   002742                     
  4237                           ;_APP/application.c: 44:     lcd_8bit_init( &lcd_2_8bit);
  4238   002742  0EBC               	movlw	low _lcd_2_8bit
  4239   002744  6E0D               	movwf	lcd_8bit_init@p_lcd^0,c
  4240   002746  EC8C  F00C         	call	_lcd_8bit_init	;wreg free
  4241   00274A  0012               	return		;funcret
  4242   00274C                     __end_of_app_init:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _lcd_8bit_init *****************
  4246 ;; Defined at:
  4247 ;;		line 238 in file "_HAL/Drivers/LCD/LCD.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  p_lcd           1   12[COMRAM] PTR struct .
  4250 ;;		 -> lcd_2_8bit(50), 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  idx             1   14[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      enum E2975
  4255 ;; Registers used:
  4256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4262 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;Total ram usage:        3 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 4
  4269 ;; This function calls:
  4270 ;;		_gpio_pin_direction_initialize
  4271 ;;		_gpio_pin_write_logic
  4272 ;;		_lcd_8bit_send_cmd
  4273 ;; This function is called by:
  4274 ;;		_app_init
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text21
  4279   001918                     __ptext21:
  4280                           	callstack 0
  4281   001918                     _lcd_8bit_init:
  4282                           	callstack 25
  4283   001918                     
  4284                           ;_HAL/Drivers/LCD/LCD.c: 238: std_return lcd_8bit_init( lcd_8bit_t * p_lcd);_HAL/Drivers
      +                          /LCD/LCD.c: 239: {;_HAL/Drivers/LCD/LCD.c: 240:     if (((void*)0) == p_lcd)
  4285   001918  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4286   00191A  A4D8               	btfss	status,2,c
  4287   00191C  EF92  F00C         	goto	u2571
  4288   001920  EF94  F00C         	goto	u2570
  4289   001924                     u2571:
  4290   001924  EF96  F00C         	goto	l4131
  4291   001928                     u2570:
  4292   001928  EF22  F00D         	goto	l375
  4293   00192C                     l4131:
  4294   00192C                     
  4295                           ;_HAL/Drivers/LCD/LCD.c: 247:         gpio_pin_direction_initialize(&(p_lcd->lcd_reg_sel
      +                          ect_pin));
  4296   00192C  C00D  F006         	movff	lcd_8bit_init@p_lcd,gpio_pin_direction_initialize@p_pin_config
  4297   001930  EC6B  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  4298   001934                     
  4299                           ;_HAL/Drivers/LCD/LCD.c: 248:         gpio_pin_write_logic(&(p_lcd->lcd_reg_select_pin),
      +                          p_lcd->lcd_reg_select_pin.logic);
  4300   001934  C00D  F006         	movff	lcd_8bit_init@p_lcd,gpio_pin_write_logic@p_pin_config
  4301   001938  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4302   00193A  6ED9               	movwf	fsr2l,c
  4303   00193C  6ADA               	clrf	fsr2h,c
  4304   00193E  0E03               	movlw	3
  4305   001940  26D9               	addwf	fsr2l,f,c
  4306   001942  50DF               	movf	indf2,w,c
  4307   001944  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4308   001946  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4309   00194A                     
  4310                           ;_HAL/Drivers/LCD/LCD.c: 249:         gpio_pin_direction_initialize(&(p_lcd->lcd_enable_
      +                          pin));
  4311   00194A  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4312   00194C  0F05               	addlw	5
  4313   00194E  6E06               	movwf	gpio_pin_direction_initialize@p_pin_config^0,c
  4314   001950  EC6B  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  4315   001954                     
  4316                           ;_HAL/Drivers/LCD/LCD.c: 250:         gpio_pin_write_logic(&(p_lcd->lcd_enable_pin),p_lc
      +                          d->lcd_enable_pin.logic);
  4317   001954  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4318   001956  0F05               	addlw	5
  4319   001958  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4320   00195A  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4321   00195C  6ED9               	movwf	fsr2l,c
  4322   00195E  6ADA               	clrf	fsr2h,c
  4323   001960  0E08               	movlw	8
  4324   001962  26D9               	addwf	fsr2l,f,c
  4325   001964  50DF               	movf	indf2,w,c
  4326   001966  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4327   001968  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4328                           
  4329                           ;_HAL/Drivers/LCD/LCD.c: 251:         for (idx=0; idx<8; idx++)
  4330   00196C  0E00               	movlw	0
  4331   00196E  6E0F               	movwf	lcd_8bit_init@idx^0,c
  4332   001970                     l4145:
  4333                           
  4334                           ;_HAL/Drivers/LCD/LCD.c: 252:         {;_HAL/Drivers/LCD/LCD.c: 253:             gpio_pi
      +                          n_direction_initialize(&(p_lcd->lcd_data_pin[idx]));
  4335   001970  500F               	movf	lcd_8bit_init@idx^0,w,c
  4336   001972  0D05               	mullw	5
  4337   001974  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4338   001976  24F3               	addwf	243,w,c
  4339   001978  0F0A               	addlw	10
  4340   00197A  6E06               	movwf	gpio_pin_direction_initialize@p_pin_config^0,c
  4341   00197C  EC6B  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  4342                           
  4343                           ;_HAL/Drivers/LCD/LCD.c: 254:             gpio_pin_write_logic(&(p_lcd->lcd_data_pin[idx
      +                          ]),p_lcd->lcd_data_pin[idx].logic);
  4344   001980  500F               	movf	lcd_8bit_init@idx^0,w,c
  4345   001982  0D05               	mullw	5
  4346   001984  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4347   001986  24F3               	addwf	243,w,c
  4348   001988  0F0A               	addlw	10
  4349   00198A  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4350   00198C  500F               	movf	lcd_8bit_init@idx^0,w,c
  4351   00198E  0D05               	mullw	5
  4352   001990  500D               	movf	lcd_8bit_init@p_lcd^0,w,c
  4353   001992  24F3               	addwf	243,w,c
  4354   001994  6ED9               	movwf	fsr2l,c
  4355   001996  6ADA               	clrf	fsr2h,c
  4356   001998  0E0D               	movlw	13
  4357   00199A  26D9               	addwf	fsr2l,f,c
  4358   00199C  50DF               	movf	indf2,w,c
  4359   00199E  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4360   0019A0  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4361   0019A4                     
  4362                           ;_HAL/Drivers/LCD/LCD.c: 255:         }
  4363   0019A4  2A0F               	incf	lcd_8bit_init@idx^0,f,c
  4364   0019A6  0E07               	movlw	7
  4365   0019A8  640F               	cpfsgt	lcd_8bit_init@idx^0,c
  4366   0019AA  EFD9  F00C         	goto	u2581
  4367   0019AE  EFDB  F00C         	goto	u2580
  4368   0019B2                     u2581:
  4369   0019B2  EFB8  F00C         	goto	l4145
  4370   0019B6                     u2580:
  4371   0019B6                     
  4372                           ;_HAL/Drivers/LCD/LCD.c: 258:         _delay((unsigned long)((20)*((8000000UL)/4000.0)))
      +                          ;
  4373   0019B6  0E34               	movlw	52
  4374   0019B8  6E0E               	movwf	??_lcd_8bit_init^0,c
  4375   0019BA  0EF2               	movlw	242
  4376   0019BC                     u3227:
  4377   0019BC  2EE8               	decfsz	wreg,f,c
  4378   0019BE  D7FE               	bra	u3227
  4379   0019C0  2E0E               	decfsz	??_lcd_8bit_init^0,f,c
  4380   0019C2  D7FC               	bra	u3227
  4381   0019C4                     
  4382                           ;_HAL/Drivers/LCD/LCD.c: 259:         lcd_8bit_send_cmd(p_lcd, 0x38);
  4383   0019C4  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4384   0019C8  0E38               	movlw	56
  4385   0019CA  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4386   0019CC  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4387   0019D0                     
  4388                           ;_HAL/Drivers/LCD/LCD.c: 260:         _delay((unsigned long)((5)*((8000000UL)/4000.0)));
  4389   0019D0  0E0D               	movlw	13
  4390   0019D2  6E0E               	movwf	??_lcd_8bit_init^0,c
  4391   0019D4  0EFC               	movlw	252
  4392   0019D6                     u3237:
  4393   0019D6  2EE8               	decfsz	wreg,f,c
  4394   0019D8  D7FE               	bra	u3237
  4395   0019DA  2E0E               	decfsz	??_lcd_8bit_init^0,f,c
  4396   0019DC  D7FC               	bra	u3237
  4397                           
  4398                           ;_HAL/Drivers/LCD/LCD.c: 261:         lcd_8bit_send_cmd(p_lcd, 0x38);
  4399   0019DE  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4400   0019E2  0E38               	movlw	56
  4401   0019E4  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4402   0019E6  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4403   0019EA                     
  4404                           ;_HAL/Drivers/LCD/LCD.c: 262:         _delay((unsigned long)((150)*((8000000UL)/4000000.
      +                          0)));
  4405   0019EA  0E64               	movlw	100
  4406   0019EC                     u3247:
  4407   0019EC  2EE8               	decfsz	wreg,f,c
  4408   0019EE  D7FE               	bra	u3247
  4409   0019F0                     
  4410                           ;_HAL/Drivers/LCD/LCD.c: 263:         lcd_8bit_send_cmd(p_lcd, 0x38);
  4411   0019F0  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4412   0019F4  0E38               	movlw	56
  4413   0019F6  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4414   0019F8  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4415   0019FC                     
  4416                           ;_HAL/Drivers/LCD/LCD.c: 264:         lcd_8bit_send_cmd(p_lcd, 0x01);
  4417   0019FC  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4418   001A00  0E01               	movlw	1
  4419   001A02  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4420   001A04  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4421   001A08                     
  4422                           ;_HAL/Drivers/LCD/LCD.c: 265:         lcd_8bit_send_cmd(p_lcd, 0x02);
  4423   001A08  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4424   001A0C  0E02               	movlw	2
  4425   001A0E  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4426   001A10  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4427   001A14                     
  4428                           ;_HAL/Drivers/LCD/LCD.c: 266:         lcd_8bit_send_cmd(p_lcd, 0x06);
  4429   001A14  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4430   001A18  0E06               	movlw	6
  4431   001A1A  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4432   001A1C  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4433   001A20                     
  4434                           ;_HAL/Drivers/LCD/LCD.c: 267:         lcd_8bit_send_cmd(p_lcd, 0x0C);
  4435   001A20  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4436   001A24  0E0C               	movlw	12
  4437   001A26  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4438   001A28  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4439   001A2C                     
  4440                           ;_HAL/Drivers/LCD/LCD.c: 268:         lcd_8bit_send_cmd(p_lcd, 0x38);
  4441   001A2C  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4442   001A30  0E38               	movlw	56
  4443   001A32  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4444   001A34  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4445   001A38                     
  4446                           ;_HAL/Drivers/LCD/LCD.c: 269:         lcd_8bit_send_cmd(p_lcd, 0x80);
  4447   001A38  C00D  F00B         	movff	lcd_8bit_init@p_lcd,lcd_8bit_send_cmd@p_lcd
  4448   001A3C  0E80               	movlw	128
  4449   001A3E  6E0C               	movwf	lcd_8bit_send_cmd@d_cmd^0,c
  4450   001A40  EC2A  F010         	call	_lcd_8bit_send_cmd	;wreg free
  4451   001A44                     l375:
  4452   001A44  0012               	return		;funcret
  4453   001A46                     __end_of_lcd_8bit_init:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _lcd_8bit_send_cmd *****************
  4457 ;; Defined at:
  4458 ;;		line 275 in file "_HAL/Drivers/LCD/LCD.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  p_lcd           1   10[COMRAM] PTR struct .
  4461 ;;		 -> lcd_2_8bit(50), 
  4462 ;;  d_cmd           1   11[COMRAM] const unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      enum E2975
  4467 ;; Registers used:
  4468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;Total ram usage:        2 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 3
  4481 ;; This function calls:
  4482 ;;		_gpio_pin_write_logic
  4483 ;;		_lcd_8bit_send_enable
  4484 ;; This function is called by:
  4485 ;;		_lcd_8bit_init
  4486 ;;		_lcd_8bit_send_custom_char_pos
  4487 ;;		_lcd_8bit_set_cursor
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text22
  4492   002054                     __ptext22:
  4493                           	callstack 0
  4494   002054                     _lcd_8bit_send_cmd:
  4495                           	callstack 25
  4496   002054                     
  4497                           ;_HAL/Drivers/LCD/LCD.c: 275: std_return lcd_8bit_send_cmd( lcd_8bit_t * p_lcd, const ui
      +                          nt8_t d_cmd);_HAL/Drivers/LCD/LCD.c: 276: {;_HAL/Drivers/LCD/LCD.c: 277:     if (((void*
      +                          )0) == p_lcd)
  4498   002054  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4499   002056  A4D8               	btfss	status,2,c
  4500   002058  EF30  F010         	goto	u2531
  4501   00205C  EF32  F010         	goto	u2530
  4502   002060                     u2531:
  4503   002060  EF34  F010         	goto	l4077
  4504   002064                     u2530:
  4505   002064  EF88  F010         	goto	l382
  4506   002068                     l4077:
  4507                           
  4508                           ;_HAL/Drivers/LCD/LCD.c: 282:     {;_HAL/Drivers/LCD/LCD.c: 283:         gpio_pin_write_
      +                          logic(&(p_lcd->lcd_reg_select_pin),LOGIC_OFF);
  4509   002068  C00B  F006         	movff	lcd_8bit_send_cmd@p_lcd,gpio_pin_write_logic@p_pin_config
  4510   00206C  0E00               	movlw	0
  4511   00206E  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4512   002070  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4513                           
  4514                           ;_HAL/Drivers/LCD/LCD.c: 285:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[0]), ((
      +                          d_cmd >> 0) & 0x01) );
  4515   002074  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4516   002076  0F0A               	addlw	10
  4517   002078  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4518   00207A  500C               	movf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4519   00207C  0B01               	andlw	1
  4520   00207E  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4521   002080  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4522                           
  4523                           ;_HAL/Drivers/LCD/LCD.c: 286:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[1]), ((
      +                          d_cmd >> 1) & 0x01) );
  4524   002084  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4525   002086  0F0F               	addlw	15
  4526   002088  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4527   00208A  90D8               	bcf	status,0,c
  4528   00208C  300C               	rrcf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4529   00208E  0B01               	andlw	1
  4530   002090  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4531   002092  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4532                           
  4533                           ;_HAL/Drivers/LCD/LCD.c: 287:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[2]), ((
      +                          d_cmd >> 2) & 0x01) );
  4534   002096  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4535   002098  0F14               	addlw	20
  4536   00209A  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4537   00209C  400C               	rrncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4538   00209E  42E8               	rrncf	wreg,f,c
  4539   0020A0  0B3F               	andlw	63
  4540   0020A2  0B01               	andlw	1
  4541   0020A4  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4542   0020A6  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4543                           
  4544                           ;_HAL/Drivers/LCD/LCD.c: 288:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[3]), ((
      +                          d_cmd >> 3) & 0x01) );
  4545   0020AA  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4546   0020AC  0F19               	addlw	25
  4547   0020AE  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4548   0020B0  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4549   0020B2  46E8               	rlncf	wreg,f,c
  4550   0020B4  0B1F               	andlw	31
  4551   0020B6  0B01               	andlw	1
  4552   0020B8  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4553   0020BA  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4554                           
  4555                           ;_HAL/Drivers/LCD/LCD.c: 289:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[4]), ((
      +                          d_cmd >> 4) & 0x01) );
  4556   0020BE  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4557   0020C0  0F1E               	addlw	30
  4558   0020C2  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4559   0020C4  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4560   0020C6  0B0F               	andlw	15
  4561   0020C8  0B01               	andlw	1
  4562   0020CA  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4563   0020CC  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4564                           
  4565                           ;_HAL/Drivers/LCD/LCD.c: 290:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[5]), ((
      +                          d_cmd >> 5) & 0x01) );
  4566   0020D0  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4567   0020D2  0F23               	addlw	35
  4568   0020D4  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4569   0020D6  380C               	swapf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4570   0020D8  42E8               	rrncf	wreg,f,c
  4571   0020DA  0B07               	andlw	7
  4572   0020DC  0B01               	andlw	1
  4573   0020DE  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4574   0020E0  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4575                           
  4576                           ;_HAL/Drivers/LCD/LCD.c: 291:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[6]), ((
      +                          d_cmd >> 6) & 0x01) );
  4577   0020E4  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4578   0020E6  0F28               	addlw	40
  4579   0020E8  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4580   0020EA  440C               	rlncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4581   0020EC  46E8               	rlncf	wreg,f,c
  4582   0020EE  0B03               	andlw	3
  4583   0020F0  0B01               	andlw	1
  4584   0020F2  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4585   0020F4  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4586                           
  4587                           ;_HAL/Drivers/LCD/LCD.c: 292:         gpio_pin_write_logic(&(p_lcd->lcd_data_pin[7]), ((
      +                          d_cmd >> 7) & 0x01) );
  4588   0020F8  500B               	movf	lcd_8bit_send_cmd@p_lcd^0,w,c
  4589   0020FA  0F2D               	addlw	45
  4590   0020FC  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4591   0020FE  440C               	rlncf	lcd_8bit_send_cmd@d_cmd^0,w,c
  4592   002100  0B01               	andlw	1
  4593   002102  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4594   002104  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4595                           
  4596                           ;_HAL/Drivers/LCD/LCD.c: 293:         lcd_8bit_send_enable(p_lcd);
  4597   002108  C00B  F00A         	movff	lcd_8bit_send_cmd@p_lcd,lcd_8bit_send_enable@p_lcd
  4598   00210C  EC84  F013         	call	_lcd_8bit_send_enable	;wreg free
  4599   002110                     l382:
  4600   002110  0012               	return		;funcret
  4601   002112                     __end_of_lcd_8bit_send_cmd:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _lcd_8bit_send_enable *****************
  4605 ;; Defined at:
  4606 ;;		line 474 in file "_HAL/Drivers/LCD/LCD.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  p_lcd           1    9[COMRAM] PTR struct .
  4609 ;;		 -> lcd_2_8bit(50), 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      enum E2975
  4614 ;; Registers used:
  4615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;Total ram usage:        1 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 2
  4628 ;; This function calls:
  4629 ;;		_gpio_pin_write_logic
  4630 ;; This function is called by:
  4631 ;;		_lcd_8bit_send_cmd
  4632 ;;		_lcd_8bit_send_char
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text23
  4637   002708                     __ptext23:
  4638                           	callstack 0
  4639   002708                     _lcd_8bit_send_enable:
  4640                           	callstack 25
  4641   002708                     
  4642                           ;_HAL/Drivers/LCD/LCD.c: 474: static std_return lcd_8bit_send_enable( lcd_8bit_t * p_lcd
      +                          );_HAL/Drivers/LCD/LCD.c: 475: {;_HAL/Drivers/LCD/LCD.c: 476:     gpio_pin_write_logic(&
      +                          (p_lcd->lcd_enable_pin),LOGIC_ON);
  4643   002708  500A               	movf	lcd_8bit_send_enable@p_lcd^0,w,c
  4644   00270A  0F05               	addlw	5
  4645   00270C  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4646   00270E  0E01               	movlw	1
  4647   002710  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4648   002712  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4649   002716                     
  4650                           ;_HAL/Drivers/LCD/LCD.c: 477:     _delay((unsigned long)((10)*((8000000UL)/4000000.0)));
  4651   002716  0E06               	movlw	6
  4652   002718                     u3257:
  4653   002718  2EE8               	decfsz	wreg,f,c
  4654   00271A  D7FE               	bra	u3257
  4655   00271C  D000               	nop2	
  4656   00271E                     
  4657                           ;_HAL/Drivers/LCD/LCD.c: 478:     gpio_pin_write_logic(&(p_lcd->lcd_enable_pin),LOGIC_OF
      +                          F);
  4658   00271E  500A               	movf	lcd_8bit_send_enable@p_lcd^0,w,c
  4659   002720  0F05               	addlw	5
  4660   002722  6E06               	movwf	gpio_pin_write_logic@p_pin_config^0,c
  4661   002724  0E00               	movlw	0
  4662   002726  6E07               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
  4663   002728  EC9E  F00D         	call	_gpio_pin_write_logic	;wreg free
  4664   00272C  0012               	return		;funcret
  4665   00272E                     __end_of_lcd_8bit_send_enable:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _gpio_pin_write_logic *****************
  4669 ;; Defined at:
  4670 ;;		line 205 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  p_pin_config    1    5[COMRAM] PTR struct .
  4673 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), lcd_2_8bit$lcd_data_pin(40), lcd_2_8bit(50), 
  4674 ;;  d_logic_desi    1    6[COMRAM] const enum E2992
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      enum E2975
  4679 ;; Registers used:
  4680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;Total ram usage:        4 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 1
  4693 ;; This function calls:
  4694 ;;		_clear_bit_uint8
  4695 ;;		_set_bit_uint8
  4696 ;; This function is called by:
  4697 ;;		_lcd_8bit_init
  4698 ;;		_lcd_8bit_send_cmd
  4699 ;;		_lcd_8bit_send_char
  4700 ;;		_lcd_8bit_send_enable
  4701 ;;		_DCmotor_init
  4702 ;;		_DCmotor_rotate_CW_CCW
  4703 ;;		_DCmotor_brake
  4704 ;;		_keypad_init
  4705 ;;		_keypad_read
  4706 ;;		_lcd_4bit_init
  4707 ;;		_lcd_4bit_send_cmd
  4708 ;;		_lcd_4bit_send_char
  4709 ;;		_lcd_4bit_send_enable
  4710 ;;		_led_on_off
  4711 ;;		_gpio_pin_initialize
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text24
  4716   001B3C                     __ptext24:
  4717                           	callstack 0
  4718   001B3C                     _gpio_pin_write_logic:
  4719                           	callstack 25
  4720   001B3C                     
  4721                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 205: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 206:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 207: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 208:     if(
      +                          (((void*)0) == p_pin_config) ||
  4722   001B3C  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4723   001B3E  B4D8               	btfsc	status,2,c
  4724   001B40  EFA4  F00D         	goto	u2491
  4725   001B44  EFA6  F00D         	goto	u2490
  4726   001B48                     u2491:
  4727   001B48  EF16  F00E         	goto	l690
  4728   001B4C                     u2490:
  4729   001B4C  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4730   001B4E  6ED9               	movwf	fsr2l,c
  4731   001B50  6ADA               	clrf	fsr2h,c
  4732   001B52  0E05               	movlw	5
  4733   001B54  60DF               	cpfslt	indf2,c
  4734   001B56  EFAF  F00D         	goto	u2501
  4735   001B5A  EFB1  F00D         	goto	u2500
  4736   001B5E                     u2501:
  4737   001B5E  EF16  F00E         	goto	l690
  4738   001B62                     u2500:
  4739   001B62  0407               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
  4740   001B64  B4D8               	btfsc	status,2,c
  4741   001B66  EFB7  F00D         	goto	u2511
  4742   001B6A  EFB9  F00D         	goto	u2510
  4743   001B6E                     u2511:
  4744   001B6E  EF01  F00E         	goto	l4057
  4745   001B72                     u2510:
  4746   001B72  5007               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  4747   001B74  B4D8               	btfsc	status,2,c
  4748   001B76  EFBF  F00D         	goto	u2521
  4749   001B7A  EFC1  F00D         	goto	u2520
  4750   001B7E                     u2521:
  4751   001B7E  EF01  F00E         	goto	l4057
  4752   001B82                     u2520:
  4753   001B82  EF16  F00E         	goto	l690
  4754   001B86                     l4045:
  4755                           
  4756                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                p_pin_config->logic = d_logic_desired;
  4757   001B86  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4758   001B88  6ED9               	movwf	fsr2l,c
  4759   001B8A  6ADA               	clrf	fsr2h,c
  4760   001B8C  0E03               	movlw	3
  4761   001B8E  26D9               	addwf	fsr2l,f,c
  4762   001B90  C007  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  4763   001B94                     
  4764                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  4765   001B94  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4766   001B96  6ED9               	movwf	fsr2l,c
  4767   001B98  6ADA               	clrf	fsr2h,c
  4768   001B9A  50DF               	movf	indf2,w,c
  4769   001B9C  0D02               	mullw	2
  4770   001B9E  50F3               	movf	243,w,c
  4771   001BA0  0F59               	addlw	low _LAT_REG_ADD_arr
  4772   001BA2  6ED9               	movwf	fsr2l,c
  4773   001BA4  6ADA               	clrf	fsr2h,c
  4774   001BA6  CFDE F001          	movff	postinc2,set_bit_uint8@p_reg
  4775   001BAA  CFDD F002          	movff	postdec2,set_bit_uint8@p_reg+1
  4776   001BAE  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4777   001BB0  6ED9               	movwf	fsr2l,c
  4778   001BB2  6ADA               	clrf	fsr2h,c
  4779   001BB4  0E01               	movlw	1
  4780   001BB6  26D9               	addwf	fsr2l,f,c
  4781   001BB8  50DF               	movf	indf2,w,c
  4782   001BBA  6E03               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  4783   001BBC  EC17  F00E         	call	_set_bit_uint8	;wreg free
  4784                           
  4785                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 221:                break;
  4786   001BC0  EF16  F00E         	goto	l690
  4787   001BC4                     l4049:
  4788                           
  4789                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                p_pin_config->logic = d_logic_desired;
  4790   001BC4  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4791   001BC6  6ED9               	movwf	fsr2l,c
  4792   001BC8  6ADA               	clrf	fsr2h,c
  4793   001BCA  0E03               	movlw	3
  4794   001BCC  26D9               	addwf	fsr2l,f,c
  4795   001BCE  C007  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
  4796   001BD2                     
  4797                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  4798   001BD2  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4799   001BD4  6ED9               	movwf	fsr2l,c
  4800   001BD6  6ADA               	clrf	fsr2h,c
  4801   001BD8  50DF               	movf	indf2,w,c
  4802   001BDA  0D02               	mullw	2
  4803   001BDC  50F3               	movf	243,w,c
  4804   001BDE  0F59               	addlw	low _LAT_REG_ADD_arr
  4805   001BE0  6ED9               	movwf	fsr2l,c
  4806   001BE2  6ADA               	clrf	fsr2h,c
  4807   001BE4  CFDE F001          	movff	postinc2,clear_bit_uint8@p_reg
  4808   001BE8  CFDD F002          	movff	postdec2,clear_bit_uint8@p_reg+1
  4809   001BEC  5006               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
  4810   001BEE  6ED9               	movwf	fsr2l,c
  4811   001BF0  6ADA               	clrf	fsr2h,c
  4812   001BF2  0E01               	movlw	1
  4813   001BF4  26D9               	addwf	fsr2l,f,c
  4814   001BF6  50DF               	movf	indf2,w,c
  4815   001BF8  6E03               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  4816   001BFA  EC90  F00E         	call	_clear_bit_uint8	;wreg free
  4817                           
  4818                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 226:                break;
  4819   001BFE  EF16  F00E         	goto	l690
  4820   001C02                     l4057:
  4821   001C02  5007               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
  4822   001C04  6E08               	movwf	??_gpio_pin_write_logic^0,c
  4823   001C06  6A09               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4824                           
  4825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4826                           ; Switch size 1, requested type "simple"
  4827                           ; Number of cases is 1, Range of values is 0 to 0
  4828                           ; switch strategies available:
  4829                           ; Name         Instructions Cycles
  4830                           ; simple_byte            4     3 (average)
  4831                           ;	Chosen strategy is simple_byte
  4832   001C08  5009               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4833   001C0A  0A00               	xorlw	0	; case 0
  4834   001C0C  B4D8               	btfsc	status,2,c
  4835   001C0E  EF0B  F00E         	goto	l4703
  4836   001C12  EF16  F00E         	goto	l690
  4837   001C16                     l4703:
  4838                           
  4839                           ; Switch size 1, requested type "simple"
  4840                           ; Number of cases is 2, Range of values is 0 to 1
  4841                           ; switch strategies available:
  4842                           ; Name         Instructions Cycles
  4843                           ; simple_byte            7     4 (average)
  4844                           ;	Chosen strategy is simple_byte
  4845   001C16  5008               	movf	??_gpio_pin_write_logic^0,w,c
  4846   001C18  0A00               	xorlw	0	; case 0
  4847   001C1A  B4D8               	btfsc	status,2,c
  4848   001C1C  EFE2  F00D         	goto	l4049
  4849   001C20  0A01               	xorlw	1	; case 1
  4850   001C22  B4D8               	btfsc	status,2,c
  4851   001C24  EFC3  F00D         	goto	l4045
  4852   001C28  EF16  F00E         	goto	l690
  4853   001C2C                     l690:
  4854   001C2C  0012               	return		;funcret
  4855   001C2E                     __end_of_gpio_pin_write_logic:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _gpio_pin_direction_initialize *****************
  4859 ;; Defined at:
  4860 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  4863 ;;		 -> led_init@led_pin(5), lcd_2_8bit$lcd_data_pin(40), lcd_2_8bit$lcd_enable_pin(5), lcd_2_8bit$lcd_reg_select_pin(5)
      +, 
  4864 ;;		 -> lcd_2_8bit(50), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      enum E2975
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        3 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 1
  4883 ;; This function calls:
  4884 ;;		_clear_bit_uint8
  4885 ;;		_set_bit_uint8
  4886 ;; This function is called by:
  4887 ;;		_lcd_8bit_init
  4888 ;;		_push_button_init
  4889 ;;		_DCmotor_init
  4890 ;;		_keypad_init
  4891 ;;		_lcd_4bit_init
  4892 ;;		_gpio_pin_initialize
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text25
  4897   001ED6                     __ptext25:
  4898                           	callstack 0
  4899   001ED6                     _gpio_pin_direction_initialize:
  4900                           	callstack 27
  4901   001ED6                     
  4902                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1))
  4903   001ED6  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4904   001ED8  B4D8               	btfsc	status,2,c
  4905   001EDA  EF71  F00F         	goto	u2541
  4906   001EDE  EF73  F00F         	goto	u2540
  4907   001EE2                     u2541:
  4908   001EE2  EFCA  F00F         	goto	l678
  4909   001EE6                     u2540:
  4910   001EE6  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4911   001EE8  6ED9               	movwf	fsr2l,c
  4912   001EEA  6ADA               	clrf	fsr2h,c
  4913   001EEC  0E04               	movlw	4
  4914   001EEE  64DF               	cpfsgt	indf2,c
  4915   001EF0  EF7C  F00F         	goto	u2551
  4916   001EF4  EF7E  F00F         	goto	u2550
  4917   001EF8                     u2551:
  4918   001EF8  EFB0  F00F         	goto	l4095
  4919   001EFC                     u2550:
  4920   001EFC  EFCA  F00F         	goto	l678
  4921   001F00                     l4087:
  4922                           
  4923                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  4924   001F00  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4925   001F02  6ED9               	movwf	fsr2l,c
  4926   001F04  6ADA               	clrf	fsr2h,c
  4927   001F06  50DF               	movf	indf2,w,c
  4928   001F08  0D02               	mullw	2
  4929   001F0A  50F3               	movf	243,w,c
  4930   001F0C  0F63               	addlw	low _TRIS_REG_ADD_arr
  4931   001F0E  6ED9               	movwf	fsr2l,c
  4932   001F10  6ADA               	clrf	fsr2h,c
  4933   001F12  CFDE F001          	movff	postinc2,clear_bit_uint8@p_reg
  4934   001F16  CFDD F002          	movff	postdec2,clear_bit_uint8@p_reg+1
  4935   001F1A  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4936   001F1C  6ED9               	movwf	fsr2l,c
  4937   001F1E  6ADA               	clrf	fsr2h,c
  4938   001F20  0E01               	movlw	1
  4939   001F22  26D9               	addwf	fsr2l,f,c
  4940   001F24  50DF               	movf	indf2,w,c
  4941   001F26  6E03               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  4942   001F28  EC90  F00E         	call	_clear_bit_uint8	;wreg free
  4943                           
  4944                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 185:                break;
  4945   001F2C  EFCA  F00F         	goto	l678
  4946   001F30                     l4089:
  4947                           
  4948                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  4949   001F30  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4950   001F32  6ED9               	movwf	fsr2l,c
  4951   001F34  6ADA               	clrf	fsr2h,c
  4952   001F36  50DF               	movf	indf2,w,c
  4953   001F38  0D02               	mullw	2
  4954   001F3A  50F3               	movf	243,w,c
  4955   001F3C  0F63               	addlw	low _TRIS_REG_ADD_arr
  4956   001F3E  6ED9               	movwf	fsr2l,c
  4957   001F40  6ADA               	clrf	fsr2h,c
  4958   001F42  CFDE F001          	movff	postinc2,set_bit_uint8@p_reg
  4959   001F46  CFDD F002          	movff	postdec2,set_bit_uint8@p_reg+1
  4960   001F4A  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4961   001F4C  6ED9               	movwf	fsr2l,c
  4962   001F4E  6ADA               	clrf	fsr2h,c
  4963   001F50  0E01               	movlw	1
  4964   001F52  26D9               	addwf	fsr2l,f,c
  4965   001F54  50DF               	movf	indf2,w,c
  4966   001F56  6E03               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  4967   001F58  EC17  F00E         	call	_set_bit_uint8	;wreg free
  4968                           
  4969                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 189:                break;
  4970   001F5C  EFCA  F00F         	goto	l678
  4971   001F60                     l4095:
  4972   001F60  5006               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  4973   001F62  6ED9               	movwf	fsr2l,c
  4974   001F64  6ADA               	clrf	fsr2h,c
  4975   001F66  0E02               	movlw	2
  4976   001F68  26D9               	addwf	fsr2l,f,c
  4977   001F6A  50DF               	movf	indf2,w,c
  4978   001F6C  6E07               	movwf	??_gpio_pin_direction_initialize^0,c
  4979   001F6E  6A08               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4980                           
  4981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4982                           ; Switch size 1, requested type "simple"
  4983                           ; Number of cases is 1, Range of values is 0 to 0
  4984                           ; switch strategies available:
  4985                           ; Name         Instructions Cycles
  4986                           ; simple_byte            4     3 (average)
  4987                           ;	Chosen strategy is simple_byte
  4988   001F70  5008               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4989   001F72  0A00               	xorlw	0	; case 0
  4990   001F74  B4D8               	btfsc	status,2,c
  4991   001F76  EFBF  F00F         	goto	l4705
  4992   001F7A  EFCA  F00F         	goto	l678
  4993   001F7E                     l4705:
  4994                           
  4995                           ; Switch size 1, requested type "simple"
  4996                           ; Number of cases is 2, Range of values is 0 to 1
  4997                           ; switch strategies available:
  4998                           ; Name         Instructions Cycles
  4999                           ; simple_byte            7     4 (average)
  5000                           ;	Chosen strategy is simple_byte
  5001   001F7E  5007               	movf	??_gpio_pin_direction_initialize^0,w,c
  5002   001F80  0A00               	xorlw	0	; case 0
  5003   001F82  B4D8               	btfsc	status,2,c
  5004   001F84  EF80  F00F         	goto	l4087
  5005   001F88  0A01               	xorlw	1	; case 1
  5006   001F8A  B4D8               	btfsc	status,2,c
  5007   001F8C  EF98  F00F         	goto	l4089
  5008   001F90  EFCA  F00F         	goto	l678
  5009   001F94                     l678:
  5010   001F94  0012               	return		;funcret
  5011   001F96                     __end_of_gpio_pin_direction_initialize:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _set_bit_uint8 *****************
  5015 ;; Defined at:
  5016 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  5019 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  5020 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  5021 ;;		 -> TRISB(1), TRISA(1), 
  5022 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E3006
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      enum E2975
  5027 ;; Registers used:
  5028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:        5 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_gpio_pin_direction_initialize
  5044 ;;		_gpio_pin_write_logic
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text26
  5049   001C2E                     __ptext26:
  5050                           	callstack 0
  5051   001C2E                     _set_bit_uint8:
  5052                           	callstack 25
  5053   001C2E                     
  5054                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  5055   001C2E  5001               	movf	set_bit_uint8@p_reg^0,w,c
  5056   001C30  1002               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  5057   001C32  A4D8               	btfss	status,2,c
  5058   001C34  EF1E  F00E         	goto	u1281
  5059   001C38  EF20  F00E         	goto	u1280
  5060   001C3C                     u1281:
  5061   001C3C  EF62  F00E         	goto	l2927
  5062   001C40                     u1280:
  5063   001C40  EF8F  F00E         	goto	l628
  5064   001C44                     l2907:
  5065                           
  5066                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  5067   001C44  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5068   001C48  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5069   001C4C  0E00               	movlw	0
  5070   001C4E  80DB               	bsf	plusw2,0,c
  5071                           
  5072                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  5073   001C50  EF8F  F00E         	goto	l628
  5074   001C54                     l2909:
  5075                           
  5076                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  5077   001C54  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5078   001C58  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5079   001C5C  0E00               	movlw	0
  5080   001C5E  82DB               	bsf	plusw2,1,c
  5081                           
  5082                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  5083   001C60  EF8F  F00E         	goto	l628
  5084   001C64                     l2911:
  5085                           
  5086                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  5087   001C64  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5088   001C68  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5089   001C6C  0E00               	movlw	0
  5090   001C6E  84DB               	bsf	plusw2,2,c
  5091                           
  5092                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  5093   001C70  EF8F  F00E         	goto	l628
  5094   001C74                     l2913:
  5095                           
  5096                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  5097   001C74  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5098   001C78  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5099   001C7C  0E00               	movlw	0
  5100   001C7E  86DB               	bsf	plusw2,3,c
  5101                           
  5102                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  5103   001C80  EF8F  F00E         	goto	l628
  5104   001C84                     l2915:
  5105                           
  5106                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  5107   001C84  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5108   001C88  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5109   001C8C  0E00               	movlw	0
  5110   001C8E  88DB               	bsf	plusw2,4,c
  5111                           
  5112                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  5113   001C90  EF8F  F00E         	goto	l628
  5114   001C94                     l2917:
  5115                           
  5116                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  5117   001C94  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5118   001C98  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5119   001C9C  0E00               	movlw	0
  5120   001C9E  8ADB               	bsf	plusw2,5,c
  5121                           
  5122                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  5123   001CA0  EF8F  F00E         	goto	l628
  5124   001CA4                     l2919:
  5125                           
  5126                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  5127   001CA4  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5128   001CA8  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5129   001CAC  0E00               	movlw	0
  5130   001CAE  8CDB               	bsf	plusw2,6,c
  5131                           
  5132                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  5133   001CB0  EF8F  F00E         	goto	l628
  5134   001CB4                     l2921:
  5135                           
  5136                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  5137   001CB4  C001  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  5138   001CB8  C002  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  5139   001CBC  0E00               	movlw	0
  5140   001CBE  8EDB               	bsf	plusw2,7,c
  5141                           
  5142                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  5143   001CC0  EF8F  F00E         	goto	l628
  5144   001CC4                     l2927:
  5145   001CC4  5003               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  5146   001CC6  6E04               	movwf	??_set_bit_uint8^0,c
  5147   001CC8  6A05               	clrf	(??_set_bit_uint8+1)^0,c
  5148                           
  5149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5150                           ; Switch size 1, requested type "simple"
  5151                           ; Number of cases is 1, Range of values is 0 to 0
  5152                           ; switch strategies available:
  5153                           ; Name         Instructions Cycles
  5154                           ; simple_byte            4     3 (average)
  5155                           ;	Chosen strategy is simple_byte
  5156   001CCA  5005               	movf	(??_set_bit_uint8+1)^0,w,c
  5157   001CCC  0A00               	xorlw	0	; case 0
  5158   001CCE  B4D8               	btfsc	status,2,c
  5159   001CD0  EF6C  F00E         	goto	l4707
  5160   001CD4  EF8F  F00E         	goto	l628
  5161   001CD8                     l4707:
  5162                           
  5163                           ; Switch size 1, requested type "simple"
  5164                           ; Number of cases is 8, Range of values is 0 to 7
  5165                           ; switch strategies available:
  5166                           ; Name         Instructions Cycles
  5167                           ; simple_byte           25    13 (average)
  5168                           ;	Chosen strategy is simple_byte
  5169   001CD8  5004               	movf	??_set_bit_uint8^0,w,c
  5170   001CDA  0A00               	xorlw	0	; case 0
  5171   001CDC  B4D8               	btfsc	status,2,c
  5172   001CDE  EF22  F00E         	goto	l2907
  5173   001CE2  0A01               	xorlw	1	; case 1
  5174   001CE4  B4D8               	btfsc	status,2,c
  5175   001CE6  EF2A  F00E         	goto	l2909
  5176   001CEA  0A03               	xorlw	3	; case 2
  5177   001CEC  B4D8               	btfsc	status,2,c
  5178   001CEE  EF32  F00E         	goto	l2911
  5179   001CF2  0A01               	xorlw	1	; case 3
  5180   001CF4  B4D8               	btfsc	status,2,c
  5181   001CF6  EF3A  F00E         	goto	l2913
  5182   001CFA  0A07               	xorlw	7	; case 4
  5183   001CFC  B4D8               	btfsc	status,2,c
  5184   001CFE  EF42  F00E         	goto	l2915
  5185   001D02  0A01               	xorlw	1	; case 5
  5186   001D04  B4D8               	btfsc	status,2,c
  5187   001D06  EF4A  F00E         	goto	l2917
  5188   001D0A  0A03               	xorlw	3	; case 6
  5189   001D0C  B4D8               	btfsc	status,2,c
  5190   001D0E  EF52  F00E         	goto	l2919
  5191   001D12  0A01               	xorlw	1	; case 7
  5192   001D14  B4D8               	btfsc	status,2,c
  5193   001D16  EF5A  F00E         	goto	l2921
  5194   001D1A  EF8F  F00E         	goto	l628
  5195   001D1E                     l628:
  5196   001D1E  0012               	return		;funcret
  5197   001D20                     __end_of_set_bit_uint8:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _clear_bit_uint8 *****************
  5201 ;; Defined at:
  5202 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  5205 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  5206 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  5207 ;;		 -> TRISB(1), TRISA(1), 
  5208 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E3006
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      enum E2975
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;Total ram usage:        5 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_gpio_pin_direction_initialize
  5230 ;;		_gpio_pin_write_logic
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text27
  5235   001D20                     __ptext27:
  5236                           	callstack 0
  5237   001D20                     _clear_bit_uint8:
  5238                           	callstack 25
  5239   001D20                     
  5240                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  5241   001D20  5001               	movf	clear_bit_uint8@p_reg^0,w,c
  5242   001D22  1002               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  5243   001D24  A4D8               	btfss	status,2,c
  5244   001D26  EF97  F00E         	goto	u1291
  5245   001D2A  EF99  F00E         	goto	u1290
  5246   001D2E                     u1291:
  5247   001D2E  EFDB  F00E         	goto	l2959
  5248   001D32                     u1290:
  5249   001D32  EF08  F00F         	goto	l644
  5250   001D36                     l2939:
  5251                           
  5252                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= ~(MASK_BIT_0);
  5253   001D36  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5254   001D3A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5255   001D3E  0EFE               	movlw	254
  5256   001D40  16DF               	andwf	indf2,f,c
  5257                           
  5258                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  5259   001D42  EF08  F00F         	goto	l644
  5260   001D46                     l2941:
  5261                           
  5262                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 95:                 *p_reg &= ~(MASK_BIT_1);
  5263   001D46  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5264   001D4A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5265   001D4E  0EFD               	movlw	253
  5266   001D50  16DF               	andwf	indf2,f,c
  5267                           
  5268                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 96:                 break;
  5269   001D52  EF08  F00F         	goto	l644
  5270   001D56                     l2943:
  5271                           
  5272                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 98:                 *p_reg &= ~(MASK_BIT_2);
  5273   001D56  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5274   001D5A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5275   001D5E  0EFB               	movlw	251
  5276   001D60  16DF               	andwf	indf2,f,c
  5277                           
  5278                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 99:                 break;
  5279   001D62  EF08  F00F         	goto	l644
  5280   001D66                     l2945:
  5281                           
  5282                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 101:                 *p_reg &= ~(MASK_BIT_3);
  5283   001D66  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5284   001D6A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5285   001D6E  0EF7               	movlw	247
  5286   001D70  16DF               	andwf	indf2,f,c
  5287                           
  5288                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 102:                 break;
  5289   001D72  EF08  F00F         	goto	l644
  5290   001D76                     l2947:
  5291                           
  5292                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 104:                 *p_reg &= ~(MASK_BIT_4);
  5293   001D76  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5294   001D7A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5295   001D7E  0EEF               	movlw	239
  5296   001D80  16DF               	andwf	indf2,f,c
  5297                           
  5298                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 105:                 break;
  5299   001D82  EF08  F00F         	goto	l644
  5300   001D86                     l2949:
  5301                           
  5302                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 107:                 *p_reg &= ~(MASK_BIT_5);
  5303   001D86  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5304   001D8A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5305   001D8E  0EDF               	movlw	223
  5306   001D90  16DF               	andwf	indf2,f,c
  5307                           
  5308                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 108:                 break;
  5309   001D92  EF08  F00F         	goto	l644
  5310   001D96                     l2951:
  5311                           
  5312                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 110:                 *p_reg &= ~(MASK_BIT_6);
  5313   001D96  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5314   001D9A  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5315   001D9E  0EBF               	movlw	191
  5316   001DA0  16DF               	andwf	indf2,f,c
  5317                           
  5318                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 111:                 break;
  5319   001DA2  EF08  F00F         	goto	l644
  5320   001DA6                     l2953:
  5321                           
  5322                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 113:                 *p_reg &= ~(MASK_BIT_7);
  5323   001DA6  C001  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  5324   001DAA  C002  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  5325   001DAE  0E7F               	movlw	127
  5326   001DB0  16DF               	andwf	indf2,f,c
  5327                           
  5328                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 114:                 break;
  5329   001DB2  EF08  F00F         	goto	l644
  5330   001DB6                     l2959:
  5331   001DB6  5003               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  5332   001DB8  6E04               	movwf	??_clear_bit_uint8^0,c
  5333   001DBA  6A05               	clrf	(??_clear_bit_uint8+1)^0,c
  5334                           
  5335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5336                           ; Switch size 1, requested type "simple"
  5337                           ; Number of cases is 1, Range of values is 0 to 0
  5338                           ; switch strategies available:
  5339                           ; Name         Instructions Cycles
  5340                           ; simple_byte            4     3 (average)
  5341                           ;	Chosen strategy is simple_byte
  5342   001DBC  5005               	movf	(??_clear_bit_uint8+1)^0,w,c
  5343   001DBE  0A00               	xorlw	0	; case 0
  5344   001DC0  B4D8               	btfsc	status,2,c
  5345   001DC2  EFE5  F00E         	goto	l4709
  5346   001DC6  EF08  F00F         	goto	l644
  5347   001DCA                     l4709:
  5348                           
  5349                           ; Switch size 1, requested type "simple"
  5350                           ; Number of cases is 8, Range of values is 0 to 7
  5351                           ; switch strategies available:
  5352                           ; Name         Instructions Cycles
  5353                           ; simple_byte           25    13 (average)
  5354                           ;	Chosen strategy is simple_byte
  5355   001DCA  5004               	movf	??_clear_bit_uint8^0,w,c
  5356   001DCC  0A00               	xorlw	0	; case 0
  5357   001DCE  B4D8               	btfsc	status,2,c
  5358   001DD0  EF9B  F00E         	goto	l2939
  5359   001DD4  0A01               	xorlw	1	; case 1
  5360   001DD6  B4D8               	btfsc	status,2,c
  5361   001DD8  EFA3  F00E         	goto	l2941
  5362   001DDC  0A03               	xorlw	3	; case 2
  5363   001DDE  B4D8               	btfsc	status,2,c
  5364   001DE0  EFAB  F00E         	goto	l2943
  5365   001DE4  0A01               	xorlw	1	; case 3
  5366   001DE6  B4D8               	btfsc	status,2,c
  5367   001DE8  EFB3  F00E         	goto	l2945
  5368   001DEC  0A07               	xorlw	7	; case 4
  5369   001DEE  B4D8               	btfsc	status,2,c
  5370   001DF0  EFBB  F00E         	goto	l2947
  5371   001DF4  0A01               	xorlw	1	; case 5
  5372   001DF6  B4D8               	btfsc	status,2,c
  5373   001DF8  EFC3  F00E         	goto	l2949
  5374   001DFC  0A03               	xorlw	3	; case 6
  5375   001DFE  B4D8               	btfsc	status,2,c
  5376   001E00  EFCB  F00E         	goto	l2951
  5377   001E04  0A01               	xorlw	1	; case 7
  5378   001E06  B4D8               	btfsc	status,2,c
  5379   001E08  EFD3  F00E         	goto	l2953
  5380   001E0C  EF08  F00F         	goto	l644
  5381   001E10                     l644:
  5382   001E10  0012               	return		;funcret
  5383   001E12                     __end_of_clear_bit_uint8:
  5384                           	callstack 0
  5385                           
  5386                           	psect	rparam
  5387   000000                     
  5388                           	psect	config
  5389                           
  5390                           ; Padding undefined space
  5391   300000                     	org	3145728
  5392   300000  FF                 	db	255
  5393                           
  5394                           ;Config register CONFIG1H @ 0x300001
  5395                           ;	Oscillator Selection bits
  5396                           ;	OSC = HS, HS oscillator
  5397                           ;	Fail-Safe Clock Monitor Enable bit
  5398                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5399                           ;	Internal/External Oscillator Switchover bit
  5400                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5401   300001                     	org	3145729
  5402   300001  02                 	db	2
  5403                           
  5404                           ;Config register CONFIG2L @ 0x300002
  5405                           ;	Power-up Timer Enable bit
  5406                           ;	PWRT = OFF, PWRT disabled
  5407                           ;	Brown-out Reset Enable bits
  5408                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5409                           ;	Brown Out Reset Voltage bits
  5410                           ;	BORV = 1, 
  5411   300002                     	org	3145730
  5412   300002  09                 	db	9
  5413                           
  5414                           ;Config register CONFIG2H @ 0x300003
  5415                           ;	Watchdog Timer Enable bit
  5416                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5417                           ;	Watchdog Timer Postscale Select bits
  5418                           ;	WDTPS = 32768, 1:32768
  5419   300003                     	org	3145731
  5420   300003  1E                 	db	30
  5421                           
  5422                           ; Padding undefined space
  5423   300004                     	org	3145732
  5424   300004  FF                 	db	255
  5425                           
  5426                           ;Config register CONFIG3H @ 0x300005
  5427                           ;	CCP2 MUX bit
  5428                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5429                           ;	PORTB A/D Enable bit
  5430                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5431                           ;	Low-Power Timer1 Oscillator Enable bit
  5432                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5433                           ;	MCLR Pin Enable bit
  5434                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5435   300005                     	org	3145733
  5436   300005  81                 	db	129
  5437                           
  5438                           ;Config register CONFIG4L @ 0x300006
  5439                           ;	Stack Full/Underflow Reset Enable bit
  5440                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5441                           ;	Single-Supply ICSP Enable bit
  5442                           ;	LVP = OFF, Single-Supply ICSP disabled
  5443                           ;	Extended Instruction Set Enable bit
  5444                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5445                           ;	Background Debugger Enable bit
  5446                           ;	DEBUG = 0x1, unprogrammed default
  5447   300006                     	org	3145734
  5448   300006  81                 	db	129
  5449                           
  5450                           ; Padding undefined space
  5451   300007                     	org	3145735
  5452   300007  FF                 	db	255
  5453                           
  5454                           ;Config register CONFIG5L @ 0x300008
  5455                           ;	Code Protection bit
  5456                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5457                           ;	Code Protection bit
  5458                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5459                           ;	Code Protection bit
  5460                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5461                           ;	Code Protection bit
  5462                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5463   300008                     	org	3145736
  5464   300008  0F                 	db	15
  5465                           
  5466                           ;Config register CONFIG5H @ 0x300009
  5467                           ;	Boot Block Code Protection bit
  5468                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5469                           ;	Data EEPROM Code Protection bit
  5470                           ;	CPD = OFF, Data EEPROM not code-protected
  5471   300009                     	org	3145737
  5472   300009  C0                 	db	192
  5473                           
  5474                           ;Config register CONFIG6L @ 0x30000A
  5475                           ;	Write Protection bit
  5476                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5477                           ;	Write Protection bit
  5478                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5479                           ;	Write Protection bit
  5480                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5481                           ;	Write Protection bit
  5482                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5483   30000A                     	org	3145738
  5484   30000A  0F                 	db	15
  5485                           
  5486                           ;Config register CONFIG6H @ 0x30000B
  5487                           ;	Configuration Register Write Protection bit
  5488                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5489                           ;	Boot Block Write Protection bit
  5490                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5491                           ;	Data EEPROM Write Protection bit
  5492                           ;	WRTD = OFF, Data EEPROM not write-protected
  5493   30000B                     	org	3145739
  5494   30000B  E0                 	db	224
  5495                           
  5496                           ;Config register CONFIG7L @ 0x30000C
  5497                           ;	Table Read Protection bit
  5498                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5499                           ;	Table Read Protection bit
  5500                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5501                           ;	Table Read Protection bit
  5502                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5503                           ;	Table Read Protection bit
  5504                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5505   30000C                     	org	3145740
  5506   30000C  0F                 	db	15
  5507                           
  5508                           ;Config register CONFIG7H @ 0x30000D
  5509                           ;	Boot Block Table Read Protection bit
  5510                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5511   30000D                     	org	3145741
  5512   30000D  40                 	db	64
  5513                           tosu	equ	0xFFF
  5514                           tosh	equ	0xFFE
  5515                           tosl	equ	0xFFD
  5516                           stkptr	equ	0xFFC
  5517                           pclatu	equ	0xFFB
  5518                           pclath	equ	0xFFA
  5519                           pcl	equ	0xFF9
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           prodh	equ	0xFF4
  5525                           prodl	equ	0xFF3
  5526                           indf0	equ	0xFEF
  5527                           postinc0	equ	0xFEE
  5528                           postdec0	equ	0xFED
  5529                           preinc0	equ	0xFEC
  5530                           plusw0	equ	0xFEB
  5531                           fsr0h	equ	0xFEA
  5532                           fsr0l	equ	0xFE9
  5533                           wreg	equ	0xFE8
  5534                           indf1	equ	0xFE7
  5535                           postinc1	equ	0xFE6
  5536                           postdec1	equ	0xFE5
  5537                           preinc1	equ	0xFE4
  5538                           plusw1	equ	0xFE3
  5539                           fsr1h	equ	0xFE2
  5540                           fsr1l	equ	0xFE1
  5541                           bsr	equ	0xFE0
  5542                           indf2	equ	0xFDF
  5543                           postinc2	equ	0xFDE
  5544                           postdec2	equ	0xFDD
  5545                           preinc2	equ	0xFDC
  5546                           plusw2	equ	0xFDB
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8

Data Sizes:
    Strings     56
    Constant    0
    Data        391
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     88     127
    BANK0           128      0     123
    BANK1           256    245     253
    BANK2           256      0     245
    BANK3           256      0      32
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    convert_uint8_to_strng@d_strng	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), lcd_2_8bit$lcd_data_pin(BANK0[40]), lcd_2_8bit$lcd_enable_pin(BANK0[5]), lcd_2_8bit$lcd_reg_select_pin(BANK0[5]), 
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), lcd_2_8bit$lcd_data_pin(BANK0[40]), led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_init@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_char@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_char_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_cmd@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_custom_char_pos@_char	PTR const unsigned char  size(2) Largest target is 8
		 -> _car_char_arr(BANK0[8]), _musicNote_char_arr(BANK1[8]), 

    lcd_8bit_send_custom_char_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_enable@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_strng_pos@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    lcd_8bit_send_strng_pos@p_strng	PTR const unsigned char  size(2) Largest target is 18
		 -> init_msg_lcd@msg1(BANK1[18]), init_msg_lcd@msg10(BANK1[18]), init_msg_lcd@msg11(BANK1[17]), init_msg_lcd@msg12(BANK1[18]), 
		 -> init_msg_lcd@msg13(BANK1[17]), init_msg_lcd@msg14(BANK1[17]), init_msg_lcd@msg2(BANK1[18]), init_msg_lcd@msg3(BANK1[17]), 
		 -> init_msg_lcd@msg4(BANK1[18]), init_msg_lcd@msg5(BANK1[17]), init_msg_lcd@msg6(BANK1[18]), init_msg_lcd@msg7(BANK1[17]), 
		 -> init_msg_lcd@msg8(BANK1[18]), init_msg_lcd@msg9(BANK1[17]), main@msg_boom(COMRAM[17]), main@msg_space(COMRAM[17]), 
		 -> main@msg_X(COMRAM[4]), STR_1(CODE[8]), STR_10(CODE[17]), STR_2(CODE[8]), 
		 -> STR_3(CODE[11]), STR_4(CODE[11]), STR_5(CODE[8]), STR_6(CODE[8]), 
		 -> STR_7(CODE[11]), STR_8(CODE[11]), STR_9(CODE[17]), 

    lcd_8bit_set_cursor@p_lcd	PTR struct . size(1) Largest target is 50
		 -> lcd_2_8bit(BANK0[50]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1571$buffer	PTR unsigned char  size(2) Largest target is 0

    S1571$source	PTR const unsigned char  size(2) Largest target is 0

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> main@msg_X(COMRAM[4]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_12(CODE[3]), STR_13(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_strng
    _lcd_8bit_send_custom_char_pos->_lcd_8bit_send_char_pos
    _lcd_8bit_send_char_pos->_lcd_8bit_set_cursor
    _init_msg_lcd->_lcd_8bit_send_strng_pos
    _hello_world_lcd->_lcd_8bit_send_strng_pos
    _lcd_8bit_send_strng_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_cmd
    _lcd_8bit_send_char->_lcd_8bit_send_enable
    _convert_uint8_to_strng->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _app_init->_lcd_8bit_init
    _lcd_8bit_init->_lcd_8bit_send_cmd
    _lcd_8bit_send_cmd->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_init_msg_lcd

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  359700
                                             47 COMRAM    41    41      0
                           _app_init
             _convert_uint8_to_strng
                    _hello_world_lcd
                       _init_msg_lcd
      _lcd_8bit_send_custom_char_pos
            _lcd_8bit_send_strng_pos
                             _memset
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char_pos                        7     1      6  110455
                                             21 COMRAM     7     1      6
                 _lcd_8bit_send_char
             _lcd_8bit_send_char_pos
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_pos                               4     0      4   54998
                                             17 COMRAM     4     0      4
                 _lcd_8bit_send_char
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _init_msg_lcd                                       247   247      0   66392
                                             22 COMRAM     2     2      0
                                              0 BANK1    245   245      0
            _lcd_8bit_send_strng_pos
 ---------------------------------------------------------------------------------
 (1) _hello_world_lcd                                      4     4      0   66098
                                             22 COMRAM     4     4      0
            _lcd_8bit_send_strng_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_strng_pos                              5     0      5   65832
                                             17 COMRAM     5     0      5
                 _lcd_8bit_send_char
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  5     2      3   28399
                                             12 COMRAM     5     2      3
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char                                   2     0      2   26053
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_strng                               2     1      1    6062
                                             45 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4662
                                             26 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4005
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    3653
                                             10 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     934
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     1      5    1236
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   43202
                      _lcd_8bit_init
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_init                                        3     2      1   43202
                                             12 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
                  _lcd_8bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_cmd                                    2     0      2   27673
                                             10 COMRAM     2     0      2
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 1     0      1   12493
                                              9 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 4     2      2   12251
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    2435
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (6) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _lcd_8bit_init
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
       _lcd_8bit_send_cmd
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
           _gpio_pin_write_logic
   _convert_uint8_to_strng
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           ___lwdiv
           ___lwmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _hello_world_lcd
     _lcd_8bit_send_strng_pos
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
       _lcd_8bit_set_cursor
         _lcd_8bit_send_cmd
   _init_msg_lcd
     _lcd_8bit_send_strng_pos
   _lcd_8bit_send_custom_char_pos
     _lcd_8bit_send_char
     _lcd_8bit_send_char_pos
       _lcd_8bit_send_char
       _lcd_8bit_set_cursor
     _lcd_8bit_send_cmd
   _lcd_8bit_send_strng_pos
   _memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      29        0.0%
BANK13             100      0       0      30        0.0%
BITBANK12          100      0       0      27        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      25        0.0%
BANK11             100      0       0      26        0.0%
BITBANK10          100      0       0      23        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      21        0.0%
BANK9              100      0       0      22        0.0%
BITBANK8           100      0       0      19        0.0%
BANK8              100      0       0      20        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      20      10       12.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      F5       8       95.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100     F5      FD       6       98.8%
BITBANK14           EF      0       0      31        0.0%
BANK14              EF      0       0      32        0.0%
BITBANK15           80      0       0      33        0.0%
BANK15              80      0       0      34        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      7B       4       96.1%
BIGRAM_1            80      0       0      44        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     58      7F       1      100.0%
BITBIGSFR_1         37      0       0      39        0.0%
BITBIGSFR_5          C      0       0      35        0.0%
BITBIGSFR_2          6      0       0      38        0.0%
BITBIGSFRh           5      0       0      40        0.0%
BITBIGSFRlh          4      0       0      41        0.0%
BITBIGSFRll          4      0       0      42        0.0%
BITBIGSFR_4          3      0       0      36        0.0%
BITBIGSFR_3          3      0       0      37        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30C      43        0.0%
DATA                 0      0     30C      46        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 02:25:23 2024

               __end_of_lcd_8bit_send_char 2054       lcd_8bit_send_custom_char_pos@mem_pos 001B  
                                       l53 274A                                         l63 1916  
                                       l94 135A                               ___awdiv@sign 0006  
      gpio_pin_write_logic@d_logic_desired 0007                                        l420 25FE  
                                      l405 23A4                                        l413 24F8  
                                      l453 272C                                        l382 2110  
                                      l375 1A44                                        l447 25BC  
                                      l392 26D6                                        l387 2052  
                                      l644 1E10                                        l628 1D1E  
                                      l690 1C2C                                        l678 1F94  
                                      _abs 2672                               ___awmod@sign 0006  
                                      wreg 0FE8               __end_of_lcd_8bit_send_enable 272E  
              __end_of_lcd_8bit_set_cursor 25BE                                       ?_abs 0007  
                                     l3001 1E12                                       l1083 1ED4  
                                     l3011 1E3E                                       l3003 1E16  
                                     l3021 1E6C                                       l3013 1E46  
                                     l3005 1E24                                       l3101 2480  
                                     l1350 248E                                       l3031 1EA6  
                                     l3023 1E74                                       l3015 1E4A  
                                     l3007 1E2C                                       l1343 2486  
                                     l3111 252A                                       l3103 24FA  
                                     l1096 21C0                                       l1360 255C  
                                     l1600 26A4                                       l3041 1ECC  
                                     l3033 1EA8                                       l3025 1E82  
                                     l3017 1E52                                       l3009 1E30  
                                     l3113 2540                                       l3105 250C  
                                     l1353 2554                                       l3121 2280  
                                     l3201 158C                                       l3035 1EAE  
                                     l3027 1E88                                       l3019 1E64  
                                     l3051 212C                                       l3115 2548  
                                     l3107 2514                                       l3123 2290  
                                     l3203 15A0                                       l3211 15D6  
                                     l1612 2318                                       l3029 1E9E  
                                     l3037 1EB4                                       l3061 2160  
                                     l3053 2130                                       l3045 2112  
                                     l3117 254E                                       l3109 251C  
                                     l3133 2672                                       l3125 229A  
                                     l3205 15BE                                       l3213 1602  
                                     l4101 1F96                                       l3039 1EC4  
                                     l3071 219A                                       l3063 2168  
                                     l3055 213E                                       l3047 2116  
                                     l3135 2680                                       l1623 2754  
                                     l3127 22B6                                       l3119 2270  
                                     l3207 15C0                                       l3151 1386  
                                     l4111 255E                                       l1536 2670  
                                     l4041 1B72                                       l1529 2706  
                                     l3065 2176                                       l3073 21A0  
                                     l3057 2146                                       l3049 2124  
                                     l3081 241C                                       l3129 22E8  
                                     l3161 13D8                                       l3153 1392  
                                     l3217 160E                                       l4113 256E  
                                     l4201 17D2                                       l4051 1BD2  
                                     l4035 1B3C                                       l4131 192C  
                                     l3075 21B0                                       l3067 218C  
                                     l3059 2158                                       l3091 2454  
                                     l3083 2424                                       l3171 1462  
                                     l3163 13F0                                       l3155 1396  
                                     l3147 135C                                       l4107 1FAA  
                                     l4115 2580                                       l4211 182C  
                                     l4045 1B86                                       l4037 1B4C  
                                     l4133 192C                                       l4125 1918  
                                     l3077 21B8                                       l3069 2194  
                                     l3093 245A                                       l3085 2436  
                                     l3181 14BA                                       l3173 1474  
                                     l3165 13FA                                       l3157 13A0  
                                     l3149 137E                                       l4213 1848  
                                     l1574 1630                                       l4047 1B94  
                                     l4039 1B62                                       l4063 2708  
                                     l4071 2054                                       l4151 19B6  
                                     l4135 1934                                       l3095 2470  
                                     l3087 243E                                       l3191 1524  
                                     l3183 14D8                                       l3175 1484  
                                     l3167 1412                                       l3159 13BC  
                                     l3271 2600                                       l4119 2592  
                                     l4231 1904                                       l4223 187A  
                                     l4215 1864                                       l4207 17DA  
                  __end_of_hello_world_lcd 1918                                       l4081 1ED6  
                                     l4049 1BC4                                       l4057 1C02  
                                     l4065 2716                                       l4161 19FC  
                                     l4153 19C4                                       l4145 1970  
                                     l4137 194A                                       l3361 26EC  
                                     l3097 2478                                       l3089 2446  
                                     l3193 1532                                       l3177 1494  
                                     l3185 14DA                                       l3169 1446  
                                     l1593 263C                                       l3273 2608  
                                     l4233 1906                                       l4225 18B6  
                                     l4217 1866                                       l4209 1816  
                                     l4241 108A                                       l4083 1EE6  
                                     l4067 271E                                       l4171 1A38  
                                     l4163 1A08                                       l4155 19D0  
                                     l4147 19A4                                       l4139 1954  
                                     l3355 26D8                                       l3099 247A  
                                     l3195 1536                                       l3179 14A4  
                                     l3187 14F0                                       l3275 2618  
                                     l3371 2666                                       l3363 263E  
                                     l4227 18CC                                       l4219 1876  
                                     l4251 1106                                       l4243 109C  
                                     l4235 103A                                       l4323 24A4  
                                     l2901 1C2E                                       l4077 2068  
                                     l4165 1A14                                       l4157 19EA  
                                     l4149 19A6                                       l3357 26E0  
                                     l1597 268C                                       l3197 155E  
                                     l3189 150C                                       l3277 2634  
                                     l3365 2646                                       l3525 25D4  
                                     l4181 232E                                       l4229 18E8  
                                     l4261 1188                                       l4253 111E  
                                     l4245 10B4                                       l4237 1056  
                                     l4333 24BA                                       l4325 24B6  
                                     l4317 2490                                       l2911 1C64  
                                     l4087 1F00                                       l4095 1F60  
                                     l4167 1A20                                       l4159 19F0  
                                     l3359 26EA                                       l3199 157A  
                                     l3367 264E                                       l3527 25EC  
                                     l3519 25C0                                       l4183 2342  
                                     l4175 231A                                       l4271 1204  
                                     l4263 119A                                       l4255 1130  
                                     l4247 10C6                                       l4239 106E  
                                     l4335 24D2                                       l4327 24B6  
                                     l2921 1CB4                                       l2913 1C74  
                                     l4089 1F30                                       l4169 1A2C  
                                     l3369 2656                                       l4185 236E  
                                     l4281 129C                                       l4273 1232  
                                     l4265 11C8                                       l4257 115E  
                                     l4249 10F4                                       l4337 24D4  
                                     l2915 1C84                                       l2907 1C44  
                                     l4187 2372                                       l4291 1318  
                                     l4283 12AE                                       l4275 1244  
                                     l4267 11DA                                       l4259 1170  
                                     l4195 26BA                                       l4339 24E4  
                                     l2941 1D46                                       l2933 1D20  
                                     l2917 1C94                                       l2909 1C54  
                                     l4701 15F4                                       l4293 1330  
                                     l4285 12C6                                       l4277 125C  
                                     l4269 11F2                                       l4189 26A6  
                                     l2951 1D96                                       l2943 1D56  
                                     l2919 1CA4                                       l2927 1CC4  
                                     l4703 1C16                                       l4199 2742  
                                     l4295 1342                                       l4287 12D8  
                                     l4279 126E                                       l4631 163A  
                                     l2953 1DA6                                       l2945 1D66  
                                     l4705 1F7E                                       l4289 1306  
                                     l4641 1670                                       l4633 163E  
                                     l2947 1D76                                       l2939 1D36  
                                     l4707 1CD8                                       l4651 16DA  
                                     l4643 1686                                       l4635 1642  
                                     l4627 1632                                       l4709 1DCA  
                                     l2949 1D86                                       l4661 1740  
                                     l4653 16E8                                       l4645 16A2  
                                     l4637 1654                                       l4629 1636  
                                     l2959 1DB6                                       l4671 179E  
                                     l4663 1744                                       l4655 1700  
                                     l4647 16BC                                       l4639 1666  
                                     l4673 17B4                                       l4665 175A  
                                     l4657 1718                                       l4649 16D8  
                                     l4667 1770                                       l4659 172E  
                                     l4669 1786                                       l4699 25A6  
                                     STR_1 102B                                       STR_2 1023  
                                     STR_3 1007                                       STR_4 1007  
                                     STR_5 102B                                       STR_6 1023  
                                     STR_7 1007                                       STR_8 1007  
                                     STR_9 1012                                       u1400 2124  
                                     u2040 25D0                                       u1401 2120  
                                     u2041 25CC                                       u1410 213E  
                                     u1411 213A                                       u1340 1E24  
                                     u1420 2158                                       u1500 252A  
                                     u3100 1740                                       u1341 1E20  
                                     u1421 2154                                       u1501 2526  
                                     u3101 173C                                       _LATA 0F89  
                                     u1350 1E3E                                       u1430 2176  
                                     u1510 2540                                       _LATB 0F8A  
                                     u1351 1E3A                                       u1431 2172  
                                     u1511 253C                                       _LATC 0F8B  
                                     u1280 1C40                                       u1360 1E64  
                                     u1440 218C                                       u1520 2280  
                                     u1600 13D8                                       _LATD 0F8C  
                                     u1281 1C3C                                       u1361 1E60  
                                     u1441 2188                                       u1521 227C  
                                     u1601 13D4                                       _LATE 0F8D  
                                     u1290 1D32                                       u1370 1E82  
                                     u1450 21B0                                       u1530 2290  
                                     u1610 140E                                       u1291 1D2E  
                                     u1371 1E7E                                       u1451 21AC  
                                     u1531 228C                                       u1611 1408  
                                     u2500 1B62                                       u1380 1E9E  
                                     u1460 2436                                       u1540 22B6  
                                     u1700 159C                                       u1620 1410  
                                     u2501 1B5E                                       u1381 1E9A  
                                     u1461 2432                                       u1541 22B2  
                                     u1701 1598                                       u3117 16E0  
                                     u2510 1B72                                       u1390 1EC4  
                                     u1470 2454                                       u1550 22E8  
                                     u1710 15D2                                       u1630 1474  
                                     u2511 1B6E                                       u1391 1EC0  
                                     u1471 2450                                       u1551 22E4  
                                     u1711 15CE                                       u1631 1470  
                                     u3207 1820                                       u3127 1790  
                                     u2520 1B82                                       u1480 2470  
                                     u1560 2680                                       u1640 1484  
                                     u2600 2368                                       u2521 1B7E  
                                     u1481 246C                                       u1561 267C  
                                     u1641 1480                                       u3217 18C0  
                                     u3137 1060                                       u3081 164C  
                                     u2530 2064                                       u1490 250C  
                                     u1650 1494                                       u2610 2394  
                                     u2531 2060                                       u3227 19BC  
                                     u1491 2508                                       u1651 1490  
                                     u3147 10E8                                       u3091 165E  
                                     u2540 1EE6                                       u1660 14A4  
                                     u1580 137E                                       u2620 23A4  
                                     u2541 1EE2                                       u3237 19D6  
                                     u1661 14A0                                       u1581 137A  
                                     u2621 23A0                                       u2701 1168  
                                     u3157 1152                                       u2550 1EFC  
                                     u1830 2706                                       u1670 14EC  
                                     u1590 13BC                                       u1750 2634  
                                     u2630 26B6                                       u2551 1EF8  
                                     u3247 19EC                                       u1831 2702  
                                     u1671 14E8                                       u1591 13B8  
                                     u1751 2630                                       u2607 235E  
                                     u3167 11BC                                       u2711 1192  
                                     u2631 26B2                                       u1680 150C  
                                     u2560 1FA6                                       u2640 1876  
                                     u3257 2718                                       u1681 1508  
                                     u2561 1FA2                                       u2617 238A  
                                     u2641 1872                                       u3177 1226  
                                     u2721 11D2                                       u2490 1B4C  
                                     u2570 1928                                       u1690 158C  
                                     u2650 1916                                       u2491 1B48  
                                     u2571 1924                                       u1691 1588  
                                     u2651 1912                                       u3187 1290  
                                     u2731 11FC                                       u2580 19B6  
                                     u2820 24A0                                       u2581 19B2  
                                     u3197 12FA                                       u2741 123C  
                                     u2661 1094                                       u2821 249C  
                                     u2590 232A                                       u2830 24E4  
                                     u2591 2326                                       u2751 1266  
                                     u2671 10BE                                       u2831 24E0  
                                     u2761 12A6                                       u2681 10FE  
                                     u2771 12D0                                       u2691 1128  
                                     u2781 1310                                       u2791 133A  
                                     abs@a 0007                                       _dbuf 0300  
                                     _main 1632                                       _prec 007D  
                                     fsr0h 0FEA                                       fsr1h 0FE2  
                                     indf0 0FEF                                       fsr2h 0FDA  
                                     fsr0l 0FE9                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                  ?_lcd_8bit_send_char_pos 0012                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                                    ??_abs 0009                       _gpio_pin_write_logic 1B3C  
                            __car_char_arr 00EE                                      ?_main 0001  
                          __end_of___awdiv 1ED6                                      STR_10 1001  
                                    STR_11 1033                                      STR_12 1036  
                          __end_of___awmod 21C2                            ___awdiv@divisor 0003  
                          __end_of___lwdiv 2490                            __end_of___lwmod 255E  
                          ___awdiv@counter 0005                               vfpfcnvrt@fmt 000C  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                                      _PORTD 0F83  
                                    _PORTE 0F84                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                             main@msg_boom 0032                                      _flags 007F  
                                    _fputc 2270                                      _width 007B  
                                    _putch 2754                                      main@X 0058  
                                    tablat 0FF5                            led_on_off@F3109 006D  
           __end_of_lcd_8bit_send_char_pos 26D8                                      plusw1 0FE3  
                                    plusw2 0FDB                                      status 0FD8  
                          __end_of_sprintf 2672             ?_gpio_pin_direction_initialize 0006  
                          __initialization 21C2                               __end_of_main 17D2  
                    ?_gpio_pin_write_logic 0006                          _lcd_8bit_send_cmd 2054  
                                   ??_main 0030                              __activetblptr 0002  
                       ?_lcd_8bit_send_cmd 000B                                     ?_fputc 0001  
                      ??_lcd_8bit_send_cmd 000D                           ___awdiv@dividend 0001  
                                   ?_putch 0001                           ?_hello_world_lcd 0001  
                            vfpfcnvrt@done 0010                         lcd_8bit_init@p_lcd 000D  
                            ?_init_msg_lcd 0001                           __end_of_app_init 274C  
                             vfprintf@cfmt 001A                       _lcd_8bit_send_enable 2708  
                                ??___awdiv 0005                                  ??___awmod 0005  
                __end_of_lcd_8bit_send_cmd 2112                              main@msg_space 0043  
                                ??___lwdiv 0005                                  ??___lwmod 0005  
                                   _memset 26D8                                     clear_0 2248  
                                   clear_1 2260                           ___awdiv@quotient 0007  
                          ___awmod@divisor 0003                                     isa$std 0001  
                          ___awmod@counter 0005                   ?_lcd_8bit_send_strng_pos 0012  
                            led_init@F3104 0072                                     fputc@c 0001  
                    __end_of_lcd_8bit_init 1A46                               __pdataCOMRAM 0059  
              lcd_8bit_set_cursor@d_column 000F                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8              convert_uint8_to_strng@d_input 002F  
            convert_uint8_to_strng@d_strng 002E                      __end_of_set_bit_uint8 1D20  
                                   putch@c 0001                           __end_of_vfprintf 263E  
                                ??_sprintf 0021                                 __accesstop 0080  
                  __end_of__initialization 2266                             ??_init_msg_lcd 0017  
                            ___rparam_used 0001                           init_msg_lcd@msg1 0100  
                         init_msg_lcd@msg2 0112                           init_msg_lcd@msg3 017E  
                         init_msg_lcd@msg4 0124                           init_msg_lcd@msg5 018F  
                         init_msg_lcd@msg6 0136                           init_msg_lcd@msg7 01A0  
                         init_msg_lcd@msg8 0148                           init_msg_lcd@msg9 01B1  
                    ?_lcd_8bit_send_enable 000A                     ??_gpio_pin_write_logic 0008  
                           __pcstackCOMRAM 0001                               __pidataBANK0 23A6  
                             __pidataBANK1 274C                               __pidataBANK2 1A46  
                            __end_of_fputc 231A                              __end_of_putch 2756  
                         _PORT_REG_ADD_arr 00B2           gpio_pin_write_logic@p_pin_config 0006  
                         lcd_8bit_init@idx 000F                         _lcd_8bit_send_char 1F96  
                                  ??_fputc 0004                                    ??_putch 0001  
                               __pbssBANK0 00F6                                 __pbssBANK3 0300  
                      ?_lcd_8bit_send_char 000B                                 _lcd_2_8bit 00BC  
                     _program_step_counter 0077                            led_toggle@F3113 00F6  
                                  ?_memset 0001                       ??_lcd_8bit_send_char 000D  
                                ?_app_init 0001                            _LAT_REG_ADD_arr 0059  
                        ??_clear_bit_uint8 0004            lcd_8bit_send_strng_pos@d_column 0014  
                 ??_convert_uint8_to_strng 002F                     ??_lcd_8bit_send_enable 000B  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___awdiv 1E12                                    ___awmod 2112  
                                  ___lwdiv 241C                                    ___lwmod 24FA  
                                ?_vfprintf 0017                               __psmallconst 1000  
                                  __pcinit 21C2                                    __ramtop 1000  
                                  __ptext0 1632                                    __ptext1 2490  
                                  __ptext2 26A6                                    __ptext3 103A  
                                  __ptext4 17D2                                    __ptext5 231A  
                                  __ptext6 255E                                    __ptext7 1F96  
                                  __ptext8 25BE                                    __ptext9 263E  
                    _keypad_key_values_arr 00A2                       __end_of_init_msg_lcd 135C  
          ??_gpio_pin_direction_initialize 0007                 clear_bit_uint8@d_IDX_BIT_X 0003  
                         ___awmod@dividend 0001                                 ??_app_init 0010  
                                  _sprintf 263E                       end_of_initialization 2266  
                                  fputc@fp 0003                         hello_world_lcd@idx 0019  
                                  memset@c 0002                                    memset@n 0004  
                                  memset@p 0006                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 0001                          __end_of_vfpfcnvrt 1632  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                           vfpfcnvrt@convarg 0012  
                               ??_vfprintf 001A               lcd_8bit_send_strng_pos@d_row 0013  
                 lcd_8bit_send_char@d_data 000C               lcd_8bit_send_char_pos@d_data 0015  
             lcd_8bit_send_strng_pos@p_lcd 0012                          init_msg_lcd@F3301 02C2  
                        init_msg_lcd@F3303 0200                          init_msg_lcd@F3305 02B1  
                        init_msg_lcd@F3307 02A0                          init_msg_lcd@F3281 026C  
                        init_msg_lcd@F3283 025A                          init_msg_lcd@F3291 0236  
                        init_msg_lcd@F3293 02E4                          init_msg_lcd@F3285 0091  
                        init_msg_lcd@F3287 0248                          init_msg_lcd@F3295 0224  
                        init_msg_lcd@F3297 02D3                          init_msg_lcd@F3289 0080  
                        init_msg_lcd@F3299 0212                          init_msg_lcd@msg10 015A  
                        init_msg_lcd@msg11 01C2                          init_msg_lcd@msg12 016C  
                        init_msg_lcd@msg13 01D3                          init_msg_lcd@msg14 01E4  
                              vfpfcnvrt@ap 000D                                vfpfcnvrt@cp 0011  
                              vfpfcnvrt@fp 000B                              __pidataCOMRAM 272E  
                           __end_of_memset 2708                        start_initialization 21C2  
                 ??_lcd_8bit_send_char_pos 0016                                __end_of_abs 26A6  
    __end_of_gpio_pin_direction_initialize 1F96              _gpio_pin_direction_initialize 1ED6  
    lcd_8bit_send_custom_char_pos@d_column 0018                   lcd_8bit_set_cursor@d_row 000E  
                 lcd_8bit_set_cursor@p_lcd 000D                                vfprintf@fmt 0018  
         lcd_8bit_send_custom_char_pos@idx 001C                                __pdataBANK0 0080  
                              __pdataBANK1 01F5                                __pdataBANK2 0200  
                                 ??_memset 0006                        _lcd_8bit_set_cursor 255E  
                               memset@dest 0001                            _clear_bit_uint8 1D20  
                   _convert_uint8_to_strng 25BE                                __pbssCOMRAM 006D  
                            __pcstackBANK1 0100            ??_lcd_8bit_send_custom_char_pos 001C  
                     ?_lcd_8bit_set_cursor 000D                               _init_msg_lcd 103A  
                         ___lwdiv@dividend 0001                                   ?___awdiv 0001  
                                 ?___awmod 0001                                   ?___lwdiv 0001  
                                 ?___lwmod 0001                          ??_hello_world_lcd 0017  
                              __smallconst 1000                              _lcd_8bit_init 1918  
                         ___lwdiv@quotient 0005                                   ?_sprintf 001B  
                            _set_bit_uint8 1C2E             lcd_8bit_send_char_pos@d_column 0014  
                  _lcd_8bit_send_strng_pos 231A             lcd_8bit_send_strng_pos@p_strng 0015  
                    ??_lcd_8bit_set_cursor 0010                  lcd_8bit_send_enable@p_lcd 000A  
                                main@F3280 028F                                  main@F3282 027E  
                  __end_of_clear_bit_uint8 1E12                lcd_8bit_send_char_pos@d_row 0013  
                  lcd_8bit_send_char@p_lcd 000B                lcd_8bit_send_char_pos@p_lcd 0012  
                                _vfpfcnvrt 135C                             ?_lcd_8bit_init 000D  
                                main@msg_X 0054                             ?_set_bit_uint8 0001  
                               vfpfcnvrt@c 0016                                  copy_data0 21D6  
                                copy_data1 21F6                                  copy_data2 2216  
                                copy_data3 2236                        __musicNote_char_arr 01F5  
    __end_of_lcd_8bit_send_custom_char_pos 24FA              _lcd_8bit_send_custom_char_pos 2490  
                                 __Hrparam 0000                     _lcd_8bit_send_char_pos 26A6  
                               vfprintf@ap 0019                                   __Lrparam 0000  
                               vfprintf@fp 0017                                 ?_vfpfcnvrt 000B  
                               sprintf@fmt 001C                   set_bit_uint8@d_IDX_BIT_X 0003  
                ??_lcd_8bit_send_strng_pos 0017                            ___lwdiv@divisor 0003  
                          ___lwdiv@counter 0007                                   __ptext10 2600  
                                 __ptext11 135C                                   __ptext20 2742  
                                 __ptext12 2270                                   __ptext21 1918  
                                 __ptext13 2754                                   __ptext22 2054  
                                 __ptext14 2672                                   __ptext23 2708  
                                 __ptext15 24FA                                   __ptext24 1B3C  
                                 __ptext16 241C                                   __ptext25 1ED6  
                                 __ptext17 2112                                   __ptext26 1C2E  
                                 __ptext18 1E12                                   __ptext27 1D20  
                                 __ptext19 26D8                                   _app_init 2742  
                   lcd_8bit_send_cmd@d_cmd 000C                                   isa$xinst 0000  
                   lcd_8bit_send_cmd@p_lcd 000B                           ?_clear_bit_uint8 0001  
                                 _vfprintf 2600                         set_bit_uint8@p_reg 0001  
                  ?_convert_uint8_to_strng 002E                            ??_lcd_8bit_init 000E  
                          ??_set_bit_uint8 0004                        hello_world_lcd@idx2 001A  
             __end_of_gpio_pin_write_logic 1C2E                                  sprintf@ap 0021  
                         ___lwmod@dividend 0001                            _hello_world_lcd 17D2  
gpio_pin_direction_initialize@p_pin_config 0006            __end_of_lcd_8bit_send_strng_pos 23A6  
           __end_of_convert_uint8_to_strng 2600             ?_lcd_8bit_send_custom_char_pos 0016  
                              ??_vfpfcnvrt 000E                                   sprintf@f 0022  
                                 sprintf@s 001B                            ___lwmod@divisor 0003  
                          ___lwmod@counter 0005                           _TRIS_REG_ADD_arr 0063  
       lcd_8bit_send_custom_char_pos@_char 0019         lcd_8bit_send_custom_char_pos@d_row 0017  
       lcd_8bit_send_custom_char_pos@p_lcd 0016  
