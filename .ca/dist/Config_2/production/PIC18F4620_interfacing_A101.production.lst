

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 17 23:04:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0014C2                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _LAT_REG_ADD_arr
    64   0014C2  89                 	db	137
    65   0014C3  0F                 	db	15
    66   0014C4  8A                 	db	138
    67   0014C5  0F                 	db	15
    68   0014C6  8B                 	db	139
    69   0014C7  0F                 	db	15
    70   0014C8  8C                 	db	140
    71   0014C9  0F                 	db	15
    72   0014CA  8D                 	db	141
    73   0014CB  0F                 	db	15
    74                           
    75                           ;initializer for _PORT_REG_ADD_arr
    76   0014CC  80                 	db	128
    77   0014CD  0F                 	db	15
    78   0014CE  81                 	db	129
    79   0014CF  0F                 	db	15
    80   0014D0  82                 	db	130
    81   0014D1  0F                 	db	15
    82   0014D2  83                 	db	131
    83   0014D3  0F                 	db	15
    84   0014D4  84                 	db	132
    85   0014D5  0F                 	db	15
    86                           
    87                           ;initializer for _TRIS_REG_ADD_arr
    88   0014D6  92                 	db	146
    89   0014D7  0F                 	db	15
    90   0014D8  93                 	db	147
    91   0014D9  0F                 	db	15
    92   0014DA  94                 	db	148
    93   0014DB  0F                 	db	15
    94   0014DC  95                 	db	149
    95   0014DD  0F                 	db	15
    96   0014DE  96                 	db	150
    97   0014DF  0F                 	db	15
    98                           
    99                           ;initializer for _led_1
   100   0014E0  02                 	db	2
   101   0014E1  05                 	db	5
   102   0014E2  01                 	db	1
   103   000000                     _LATA	set	3977
   104   000000                     _PORTE	set	3972
   105   000000                     _PORTD	set	3971
   106   000000                     _PORTC	set	3970
   107   000000                     _PORTB	set	3969
   108   000000                     _PORTA	set	3968
   109   000000                     _TRISA	set	3986
   110   000000                     _TRISE	set	3990
   111   000000                     _TRISD	set	3989
   112   000000                     _TRISC	set	3988
   113   000000                     _TRISB	set	3987
   114   000000                     _LATE	set	3981
   115   000000                     _LATD	set	3980
   116   000000                     _LATC	set	3979
   117   000000                     _LATB	set	3978
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   001462                     __pcinit:
   123                           	callstack 0
   124   001462                     start_initialization:
   125                           	callstack 0
   126   001462                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Initialize objects allocated to COMRAM (33 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131   001462  0EC2               	movlw	low __pidataCOMRAM
   132   001464  6EF6               	movwf	tblptrl,c
   133   001466  0E14               	movlw	high __pidataCOMRAM
   134   001468  6EF7               	movwf	tblptrh,c
   135   00146A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136   00146C  6EF8               	movwf	tblptru,c
   137   00146E  EE00  F001         	lfsr	0,__pdataCOMRAM
   138   001472  EE10 F021          	lfsr	1,33
   139   001476                     copy_data0:
   140   001476  0009               	tblrd		*+
   141   001478  CFF5 FFEE          	movff	tablat,postinc0
   142   00147C  50E5               	movf	postdec1,w,c
   143   00147E  50E1               	movf	fsr1l,w,c
   144   001480  E1FA               	bnz	copy_data0
   145                           
   146                           ; Clear objects allocated to COMRAM (15 bytes)
   147   001482  EE00  F036         	lfsr	0,__pbssCOMRAM
   148   001486  0E0F               	movlw	15
   149   001488                     clear_0:
   150   001488  6AEE               	clrf	postinc0,c
   151   00148A  06E8               	decf	wreg,f,c
   152   00148C  E1FD               	bnz	clear_0
   153   00148E                     end_of_initialization:
   154                           	callstack 0
   155   00148E                     __end_of__initialization:
   156                           	callstack 0
   157   00148E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158   001490  6EF8               	movwf	tblptru,c
   159   001492  0100               	movlb	0
   160   001494  EF4C  F00A         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMRAM
   163   000036                     __pbssCOMRAM:
   164                           	callstack 0
   165   000036                     led_toggle@F2942:
   166                           	callstack 0
   167   000036                     	ds	5
   168   00003B                     	ds	5
   169   000040                     led_init@F2933:
   170                           	callstack 0
   171   000040                     	ds	5
   172                           
   173                           	psect	dataCOMRAM
   174   000001                     __pdataCOMRAM:
   175                           	callstack 0
   176   000001                     _LAT_REG_ADD_arr:
   177                           	callstack 0
   178   000001                     	ds	10
   179   00000B                     _PORT_REG_ADD_arr:
   180                           	callstack 0
   181   00000B                     	ds	10
   182   000015                     _TRIS_REG_ADD_arr:
   183                           	callstack 0
   184   000015                     	ds	10
   185   00001F                     _led_1:
   186                           	callstack 0
   187   00001F                     	ds	3
   188                           
   189                           	psect	cstackCOMRAM
   190   000022                     __pcstackCOMRAM:
   191                           	callstack 0
   192   000022                     gpio_pin_toggle_logic@p_pin_config:
   193                           	callstack 0
   194   000022                     set_bit_uint8@p_reg:
   195                           	callstack 0
   196   000022                     clear_bit_uint8@p_reg:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x0
   200   000022                     	ds	1
   201   000023                     ??_gpio_pin_toggle_logic:
   202                           
   203                           ; 1 bytes @ 0x1
   204   000023                     	ds	1
   205   000024                     set_bit_uint8@d_IDX_BIT_X:
   206                           	callstack 0
   207   000024                     clear_bit_uint8@d_IDX_BIT_X:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x2
   211   000024                     	ds	1
   212   000025                     ??_set_bit_uint8:
   213   000025                     ??_clear_bit_uint8:
   214   000025                     gpio_pin_toggle_logic@bit_mask:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x3
   218   000025                     	ds	1
   219   000026                     led_toggle@p_led:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x4
   223   000026                     	ds	1
   224   000027                     gpio_pin_direction_initialize@p_pin_config:
   225                           	callstack 0
   226   000027                     gpio_pin_write_logic@p_pin_config:
   227                           	callstack 0
   228   000027                     led_toggle@led_pin:
   229                           	callstack 0
   230                           
   231                           ; 5 bytes @ 0x5
   232   000027                     	ds	1
   233   000028                     ??_gpio_pin_direction_initialize:
   234   000028                     gpio_pin_write_logic@d_logic_desired:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x6
   238   000028                     	ds	1
   239   000029                     ??_gpio_pin_write_logic:
   240                           
   241                           ; 1 bytes @ 0x7
   242   000029                     	ds	2
   243   00002B                     gpio_pin_initialize@p_pin_config:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x9
   247   00002B                     	ds	1
   248   00002C                     ??_gpio_pin_initialize:
   249                           
   250                           ; 1 bytes @ 0xA
   251   00002C                     	ds	2
   252   00002E                     led_init@p_led:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0xC
   256   00002E                     	ds	1
   257   00002F                     led_init@led_pin:
   258                           	callstack 0
   259                           
   260                           ; 5 bytes @ 0xD
   261   00002F                     	ds	5
   262   000034                     ??_main:
   263                           
   264                           ; 1 bytes @ 0x12
   265   000034                     	ds	2
   266                           
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 38 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  2  339[None  ] int 
   279 ;; Registers used:
   280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;Total ram usage:        2 bytes
   291 ;; Hardware stack levels required when called: 4
   292 ;; This function calls:
   293 ;;		_led_init
   294 ;;		_led_toggle
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text0
   301   001498                     __ptext0:
   302                           	callstack 0
   303   001498                     _main:
   304                           	callstack 27
   305                           
   306                           ;main.c: 39: led_init(&led_1);
   307                           
   308                           ;incstack = 0
   309   001498  0E1F               	movlw	low _led_1
   310   00149A  6E2E               	movwf	led_init@p_led^0,c
   311   00149C  ECEC  F009         	call	_led_init	;wreg free
   312   0014A0                     l340:
   313                           
   314                           ;main.c: 42:     {;main.c: 43:        led_toggle(&led_1);
   315   0014A0  0E1F               	movlw	low _led_1
   316   0014A2  6E26               	movwf	led_toggle@p_led^0,c
   317   0014A4  EC12  F00A         	call	_led_toggle	;wreg free
   318                           
   319                           ;main.c: 44:        _delay((unsigned long)((100)*((8000000UL)/4000.0)));
   320   0014A8  0E02               	movlw	2
   321   0014AA  6E35               	movwf	(??_main+1)^0,c
   322   0014AC  0E04               	movlw	4
   323   0014AE  6E34               	movwf	??_main^0,c
   324   0014B0  0EBA               	movlw	186
   325   0014B2                     u337:
   326   0014B2  2EE8               	decfsz	wreg,f,c
   327   0014B4  D7FE               	bra	u337
   328   0014B6  2E34               	decfsz	??_main^0,f,c
   329   0014B8  D7FC               	bra	u337
   330   0014BA  2E35               	decfsz	(??_main+1)^0,f,c
   331   0014BC  D7FA               	bra	u337
   332   0014BE  D000               	nop2	
   333                           
   334                           ;main.c: 45:     }
   335   0014C0  D7EF               	goto	l340
   336   0014C2                     __end_of_main:
   337                           	callstack 0
   338                           
   339 ;; *************** function _led_toggle *****************
   340 ;; Defined at:
   341 ;;		line 70 in file "_HAL/Drivers/LED/LED.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;  p_led           1    4[COMRAM] PTR struct .
   344 ;;		 -> led_1(3), 
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  led_pin         5    5[COMRAM] struct .
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      enum E2804
   349 ;; Registers used:
   350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;Total ram usage:        6 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; Hardware stack levels required when called: 1
   363 ;; This function calls:
   364 ;;		_gpio_pin_toggle_logic
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371   001424                     __ptext1:
   372                           	callstack 0
   373   001424                     _led_toggle:
   374                           	callstack 29
   375                           
   376                           ;_HAL/Drivers/LED/LED.c: 70: std_return led_toggle(led_t * p_led);_HAL/Drivers/LED/LED.c
      +                          : 71: {;_HAL/Drivers/LED/LED.c: 72:     if(((void*)0) == p_led )
   377                           
   378                           ;incstack = 0
   379   001424  5026               	movf	led_toggle@p_led^0,w,c
   380   001426  B4D8               	btfsc	status,2,c
   381   001428  0012               	return	
   382                           
   383                           ;_HAL/Drivers/LED/LED.c: 77:     {;_HAL/Drivers/LED/LED.c: 78:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
   384   00142A  EE20  F036         	lfsr	2,led_toggle@F2942
   385   00142E  EE10  F027         	lfsr	1,led_toggle@led_pin
   386   001432  0E04               	movlw	4
   387   001434                     u321:
   388   001434  CFDB FFE3          	movff	plusw2,plusw1
   389   001438  06E8               	decf	wreg,f,c
   390   00143A  E2FC               	bc	u321
   391   00143C  5026               	movf	led_toggle@p_led^0,w,c
   392   00143E  6ED9               	movwf	fsr2l,c
   393   001440  6ADA               	clrf	fsr2h,c
   394   001442  50DF               	movf	indf2,w,c
   395   001444  6E27               	movwf	led_toggle@led_pin^0,c
   396   001446  5026               	movf	led_toggle@p_led^0,w,c
   397   001448  6ED9               	movwf	fsr2l,c
   398   00144A  6ADA               	clrf	fsr2h,c
   399   00144C  0E01               	movlw	1
   400   00144E  26D9               	addwf	fsr2l,f,c
   401   001450  50DF               	movf	indf2,w,c
   402   001452  6E28               	movwf	(led_toggle@led_pin+1)^0,c
   403   001454  0E00               	movlw	0
   404   001456  6E29               	movwf	(led_toggle@led_pin+2)^0,c
   405                           
   406                           ;_HAL/Drivers/LED/LED.c: 82:        gpio_pin_toggle_logic(&led_pin);
   407   001458  0E27               	movlw	low led_toggle@led_pin
   408   00145A  6E22               	movwf	gpio_pin_toggle_logic@p_pin_config^0,c
   409   00145C  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
   410   001460  0012               	return		;funcret
   411   001462                     __end_of_led_toggle:
   412                           	callstack 0
   413                           
   414 ;; *************** function _gpio_pin_toggle_logic *****************
   415 ;; Defined at:
   416 ;;		line 379 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  p_pin_config    1    0[COMRAM] PTR struct .
   419 ;;		 -> led_toggle@led_pin(5), 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  bit_mask        1    3[COMRAM] enum E2825
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      enum E2804
   424 ;; Registers used:
   425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   431 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;Total ram usage:        4 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_led_toggle
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445   001002                     __ptext2:
   446                           	callstack 0
   447   001002                     _gpio_pin_toggle_logic:
   448                           	callstack 29
   449                           
   450                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 383:     if(((void*)0) == p_pin_config)
   451                           
   452                           ;incstack = 0
   453   001002  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   454   001004  B4D8               	btfsc	status,2,c
   455   001006  0012               	return	
   456   001008  D011               	goto	l1434
   457   00100A                     l1414:
   458                           
   459                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 393:                 bit_mask = MASK_BIT_0;
   460   00100A  0E01               	movlw	1
   461   00100C  D00D               	goto	L7
   462   00100E                     l1416:
   463                           
   464                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 396:                 bit_mask = MASK_BIT_1;
   465   00100E  0E02               	movlw	2
   466   001010  D00B               	goto	L7
   467   001012                     l1418:
   468                           
   469                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 399:                 bit_mask = MASK_BIT_2;
   470   001012  0E04               	movlw	4
   471   001014  D009               	goto	L7
   472   001016                     l1420:
   473                           
   474                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 402:                 bit_mask = MASK_BIT_3;
   475   001016  0E08               	movlw	8
   476   001018  D007               	goto	L7
   477   00101A                     l1422:
   478                           
   479                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 405:                 bit_mask = MASK_BIT_4;
   480   00101A  0E10               	movlw	16
   481   00101C  D005               	goto	L7
   482   00101E                     l1424:
   483                           
   484                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 408:                 bit_mask = MASK_BIT_5;
   485   00101E  0E20               	movlw	32
   486   001020  D003               	goto	L7
   487   001022                     l1426:
   488                           
   489                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 411:                 bit_mask = MASK_BIT_6;
   490   001022  0E40               	movlw	64
   491   001024  D001               	goto	L7
   492   001026                     l1428:
   493                           
   494                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 414:                 bit_mask = MASK_BIT_7;
   495   001026  0E80               	movlw	128
   496   001028                     L7:
   497   001028  6E25               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   498                           
   499                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 break;
   500   00102A  D026               	goto	l1436
   501   00102C                     l1434:
   502   00102C  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   503   00102E  6ED9               	movwf	fsr2l,c
   504   001030  6ADA               	clrf	fsr2h,c
   505   001032  0E01               	movlw	1
   506   001034  26D9               	addwf	fsr2l,f,c
   507   001036  50DF               	movf	indf2,w,c
   508   001038  6E23               	movwf	??_gpio_pin_toggle_logic^0,c
   509   00103A  6A24               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
   510                           
   511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   512                           ; Switch size 1, requested type "simple"
   513                           ; Number of cases is 1, Range of values is 0 to 0
   514                           ; switch strategies available:
   515                           ; Name         Instructions Cycles
   516                           ; simple_byte            4     3 (average)
   517                           ;	Chosen strategy is simple_byte
   518   00103C  5024               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
   519   00103E  0A00               	xorlw	0	; case 0
   520   001040  A4D8               	btfss	status,2,c
   521   001042  0012               	return	
   522                           
   523                           ; Switch size 1, requested type "simple"
   524                           ; Number of cases is 8, Range of values is 0 to 7
   525                           ; switch strategies available:
   526                           ; Name         Instructions Cycles
   527                           ; simple_byte           25    13 (average)
   528                           ;	Chosen strategy is simple_byte
   529   001044  5023               	movf	??_gpio_pin_toggle_logic^0,w,c
   530   001046  0A00               	xorlw	0	; case 0
   531   001048  B4D8               	btfsc	status,2,c
   532   00104A  D7DF               	goto	l1414
   533   00104C  0A01               	xorlw	1	; case 1
   534   00104E  B4D8               	btfsc	status,2,c
   535   001050  D7DE               	goto	l1416
   536   001052  0A03               	xorlw	3	; case 2
   537   001054  B4D8               	btfsc	status,2,c
   538   001056  D7DD               	goto	l1418
   539   001058  0A01               	xorlw	1	; case 3
   540   00105A  B4D8               	btfsc	status,2,c
   541   00105C  D7DC               	goto	l1420
   542   00105E  0A07               	xorlw	7	; case 4
   543   001060  B4D8               	btfsc	status,2,c
   544   001062  D7DB               	goto	l1422
   545   001064  0A01               	xorlw	1	; case 5
   546   001066  B4D8               	btfsc	status,2,c
   547   001068  D7DA               	goto	l1424
   548   00106A  0A03               	xorlw	3	; case 6
   549   00106C  B4D8               	btfsc	status,2,c
   550   00106E  D7D9               	goto	l1426
   551   001070  0A01               	xorlw	1	; case 7
   552   001072  A4D8               	btfss	status,2,c
   553   001074  0012               	return	
   554   001076  D7D7               	goto	l1428
   555   001078                     l1436:
   556                           
   557                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 421:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
   558   001078  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   559   00107A  6ED9               	movwf	fsr2l,c
   560   00107C  6ADA               	clrf	fsr2h,c
   561   00107E  50DF               	movf	indf2,w,c
   562   001080  0D02               	mullw	2
   563   001082  50F3               	movf	243,w,c
   564   001084  0F01               	addlw	low _LAT_REG_ADD_arr
   565   001086  6ED9               	movwf	fsr2l,c
   566   001088  6ADA               	clrf	fsr2h,c
   567   00108A  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   568   00108E  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   569   001092  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   570   001096  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   571   00109A  5025               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
   572   00109C  1ADF               	xorwf	indf2,f,c
   573                           
   574                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
   575   00109E  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   576   0010A0  6ED9               	movwf	fsr2l,c
   577   0010A2  6ADA               	clrf	fsr2h,c
   578   0010A4  50DF               	movf	indf2,w,c
   579   0010A6  0D02               	mullw	2
   580   0010A8  50F3               	movf	243,w,c
   581   0010AA  0F01               	addlw	low _LAT_REG_ADD_arr
   582   0010AC  6ED9               	movwf	fsr2l,c
   583   0010AE  6ADA               	clrf	fsr2h,c
   584   0010B0  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   585   0010B4  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   586   0010B8  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   587   0010BC  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   588   0010C0  50DF               	movf	indf2,w,c
   589   0010C2  1425               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   590   0010C4  1825               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
   591   0010C6  A4D8               	btfss	status,2,c
   592   0010C8  D008               	goto	l1440
   593                           
   594                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:             p_pin_config->logic = LOGIC_ON;
   595   0010CA  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   596   0010CC  6ED9               	movwf	fsr2l,c
   597   0010CE  6ADA               	clrf	fsr2h,c
   598   0010D0  0E03               	movlw	3
   599   0010D2  26D9               	addwf	fsr2l,f,c
   600   0010D4  0E01               	movlw	1
   601   0010D6  6EDF               	movwf	indf2,c
   602   0010D8  0012               	return	
   603   0010DA                     l1440:
   604   0010DA  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   605   0010DC  6ED9               	movwf	fsr2l,c
   606   0010DE  6ADA               	clrf	fsr2h,c
   607   0010E0  50DF               	movf	indf2,w,c
   608   0010E2  0D02               	mullw	2
   609   0010E4  50F3               	movf	243,w,c
   610   0010E6  0F01               	addlw	low _LAT_REG_ADD_arr
   611   0010E8  6ED9               	movwf	fsr2l,c
   612   0010EA  6ADA               	clrf	fsr2h,c
   613   0010EC  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   614   0010F0  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   615   0010F4  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   616   0010F8  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   617   0010FC  50DF               	movf	indf2,w,c
   618   0010FE  1425               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   619   001100  0900               	iorlw	0
   620   001102  A4D8               	btfss	status,2,c
   621   001104  0012               	return	
   622                           
   623                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 425:             p_pin_config->logic = LOGIC_ON;
   624   001106  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   625   001108  6ED9               	movwf	fsr2l,c
   626   00110A  6ADA               	clrf	fsr2h,c
   627   00110C  0E03               	movlw	3
   628   00110E  26D9               	addwf	fsr2l,f,c
   629   001110  0E01               	movlw	1
   630   001112  6EDF               	movwf	indf2,c
   631   001114  0012               	return		;funcret
   632   001116                     __end_of_gpio_pin_toggle_logic:
   633                           	callstack 0
   634                           
   635 ;; *************** function _led_init *****************
   636 ;; Defined at:
   637 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  p_led           1   12[COMRAM] PTR struct .
   640 ;;		 -> led_1(3), 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  led_pin         5   13[COMRAM] struct .
   643 ;;  func_return     1    0        enum E2804
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      enum E2804
   646 ;; Registers used:
   647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        6 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 3
   660 ;; This function calls:
   661 ;;		_gpio_pin_initialize
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668   0013D8                     __ptext3:
   669                           	callstack 0
   670   0013D8                     _led_init:
   671                           	callstack 27
   672                           
   673                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
   674                           
   675                           ;incstack = 0
   676   0013D8  502E               	movf	led_init@p_led^0,w,c
   677   0013DA  B4D8               	btfsc	status,2,c
   678   0013DC  0012               	return	
   679                           
   680                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
   681   0013DE  EE20  F040         	lfsr	2,led_init@F2933
   682   0013E2  EE10  F02F         	lfsr	1,led_init@led_pin
   683   0013E6  0E04               	movlw	4
   684   0013E8                     u301:
   685   0013E8  CFDB FFE3          	movff	plusw2,plusw1
   686   0013EC  06E8               	decf	wreg,f,c
   687   0013EE  E2FC               	bc	u301
   688   0013F0  502E               	movf	led_init@p_led^0,w,c
   689   0013F2  6ED9               	movwf	fsr2l,c
   690   0013F4  6ADA               	clrf	fsr2h,c
   691   0013F6  50DF               	movf	indf2,w,c
   692   0013F8  6E2F               	movwf	led_init@led_pin^0,c
   693   0013FA  502E               	movf	led_init@p_led^0,w,c
   694   0013FC  6ED9               	movwf	fsr2l,c
   695   0013FE  6ADA               	clrf	fsr2h,c
   696   001400  0E01               	movlw	1
   697   001402  26D9               	addwf	fsr2l,f,c
   698   001404  50DF               	movf	indf2,w,c
   699   001406  6E30               	movwf	(led_init@led_pin+1)^0,c
   700   001408  0E00               	movlw	0
   701   00140A  6E31               	movwf	(led_init@led_pin+2)^0,c
   702   00140C  502E               	movf	led_init@p_led^0,w,c
   703   00140E  6ED9               	movwf	fsr2l,c
   704   001410  6ADA               	clrf	fsr2h,c
   705   001412  0E02               	movlw	2
   706   001414  26D9               	addwf	fsr2l,f,c
   707   001416  50DF               	movf	indf2,w,c
   708   001418  6E32               	movwf	(led_init@led_pin+3)^0,c
   709   00141A  0E2F               	movlw	low led_init@led_pin
   710   00141C  6E2B               	movwf	gpio_pin_initialize@p_pin_config^0,c
   711   00141E  EC90  F009         	call	_gpio_pin_initialize	;wreg free
   712   001422  0012               	return		;funcret
   713   001424                     __end_of_led_init:
   714                           	callstack 0
   715                           
   716 ;; *************** function _gpio_pin_initialize *****************
   717 ;; Defined at:
   718 ;;		line 293 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  p_pin_config    1    9[COMRAM] PTR struct .
   721 ;;		 -> led_init@led_pin(5), 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      enum E2804
   726 ;; Registers used:
   727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 2
   740 ;; This function calls:
   741 ;;		_gpio_pin_direction_initialize
   742 ;;		_gpio_pin_write_logic
   743 ;; This function is called by:
   744 ;;		_led_init
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text4
   749   001320                     __ptext4:
   750                           	callstack 0
   751   001320                     _gpio_pin_initialize:
   752                           	callstack 27
   753                           
   754                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 293: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 294: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 297:     if(((void*)0)
      +                           == p_pin_config)
   755                           
   756                           ;incstack = 0
   757   001320  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   758   001322  A4D8               	btfss	status,2,c
   759   001324  D017               	goto	l1398
   760   001326                     u250:
   761                           
   762                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:         return EX
      +                          CUTION_NOT_OK;
   763   001326  0E01               	movlw	1
   764   001328  0012               	return	
   765   00132A                     l1386:
   766                           
   767                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 306:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
   768   00132A  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
   769   00132E  EC44  F009         	call	_gpio_pin_direction_initialize	;wreg free
   770                           
   771                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 break;
   772   001332  D024               	goto	l1400
   773   001334                     l1388:
   774                           
   775                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 309:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
   776   001334  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
   777   001338  EC44  F009         	call	_gpio_pin_direction_initialize	;wreg free
   778                           
   779                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
   780   00133C  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
   781   001340  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   782   001342  6ED9               	movwf	fsr2l,c
   783   001344  6ADA               	clrf	fsr2h,c
   784   001346  0E03               	movlw	3
   785   001348  26D9               	addwf	fsr2l,f,c
   786   00134A  50DF               	movf	indf2,w,c
   787   00134C  6E28               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   788   00134E  ECE9  F008         	call	_gpio_pin_write_logic	;wreg free
   789                           
   790                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 break;
   791   001352  D014               	goto	l1400
   792   001354                     l1398:
   793   001354  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   794   001356  6ED9               	movwf	fsr2l,c
   795   001358  6ADA               	clrf	fsr2h,c
   796   00135A  0E02               	movlw	2
   797   00135C  26D9               	addwf	fsr2l,f,c
   798   00135E  50DF               	movf	indf2,w,c
   799   001360  6E2C               	movwf	??_gpio_pin_initialize^0,c
   800   001362  6A2D               	clrf	(??_gpio_pin_initialize+1)^0,c
   801                           
   802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   803                           ; Switch size 1, requested type "simple"
   804                           ; Number of cases is 1, Range of values is 0 to 0
   805                           ; switch strategies available:
   806                           ; Name         Instructions Cycles
   807                           ; simple_byte            4     3 (average)
   808                           ;	Chosen strategy is simple_byte
   809   001364  502D               	movf	(??_gpio_pin_initialize+1)^0,w,c
   810   001366  0A00               	xorlw	0	; case 0
   811   001368  A4D8               	btfss	status,2,c
   812   00136A  D7DD               	goto	u250
   813                           
   814                           ; Switch size 1, requested type "simple"
   815                           ; Number of cases is 2, Range of values is 0 to 1
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte            7     4 (average)
   819                           ;	Chosen strategy is simple_byte
   820   00136C  502C               	movf	??_gpio_pin_initialize^0,w,c
   821   00136E  0A00               	xorlw	0	; case 0
   822   001370  B4D8               	btfsc	status,2,c
   823   001372  D7E0               	goto	l1388
   824   001374  0A01               	xorlw	1	; case 1
   825   001376  B4D8               	btfsc	status,2,c
   826   001378  D7D8               	goto	l1386
   827   00137A  D7D5               	goto	u250
   828   00137C                     l1400:
   829                           
   830                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 317:     return EXCUTION_OK;
   831   00137C  0E00               	movlw	0
   832   00137E  0012               	return		;funcret
   833   001380                     __end_of_gpio_pin_initialize:
   834                           	callstack 0
   835                           
   836 ;; *************** function _gpio_pin_write_logic *****************
   837 ;; Defined at:
   838 ;;		line 204 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  p_pin_config    1    5[COMRAM] PTR struct .
   841 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), 
   842 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      enum E2804
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:        4 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 1
   861 ;; This function calls:
   862 ;;		_clear_bit_uint8
   863 ;;		_set_bit_uint8
   864 ;; This function is called by:
   865 ;;		_gpio_pin_initialize
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text5
   870   0011D2                     __ptext5:
   871                           	callstack 0
   872   0011D2                     _gpio_pin_write_logic:
   873                           	callstack 27
   874                           
   875                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 204: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 205:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 206: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 207:     if(
      +                          (((void*)0) == p_pin_config) ||
   876                           
   877                           ;incstack = 0
   878   0011D2  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   879   0011D4  B4D8               	btfsc	status,2,c
   880   0011D6  0012               	return	
   881   0011D8  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   882   0011DA  6ED9               	movwf	fsr2l,c
   883   0011DC  6ADA               	clrf	fsr2h,c
   884   0011DE  0E05               	movlw	5
   885   0011E0  60DF               	cpfslt	indf2,c
   886   0011E2  0012               	return	
   887   0011E4  0428               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
   888   0011E6  B4D8               	btfsc	status,2,c
   889   0011E8  D040               	goto	l1352
   890   0011EA  5028               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
   891   0011EC  A4D8               	btfss	status,2,c
   892   0011EE  0012               	return	
   893   0011F0  D03C               	goto	l1352
   894   0011F2                     l1340:
   895                           
   896                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 218:                p_pin_config->logic = d_logic_desired;
   897   0011F2  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   898   0011F4  6ED9               	movwf	fsr2l,c
   899   0011F6  6ADA               	clrf	fsr2h,c
   900   0011F8  0E03               	movlw	3
   901   0011FA  26D9               	addwf	fsr2l,f,c
   902   0011FC  C028  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
   903                           
   904                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
   905   001200  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   906   001202  6ED9               	movwf	fsr2l,c
   907   001204  6ADA               	clrf	fsr2h,c
   908   001206  50DF               	movf	indf2,w,c
   909   001208  0D02               	mullw	2
   910   00120A  50F3               	movf	243,w,c
   911   00120C  0F01               	addlw	low _LAT_REG_ADD_arr
   912   00120E  6ED9               	movwf	fsr2l,c
   913   001210  6ADA               	clrf	fsr2h,c
   914   001212  CFDE F022          	movff	postinc2,set_bit_uint8@p_reg
   915   001216  CFDD F023          	movff	postdec2,set_bit_uint8@p_reg+1
   916   00121A  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   917   00121C  6ED9               	movwf	fsr2l,c
   918   00121E  6ADA               	clrf	fsr2h,c
   919   001220  0E01               	movlw	1
   920   001222  26D9               	addwf	fsr2l,f,c
   921   001224  50DF               	movf	indf2,w,c
   922   001226  6E24               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
   923   001228  EC8B  F008         	call	_set_bit_uint8	;wreg free
   924                           
   925                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                break;
   926   00122C  0012               	return	
   927   00122E                     l1344:
   928                           
   929                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 223:                p_pin_config->logic = d_logic_desired;
   930   00122E  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   931   001230  6ED9               	movwf	fsr2l,c
   932   001232  6ADA               	clrf	fsr2h,c
   933   001234  0E03               	movlw	3
   934   001236  26D9               	addwf	fsr2l,f,c
   935   001238  C028  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
   936                           
   937                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
   938   00123C  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   939   00123E  6ED9               	movwf	fsr2l,c
   940   001240  6ADA               	clrf	fsr2h,c
   941   001242  50DF               	movf	indf2,w,c
   942   001244  0D02               	mullw	2
   943   001246  50F3               	movf	243,w,c
   944   001248  0F01               	addlw	low _LAT_REG_ADD_arr
   945   00124A  6ED9               	movwf	fsr2l,c
   946   00124C  6ADA               	clrf	fsr2h,c
   947   00124E  CFDE F022          	movff	postinc2,clear_bit_uint8@p_reg
   948   001252  CFDD F023          	movff	postdec2,clear_bit_uint8@p_reg+1
   949   001256  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   950   001258  6ED9               	movwf	fsr2l,c
   951   00125A  6ADA               	clrf	fsr2h,c
   952   00125C  0E01               	movlw	1
   953   00125E  26D9               	addwf	fsr2l,f,c
   954   001260  50DF               	movf	indf2,w,c
   955   001262  6E24               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
   956   001264  ECC0  F009         	call	_clear_bit_uint8	;wreg free
   957                           
   958                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                break;
   959   001268  0012               	return	
   960   00126A                     l1352:
   961   00126A  5028               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
   962   00126C  6E29               	movwf	??_gpio_pin_write_logic^0,c
   963   00126E  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
   964                           
   965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   966                           ; Switch size 1, requested type "simple"
   967                           ; Number of cases is 1, Range of values is 0 to 0
   968                           ; switch strategies available:
   969                           ; Name         Instructions Cycles
   970                           ; simple_byte            4     3 (average)
   971                           ;	Chosen strategy is simple_byte
   972   001270  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   973   001272  0A00               	xorlw	0	; case 0
   974   001274  A4D8               	btfss	status,2,c
   975   001276  0012               	return	
   976                           
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 2, Range of values is 0 to 1
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            7     4 (average)
   982                           ;	Chosen strategy is simple_byte
   983   001278  5029               	movf	??_gpio_pin_write_logic^0,w,c
   984   00127A  0A00               	xorlw	0	; case 0
   985   00127C  B4D8               	btfsc	status,2,c
   986   00127E  D7D7               	goto	l1344
   987   001280  0A01               	xorlw	1	; case 1
   988   001282  A4D8               	btfss	status,2,c
   989   001284  0012               	return	
   990   001286  D7B5               	goto	l1340
   991   001288                     __end_of_gpio_pin_write_logic:
   992                           	callstack 0
   993                           
   994 ;; *************** function _gpio_pin_direction_initialize *****************
   995 ;; Defined at:
   996 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
   999 ;;		 -> led_init@led_pin(5), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      enum E2804
  1004 ;; Registers used:
  1005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        3 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		_clear_bit_uint8
  1020 ;;		_set_bit_uint8
  1021 ;; This function is called by:
  1022 ;;		_gpio_pin_initialize
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text6
  1027   001288                     __ptext6:
  1028                           	callstack 0
  1029   001288                     _gpio_pin_direction_initialize:
  1030                           	callstack 27
  1031                           
  1032                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1)){
  1033                           
  1034                           ;incstack = 0
  1035   001288  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1036   00128A  B4D8               	btfsc	status,2,c
  1037   00128C  0012               	return	
  1038   00128E  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1039   001290  6ED9               	movwf	fsr2l,c
  1040   001292  6ADA               	clrf	fsr2h,c
  1041   001294  0E04               	movlw	4
  1042   001296  64DF               	cpfsgt	indf2,c
  1043   001298  D02F               	goto	l1372
  1044   00129A  0012               	return	
  1045   00129C                     l1364:
  1046                           
  1047                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 183:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1048   00129C  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1049   00129E  6ED9               	movwf	fsr2l,c
  1050   0012A0  6ADA               	clrf	fsr2h,c
  1051   0012A2  50DF               	movf	indf2,w,c
  1052   0012A4  0D02               	mullw	2
  1053   0012A6  50F3               	movf	243,w,c
  1054   0012A8  0F15               	addlw	low _TRIS_REG_ADD_arr
  1055   0012AA  6ED9               	movwf	fsr2l,c
  1056   0012AC  6ADA               	clrf	fsr2h,c
  1057   0012AE  CFDE F022          	movff	postinc2,clear_bit_uint8@p_reg
  1058   0012B2  CFDD F023          	movff	postdec2,clear_bit_uint8@p_reg+1
  1059   0012B6  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1060   0012B8  6ED9               	movwf	fsr2l,c
  1061   0012BA  6ADA               	clrf	fsr2h,c
  1062   0012BC  0E01               	movlw	1
  1063   0012BE  26D9               	addwf	fsr2l,f,c
  1064   0012C0  50DF               	movf	indf2,w,c
  1065   0012C2  6E24               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1066   0012C4  ECC0  F009         	call	_clear_bit_uint8	;wreg free
  1067                           
  1068                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                break;
  1069   0012C8  0012               	return	
  1070   0012CA                     l1366:
  1071                           
  1072                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 187:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1073   0012CA  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1074   0012CC  6ED9               	movwf	fsr2l,c
  1075   0012CE  6ADA               	clrf	fsr2h,c
  1076   0012D0  50DF               	movf	indf2,w,c
  1077   0012D2  0D02               	mullw	2
  1078   0012D4  50F3               	movf	243,w,c
  1079   0012D6  0F15               	addlw	low _TRIS_REG_ADD_arr
  1080   0012D8  6ED9               	movwf	fsr2l,c
  1081   0012DA  6ADA               	clrf	fsr2h,c
  1082   0012DC  CFDE F022          	movff	postinc2,set_bit_uint8@p_reg
  1083   0012E0  CFDD F023          	movff	postdec2,set_bit_uint8@p_reg+1
  1084   0012E4  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1085   0012E6  6ED9               	movwf	fsr2l,c
  1086   0012E8  6ADA               	clrf	fsr2h,c
  1087   0012EA  0E01               	movlw	1
  1088   0012EC  26D9               	addwf	fsr2l,f,c
  1089   0012EE  50DF               	movf	indf2,w,c
  1090   0012F0  6E24               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1091   0012F2  EC8B  F008         	call	_set_bit_uint8	;wreg free
  1092                           
  1093                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                break;
  1094   0012F6  0012               	return	
  1095   0012F8                     l1372:
  1096   0012F8  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1097   0012FA  6ED9               	movwf	fsr2l,c
  1098   0012FC  6ADA               	clrf	fsr2h,c
  1099   0012FE  0E02               	movlw	2
  1100   001300  26D9               	addwf	fsr2l,f,c
  1101   001302  50DF               	movf	indf2,w,c
  1102   001304  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1103   001306  6A29               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112   001308  5029               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1113   00130A  0A00               	xorlw	0	; case 0
  1114   00130C  A4D8               	btfss	status,2,c
  1115   00130E  0012               	return	
  1116                           
  1117                           ; Switch size 1, requested type "simple"
  1118                           ; Number of cases is 2, Range of values is 0 to 1
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte            7     4 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123   001310  5028               	movf	??_gpio_pin_direction_initialize^0,w,c
  1124   001312  0A00               	xorlw	0	; case 0
  1125   001314  B4D8               	btfsc	status,2,c
  1126   001316  D7C2               	goto	l1364
  1127   001318  0A01               	xorlw	1	; case 1
  1128   00131A  A4D8               	btfss	status,2,c
  1129   00131C  0012               	return	
  1130   00131E  D7D5               	goto	l1366
  1131   001320                     __end_of_gpio_pin_direction_initialize:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _set_bit_uint8 *****************
  1135 ;; Defined at:
  1136 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1139 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1140 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1141 ;;		 -> TRISB(1), TRISA(1), 
  1142 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      enum E2804
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1154 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;Total ram usage:        5 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_gpio_pin_direction_initialize
  1164 ;;		_gpio_pin_write_logic
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text7
  1169   001116                     __ptext7:
  1170                           	callstack 0
  1171   001116                     _set_bit_uint8:
  1172                           	callstack 27
  1173                           
  1174                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1175                           
  1176                           ;incstack = 0
  1177   001116  5022               	movf	set_bit_uint8@p_reg^0,w,c
  1178   001118  1023               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1179   00111A  B4D8               	btfsc	status,2,c
  1180   00111C  0012               	return	
  1181   00111E  D038               	goto	l1292
  1182   001120                     l1272:
  1183                           
  1184                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1185   001120  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1186   001124  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1187   001128  0E00               	movlw	0
  1188   00112A  80DB               	bsf	plusw2,0,c
  1189                           
  1190                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1191   00112C  0012               	return	
  1192   00112E                     l1274:
  1193                           
  1194                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1195   00112E  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1196   001132  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1197   001136  0E00               	movlw	0
  1198   001138  82DB               	bsf	plusw2,1,c
  1199                           
  1200                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1201   00113A  0012               	return	
  1202   00113C                     l1276:
  1203                           
  1204                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1205   00113C  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1206   001140  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1207   001144  0E00               	movlw	0
  1208   001146  84DB               	bsf	plusw2,2,c
  1209                           
  1210                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1211   001148  0012               	return	
  1212   00114A                     l1278:
  1213                           
  1214                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1215   00114A  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1216   00114E  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1217   001152  0E00               	movlw	0
  1218   001154  86DB               	bsf	plusw2,3,c
  1219                           
  1220                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1221   001156  0012               	return	
  1222   001158                     l1280:
  1223                           
  1224                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1225   001158  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1226   00115C  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1227   001160  0E00               	movlw	0
  1228   001162  88DB               	bsf	plusw2,4,c
  1229                           
  1230                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1231   001164  0012               	return	
  1232   001166                     l1282:
  1233                           
  1234                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1235   001166  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1236   00116A  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1237   00116E  0E00               	movlw	0
  1238   001170  8ADB               	bsf	plusw2,5,c
  1239                           
  1240                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1241   001172  0012               	return	
  1242   001174                     l1284:
  1243                           
  1244                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1245   001174  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1246   001178  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1247   00117C  0E00               	movlw	0
  1248   00117E  8CDB               	bsf	plusw2,6,c
  1249                           
  1250                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1251   001180  0012               	return	
  1252   001182                     l1286:
  1253                           
  1254                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1255   001182  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1256   001186  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1257   00118A  0E00               	movlw	0
  1258   00118C  8EDB               	bsf	plusw2,7,c
  1259                           
  1260                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1261   00118E  0012               	return	
  1262   001190                     l1292:
  1263   001190  5024               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1264   001192  6E25               	movwf	??_set_bit_uint8^0,c
  1265   001194  6A26               	clrf	(??_set_bit_uint8+1)^0,c
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   001196  5026               	movf	(??_set_bit_uint8+1)^0,w,c
  1275   001198  0A00               	xorlw	0	; case 0
  1276   00119A  A4D8               	btfss	status,2,c
  1277   00119C  0012               	return	
  1278                           
  1279                           ; Switch size 1, requested type "simple"
  1280                           ; Number of cases is 8, Range of values is 0 to 7
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte           25    13 (average)
  1284                           ;	Chosen strategy is simple_byte
  1285   00119E  5025               	movf	??_set_bit_uint8^0,w,c
  1286   0011A0  0A00               	xorlw	0	; case 0
  1287   0011A2  B4D8               	btfsc	status,2,c
  1288   0011A4  D7BD               	goto	l1272
  1289   0011A6  0A01               	xorlw	1	; case 1
  1290   0011A8  B4D8               	btfsc	status,2,c
  1291   0011AA  D7C1               	goto	l1274
  1292   0011AC  0A03               	xorlw	3	; case 2
  1293   0011AE  B4D8               	btfsc	status,2,c
  1294   0011B0  D7C5               	goto	l1276
  1295   0011B2  0A01               	xorlw	1	; case 3
  1296   0011B4  B4D8               	btfsc	status,2,c
  1297   0011B6  D7C9               	goto	l1278
  1298   0011B8  0A07               	xorlw	7	; case 4
  1299   0011BA  B4D8               	btfsc	status,2,c
  1300   0011BC  D7CD               	goto	l1280
  1301   0011BE  0A01               	xorlw	1	; case 5
  1302   0011C0  B4D8               	btfsc	status,2,c
  1303   0011C2  D7D1               	goto	l1282
  1304   0011C4  0A03               	xorlw	3	; case 6
  1305   0011C6  B4D8               	btfsc	status,2,c
  1306   0011C8  D7D5               	goto	l1284
  1307   0011CA  0A01               	xorlw	1	; case 7
  1308   0011CC  A4D8               	btfss	status,2,c
  1309   0011CE  0012               	return	
  1310   0011D0  D7D8               	goto	l1286
  1311   0011D2                     __end_of_set_bit_uint8:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _clear_bit_uint8 *****************
  1315 ;; Defined at:
  1316 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1319 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1320 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1321 ;;		 -> TRISB(1), TRISA(1), 
  1322 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      enum E2804
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        5 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_gpio_pin_direction_initialize
  1344 ;;		_gpio_pin_write_logic
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text8
  1349   001380                     __ptext8:
  1350                           	callstack 0
  1351   001380                     _clear_bit_uint8:
  1352                           	callstack 27
  1353                           
  1354                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1355                           
  1356                           ;incstack = 0
  1357   001380  5022               	movf	clear_bit_uint8@p_reg^0,w,c
  1358   001382  1023               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1359   001384  B4D8               	btfsc	status,2,c
  1360   001386  0012               	return	
  1361   001388  D006               	goto	l1324
  1362   00138A                     l1304:
  1363                           
  1364                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= !(MASK_BIT_0);
  1365   00138A  C022  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1366   00138E  C023  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1367   001392  6ADF               	clrf	indf2,c
  1368                           
  1369                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1370   001394  0012               	return	
  1371   001396                     l1324:
  1372   001396  5024               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1373   001398  6E25               	movwf	??_clear_bit_uint8^0,c
  1374   00139A  6A26               	clrf	(??_clear_bit_uint8+1)^0,c
  1375                           
  1376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1377                           ; Switch size 1, requested type "simple"
  1378                           ; Number of cases is 1, Range of values is 0 to 0
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte            4     3 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383   00139C  5026               	movf	(??_clear_bit_uint8+1)^0,w,c
  1384   00139E  0A00               	xorlw	0	; case 0
  1385   0013A0  A4D8               	btfss	status,2,c
  1386   0013A2  0012               	return	
  1387                           
  1388                           ; Switch size 1, requested type "simple"
  1389                           ; Number of cases is 8, Range of values is 0 to 7
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte           25    13 (average)
  1393                           ;	Chosen strategy is simple_byte
  1394   0013A4  5025               	movf	??_clear_bit_uint8^0,w,c
  1395   0013A6  0A00               	xorlw	0	; case 0
  1396   0013A8  B4D8               	btfsc	status,2,c
  1397   0013AA  D7EF               	goto	l1304
  1398   0013AC  0A01               	xorlw	1	; case 1
  1399   0013AE  B4D8               	btfsc	status,2,c
  1400   0013B0  D7EC               	goto	l1304
  1401   0013B2  0A03               	xorlw	3	; case 2
  1402   0013B4  B4D8               	btfsc	status,2,c
  1403   0013B6  D7E9               	goto	l1304
  1404   0013B8  0A01               	xorlw	1	; case 3
  1405   0013BA  B4D8               	btfsc	status,2,c
  1406   0013BC  D7E6               	goto	l1304
  1407   0013BE  0A07               	xorlw	7	; case 4
  1408   0013C0  B4D8               	btfsc	status,2,c
  1409   0013C2  D7E3               	goto	l1304
  1410   0013C4  0A01               	xorlw	1	; case 5
  1411   0013C6  B4D8               	btfsc	status,2,c
  1412   0013C8  D7E0               	goto	l1304
  1413   0013CA  0A03               	xorlw	3	; case 6
  1414   0013CC  B4D8               	btfsc	status,2,c
  1415   0013CE  D7DD               	goto	l1304
  1416   0013D0  0A01               	xorlw	1	; case 7
  1417   0013D2  A4D8               	btfss	status,2,c
  1418   0013D4  0012               	return	
  1419   0013D6  D7D9               	goto	l1304
  1420   0013D8                     __end_of_clear_bit_uint8:
  1421                           	callstack 0
  1422                           
  1423                           	psect	smallconst
  1424   001000                     __psmallconst:
  1425                           	callstack 0
  1426   001000  00                 	db	0
  1427   001001  00                 	db	0	; dummy byte at the end
  1428   000000                     
  1429                           	psect	rparam
  1430   000000                     
  1431                           	psect	config
  1432                           
  1433                           ; Padding undefined space
  1434   300000                     	org	3145728
  1435   300000  FF                 	db	255
  1436                           
  1437                           ;Config register CONFIG1H @ 0x300001
  1438                           ;	Oscillator Selection bits
  1439                           ;	OSC = HS, HS oscillator
  1440                           ;	Fail-Safe Clock Monitor Enable bit
  1441                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1442                           ;	Internal/External Oscillator Switchover bit
  1443                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1444   300001                     	org	3145729
  1445   300001  02                 	db	2
  1446                           
  1447                           ;Config register CONFIG2L @ 0x300002
  1448                           ;	Power-up Timer Enable bit
  1449                           ;	PWRT = OFF, PWRT disabled
  1450                           ;	Brown-out Reset Enable bits
  1451                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1452                           ;	Brown Out Reset Voltage bits
  1453                           ;	BORV = 1, 
  1454   300002                     	org	3145730
  1455   300002  09                 	db	9
  1456                           
  1457                           ;Config register CONFIG2H @ 0x300003
  1458                           ;	Watchdog Timer Enable bit
  1459                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1460                           ;	Watchdog Timer Postscale Select bits
  1461                           ;	WDTPS = 32768, 1:32768
  1462   300003                     	org	3145731
  1463   300003  1E                 	db	30
  1464                           
  1465                           ; Padding undefined space
  1466   300004                     	org	3145732
  1467   300004  FF                 	db	255
  1468                           
  1469                           ;Config register CONFIG3H @ 0x300005
  1470                           ;	CCP2 MUX bit
  1471                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1472                           ;	PORTB A/D Enable bit
  1473                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1474                           ;	Low-Power Timer1 Oscillator Enable bit
  1475                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1476                           ;	MCLR Pin Enable bit
  1477                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1478   300005                     	org	3145733
  1479   300005  81                 	db	129
  1480                           
  1481                           ;Config register CONFIG4L @ 0x300006
  1482                           ;	Stack Full/Underflow Reset Enable bit
  1483                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1484                           ;	Single-Supply ICSP Enable bit
  1485                           ;	LVP = OFF, Single-Supply ICSP disabled
  1486                           ;	Extended Instruction Set Enable bit
  1487                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1488                           ;	Background Debugger Enable bit
  1489                           ;	DEBUG = 0x1, unprogrammed default
  1490   300006                     	org	3145734
  1491   300006  81                 	db	129
  1492                           
  1493                           ; Padding undefined space
  1494   300007                     	org	3145735
  1495   300007  FF                 	db	255
  1496                           
  1497                           ;Config register CONFIG5L @ 0x300008
  1498                           ;	Code Protection bit
  1499                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1500                           ;	Code Protection bit
  1501                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1502                           ;	Code Protection bit
  1503                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1504                           ;	Code Protection bit
  1505                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1506   300008                     	org	3145736
  1507   300008  0F                 	db	15
  1508                           
  1509                           ;Config register CONFIG5H @ 0x300009
  1510                           ;	Boot Block Code Protection bit
  1511                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1512                           ;	Data EEPROM Code Protection bit
  1513                           ;	CPD = OFF, Data EEPROM not code-protected
  1514   300009                     	org	3145737
  1515   300009  C0                 	db	192
  1516                           
  1517                           ;Config register CONFIG6L @ 0x30000A
  1518                           ;	Write Protection bit
  1519                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1520                           ;	Write Protection bit
  1521                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1522                           ;	Write Protection bit
  1523                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1524                           ;	Write Protection bit
  1525                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1526   30000A                     	org	3145738
  1527   30000A  0F                 	db	15
  1528                           
  1529                           ;Config register CONFIG6H @ 0x30000B
  1530                           ;	Configuration Register Write Protection bit
  1531                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1532                           ;	Boot Block Write Protection bit
  1533                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1534                           ;	Data EEPROM Write Protection bit
  1535                           ;	WRTD = OFF, Data EEPROM not write-protected
  1536   30000B                     	org	3145739
  1537   30000B  E0                 	db	224
  1538                           
  1539                           ;Config register CONFIG7L @ 0x30000C
  1540                           ;	Table Read Protection bit
  1541                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1542                           ;	Table Read Protection bit
  1543                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1544                           ;	Table Read Protection bit
  1545                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1546                           ;	Table Read Protection bit
  1547                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1548   30000C                     	org	3145740
  1549   30000C  0F                 	db	15
  1550                           
  1551                           ;Config register CONFIG7H @ 0x30000D
  1552                           ;	Boot Block Table Read Protection bit
  1553                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1554   30000D                     	org	3145741
  1555   30000D  40                 	db	64
  1556                           tosu	equ	0xFFF
  1557                           tosh	equ	0xFFE
  1558                           tosl	equ	0xFFD
  1559                           stkptr	equ	0xFFC
  1560                           pclatu	equ	0xFFB
  1561                           pclath	equ	0xFFA
  1562                           pcl	equ	0xFF9
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           prodh	equ	0xFF4
  1568                           prodl	equ	0xFF3
  1569                           indf0	equ	0xFEF
  1570                           postinc0	equ	0xFEE
  1571                           postdec0	equ	0xFED
  1572                           preinc0	equ	0xFEC
  1573                           plusw0	equ	0xFEB
  1574                           fsr0h	equ	0xFEA
  1575                           fsr0l	equ	0xFE9
  1576                           wreg	equ	0xFE8
  1577                           indf1	equ	0xFE7
  1578                           postinc1	equ	0xFE6
  1579                           postdec1	equ	0xFE5
  1580                           preinc1	equ	0xFE4
  1581                           plusw1	equ	0xFE3
  1582                           fsr1h	equ	0xFE2
  1583                           fsr1l	equ	0xFE1
  1584                           bsr	equ	0xFE0
  1585                           indf2	equ	0xFDF
  1586                           postinc2	equ	0xFDE
  1587                           postdec2	equ	0xFDD
  1588                           preinc2	equ	0xFDC
  1589                           plusw2	equ	0xFDB
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_toggle@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    led_toggle@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_led_init
    _led_toggle->_gpio_pin_toggle_logic
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4001
                                             18 COMRAM     2     2      0
                           _led_init
                         _led_toggle
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           6     5      1     549
                                              4 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_toggle_logic                                4     3      1     327
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _led_init                                             7     6      1    3452
                                             12 COMRAM     6     5      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    3174
                                              9 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 4     2      2    1612
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1354
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_init
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
   _led_toggle
     _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      44       1       53.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      39        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 17 23:04:36 2023

      gpio_pin_write_logic@d_logic_desired 0028                                        l340 14A0  
                                      u301 13E8                                        u321 1434  
                                      u250 1326                                        u337 14B2  
                                      wreg 0FE8                                       l1304 138A  
                                     l1400 137C                                       l1324 1396  
                                     l1340 11F2                                       l1420 1016  
                                     l1422 101A                                       l1414 100A  
                                     l1280 1158                                       l1272 1120  
                                     l1344 122E                                       l1352 126A  
                                     l1440 10DA                                       l1424 101E  
                                     l1416 100E                                       l1282 1166  
                                     l1274 112E                                       l1426 1022  
                                     l1418 1012                                       l1434 102C  
                                     l1284 1174                                       l1276 113C  
                                     l1292 1190                                       l1364 129C  
                                     l1372 12F8                                       l1428 1026  
                                     l1436 1078                                       l1286 1182  
                                     l1278 114A                                       l1366 12CA  
                                     l1386 132A                                       l1388 1334  
                                     l1398 1354                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _main 1498                                       fsr2h 0FDA  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                   ?_gpio_pin_toggle_logic 0022                       _gpio_pin_write_logic 11D2  
                                    ?_main 0022                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                                      _led_1 001F  
                                    tablat 0FF5                            led_on_off@F2938 003B  
                                    plusw1 0FE3                                      plusw2 0FDB  
                                    status 0FD8             ?_gpio_pin_direction_initialize 0027  
                          __initialization 1462                               __end_of_main 14C2  
                    ?_gpio_pin_write_logic 0027                                     ??_main 0034  
                            __activetblptr 0002                           __end_of_led_init 1424  
                                   clear_0 1488                                     isa$std 0001  
                            led_init@F2933 0040                               __pdataCOMRAM 0001  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                    __end_of_set_bit_uint8 11D2                              led_init@p_led 002E  
                               __accesstop 0080                    __end_of__initialization 148E  
                            ___rparam_used 0001                     ??_gpio_pin_write_logic 0029  
                           __pcstackCOMRAM 0022                           _PORT_REG_ADD_arr 000B  
         gpio_pin_write_logic@p_pin_config 0027          gpio_pin_toggle_logic@p_pin_config 0022  
                  ??_gpio_pin_toggle_logic 0023                            led_toggle@F2942 0036  
                          led_toggle@p_led 0026                            _LAT_REG_ADD_arr 0001  
                                ?_led_init 002E                          ??_clear_bit_uint8 0025  
                               _led_toggle 1424                                    __Hparam 0000  
                                  __Lparam 0000                        _gpio_pin_initialize 1320  
                             __psmallconst 1000                                    __pcinit 1462  
                                  __ramtop 1000                                    __ptext0 1498  
                                  __ptext1 1424                                    __ptext2 1002  
                                  __ptext3 13D8                                    __ptext4 1320  
                                  __ptext5 11D2                                    __ptext6 1288  
                                  __ptext7 1116                                    __ptext8 1380  
          ??_gpio_pin_direction_initialize 0028                 clear_bit_uint8@d_IDX_BIT_X 0024  
                     ?_gpio_pin_initialize 002B                                 ??_led_init 002F  
                     end_of_initialization 148E                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 0022                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc2 0FDE                          led_toggle@led_pin 0027  
                    ??_gpio_pin_initialize 002C                                ?_led_toggle 0026  
                            __pidataCOMRAM 14C2              gpio_pin_toggle_logic@bit_mask 0025  
                      start_initialization 1462      __end_of_gpio_pin_direction_initialize 1320  
            _gpio_pin_direction_initialize 1288            gpio_pin_initialize@p_pin_config 002B  
            __end_of_gpio_pin_toggle_logic 1116                            _clear_bit_uint8 1380  
                              __pbssCOMRAM 0036                                __smallconst 1000  
                            _set_bit_uint8 1116                    __end_of_clear_bit_uint8 13D8  
                           ?_set_bit_uint8 0022                                  copy_data0 1476  
                             ??_led_toggle 0027                                   __Hrparam 0000  
                                 __Lrparam 0000                __end_of_gpio_pin_initialize 1380  
                       __end_of_led_toggle 1462                   set_bit_uint8@d_IDX_BIT_X 0024  
                                 _led_init 13D8                                   isa$xinst 0000  
                         ?_clear_bit_uint8 0022                         set_bit_uint8@p_reg 0022  
                          ??_set_bit_uint8 0025               __end_of_gpio_pin_write_logic 1288  
gpio_pin_direction_initialize@p_pin_config 0027                      _gpio_pin_toggle_logic 1002  
                         _TRIS_REG_ADD_arr 0015                            led_init@led_pin 002F  
