

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 17 23:04:34 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0014C2                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _LAT_REG_ADD_arr
    64   0014C2  89                 	db	137
    65   0014C3  0F                 	db	15
    66   0014C4  8A                 	db	138
    67   0014C5  0F                 	db	15
    68   0014C6  8B                 	db	139
    69   0014C7  0F                 	db	15
    70   0014C8  8C                 	db	140
    71   0014C9  0F                 	db	15
    72   0014CA  8D                 	db	141
    73   0014CB  0F                 	db	15
    74                           
    75                           ;initializer for _PORT_REG_ADD_arr
    76   0014CC  80                 	db	128
    77   0014CD  0F                 	db	15
    78   0014CE  81                 	db	129
    79   0014CF  0F                 	db	15
    80   0014D0  82                 	db	130
    81   0014D1  0F                 	db	15
    82   0014D2  83                 	db	131
    83   0014D3  0F                 	db	15
    84   0014D4  84                 	db	132
    85   0014D5  0F                 	db	15
    86                           
    87                           ;initializer for _TRIS_REG_ADD_arr
    88   0014D6  92                 	db	146
    89   0014D7  0F                 	db	15
    90   0014D8  93                 	db	147
    91   0014D9  0F                 	db	15
    92   0014DA  94                 	db	148
    93   0014DB  0F                 	db	15
    94   0014DC  95                 	db	149
    95   0014DD  0F                 	db	15
    96   0014DE  96                 	db	150
    97   0014DF  0F                 	db	15
    98                           
    99                           ;initializer for _led_1
   100   0014E0  02                 	db	2
   101   0014E1  05                 	db	5
   102   0014E2  01                 	db	1
   103   000000                     _LATA	set	3977
   104   000000                     _PORTE	set	3972
   105   000000                     _PORTD	set	3971
   106   000000                     _PORTC	set	3970
   107   000000                     _PORTB	set	3969
   108   000000                     _PORTA	set	3968
   109   000000                     _TRISA	set	3986
   110   000000                     _TRISE	set	3990
   111   000000                     _TRISD	set	3989
   112   000000                     _TRISC	set	3988
   113   000000                     _TRISB	set	3987
   114   000000                     _LATE	set	3981
   115   000000                     _LATD	set	3980
   116   000000                     _LATC	set	3979
   117   000000                     _LATB	set	3978
   118                           
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   001462                     __pcinit:
   123                           	callstack 0
   124   001462                     start_initialization:
   125                           	callstack 0
   126   001462                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Initialize objects allocated to COMRAM (33 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131   001462  0EC2               	movlw	low __pidataCOMRAM
   132   001464  6EF6               	movwf	tblptrl,c
   133   001466  0E14               	movlw	high __pidataCOMRAM
   134   001468  6EF7               	movwf	tblptrh,c
   135   00146A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136   00146C  6EF8               	movwf	tblptru,c
   137   00146E  EE00  F001         	lfsr	0,__pdataCOMRAM
   138   001472  EE10 F021          	lfsr	1,33
   139   001476                     copy_data0:
   140   001476  0009               	tblrd		*+
   141   001478  CFF5 FFEE          	movff	tablat,postinc0
   142   00147C  50E5               	movf	postdec1,w,c
   143   00147E  50E1               	movf	fsr1l,w,c
   144   001480  E1FA               	bnz	copy_data0
   145                           
   146                           ; Clear objects allocated to COMRAM (15 bytes)
   147   001482  EE00  F036         	lfsr	0,__pbssCOMRAM
   148   001486  0E0F               	movlw	15
   149   001488                     clear_0:
   150   001488  6AEE               	clrf	postinc0,c
   151   00148A  06E8               	decf	wreg,f,c
   152   00148C  E1FD               	bnz	clear_0
   153   00148E                     end_of_initialization:
   154                           	callstack 0
   155   00148E                     __end_of__initialization:
   156                           	callstack 0
   157   00148E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158   001490  6EF8               	movwf	tblptru,c
   159   001492  0100               	movlb	0
   160   001494  EF4C  F00A         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMRAM
   163   000036                     __pbssCOMRAM:
   164                           	callstack 0
   165   000036                     led_toggle@F2942:
   166                           	callstack 0
   167   000036                     	ds	5
   168   00003B                     led_on_off@F2938:
   169                           	callstack 0
   170   00003B                     	ds	5
   171   000040                     led_init@F2933:
   172                           	callstack 0
   173   000040                     	ds	5
   174                           
   175                           	psect	dataCOMRAM
   176   000001                     __pdataCOMRAM:
   177                           	callstack 0
   178   000001                     _LAT_REG_ADD_arr:
   179                           	callstack 0
   180   000001                     	ds	10
   181   00000B                     _PORT_REG_ADD_arr:
   182                           	callstack 0
   183   00000B                     	ds	10
   184   000015                     _TRIS_REG_ADD_arr:
   185                           	callstack 0
   186   000015                     	ds	10
   187   00001F                     _led_1:
   188                           	callstack 0
   189   00001F                     	ds	3
   190                           
   191                           	psect	cstackCOMRAM
   192   000022                     __pcstackCOMRAM:
   193                           	callstack 0
   194   000022                     gpio_pin_toggle_logic@p_pin_config:
   195                           	callstack 0
   196   000022                     set_bit_uint8@p_reg:
   197                           	callstack 0
   198   000022                     clear_bit_uint8@p_reg:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x0
   202   000022                     	ds	1
   203   000023                     ??_gpio_pin_toggle_logic:
   204                           
   205                           ; 1 bytes @ 0x1
   206   000023                     	ds	1
   207   000024                     set_bit_uint8@d_IDX_BIT_X:
   208                           	callstack 0
   209   000024                     clear_bit_uint8@d_IDX_BIT_X:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x2
   213   000024                     	ds	1
   214   000025                     ??_set_bit_uint8:
   215   000025                     ??_clear_bit_uint8:
   216   000025                     gpio_pin_toggle_logic@bit_mask:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x3
   220   000025                     	ds	1
   221   000026                     led_toggle@p_led:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x4
   225   000026                     	ds	1
   226   000027                     gpio_pin_direction_initialize@p_pin_config:
   227                           	callstack 0
   228   000027                     gpio_pin_write_logic@p_pin_config:
   229                           	callstack 0
   230   000027                     led_toggle@led_pin:
   231                           	callstack 0
   232                           
   233                           ; 5 bytes @ 0x5
   234   000027                     	ds	1
   235   000028                     ??_gpio_pin_direction_initialize:
   236   000028                     gpio_pin_write_logic@d_logic_desired:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x6
   240   000028                     	ds	1
   241   000029                     ??_gpio_pin_write_logic:
   242                           
   243                           ; 1 bytes @ 0x7
   244   000029                     	ds	2
   245   00002B                     gpio_pin_initialize@p_pin_config:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x9
   249   00002B                     	ds	1
   250   00002C                     ??_gpio_pin_initialize:
   251                           
   252                           ; 1 bytes @ 0xA
   253   00002C                     	ds	2
   254   00002E                     led_init@p_led:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xC
   258   00002E                     	ds	1
   259   00002F                     led_init@led_pin:
   260                           	callstack 0
   261                           
   262                           ; 5 bytes @ 0xD
   263   00002F                     	ds	5
   264   000034                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x12
   267   000034                     	ds	2
   268                           
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 38 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  2  339[None  ] int 
   281 ;; Registers used:
   282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;Total ram usage:        2 bytes
   293 ;; Hardware stack levels required when called: 4
   294 ;; This function calls:
   295 ;;		_led_init
   296 ;;		_led_toggle
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text0
   303   001498                     __ptext0:
   304                           	callstack 0
   305   001498                     _main:
   306                           	callstack 27
   307                           
   308                           ;main.c: 39: led_init(&led_1);
   309                           
   310                           ;incstack = 0
   311   001498  0E1F               	movlw	low _led_1
   312   00149A  6E2E               	movwf	led_init@p_led^0,c
   313   00149C  ECEC  F009         	call	_led_init	;wreg free
   314   0014A0                     l340:
   315                           
   316                           ;main.c: 42:     {;main.c: 43:        led_toggle(&led_1);
   317   0014A0  0E1F               	movlw	low _led_1
   318   0014A2  6E26               	movwf	led_toggle@p_led^0,c
   319   0014A4  EC12  F00A         	call	_led_toggle	;wreg free
   320                           
   321                           ;main.c: 44:        _delay((unsigned long)((100)*((8000000UL)/4000.0)));
   322   0014A8  0E02               	movlw	2
   323   0014AA  6E35               	movwf	(??_main+1)^0,c
   324   0014AC  0E04               	movlw	4
   325   0014AE  6E34               	movwf	??_main^0,c
   326   0014B0  0EBA               	movlw	186
   327   0014B2                     u467:
   328   0014B2  2EE8               	decfsz	wreg,f,c
   329   0014B4  D7FE               	bra	u467
   330   0014B6  2E34               	decfsz	??_main^0,f,c
   331   0014B8  D7FC               	bra	u467
   332   0014BA  2E35               	decfsz	(??_main+1)^0,f,c
   333   0014BC  D7FA               	bra	u467
   334   0014BE  D000               	nop2	
   335                           
   336                           ;main.c: 45:     }
   337   0014C0  D7EF               	goto	l340
   338   0014C2                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _led_toggle *****************
   342 ;; Defined at:
   343 ;;		line 70 in file "_HAL/Drivers/LED/LED.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;  p_led           1    4[COMRAM] PTR struct .
   346 ;;		 -> led_1(3), 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  led_pin         5    5[COMRAM] struct .
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      enum E2804
   351 ;; Registers used:
   352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        6 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; Hardware stack levels required when called: 1
   365 ;; This function calls:
   366 ;;		_gpio_pin_toggle_logic
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373   001424                     __ptext1:
   374                           	callstack 0
   375   001424                     _led_toggle:
   376                           	callstack 29
   377                           
   378                           ;_HAL/Drivers/LED/LED.c: 70: std_return led_toggle(led_t * p_led);_HAL/Drivers/LED/LED.c
      +                          : 71: {;_HAL/Drivers/LED/LED.c: 72:     if(((void*)0) == p_led )
   379                           
   380                           ;incstack = 0
   381   001424  5026               	movf	led_toggle@p_led^0,w,c
   382   001426  B4D8               	btfsc	status,2,c
   383   001428  0012               	return	
   384                           
   385                           ;_HAL/Drivers/LED/LED.c: 77:     {;_HAL/Drivers/LED/LED.c: 78:         pin_config_t led_
      +                          pin = {.direction= DIRECTION_OUTPUT,
   386   00142A  EE20  F036         	lfsr	2,led_toggle@F2942
   387   00142E  EE10  F027         	lfsr	1,led_toggle@led_pin
   388   001432  0E04               	movlw	4
   389   001434                     u431:
   390   001434  CFDB FFE3          	movff	plusw2,plusw1
   391   001438  06E8               	decf	wreg,f,c
   392   00143A  E2FC               	bc	u431
   393   00143C  5026               	movf	led_toggle@p_led^0,w,c
   394   00143E  6ED9               	movwf	fsr2l,c
   395   001440  6ADA               	clrf	fsr2h,c
   396   001442  50DF               	movf	indf2,w,c
   397   001444  6E27               	movwf	led_toggle@led_pin^0,c
   398   001446  5026               	movf	led_toggle@p_led^0,w,c
   399   001448  6ED9               	movwf	fsr2l,c
   400   00144A  6ADA               	clrf	fsr2h,c
   401   00144C  0E01               	movlw	1
   402   00144E  26D9               	addwf	fsr2l,f,c
   403   001450  50DF               	movf	indf2,w,c
   404   001452  6E28               	movwf	(led_toggle@led_pin+1)^0,c
   405   001454  0E00               	movlw	0
   406   001456  6E29               	movwf	(led_toggle@led_pin+2)^0,c
   407                           
   408                           ;_HAL/Drivers/LED/LED.c: 82:        gpio_pin_toggle_logic(&led_pin);
   409   001458  0E27               	movlw	low led_toggle@led_pin
   410   00145A  6E22               	movwf	gpio_pin_toggle_logic@p_pin_config^0,c
   411   00145C  EC01  F008         	call	_gpio_pin_toggle_logic	;wreg free
   412   001460  0012               	return		;funcret
   413   001462                     __end_of_led_toggle:
   414                           	callstack 0
   415                           
   416 ;; *************** function _gpio_pin_toggle_logic *****************
   417 ;; Defined at:
   418 ;;		line 379 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  p_pin_config    1    0[COMRAM] PTR struct .
   421 ;;		 -> led_toggle@led_pin(5), 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  bit_mask        1    3[COMRAM] enum E2825
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      enum E2804
   426 ;; Registers used:
   427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   433 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_led_toggle
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447   001002                     __ptext2:
   448                           	callstack 0
   449   001002                     _gpio_pin_toggle_logic:
   450                           	callstack 29
   451                           
   452                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 383:     if(((void*)0) == p_pin_config)
   453                           
   454                           ;incstack = 0
   455   001002  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   456   001004  B4D8               	btfsc	status,2,c
   457   001006  0012               	return	
   458   001008  D011               	goto	l1594
   459   00100A                     l1574:
   460                           
   461                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 393:                 bit_mask = MASK_BIT_0;
   462   00100A  0E01               	movlw	1
   463   00100C  D00D               	goto	L7
   464   00100E                     l1576:
   465                           
   466                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 396:                 bit_mask = MASK_BIT_1;
   467   00100E  0E02               	movlw	2
   468   001010  D00B               	goto	L7
   469   001012                     l1578:
   470                           
   471                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 399:                 bit_mask = MASK_BIT_2;
   472   001012  0E04               	movlw	4
   473   001014  D009               	goto	L7
   474   001016                     l1580:
   475                           
   476                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 402:                 bit_mask = MASK_BIT_3;
   477   001016  0E08               	movlw	8
   478   001018  D007               	goto	L7
   479   00101A                     l1582:
   480                           
   481                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 405:                 bit_mask = MASK_BIT_4;
   482   00101A  0E10               	movlw	16
   483   00101C  D005               	goto	L7
   484   00101E                     l1584:
   485                           
   486                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 408:                 bit_mask = MASK_BIT_5;
   487   00101E  0E20               	movlw	32
   488   001020  D003               	goto	L7
   489   001022                     l1586:
   490                           
   491                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 411:                 bit_mask = MASK_BIT_6;
   492   001022  0E40               	movlw	64
   493   001024  D001               	goto	L7
   494   001026                     l1588:
   495                           
   496                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 414:                 bit_mask = MASK_BIT_7;
   497   001026  0E80               	movlw	128
   498   001028                     L7:
   499   001028  6E25               	movwf	gpio_pin_toggle_logic@bit_mask^0,c
   500                           
   501                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 415:                 break;
   502   00102A  D026               	goto	l1596
   503   00102C                     l1594:
   504   00102C  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   505   00102E  6ED9               	movwf	fsr2l,c
   506   001030  6ADA               	clrf	fsr2h,c
   507   001032  0E01               	movlw	1
   508   001034  26D9               	addwf	fsr2l,f,c
   509   001036  50DF               	movf	indf2,w,c
   510   001038  6E23               	movwf	??_gpio_pin_toggle_logic^0,c
   511   00103A  6A24               	clrf	(??_gpio_pin_toggle_logic+1)^0,c
   512                           
   513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   514                           ; Switch size 1, requested type "simple"
   515                           ; Number of cases is 1, Range of values is 0 to 0
   516                           ; switch strategies available:
   517                           ; Name         Instructions Cycles
   518                           ; simple_byte            4     3 (average)
   519                           ;	Chosen strategy is simple_byte
   520   00103C  5024               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
   521   00103E  0A00               	xorlw	0	; case 0
   522   001040  A4D8               	btfss	status,2,c
   523   001042  0012               	return	
   524                           
   525                           ; Switch size 1, requested type "simple"
   526                           ; Number of cases is 8, Range of values is 0 to 7
   527                           ; switch strategies available:
   528                           ; Name         Instructions Cycles
   529                           ; simple_byte           25    13 (average)
   530                           ;	Chosen strategy is simple_byte
   531   001044  5023               	movf	??_gpio_pin_toggle_logic^0,w,c
   532   001046  0A00               	xorlw	0	; case 0
   533   001048  B4D8               	btfsc	status,2,c
   534   00104A  D7DF               	goto	l1574
   535   00104C  0A01               	xorlw	1	; case 1
   536   00104E  B4D8               	btfsc	status,2,c
   537   001050  D7DE               	goto	l1576
   538   001052  0A03               	xorlw	3	; case 2
   539   001054  B4D8               	btfsc	status,2,c
   540   001056  D7DD               	goto	l1578
   541   001058  0A01               	xorlw	1	; case 3
   542   00105A  B4D8               	btfsc	status,2,c
   543   00105C  D7DC               	goto	l1580
   544   00105E  0A07               	xorlw	7	; case 4
   545   001060  B4D8               	btfsc	status,2,c
   546   001062  D7DB               	goto	l1582
   547   001064  0A01               	xorlw	1	; case 5
   548   001066  B4D8               	btfsc	status,2,c
   549   001068  D7DA               	goto	l1584
   550   00106A  0A03               	xorlw	3	; case 6
   551   00106C  B4D8               	btfsc	status,2,c
   552   00106E  D7D9               	goto	l1586
   553   001070  0A01               	xorlw	1	; case 7
   554   001072  A4D8               	btfss	status,2,c
   555   001074  0012               	return	
   556   001076  D7D7               	goto	l1588
   557   001078                     l1596:
   558                           
   559                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 421:         *(LAT_REG_ADD_arr[p_pin_config->port]) ^= bit_m
      +                          ask;
   560   001078  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   561   00107A  6ED9               	movwf	fsr2l,c
   562   00107C  6ADA               	clrf	fsr2h,c
   563   00107E  50DF               	movf	indf2,w,c
   564   001080  0D02               	mullw	2
   565   001082  50F3               	movf	243,w,c
   566   001084  0F01               	addlw	low _LAT_REG_ADD_arr
   567   001086  6ED9               	movwf	fsr2l,c
   568   001088  6ADA               	clrf	fsr2h,c
   569   00108A  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   570   00108E  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   571   001092  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   572   001096  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   573   00109A  5025               	movf	gpio_pin_toggle_logic@bit_mask^0,w,c
   574   00109C  1ADF               	xorwf	indf2,f,c
   575                           
   576                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 422:         if (((*(LAT_REG_ADD_arr[p_pin_config->port]) & 
      +                          bit_mask) == bit_mask))
   577   00109E  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   578   0010A0  6ED9               	movwf	fsr2l,c
   579   0010A2  6ADA               	clrf	fsr2h,c
   580   0010A4  50DF               	movf	indf2,w,c
   581   0010A6  0D02               	mullw	2
   582   0010A8  50F3               	movf	243,w,c
   583   0010AA  0F01               	addlw	low _LAT_REG_ADD_arr
   584   0010AC  6ED9               	movwf	fsr2l,c
   585   0010AE  6ADA               	clrf	fsr2h,c
   586   0010B0  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   587   0010B4  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   588   0010B8  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   589   0010BC  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   590   0010C0  50DF               	movf	indf2,w,c
   591   0010C2  1425               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   592   0010C4  1825               	xorwf	gpio_pin_toggle_logic@bit_mask^0,w,c
   593   0010C6  A4D8               	btfss	status,2,c
   594   0010C8  D008               	goto	l1600
   595                           
   596                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 423:             p_pin_config->logic = LOGIC_ON;
   597   0010CA  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   598   0010CC  6ED9               	movwf	fsr2l,c
   599   0010CE  6ADA               	clrf	fsr2h,c
   600   0010D0  0E03               	movlw	3
   601   0010D2  26D9               	addwf	fsr2l,f,c
   602   0010D4  0E01               	movlw	1
   603   0010D6  6EDF               	movwf	indf2,c
   604   0010D8  0012               	return	
   605   0010DA                     l1600:
   606   0010DA  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   607   0010DC  6ED9               	movwf	fsr2l,c
   608   0010DE  6ADA               	clrf	fsr2h,c
   609   0010E0  50DF               	movf	indf2,w,c
   610   0010E2  0D02               	mullw	2
   611   0010E4  50F3               	movf	243,w,c
   612   0010E6  0F01               	addlw	low _LAT_REG_ADD_arr
   613   0010E8  6ED9               	movwf	fsr2l,c
   614   0010EA  6ADA               	clrf	fsr2h,c
   615   0010EC  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic
   616   0010F0  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+1
   617   0010F4  C023  FFD9         	movff	??_gpio_pin_toggle_logic,fsr2l
   618   0010F8  C024  FFDA         	movff	??_gpio_pin_toggle_logic+1,fsr2h
   619   0010FC  50DF               	movf	indf2,w,c
   620   0010FE  1425               	andwf	gpio_pin_toggle_logic@bit_mask^0,w,c	;volatile
   621   001100  0900               	iorlw	0
   622   001102  A4D8               	btfss	status,2,c
   623   001104  0012               	return	
   624                           
   625                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 425:             p_pin_config->logic = LOGIC_ON;
   626   001106  5022               	movf	gpio_pin_toggle_logic@p_pin_config^0,w,c
   627   001108  6ED9               	movwf	fsr2l,c
   628   00110A  6ADA               	clrf	fsr2h,c
   629   00110C  0E03               	movlw	3
   630   00110E  26D9               	addwf	fsr2l,f,c
   631   001110  0E01               	movlw	1
   632   001112  6EDF               	movwf	indf2,c
   633   001114  0012               	return		;funcret
   634   001116                     __end_of_gpio_pin_toggle_logic:
   635                           	callstack 0
   636                           
   637 ;; *************** function _led_init *****************
   638 ;; Defined at:
   639 ;;		line 29 in file "_HAL/Drivers/LED/LED.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  p_led           1   12[COMRAM] PTR struct .
   642 ;;		 -> led_1(3), 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  led_pin         5   13[COMRAM] struct .
   645 ;;  func_return     1    0        enum E2804
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      enum E2804
   648 ;; Registers used:
   649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;Total ram usage:        6 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 3
   662 ;; This function calls:
   663 ;;		_gpio_pin_initialize
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text3
   670   0013D8                     __ptext3:
   671                           	callstack 0
   672   0013D8                     _led_init:
   673                           	callstack 27
   674                           
   675                           ;_HAL/Drivers/LED/LED.c: 29: std_return led_init(led_t * p_led);_HAL/Drivers/LED/LED.c: 
      +                          30: {;_HAL/Drivers/LED/LED.c: 31:     if(((void*)0) == p_led)
   676                           
   677                           ;incstack = 0
   678   0013D8  502E               	movf	led_init@p_led^0,w,c
   679   0013DA  B4D8               	btfsc	status,2,c
   680   0013DC  0012               	return	
   681                           
   682                           ;_HAL/Drivers/LED/LED.c: 36:     {;_HAL/Drivers/LED/LED.c: 37:         std_return func_r
      +                          eturn;;_HAL/Drivers/LED/LED.c: 38:         pin_config_t led_pin = {.direction= DIRECTION
      +                          _OUTPUT,
   683   0013DE  EE20  F040         	lfsr	2,led_init@F2933
   684   0013E2  EE10  F02F         	lfsr	1,led_init@led_pin
   685   0013E6  0E04               	movlw	4
   686   0013E8                     u411:
   687   0013E8  CFDB FFE3          	movff	plusw2,plusw1
   688   0013EC  06E8               	decf	wreg,f,c
   689   0013EE  E2FC               	bc	u411
   690   0013F0  502E               	movf	led_init@p_led^0,w,c
   691   0013F2  6ED9               	movwf	fsr2l,c
   692   0013F4  6ADA               	clrf	fsr2h,c
   693   0013F6  50DF               	movf	indf2,w,c
   694   0013F8  6E2F               	movwf	led_init@led_pin^0,c
   695   0013FA  502E               	movf	led_init@p_led^0,w,c
   696   0013FC  6ED9               	movwf	fsr2l,c
   697   0013FE  6ADA               	clrf	fsr2h,c
   698   001400  0E01               	movlw	1
   699   001402  26D9               	addwf	fsr2l,f,c
   700   001404  50DF               	movf	indf2,w,c
   701   001406  6E30               	movwf	(led_init@led_pin+1)^0,c
   702   001408  0E00               	movlw	0
   703   00140A  6E31               	movwf	(led_init@led_pin+2)^0,c
   704   00140C  502E               	movf	led_init@p_led^0,w,c
   705   00140E  6ED9               	movwf	fsr2l,c
   706   001410  6ADA               	clrf	fsr2h,c
   707   001412  0E02               	movlw	2
   708   001414  26D9               	addwf	fsr2l,f,c
   709   001416  50DF               	movf	indf2,w,c
   710   001418  6E32               	movwf	(led_init@led_pin+3)^0,c
   711   00141A  0E2F               	movlw	low led_init@led_pin
   712   00141C  6E2B               	movwf	gpio_pin_initialize@p_pin_config^0,c
   713   00141E  EC90  F009         	call	_gpio_pin_initialize	;wreg free
   714   001422  0012               	return		;funcret
   715   001424                     __end_of_led_init:
   716                           	callstack 0
   717                           
   718 ;; *************** function _gpio_pin_initialize *****************
   719 ;; Defined at:
   720 ;;		line 293 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  p_pin_config    1    9[COMRAM] PTR struct .
   723 ;;		 -> led_init@led_pin(5), 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      enum E2804
   728 ;; Registers used:
   729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        3 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 2
   742 ;; This function calls:
   743 ;;		_gpio_pin_direction_initialize
   744 ;;		_gpio_pin_write_logic
   745 ;; This function is called by:
   746 ;;		_led_init
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text4
   751   001320                     __ptext4:
   752                           	callstack 0
   753   001320                     _gpio_pin_initialize:
   754                           	callstack 27
   755                           
   756                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 293: std_return gpio_pin_initialize(pin_config_t * p_pin_con
      +                          fig);_HAL/MCAL/GPIO/HAL_GPIO.c: 294: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 297:     if(((void*)0)
      +                           == p_pin_config)
   757                           
   758                           ;incstack = 0
   759   001320  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   760   001322  A4D8               	btfss	status,2,c
   761   001324  D017               	goto	l1558
   762   001326                     u360:
   763                           
   764                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 298:     {;_HAL/MCAL/GPIO/HAL_GPIO.c: 299:         return EX
      +                          CUTION_NOT_OK;
   765   001326  0E01               	movlw	1
   766   001328  0012               	return	
   767   00132A                     l1546:
   768                           
   769                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 306:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
   770   00132A  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
   771   00132E  EC44  F009         	call	_gpio_pin_direction_initialize	;wreg free
   772                           
   773                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 307:                 break;
   774   001332  D024               	goto	l1560
   775   001334                     l1548:
   776                           
   777                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 309:                 gpio_pin_direction_initialize(p_pin_con
      +                          fig);
   778   001334  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_direction_initialize@p_pin_config
   779   001338  EC44  F009         	call	_gpio_pin_direction_initialize	;wreg free
   780                           
   781                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 310:                 gpio_pin_write_logic(p_pin_config,p_pin
      +                          _config->logic);
   782   00133C  C02B  F027         	movff	gpio_pin_initialize@p_pin_config,gpio_pin_write_logic@p_pin_config
   783   001340  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   784   001342  6ED9               	movwf	fsr2l,c
   785   001344  6ADA               	clrf	fsr2h,c
   786   001346  0E03               	movlw	3
   787   001348  26D9               	addwf	fsr2l,f,c
   788   00134A  50DF               	movf	indf2,w,c
   789   00134C  6E28               	movwf	gpio_pin_write_logic@d_logic_desired^0,c
   790   00134E  ECE9  F008         	call	_gpio_pin_write_logic	;wreg free
   791                           
   792                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 311:                 break;
   793   001352  D014               	goto	l1560
   794   001354                     l1558:
   795   001354  502B               	movf	gpio_pin_initialize@p_pin_config^0,w,c
   796   001356  6ED9               	movwf	fsr2l,c
   797   001358  6ADA               	clrf	fsr2h,c
   798   00135A  0E02               	movlw	2
   799   00135C  26D9               	addwf	fsr2l,f,c
   800   00135E  50DF               	movf	indf2,w,c
   801   001360  6E2C               	movwf	??_gpio_pin_initialize^0,c
   802   001362  6A2D               	clrf	(??_gpio_pin_initialize+1)^0,c
   803                           
   804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 1, Range of values is 0 to 0
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte            4     3 (average)
   810                           ;	Chosen strategy is simple_byte
   811   001364  502D               	movf	(??_gpio_pin_initialize+1)^0,w,c
   812   001366  0A00               	xorlw	0	; case 0
   813   001368  A4D8               	btfss	status,2,c
   814   00136A  D7DD               	goto	u360
   815                           
   816                           ; Switch size 1, requested type "simple"
   817                           ; Number of cases is 2, Range of values is 0 to 1
   818                           ; switch strategies available:
   819                           ; Name         Instructions Cycles
   820                           ; simple_byte            7     4 (average)
   821                           ;	Chosen strategy is simple_byte
   822   00136C  502C               	movf	??_gpio_pin_initialize^0,w,c
   823   00136E  0A00               	xorlw	0	; case 0
   824   001370  B4D8               	btfsc	status,2,c
   825   001372  D7E0               	goto	l1548
   826   001374  0A01               	xorlw	1	; case 1
   827   001376  B4D8               	btfsc	status,2,c
   828   001378  D7D8               	goto	l1546
   829   00137A  D7D5               	goto	u360
   830   00137C                     l1560:
   831                           
   832                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 317:     return EXCUTION_OK;
   833   00137C  0E00               	movlw	0
   834   00137E  0012               	return		;funcret
   835   001380                     __end_of_gpio_pin_initialize:
   836                           	callstack 0
   837                           
   838 ;; *************** function _gpio_pin_write_logic *****************
   839 ;; Defined at:
   840 ;;		line 204 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  p_pin_config    1    5[COMRAM] PTR struct .
   843 ;;		 -> led_on_off@led_pin(5), led_init@led_pin(5), 
   844 ;;  d_logic_desi    1    6[COMRAM] const enum E2821
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      enum E2804
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        4 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 1
   863 ;; This function calls:
   864 ;;		_clear_bit_uint8
   865 ;;		_set_bit_uint8
   866 ;; This function is called by:
   867 ;;		_gpio_pin_initialize
   868 ;;		_led_on_off
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text5
   873   0011D2                     __ptext5:
   874                           	callstack 0
   875   0011D2                     _gpio_pin_write_logic:
   876                           	callstack 27
   877                           
   878                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 204: std_return gpio_pin_write_logic( pin_config_t * p_pin_c
      +                          onfig,;_HAL/MCAL/GPIO/HAL_GPIO.c: 205:                                  const LOGIC_t d_
      +                          logic_desired);_HAL/MCAL/GPIO/HAL_GPIO.c: 206: {;_HAL/MCAL/GPIO/HAL_GPIO.c: 207:     if(
      +                          (((void*)0) == p_pin_config) ||
   879                           
   880                           ;incstack = 0
   881   0011D2  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   882   0011D4  B4D8               	btfsc	status,2,c
   883   0011D6  0012               	return	
   884   0011D8  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   885   0011DA  6ED9               	movwf	fsr2l,c
   886   0011DC  6ADA               	clrf	fsr2h,c
   887   0011DE  0E05               	movlw	5
   888   0011E0  60DF               	cpfslt	indf2,c
   889   0011E2  0012               	return	
   890   0011E4  0428               	decf	gpio_pin_write_logic@d_logic_desired^0,w,c
   891   0011E6  B4D8               	btfsc	status,2,c
   892   0011E8  D040               	goto	l1512
   893   0011EA  5028               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
   894   0011EC  A4D8               	btfss	status,2,c
   895   0011EE  0012               	return	
   896   0011F0  D03C               	goto	l1512
   897   0011F2                     l1500:
   898                           
   899                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 218:                p_pin_config->logic = d_logic_desired;
   900   0011F2  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   901   0011F4  6ED9               	movwf	fsr2l,c
   902   0011F6  6ADA               	clrf	fsr2h,c
   903   0011F8  0E03               	movlw	3
   904   0011FA  26D9               	addwf	fsr2l,f,c
   905   0011FC  C028  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
   906                           
   907                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 219:                set_bit_uint8(LAT_REG_ADD_arr[p_pin_conf
      +                          ig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
   908   001200  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   909   001202  6ED9               	movwf	fsr2l,c
   910   001204  6ADA               	clrf	fsr2h,c
   911   001206  50DF               	movf	indf2,w,c
   912   001208  0D02               	mullw	2
   913   00120A  50F3               	movf	243,w,c
   914   00120C  0F01               	addlw	low _LAT_REG_ADD_arr
   915   00120E  6ED9               	movwf	fsr2l,c
   916   001210  6ADA               	clrf	fsr2h,c
   917   001212  CFDE F022          	movff	postinc2,set_bit_uint8@p_reg
   918   001216  CFDD F023          	movff	postdec2,set_bit_uint8@p_reg+1
   919   00121A  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   920   00121C  6ED9               	movwf	fsr2l,c
   921   00121E  6ADA               	clrf	fsr2h,c
   922   001220  0E01               	movlw	1
   923   001222  26D9               	addwf	fsr2l,f,c
   924   001224  50DF               	movf	indf2,w,c
   925   001226  6E24               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
   926   001228  EC8B  F008         	call	_set_bit_uint8	;wreg free
   927                           
   928                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 220:                break;
   929   00122C  0012               	return	
   930   00122E                     l1504:
   931                           
   932                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 223:                p_pin_config->logic = d_logic_desired;
   933   00122E  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   934   001230  6ED9               	movwf	fsr2l,c
   935   001232  6ADA               	clrf	fsr2h,c
   936   001234  0E03               	movlw	3
   937   001236  26D9               	addwf	fsr2l,f,c
   938   001238  C028  FFDF         	movff	gpio_pin_write_logic@d_logic_desired,indf2
   939                           
   940                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 224:                clear_bit_uint8(LAT_REG_ADD_arr[p_pin_co
      +                          nfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
   941   00123C  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   942   00123E  6ED9               	movwf	fsr2l,c
   943   001240  6ADA               	clrf	fsr2h,c
   944   001242  50DF               	movf	indf2,w,c
   945   001244  0D02               	mullw	2
   946   001246  50F3               	movf	243,w,c
   947   001248  0F01               	addlw	low _LAT_REG_ADD_arr
   948   00124A  6ED9               	movwf	fsr2l,c
   949   00124C  6ADA               	clrf	fsr2h,c
   950   00124E  CFDE F022          	movff	postinc2,clear_bit_uint8@p_reg
   951   001252  CFDD F023          	movff	postdec2,clear_bit_uint8@p_reg+1
   952   001256  5027               	movf	gpio_pin_write_logic@p_pin_config^0,w,c
   953   001258  6ED9               	movwf	fsr2l,c
   954   00125A  6ADA               	clrf	fsr2h,c
   955   00125C  0E01               	movlw	1
   956   00125E  26D9               	addwf	fsr2l,f,c
   957   001260  50DF               	movf	indf2,w,c
   958   001262  6E24               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
   959   001264  ECC0  F009         	call	_clear_bit_uint8	;wreg free
   960                           
   961                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 225:                break;
   962   001268  0012               	return	
   963   00126A                     l1512:
   964   00126A  5028               	movf	gpio_pin_write_logic@d_logic_desired^0,w,c
   965   00126C  6E29               	movwf	??_gpio_pin_write_logic^0,c
   966   00126E  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
   967                           
   968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   969                           ; Switch size 1, requested type "simple"
   970                           ; Number of cases is 1, Range of values is 0 to 0
   971                           ; switch strategies available:
   972                           ; Name         Instructions Cycles
   973                           ; simple_byte            4     3 (average)
   974                           ;	Chosen strategy is simple_byte
   975   001270  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   976   001272  0A00               	xorlw	0	; case 0
   977   001274  A4D8               	btfss	status,2,c
   978   001276  0012               	return	
   979                           
   980                           ; Switch size 1, requested type "simple"
   981                           ; Number of cases is 2, Range of values is 0 to 1
   982                           ; switch strategies available:
   983                           ; Name         Instructions Cycles
   984                           ; simple_byte            7     4 (average)
   985                           ;	Chosen strategy is simple_byte
   986   001278  5029               	movf	??_gpio_pin_write_logic^0,w,c
   987   00127A  0A00               	xorlw	0	; case 0
   988   00127C  B4D8               	btfsc	status,2,c
   989   00127E  D7D7               	goto	l1504
   990   001280  0A01               	xorlw	1	; case 1
   991   001282  A4D8               	btfss	status,2,c
   992   001284  0012               	return	
   993   001286  D7B5               	goto	l1500
   994   001288                     __end_of_gpio_pin_write_logic:
   995                           	callstack 0
   996                           
   997 ;; *************** function _gpio_pin_direction_initialize *****************
   998 ;; Defined at:
   999 ;;		line 174 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  p_pin_config    1    5[COMRAM] PTR const struct .
  1002 ;;		 -> led_init@led_pin(5), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      enum E2804
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        3 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 1
  1021 ;; This function calls:
  1022 ;;		_clear_bit_uint8
  1023 ;;		_set_bit_uint8
  1024 ;; This function is called by:
  1025 ;;		_gpio_pin_initialize
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text6
  1030   001288                     __ptext6:
  1031                           	callstack 0
  1032   001288                     _gpio_pin_direction_initialize:
  1033                           	callstack 27
  1034                           
  1035                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 176:     if((((void*)0) == p_pin_config) || (p_pin_config->p
      +                          ort > PORT_MAX_NUM-1)){
  1036                           
  1037                           ;incstack = 0
  1038   001288  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1039   00128A  B4D8               	btfsc	status,2,c
  1040   00128C  0012               	return	
  1041   00128E  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1042   001290  6ED9               	movwf	fsr2l,c
  1043   001292  6ADA               	clrf	fsr2h,c
  1044   001294  0E04               	movlw	4
  1045   001296  64DF               	cpfsgt	indf2,c
  1046   001298  D02F               	goto	l1532
  1047   00129A  0012               	return	
  1048   00129C                     l1524:
  1049                           
  1050                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 183:                clear_bit_uint8(TRIS_REG_ADD_arr[p_pin_c
      +                          onfig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1051   00129C  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1052   00129E  6ED9               	movwf	fsr2l,c
  1053   0012A0  6ADA               	clrf	fsr2h,c
  1054   0012A2  50DF               	movf	indf2,w,c
  1055   0012A4  0D02               	mullw	2
  1056   0012A6  50F3               	movf	243,w,c
  1057   0012A8  0F15               	addlw	low _TRIS_REG_ADD_arr
  1058   0012AA  6ED9               	movwf	fsr2l,c
  1059   0012AC  6ADA               	clrf	fsr2h,c
  1060   0012AE  CFDE F022          	movff	postinc2,clear_bit_uint8@p_reg
  1061   0012B2  CFDD F023          	movff	postdec2,clear_bit_uint8@p_reg+1
  1062   0012B6  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1063   0012B8  6ED9               	movwf	fsr2l,c
  1064   0012BA  6ADA               	clrf	fsr2h,c
  1065   0012BC  0E01               	movlw	1
  1066   0012BE  26D9               	addwf	fsr2l,f,c
  1067   0012C0  50DF               	movf	indf2,w,c
  1068   0012C2  6E24               	movwf	clear_bit_uint8@d_IDX_BIT_X^0,c
  1069   0012C4  ECC0  F009         	call	_clear_bit_uint8	;wreg free
  1070                           
  1071                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 184:                break;
  1072   0012C8  0012               	return	
  1073   0012CA                     l1526:
  1074                           
  1075                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 187:                set_bit_uint8(TRIS_REG_ADD_arr[p_pin_con
      +                          fig->port], (IDX_BIT_X_t)p_pin_config->pin_num);
  1076   0012CA  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1077   0012CC  6ED9               	movwf	fsr2l,c
  1078   0012CE  6ADA               	clrf	fsr2h,c
  1079   0012D0  50DF               	movf	indf2,w,c
  1080   0012D2  0D02               	mullw	2
  1081   0012D4  50F3               	movf	243,w,c
  1082   0012D6  0F15               	addlw	low _TRIS_REG_ADD_arr
  1083   0012D8  6ED9               	movwf	fsr2l,c
  1084   0012DA  6ADA               	clrf	fsr2h,c
  1085   0012DC  CFDE F022          	movff	postinc2,set_bit_uint8@p_reg
  1086   0012E0  CFDD F023          	movff	postdec2,set_bit_uint8@p_reg+1
  1087   0012E4  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1088   0012E6  6ED9               	movwf	fsr2l,c
  1089   0012E8  6ADA               	clrf	fsr2h,c
  1090   0012EA  0E01               	movlw	1
  1091   0012EC  26D9               	addwf	fsr2l,f,c
  1092   0012EE  50DF               	movf	indf2,w,c
  1093   0012F0  6E24               	movwf	set_bit_uint8@d_IDX_BIT_X^0,c
  1094   0012F2  EC8B  F008         	call	_set_bit_uint8	;wreg free
  1095                           
  1096                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 188:                break;
  1097   0012F6  0012               	return	
  1098   0012F8                     l1532:
  1099   0012F8  5027               	movf	gpio_pin_direction_initialize@p_pin_config^0,w,c
  1100   0012FA  6ED9               	movwf	fsr2l,c
  1101   0012FC  6ADA               	clrf	fsr2h,c
  1102   0012FE  0E02               	movlw	2
  1103   001300  26D9               	addwf	fsr2l,f,c
  1104   001302  50DF               	movf	indf2,w,c
  1105   001304  6E28               	movwf	??_gpio_pin_direction_initialize^0,c
  1106   001306  6A29               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 1, Range of values is 0 to 0
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            4     3 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115   001308  5029               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1116   00130A  0A00               	xorlw	0	; case 0
  1117   00130C  A4D8               	btfss	status,2,c
  1118   00130E  0012               	return	
  1119                           
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 2, Range of values is 0 to 1
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte            7     4 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126   001310  5028               	movf	??_gpio_pin_direction_initialize^0,w,c
  1127   001312  0A00               	xorlw	0	; case 0
  1128   001314  B4D8               	btfsc	status,2,c
  1129   001316  D7C2               	goto	l1524
  1130   001318  0A01               	xorlw	1	; case 1
  1131   00131A  A4D8               	btfss	status,2,c
  1132   00131C  0012               	return	
  1133   00131E  D7D5               	goto	l1526
  1134   001320                     __end_of_gpio_pin_direction_initialize:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _set_bit_uint8 *****************
  1138 ;; Defined at:
  1139 ;;		line 37 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1142 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1143 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1144 ;;		 -> TRISB(1), TRISA(1), 
  1145 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      enum E2804
  1150 ;; Registers used:
  1151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1157 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;Total ram usage:        5 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_gpio_pin_direction_initialize
  1167 ;;		_gpio_pin_write_logic
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text7
  1172   001116                     __ptext7:
  1173                           	callstack 0
  1174   001116                     _set_bit_uint8:
  1175                           	callstack 27
  1176                           
  1177                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 39:     if (((void*)0) == p_reg){
  1178                           
  1179                           ;incstack = 0
  1180   001116  5022               	movf	set_bit_uint8@p_reg^0,w,c
  1181   001118  1023               	iorwf	(set_bit_uint8@p_reg+1)^0,w,c
  1182   00111A  B4D8               	btfsc	status,2,c
  1183   00111C  0012               	return	
  1184   00111E  D038               	goto	l1452
  1185   001120                     l1432:
  1186                           
  1187                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 46:                 *p_reg |= (MASK_BIT_0);
  1188   001120  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1189   001124  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1190   001128  0E00               	movlw	0
  1191   00112A  80DB               	bsf	plusw2,0,c
  1192                           
  1193                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 47:                 break;
  1194   00112C  0012               	return	
  1195   00112E                     l1434:
  1196                           
  1197                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 49:                 *p_reg |= (MASK_BIT_1);
  1198   00112E  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1199   001132  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1200   001136  0E00               	movlw	0
  1201   001138  82DB               	bsf	plusw2,1,c
  1202                           
  1203                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 50:                 break;
  1204   00113A  0012               	return	
  1205   00113C                     l1436:
  1206                           
  1207                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 52:                 *p_reg |= (MASK_BIT_2);
  1208   00113C  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1209   001140  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1210   001144  0E00               	movlw	0
  1211   001146  84DB               	bsf	plusw2,2,c
  1212                           
  1213                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 53:                 break;
  1214   001148  0012               	return	
  1215   00114A                     l1438:
  1216                           
  1217                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 55:                 *p_reg |= (MASK_BIT_3);
  1218   00114A  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1219   00114E  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1220   001152  0E00               	movlw	0
  1221   001154  86DB               	bsf	plusw2,3,c
  1222                           
  1223                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 56:                 break;
  1224   001156  0012               	return	
  1225   001158                     l1440:
  1226                           
  1227                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 58:                 *p_reg |= (MASK_BIT_4);
  1228   001158  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1229   00115C  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1230   001160  0E00               	movlw	0
  1231   001162  88DB               	bsf	plusw2,4,c
  1232                           
  1233                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 59:                 break;
  1234   001164  0012               	return	
  1235   001166                     l1442:
  1236                           
  1237                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 61:                 *p_reg |= (MASK_BIT_5);
  1238   001166  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1239   00116A  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1240   00116E  0E00               	movlw	0
  1241   001170  8ADB               	bsf	plusw2,5,c
  1242                           
  1243                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 62:                 break;
  1244   001172  0012               	return	
  1245   001174                     l1444:
  1246                           
  1247                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 64:                 *p_reg |= (MASK_BIT_6);
  1248   001174  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1249   001178  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1250   00117C  0E00               	movlw	0
  1251   00117E  8CDB               	bsf	plusw2,6,c
  1252                           
  1253                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 65:                 break;
  1254   001180  0012               	return	
  1255   001182                     l1446:
  1256                           
  1257                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 67:                 *p_reg |= (MASK_BIT_7);
  1258   001182  C022  FFD9         	movff	set_bit_uint8@p_reg,fsr2l
  1259   001186  C023  FFDA         	movff	set_bit_uint8@p_reg+1,fsr2h
  1260   00118A  0E00               	movlw	0
  1261   00118C  8EDB               	bsf	plusw2,7,c
  1262                           
  1263                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 68:                 break;
  1264   00118E  0012               	return	
  1265   001190                     l1452:
  1266   001190  5024               	movf	set_bit_uint8@d_IDX_BIT_X^0,w,c
  1267   001192  6E25               	movwf	??_set_bit_uint8^0,c
  1268   001194  6A26               	clrf	(??_set_bit_uint8+1)^0,c
  1269                           
  1270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 1, Range of values is 0 to 0
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte            4     3 (average)
  1276                           ;	Chosen strategy is simple_byte
  1277   001196  5026               	movf	(??_set_bit_uint8+1)^0,w,c
  1278   001198  0A00               	xorlw	0	; case 0
  1279   00119A  A4D8               	btfss	status,2,c
  1280   00119C  0012               	return	
  1281                           
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 8, Range of values is 0 to 7
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           25    13 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   00119E  5025               	movf	??_set_bit_uint8^0,w,c
  1289   0011A0  0A00               	xorlw	0	; case 0
  1290   0011A2  B4D8               	btfsc	status,2,c
  1291   0011A4  D7BD               	goto	l1432
  1292   0011A6  0A01               	xorlw	1	; case 1
  1293   0011A8  B4D8               	btfsc	status,2,c
  1294   0011AA  D7C1               	goto	l1434
  1295   0011AC  0A03               	xorlw	3	; case 2
  1296   0011AE  B4D8               	btfsc	status,2,c
  1297   0011B0  D7C5               	goto	l1436
  1298   0011B2  0A01               	xorlw	1	; case 3
  1299   0011B4  B4D8               	btfsc	status,2,c
  1300   0011B6  D7C9               	goto	l1438
  1301   0011B8  0A07               	xorlw	7	; case 4
  1302   0011BA  B4D8               	btfsc	status,2,c
  1303   0011BC  D7CD               	goto	l1440
  1304   0011BE  0A01               	xorlw	1	; case 5
  1305   0011C0  B4D8               	btfsc	status,2,c
  1306   0011C2  D7D1               	goto	l1442
  1307   0011C4  0A03               	xorlw	3	; case 6
  1308   0011C6  B4D8               	btfsc	status,2,c
  1309   0011C8  D7D5               	goto	l1444
  1310   0011CA  0A01               	xorlw	1	; case 7
  1311   0011CC  A4D8               	btfss	status,2,c
  1312   0011CE  0012               	return	
  1313   0011D0  D7D8               	goto	l1446
  1314   0011D2                     __end_of_set_bit_uint8:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _clear_bit_uint8 *****************
  1318 ;; Defined at:
  1319 ;;		line 83 in file "_HAL/MCAL/GPIO/HAL_GPIO.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  p_reg           2    0[COMRAM] PTR volatile unsigned ch
  1322 ;;		 -> LATE(1), LATD(1), LATC(1), LATB(1), 
  1323 ;;		 -> LATA(1), TRISE(1), TRISD(1), TRISC(1), 
  1324 ;;		 -> TRISB(1), TRISA(1), 
  1325 ;;  d_IDX_BIT_X     1    2[COMRAM] enum E2835
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      enum E2804
  1330 ;; Registers used:
  1331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        5 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_gpio_pin_direction_initialize
  1347 ;;		_gpio_pin_write_logic
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text8
  1352   001380                     __ptext8:
  1353                           	callstack 0
  1354   001380                     _clear_bit_uint8:
  1355                           	callstack 27
  1356                           
  1357                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 85:      if (((void*)0) == p_reg){
  1358                           
  1359                           ;incstack = 0
  1360   001380  5022               	movf	clear_bit_uint8@p_reg^0,w,c
  1361   001382  1023               	iorwf	(clear_bit_uint8@p_reg+1)^0,w,c
  1362   001384  B4D8               	btfsc	status,2,c
  1363   001386  0012               	return	
  1364   001388  D006               	goto	l1484
  1365   00138A                     l1464:
  1366                           
  1367                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 92:                 *p_reg &= !(MASK_BIT_0);
  1368   00138A  C022  FFD9         	movff	clear_bit_uint8@p_reg,fsr2l
  1369   00138E  C023  FFDA         	movff	clear_bit_uint8@p_reg+1,fsr2h
  1370   001392  6ADF               	clrf	indf2,c
  1371                           
  1372                           ;_HAL/MCAL/GPIO/HAL_GPIO.c: 93:                 break;
  1373   001394  0012               	return	
  1374   001396                     l1484:
  1375   001396  5024               	movf	clear_bit_uint8@d_IDX_BIT_X^0,w,c
  1376   001398  6E25               	movwf	??_clear_bit_uint8^0,c
  1377   00139A  6A26               	clrf	(??_clear_bit_uint8+1)^0,c
  1378                           
  1379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 1, Range of values is 0 to 0
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            4     3 (average)
  1385                           ;	Chosen strategy is simple_byte
  1386   00139C  5026               	movf	(??_clear_bit_uint8+1)^0,w,c
  1387   00139E  0A00               	xorlw	0	; case 0
  1388   0013A0  A4D8               	btfss	status,2,c
  1389   0013A2  0012               	return	
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 8, Range of values is 0 to 7
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte           25    13 (average)
  1396                           ;	Chosen strategy is simple_byte
  1397   0013A4  5025               	movf	??_clear_bit_uint8^0,w,c
  1398   0013A6  0A00               	xorlw	0	; case 0
  1399   0013A8  B4D8               	btfsc	status,2,c
  1400   0013AA  D7EF               	goto	l1464
  1401   0013AC  0A01               	xorlw	1	; case 1
  1402   0013AE  B4D8               	btfsc	status,2,c
  1403   0013B0  D7EC               	goto	l1464
  1404   0013B2  0A03               	xorlw	3	; case 2
  1405   0013B4  B4D8               	btfsc	status,2,c
  1406   0013B6  D7E9               	goto	l1464
  1407   0013B8  0A01               	xorlw	1	; case 3
  1408   0013BA  B4D8               	btfsc	status,2,c
  1409   0013BC  D7E6               	goto	l1464
  1410   0013BE  0A07               	xorlw	7	; case 4
  1411   0013C0  B4D8               	btfsc	status,2,c
  1412   0013C2  D7E3               	goto	l1464
  1413   0013C4  0A01               	xorlw	1	; case 5
  1414   0013C6  B4D8               	btfsc	status,2,c
  1415   0013C8  D7E0               	goto	l1464
  1416   0013CA  0A03               	xorlw	3	; case 6
  1417   0013CC  B4D8               	btfsc	status,2,c
  1418   0013CE  D7DD               	goto	l1464
  1419   0013D0  0A01               	xorlw	1	; case 7
  1420   0013D2  A4D8               	btfss	status,2,c
  1421   0013D4  0012               	return	
  1422   0013D6  D7D9               	goto	l1464
  1423   0013D8                     __end_of_clear_bit_uint8:
  1424                           	callstack 0
  1425                           
  1426                           	psect	smallconst
  1427   001000                     __psmallconst:
  1428                           	callstack 0
  1429   001000  00                 	db	0
  1430   001001  00                 	db	0	; dummy byte at the end
  1431   000000                     
  1432                           	psect	rparam
  1433   000000                     
  1434                           	psect	config
  1435                           
  1436                           ; Padding undefined space
  1437   300000                     	org	3145728
  1438   300000  FF                 	db	255
  1439                           
  1440                           ;Config register CONFIG1H @ 0x300001
  1441                           ;	Oscillator Selection bits
  1442                           ;	OSC = HS, HS oscillator
  1443                           ;	Fail-Safe Clock Monitor Enable bit
  1444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1445                           ;	Internal/External Oscillator Switchover bit
  1446                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1447   300001                     	org	3145729
  1448   300001  02                 	db	2
  1449                           
  1450                           ;Config register CONFIG2L @ 0x300002
  1451                           ;	Power-up Timer Enable bit
  1452                           ;	PWRT = OFF, PWRT disabled
  1453                           ;	Brown-out Reset Enable bits
  1454                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1455                           ;	Brown Out Reset Voltage bits
  1456                           ;	BORV = 1, 
  1457   300002                     	org	3145730
  1458   300002  09                 	db	9
  1459                           
  1460                           ;Config register CONFIG2H @ 0x300003
  1461                           ;	Watchdog Timer Enable bit
  1462                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1463                           ;	Watchdog Timer Postscale Select bits
  1464                           ;	WDTPS = 32768, 1:32768
  1465   300003                     	org	3145731
  1466   300003  1E                 	db	30
  1467                           
  1468                           ; Padding undefined space
  1469   300004                     	org	3145732
  1470   300004  FF                 	db	255
  1471                           
  1472                           ;Config register CONFIG3H @ 0x300005
  1473                           ;	CCP2 MUX bit
  1474                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1475                           ;	PORTB A/D Enable bit
  1476                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1477                           ;	Low-Power Timer1 Oscillator Enable bit
  1478                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1479                           ;	MCLR Pin Enable bit
  1480                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1481   300005                     	org	3145733
  1482   300005  81                 	db	129
  1483                           
  1484                           ;Config register CONFIG4L @ 0x300006
  1485                           ;	Stack Full/Underflow Reset Enable bit
  1486                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1487                           ;	Single-Supply ICSP Enable bit
  1488                           ;	LVP = OFF, Single-Supply ICSP disabled
  1489                           ;	Extended Instruction Set Enable bit
  1490                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1491                           ;	Background Debugger Enable bit
  1492                           ;	DEBUG = 0x1, unprogrammed default
  1493   300006                     	org	3145734
  1494   300006  81                 	db	129
  1495                           
  1496                           ; Padding undefined space
  1497   300007                     	org	3145735
  1498   300007  FF                 	db	255
  1499                           
  1500                           ;Config register CONFIG5L @ 0x300008
  1501                           ;	Code Protection bit
  1502                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1503                           ;	Code Protection bit
  1504                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1505                           ;	Code Protection bit
  1506                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1507                           ;	Code Protection bit
  1508                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1509   300008                     	org	3145736
  1510   300008  0F                 	db	15
  1511                           
  1512                           ;Config register CONFIG5H @ 0x300009
  1513                           ;	Boot Block Code Protection bit
  1514                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1515                           ;	Data EEPROM Code Protection bit
  1516                           ;	CPD = OFF, Data EEPROM not code-protected
  1517   300009                     	org	3145737
  1518   300009  C0                 	db	192
  1519                           
  1520                           ;Config register CONFIG6L @ 0x30000A
  1521                           ;	Write Protection bit
  1522                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1523                           ;	Write Protection bit
  1524                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1525                           ;	Write Protection bit
  1526                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1527                           ;	Write Protection bit
  1528                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1529   30000A                     	org	3145738
  1530   30000A  0F                 	db	15
  1531                           
  1532                           ;Config register CONFIG6H @ 0x30000B
  1533                           ;	Configuration Register Write Protection bit
  1534                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1535                           ;	Boot Block Write Protection bit
  1536                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1537                           ;	Data EEPROM Write Protection bit
  1538                           ;	WRTD = OFF, Data EEPROM not write-protected
  1539   30000B                     	org	3145739
  1540   30000B  E0                 	db	224
  1541                           
  1542                           ;Config register CONFIG7L @ 0x30000C
  1543                           ;	Table Read Protection bit
  1544                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1545                           ;	Table Read Protection bit
  1546                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1547                           ;	Table Read Protection bit
  1548                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1549                           ;	Table Read Protection bit
  1550                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1551   30000C                     	org	3145740
  1552   30000C  0F                 	db	15
  1553                           
  1554                           ;Config register CONFIG7H @ 0x30000D
  1555                           ;	Boot Block Table Read Protection bit
  1556                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1557   30000D                     	org	3145741
  1558   30000D  40                 	db	64
  1559                           tosu	equ	0xFFF
  1560                           tosh	equ	0xFFE
  1561                           tosl	equ	0xFFD
  1562                           stkptr	equ	0xFFC
  1563                           pclatu	equ	0xFFB
  1564                           pclath	equ	0xFFA
  1565                           pcl	equ	0xFF9
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           indf0	equ	0xFEF
  1573                           postinc0	equ	0xFEE
  1574                           postdec0	equ	0xFED
  1575                           preinc0	equ	0xFEC
  1576                           plusw0	equ	0xFEB
  1577                           fsr0h	equ	0xFEA
  1578                           fsr0l	equ	0xFE9
  1579                           wreg	equ	0xFE8
  1580                           indf1	equ	0xFE7
  1581                           postinc1	equ	0xFE6
  1582                           postdec1	equ	0xFE5
  1583                           preinc1	equ	0xFE4
  1584                           plusw1	equ	0xFE3
  1585                           fsr1h	equ	0xFE2
  1586                           fsr1l	equ	0xFE1
  1587                           bsr	equ	0xFE0
  1588                           indf2	equ	0xFDF
  1589                           postinc2	equ	0xFDE
  1590                           postdec2	equ	0xFDD
  1591                           preinc2	equ	0xFDC
  1592                           plusw2	equ	0xFDB
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    clear_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    gpio_pin_direction_initialize@p_pin_config	PTR const struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_initialize@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), 

    gpio_pin_toggle_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_toggle@led_pin(COMRAM[5]), 

    gpio_pin_write_logic@p_pin_config	PTR struct . size(1) Largest target is 5
		 -> led_init@led_pin(COMRAM[5]), led_on_off@led_pin(COMRAM[5]), 

    LAT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    led_toggle@p_led	PTR struct . size(1) Largest target is 3
		 -> led_1(COMRAM[3]), 

    PORT_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    set_bit_uint8@p_reg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), 
		 -> TRISD(BITBIGSFRh[1]), TRISE(BITBIGSFRh[1]), 

    TRIS_REG_ADD_arr	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_led_init
    _led_toggle->_gpio_pin_toggle_logic
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _gpio_pin_write_logic->_clear_bit_uint8
    _gpio_pin_write_logic->_set_bit_uint8
    _gpio_pin_direction_initialize->_clear_bit_uint8
    _gpio_pin_direction_initialize->_set_bit_uint8

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4027
                                             18 COMRAM     2     2      0
                           _led_init
                         _led_toggle
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           6     5      1     549
                                              4 COMRAM     6     5      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_toggle_logic                                4     3      1     327
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _led_init                                             7     6      1    3478
                                             12 COMRAM     6     5      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    3200
                                              9 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 4     2      2    1638
                                              5 COMRAM     4     2      2
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        3     2      1    1354
                                              5 COMRAM     3     2      1
                    _clear_bit_uint8
                      _set_bit_uint8
 ---------------------------------------------------------------------------------
 (4) _set_bit_uint8                                        5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (4) _clear_bit_uint8                                      5     2      3     524
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_init
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
         _clear_bit_uint8
         _set_bit_uint8
       _gpio_pin_write_logic
         _clear_bit_uint8
         _set_bit_uint8
   _led_toggle
     _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      44       1       53.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      39        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 17 23:04:34 2023

      gpio_pin_write_logic@d_logic_desired 0028                                        l340 14A0  
                                      u411 13E8                                        u431 1434  
                                      u360 1326                                        u467 14B2  
                                      wreg 0FE8                                       l1500 11F2  
                                     l1440 1158                                       l1432 1120  
                                     l1504 122E                                       l1512 126A  
                                     l1600 10DA                                       l1442 1166  
                                     l1434 112E                                       l1444 1174  
                                     l1436 113C                                       l1452 1190  
                                     l1524 129C                                       l1532 12F8  
                                     l1446 1182                                       l1438 114A  
                                     l1526 12CA                                       l1464 138A  
                                     l1560 137C                                       l1546 132A  
                                     l1484 1396                                       l1548 1334  
                                     l1580 1016                                       l1558 1354  
                                     l1582 101A                                       l1574 100A  
                                     l1584 101E                                       l1576 100E  
                                     l1586 1022                                       l1578 1012  
                                     l1594 102C                                       l1588 1026  
                                     l1596 1078                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _LATD 0F8C                                       _LATE 0F8D  
                                     _main 1498                                       fsr2h 0FDA  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
                   ?_gpio_pin_toggle_logic 0022                       _gpio_pin_write_logic 11D2  
                                    ?_main 0022                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                                    _PORTD 0F83                                      _PORTE 0F84  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                                      _TRISD 0F95  
                                    _TRISE 0F96                                      _led_1 001F  
                                    tablat 0FF5                            led_on_off@F2938 003B  
                                    plusw1 0FE3                                      plusw2 0FDB  
                                    status 0FD8             ?_gpio_pin_direction_initialize 0027  
                          __initialization 1462                               __end_of_main 14C2  
                    ?_gpio_pin_write_logic 0027                                     ??_main 0034  
                            __activetblptr 0002                           __end_of_led_init 1424  
                                   clear_0 1488                                     isa$std 0001  
                            led_init@F2933 0040                               __pdataCOMRAM 0001  
                             __mediumconst 0000                                     tblptrh 0FF7  
                                   tblptrl 0FF6                                     tblptru 0FF8  
                    __end_of_set_bit_uint8 11D2                              led_init@p_led 002E  
                               __accesstop 0080                    __end_of__initialization 148E  
                            ___rparam_used 0001                     ??_gpio_pin_write_logic 0029  
                           __pcstackCOMRAM 0022                           _PORT_REG_ADD_arr 000B  
         gpio_pin_write_logic@p_pin_config 0027          gpio_pin_toggle_logic@p_pin_config 0022  
                  ??_gpio_pin_toggle_logic 0023                            led_toggle@F2942 0036  
                          led_toggle@p_led 0026                            _LAT_REG_ADD_arr 0001  
                                ?_led_init 002E                          ??_clear_bit_uint8 0025  
                               _led_toggle 1424                                    __Hparam 0000  
                                  __Lparam 0000                        _gpio_pin_initialize 1320  
                             __psmallconst 1000                                    __pcinit 1462  
                                  __ramtop 1000                                    __ptext0 1498  
                                  __ptext1 1424                                    __ptext2 1002  
                                  __ptext3 13D8                                    __ptext4 1320  
                                  __ptext5 11D2                                    __ptext6 1288  
                                  __ptext7 1116                                    __ptext8 1380  
          ??_gpio_pin_direction_initialize 0028                 clear_bit_uint8@d_IDX_BIT_X 0024  
                     ?_gpio_pin_initialize 002B                                 ??_led_init 002F  
                     end_of_initialization 148E                              __Lmediumconst 0000  
                     clear_bit_uint8@p_reg 0022                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc2 0FDE                          led_toggle@led_pin 0027  
                    ??_gpio_pin_initialize 002C                                ?_led_toggle 0026  
                            __pidataCOMRAM 14C2              gpio_pin_toggle_logic@bit_mask 0025  
                      start_initialization 1462      __end_of_gpio_pin_direction_initialize 1320  
            _gpio_pin_direction_initialize 1288            gpio_pin_initialize@p_pin_config 002B  
            __end_of_gpio_pin_toggle_logic 1116                            _clear_bit_uint8 1380  
                              __pbssCOMRAM 0036                                __smallconst 1000  
                            _set_bit_uint8 1116                    __end_of_clear_bit_uint8 13D8  
                           ?_set_bit_uint8 0022                                  copy_data0 1476  
                             ??_led_toggle 0027                                   __Hrparam 0000  
                                 __Lrparam 0000                __end_of_gpio_pin_initialize 1380  
                       __end_of_led_toggle 1462                   set_bit_uint8@d_IDX_BIT_X 0024  
                                 _led_init 13D8                                   isa$xinst 0000  
                         ?_clear_bit_uint8 0022                         set_bit_uint8@p_reg 0022  
                          ??_set_bit_uint8 0025               __end_of_gpio_pin_write_logic 1288  
gpio_pin_direction_initialize@p_pin_config 0027                      _gpio_pin_toggle_logic 1002  
                         _TRIS_REG_ADD_arr 0015                            led_init@led_pin 002F  
